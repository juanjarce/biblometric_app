@inproceedings{merged1,
  abstract = {My vision for the 21st Century: Computational thinking will be a fundamental skill used by everyone in the world. Just as reading, writing, and arithmetic are fundamental skills every child learns, computational thinking is a skill needed for every citizen to function in today's global society. Computational thinking is an approach to solving problems, building systems, and understanding human behavior that draws on the power and limits of computing. Computational thinking is the use of abstraction to tackle complexity and the use of automation to tackle scale. The combination of the automation of abstraction underlies the enormous capability and reach of computing. In this talk I will argue that computational thinking has already begun to influence many disciplines, from the sciences to the humanities, but that the best is yet to come. Looking to the future, we can anticipate even more profound impact of computational thinking on science, technology, and society: on the ways new discoveries will be made, innovation will occur, and cultures will evolve.Teaching computational thinking also raises new challenges for education, especially in early grades. While we have models for teaching children mathematics and physics, we do not yet have such models for teaching computational thinking. Moreover, we have the unique opportunity to make most effective use of the computer as a tool to enhance the learning of computational thinking.In this talk, I will give examples of computational thinking, including ones from our daily lives. It is exciting to imagine the day when computational thinking will be commonplace.},
  address = {Evansville, IN, USA},
  author = {Zhang, Xiaofeng and Zou, Hailin},
  booktitle = {2009 First International Workshop on Education Technology and Computer Science},
  doi = {10.1109/ETCS.2009.120},
  issn = {1937-4771},
  issue_date = {June 2009},
  journal = {J. Comput. Sci. Coll.},
  keywords = {Biology computing; Computational intelligence; Computer science; Computer science education; Educational technology; Evolution (biology); Face; History; Humans; Technological innovation; computational methods; computational thinking; computational tools},
  month = {March},
  number = {6},
  numpages = {2},
  pages = {503-507},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {On Computational Tools, Computational Thinking and Computational Methods},
  volume = {24},
  year = {2009}
}

@inproceedings{merged2,
  abstract = {This paper mainly adopts the theory with practice, combines the computational thinking method with education and teaching, and constructs the inquiry teaching model based on computational thinking. We adopt the formal teaching model and learning model, incremental expression of computational thinking ability to improve the effect, from the computational thinking of automation, abstract characteristics of the teaching and learning model based on computational thinking formalization. Then, in the case study, the learning support technology scheme of MOOC course platform combining mobile terminal and HTML5 is designed. Through teaching practice and quantitative analysis of experimental behavior, the platform effectively avoids the interference of programming language code, which simplifies the expression and application process of algorithm thinking, and enhances students' interest and operation of programming working ability.},
  address = {New York, NY, USA},
  author = {Henderson, Peter B. and Cortina, Thomas J. and Wing, Jeannette M.},
  booktitle = {2020 13th International Conference on Intelligent Computation Technology and Automation (ICICTA)},
  doi = {10.1109/ICICTA51737.2020.00063},
  isbn = {1595933611},
  keywords = {Automation; Codes; Computational modeling; Computer aided instruction; Computer languages; Electronic learning; HTML; MOOC; Statistical analysis; computational thinking; computer basic teaching; practice analysis},
  location = {Covington, Kentucky, USA},
  month = {Oct},
  numpages = {2},
  pages = {266-269},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '07},
  title = {The Teaching Mode and Practice Analysis of College Computer Basic Course Based on Computational Thinking},
  url = {https://doi.org/10.1145/1227310.1227378},
  year = {2020}
}

@inproceedings{merged3,
  abstract = {In recent years, several groups of Computer Science educators have made a sustained effort to capture the essence of CS apart from programming. Three of these approaches are Mathematical Thinking, Abstract Thinking, and Computational Thinking. Each approach tries to clarify areas of CS that are not directly tied to writing computer programs. In a separate line of research, the current authors have been examining different ways to teach mathematics to CS students. We developed a Computational Math scale that measures the level of problem-solving gestalt exhibited by textbook authors. In this study, we relate our Computational Math framework to current research on Mathematical, Abstract, and Computational (MAC) Thinking. We counted words used frequently in research articles and compared them to words that form the Computational Math scale. Our results suggest an overall MAC Thinking framework that integrates a wide range of topics relevant to computing and programming.},
  address = {New York, NY, USA},
  author = {McMaster, Kirby and Rague, Brian and Anderson, Nicole},
  booktitle = {2010 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2010.5673139},
  issn = {2377-634X},
  issue_date = {March 2006},
  journal = {Commun. ACM},
  keywords = {Abstraction; Algorithm; Books; Computational Math; Computational modeling; Computers; Mathematical model; Model; Programming profession; Thinking},
  month = {March},
  number = {3},
  numpages = {3},
  pages = {S3G-1-S3G-6},
  publisher = {Association for Computing Machinery},
  title = {Integrating Mathematical Thinking, Abstract Thinking, and Computational Thinking},
  url = {https://doi.org/10.1145/1118178.1118215},
  volume = {49},
  year = {2010}
}

@inproceedings{merged4,
  abstract = {Machine learning (ML) has triggered major changes across a great number of computing fields. People’s lives today are full of ML-driven services: eerily accurate recommendations, ability to automatically tag one’s friends in photos, and well working translation systems, for example. This keynote talk presents how ML technology upends the computational thinking (CT) consensus in computing education. It begins by presenting why and how a number of classical “CT1.0” concepts need to be re-thought for the “CT2.0” (machine learning) era, from control structures and problem-solving workflow, to correctness and notional machines. Based on a series of classroom interventions on teaching machine learning to middle schoolers, conducted by DIGS RC at University of Eastern Finland, the talk also presents how classroom pedagogy shifts between CT1.0 and CT2.0.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Saenboonsong, Siripon and Poonsawad, Akarapon},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1109/iSTEM-Ed62750.2024.10663178},
  isbn = {9781450398534},
  keywords = {Artificial intelligence; Computational modeling; Computational thinking; Education; K-12; Machine learning; Pattern recognition; School; Standards; Statistical analysis; computational thinking skills; game-based learning; learning activity},
  location = {Morschach, Switzerland},
  month = {July},
  numpages = {2},
  pages = {1-4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Promoting Computational Thinking Skills Through Game-Based Learning of Students in Lower Secondary School},
  url = {https://doi.org/10.1145/3556787.3556788},
  year = {2024}
}

@inproceedings{merged5,
  abstract = {Machine learning (ML) has triggered major changes across a great number of computing fields. People’s lives today are full of ML-driven services: eerily accurate recommendations, ability to automatically tag one’s friends in photos, and well working translation systems, for example. This keynote talk presents how ML technology upends the computational thinking (CT) consensus in computing education. It begins by presenting why and how a number of classical “CT1.0” concepts need to be re-thought for the “CT2.0” (machine learning) era, from control structures and problem-solving workflow, to correctness and notional machines. Based on a series of classroom interventions on teaching machine learning to middle schoolers, conducted by DIGS RC at University of Eastern Finland, the talk also presents how classroom pedagogy shifts between CT1.0 and CT2.0.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Handayani, Rif’Ati Dina and Lesmono, Albertus Djoko and Prastowo, Srihandono Budi and Supriadi, Bambang and Dewi, Nila Mutia},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1109/ICET56879.2022.9990631},
  isbn = {9781450398534},
  issn = {2770-4807},
  keywords = {Artificial intelligence; Computational modeling; Computational thinking; Education; Interviews; K-12; Machine learning; Physics; Portfolios; Problem-solving; School; computational thinking; physics classroom; project-based learning},
  location = {Morschach, Switzerland},
  month = {Oct},
  numpages = {2},
  pages = {76-80},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Bringing Computational Thinking Skills Into Physics Classroom Through Project-Based Learning},
  url = {https://doi.org/10.1145/3556787.3556788},
  year = {2022}
}

@inproceedings{merged6,
  abstract = {Machine learning (ML) has triggered major changes across a great number of computing fields. People’s lives today are full of ML-driven services: eerily accurate recommendations, ability to automatically tag one’s friends in photos, and well working translation systems, for example. This keynote talk presents how ML technology upends the computational thinking (CT) consensus in computing education. It begins by presenting why and how a number of classical “CT1.0” concepts need to be re-thought for the “CT2.0” (machine learning) era, from control structures and problem-solving workflow, to correctness and notional machines. Based on a series of classroom interventions on teaching machine learning to middle schoolers, conducted by DIGS RC at University of Eastern Finland, the talk also presents how classroom pedagogy shifts between CT1.0 and CT2.0.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Wang, Yiwei and Xu, Liancheng},
  booktitle = {2023 13th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME60234.2023.00042},
  isbn = {9781450398534},
  issn = {2474-3828},
  keywords = {Artificial intelligence; CiteSpace; Computational modeling; Computational thinking; Computer science; Data visualization; Education; Information age; K-12; Machine learning; Market research; Organizations; STEM education; School; computational thinking; information technology; vocational secondary education},
  location = {Morschach, Switzerland},
  month = {Nov},
  numpages = {2},
  pages = {161-165},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Hot Spots and Trends of Computational Thinking Research in China CiteSpace visualization and analysis based on CNKI data},
  url = {https://doi.org/10.1145/3556787.3556788},
  year = {2023}
}

@inproceedings{merged7,
  abstract = {Jeannette Wing's call for teaching Computational Thinking (CT) as a formative skill on par with reading, writing, and arithmetic places computer science in the category of basic knowledge. Just as proficiency in basic language arts helps us to effectively communicate and in basic math helps us to successfully quantitate, proficiency in computational thinking helps us to systematically and efficiently process information and tasks. But while teaching everyone to think computationally is a noble goal, there are pedagogical challenges. Perhaps the most confounding issue is the role of programming, and whether we can separate it from teaching basic computer science. How much programming, if any, should be required for CT proficiency?We believe that to successfully broaden participation in computer science, efforts must be made to lay the foundations of CT long before students experience their first programming language. We posit that programming is to Computer Science what proof construction is to mathematics, and what literary analysis is to English. Hence by analogy, programming should be the entrance into higher CS, and not the student's first encounter in CS. We argue that in the absence of programming, teaching CT should focus on establishing vocabularies and symbols that can be used to annotate and describe computation and abstraction, suggest information and execution, and provide notation around which mental models of processes can be built. Lastly, we conjecture that students with sustained exposure to CT in their formative education will be better prepared for programming and the CS curriculum, and, furthermore, that they might choose to major in CS not only for career opportunities, but also for its intellectual content.},
  address = {New York, NY, USA},
  author = {Lu, James J. and Fletcher, George H.L.},
  booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1508865.1508959},
  isbn = {9781605581835},
  keywords = {Blended learning; Computational thinking; Computational thinking trend; Education; Information technology; Management information systems; Programming profession; Skills of computational thinking; Software; computational thinking; k-12 education; language},
  location = {Chattanooga, TN, USA},
  month = {June},
  numpages = {5},
  pages = {256-260},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '09},
  title = {An Empirical Study on Blended Learning to Promote the Development of Computational Thinking Ability of College Students},
  url = {https://doi.org/10.1145/1508865.1508959},
  year = {2017}
}

@inproceedings{merged8,
  abstract = {Computational thinking assessment is an important part of testing the effectiveness of computational thinking cultivation. However, the existing computational thinking assessments still suffer from the problem of insufficient examination of non-cognitive factors, leading to the lack of validity of its assessment results. Since the iceberg model can comprehensively and deeply explore individual characteristics, this paper draws on the division idea of the model and divides computational thinking into explicit computational thinking the basic knowledge required to solve problems using computational thinking and implicit computational thinking the internal psychological characteristics of individuals in the process of using computational thinking. A comprehensive assessment framework of computational thinking is constructed, which contains five dimensions: knowledge and skills, self-efficacy, internet attitude, learning motivation, and thinking style. Finally, its application in the hierarchical teaching of computational thinking and suggestions for personalized teaching programs are given in order to promote the development of personalized education in computational thinking.},
  address = {Evansville, IN, USA},
  author = {Zhou, Xuchen and Zhang, Wei and Wang, Shengming and Chen, Hao},
  booktitle = {2023 5th International Workshop on Artificial Intelligence and Education (WAIE)},
  doi = {10.1109/WAIE60568.2023.00025},
  issn = {1937-4771},
  issue_date = {June 2015},
  journal = {J. Comput. Sci. Coll.},
  keywords = {Artificial intelligence; Computational modeling; Conferences; Education; Icebergs; Psychology; Testing; assessment framework; computational thinking; computational thinking assessment; computational thinking education; iceberg model},
  month = {Sep.},
  number = {6},
  numpages = {7},
  pages = {96-100},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Construction and Application of a Computational Thinking Assessment Framework from the Perspective of the Iceberg Model},
  volume = {30},
  year = {2023}
}

@inproceedings{merged9,
  abstract = {Computational thinking refers to a deliberative process that finds a computational solution for a concern. Computational doing refers to use of computation and computational tools to address concerns. Computational design refers to creating new computational tools and methods that are adopted by the members of a community to address their concerns. Unfortunately, the definitions of both "thinking" and "doing" are fuzzy and have allowed misconceptions about the nature of algorithms. Fortunately, it is possible to eliminate the fuzziness in the definitions by focusing on computational design, which is at the intersection between thinking and doing. Computational design is what we are really after and would be a good substitute for computational thinking and doing.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Liu, Junjie and Xia, Xiaojun and Bai, Yi and Liu, Pingyao},
  booktitle = {2022 4th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE55932.2022.00043},
  issue_date = {August 2017},
  journal = {Ubiquity},
  keywords = {Computational efficiency; Education; Focusing; Knowledge acquisition; Market research; Technological innovation; Visualization; computational thinking; instructional design; micro:bit},
  month = {August},
  number = {August},
  numpages = {9},
  pages = {198-201},
  publisher = {Association for Computing Machinery},
  title = {A Study of Micro:bit Teaching Design Based on the Development of Computational Thinking of Secondary School Students},
  url = {https://doi.org/10.1145/3132087},
  volume = {2017},
  year = {2022}
}

@inproceedings{merged10,
  abstract = {In this report we consider the current status of the coverage of computer science in education at the lowest levels of education in multiple countries. Our focus is on computational thinking (CT), a term meant to encompass a set of concepts and thought processes that aid in formulating problems and their solutions in different fields in a way that could involve computers [130].The main goal of this report is to help teachers, those involved in teacher education, and decision makers to make informed decisions about how and when CT can be included in their local institutions. We begin by defining CT and then discuss the current state of CT in K-9 education in multiple countries in Europe as well as the United States. Since many students are exposed to CT outside of school, we also discuss the current state of informal educational initiatives in the same set of countries.An important contribution of the report is a survey distributed to K-9 teachers, aiming at revealing to what extent different aspects of CT are already part of teachers' classroom practice and how this is done. The survey data suggest that some teachers are already involved in activities that have strong potential for introducing some aspects of CT. In addition to the examples given by teachers participating in the survey, we present some additional sample activities and lesson plans for working with aspects of CT in different subjects. We also discuss ways in which teacher training can be coordinated as well as the issue of repositories. We conclude with future directions for research in CT at school.},
  address = {New York, NY, USA},
  author = {Mannila, Linda and Dagiene, Valentina and Demo, Barbara and Grgurina, Natasa and Mirolo, Claudio and Rolandsson, Lennart and Settle, Amber},
  booktitle = {Proceedings of the Working Group Reports of the 2014 on Innovation &amp; Technology in Computer Science Education Conference},
  doi = {10.23919/MIPRO57284.2023.10159750},
  isbn = {9781450334068},
  issn = {2623-8764},
  keywords = {Computational Thinking; Correlation; Critical Thinking; Data Science; Data science; Education; History; Pupils; Python; STEM; Social sciences; Soft sensors; Trans-Atlantic Slave Trade routes; history; non-STEM; programming},
  location = {Uppsala, Sweden},
  month = {May},
  numpages = {29},
  pages = {672-677},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE-WGR '14},
  title = {Fostering Critical and Computational Thinking in the Field of Primary and Secondary Education in non-STEM Subjects by Using Data Sets and Applications},
  url = {https://doi.org/10.1145/2713609.2713610},
  year = {2023}
}

@inproceedings{merged11,
  abstract = {With the increasing importance of computational thinking in the digital age, Scratch programming programs have performed well in developing students' computational thinking skills. Nevertheless, the authors found that current high school students still commonly suffer from poor computational thinking skills and low academic satisfaction. Therefore, this study designed a model of high school scrath programming teaching activities for developing computational thinking, using constructivist learning theory, achievement motivation theory, and Dewey's behavioral view of learning as theoretical guides, selected two classes of sophomore students in a high school in China as the research subjects, and conducted a quasi-experimental study to validate the model. The results of the study show that the teaching mode can effectively improve students' abilities in abstraction, decomposition, algorithms, evaluation and generalization, and it is further found that the effect of improving abstract thinking and generalization thinking is most prominent.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Li, Yuhang and Liang, Zhou and Chen, Hongyan and Chen, Meifen and Zhang, Xiaoyu},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092227},
  issn = {0001-0782},
  issue_date = {December 2013},
  journal = {Commun. ACM},
  keywords = {Computational modeling; Education; Information age; Interviews; Programming profession; computational thinking; information technology curriculum; instructional design; scratch programming},
  month = {December},
  number = {12},
  numpages = {3},
  pages = {112-116},
  publisher = {Association for Computing Machinery},
  title = {Design and Application of High School Scratch Programming Instructional Activities for Computational Thinking Development},
  url = {https://doi.org/10.1145/2535915},
  volume = {56},
  year = {2025}
}

@inproceedings{merged12,
  abstract = {Game design environments are traditionally used as means for engaging non-programmers in the learning process. However, these environments lack specific support for teaching computational thinking to novices. Typically, such skills are acquired in ad hoc practical sessions with supervision provided by teachers or peers. The usual scenario is where a teacher guides the students in solving these problems during a game design session. In informal learning settings, step-by-step tutorials for creating existing games are used to compensate for the lack of computer support for solving design and computational problems. In this paper we suggest a game design process that combines support for computational thinking with tool usage, by identifying the most common computational thinking problems and providing a generic solution to them. We have evaluated our solution in the context of AgentWeb, an online cloud-based game design environment for novices. We discuss how to incorporate suggested computational thinking solutions as computer assistant into the game design user interface.},
  address = {New York, NY, USA},
  author = {Ahmadi, Navid and Jazayeri, Mehdi and Landoni, Monica},
  booktitle = {2012 IEEE 12th International Conference on Advanced Learning Technologies},
  doi = {10.1145/2047594.2047612},
  isbn = {9781450310178},
  issn = {2161-377X},
  keywords = {Computers; Context; Educational institutions; Games; Programming; Tutorials; cloud-based environments; cognitive walkthrough; computational thinking; design thinking; end-user programming; evaluation; game design; game design environments; informal learning},
  location = {West Point, New York, USA},
  month = {July},
  numpages = {6},
  pages = {349-353},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '11},
  title = {Helping Novice Programmers to Bootstrap in the Cloud: Incorporating Support for Computational Thinking into the Game Design Process},
  url = {https://doi.org/10.1145/2047594.2047612},
  year = {2012}
}

@inproceedings{merged13,
  abstract = {As the information age has progressed, computational thinking ability to solve problems has become an indispensable way of life in life. Many scholars believe that the process of solving problems will be more logical if they have computational thinking ability. At the same time, scholars believe that a good learning method improves learners' intrinsic motivation. Therefore, in this research, we try to use conceptual mapping so that students can construct knowledge when composing their own images, as the focus of this learning model and computational thinking is the thinking process and the two coincide. This research intends to introduce the traditional programming robot course into conceptual mapping and measure whether there are differences in computational thinking tendencies, problem-solving tendencies, and intrinsic motivations between students who use conceptual mapping and those who do not use it. The students in the experimental group with conceptual mapping activities developed computational thinking skills during the program robotics course. The students in the control group first watched the computational thinking explanation video to explain the computational thinking skills to the students, and then taught in the traditional programming robotics course.},
  address = {New York, NY, USA},
  articleno = {36},
  author = {Chen, Bing-Hong and Chen, Ling-Hsiu and Chen, Chih-Cheng and Chen, Chih-Hung},
  booktitle = {2021 IEEE 3rd Eurasia Conference on IOT, Communication and Engineering (ECICE)},
  doi = {10.1109/ECICE52819.2021.9645630},
  isbn = {9781450334631},
  keywords = {Computational Thinking; Computational modeling; Concept mapping; Conferences; Gender; Gender gap; Information age; Learning systems; Problem-solving; Programming; Robot learning; Teaching of Programming; computational thinking; intrinsic motivation; programmed robot 10 pts},
  location = {Vilanova i la Geltru, Spain},
  month = {Oct},
  numpages = {2},
  pages = {617-620},
  publisher = {Association for Computing Machinery},
  series = {Interacci\'{o}n '15},
  title = {Influence of Programming Robot Learning Mode Based on Conceptual Mapping on College Students' Computational Thinking},
  url = {https://doi.org/10.1145/2829875.2829904},
  year = {2021}
}

@inproceedings{merged14,
  abstract = {In this article I present a theoretical framework for the concept "computational thinking". I do so in response to some of the problems and consequences of the lack of viable theoretical foundations; especially in relation to the development in recent years of many educational practices that claim the term "computational thinking". I therefore introduce my extension of Jean Piaget's general law of cognition which arose as a result of my empirical research on novice learners knowledge of the concept of a program as an executable object. Said empirical study is briefly described in this paper as a means to highlight the key to my extension of Piaget's general law, which is the insight of how the thought processes and methods involved in cases where the subject must instruct an action to a computer differ from those in which the subject instructs another subject, or performs the action themselves. My theory explains the difference between algorithmic thinking and computational thinking by adequately locating it in the specificities of the subject instructing a computer. Hence, in this article I claim that my extension of Piaget's law offers a more empirically thorough and theoretically sound way forward in the conceptual development of "computational thinking" than the alternatives that are being debated in academia to the present day.},
  address = {New York, NY, USA},
  author = {Zipitr\'{\i}a, Sylvia da Rosa},
  booktitle = {Proceedings of the 7th Computer Science Education Research Conference},
  doi = {10.1109/ICCSE.2014.6926430},
  isbn = {9781450366243},
  keywords = {Autonomous learning mode; Computational modeling; Computational thinking; Educational institutions; HTML; Indexes; Learning to program; Microcomputers; Novice learners; Piaget's theory; The Network teaching auxiliary platform},
  location = {Saint Petersburg, Russian Federation},
  month = {Aug},
  numpages = {7},
  pages = {59-62},
  publisher = {Association for Computing Machinery},
  series = {CSERC '18},
  title = {Teaching mode reform and exploration on the University Computer Basic based on Computational thinking training in Network Environment},
  url = {https://doi.org/10.1145/3289406.3289412},
  year = {2014}
}

@inproceedings{merged15,
  abstract = {Computational Thinking is an essential skill for all students in the 21st Century. A fundamental question is how can we create computer affordances to empower novice teachers and students, in a variety of STEM and art disciplines, to think computationally while avoiding difficult overhead emerging from traditional coding? Over the last 20 years we have iteratively developed tools that aim to support computational thinking. As these tools evolved a philosophy emerged to support Computational Thinking by joining human abilities with computer affordances. Chief among these findings is that supporting Computational Thinking is much more than making coding accessible. Computational Thinking Tools aim to minimize coding overhead by supporting users through three fundamental stages of the Computational Thinking development cycle: problem formulation, solution expression, and solution execution/evaluation.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Sheridan, Frances and Stynes, Paul and Pathak, Pramod and Quille, Keith},
  booktitle = {Proceedings of the 2024 Conference on United Kingdom \&amp; Ireland Computing Education Research},
  doi = {10.1109/VLHCC.2016.7739688},
  isbn = {9798400711770},
  issn = {1943-6106},
  keywords = {Assessment; Computational Thinking; Computing; Higher Education; K-12 education; computational thinking; computational thinking tools; end-user programming},
  location = {Manchester, United Kingdom},
  month = {Sep.},
  numpages = {1},
  pages = {218-222},
  publisher = {Association for Computing Machinery},
  series = {UKICER '24},
  title = {Computational Thinking Assessment Tools: A Systematic Review of the Literature (Initial Findings).},
  url = {https://doi.org/10.1145/3689535.3689545},
  year = {2016}
}

@inproceedings{merged16,
  abstract = {Computational thinking (CT) is a key competency with a significant impact on students' academic performance in STEM fields. It empowers students to enhance problem-solving skills by decomposing problems, utilizing abstraction and pattern recognition, and employing algorithmic thinking to design solutions and build models. This is particularly important in STEM disciplines where logical reasoning is essential for addressing complex real-world challenges in academic and industrial settings. Given the increasing demand for professionals equipped with strong algorithmic thinking and problem-solving abilities in Industry 5, educational institutions are focusing on enhancing students' CT and problem-solving skills. This study presents an initiative conducted over the past two years at our institute to teach CT in a gateway course to students with different backgrounds in STEM fields. The approach involved designing specific learning modules on Abstraction, Decomposition, Pattern Recognition, and Algorithmic Thinking and integrating them into the LMS. After studying these learning modules, the students were exposed to specific assignments that required the application of related CT skills. Pre and post surveys were employed by using standard CT tests to measure the impact of the intervention on students' CT levels. The results indicated an improvement in students' perceptions of their mastery of CT. Academic course grades also showed an improvement, with increased A scores and reduced F grades post-intervention. This two-year study on improving CT skills has yielded promising results. Moving forward, the research aims to enhance the existing modules further and distribute them to a broader range of introductory-level STEM courses in other universities. This future direction aligns with the goal of expanding the impact of CT education and integrating it more widely into STEM curricula.},
  address = {New York, NY, USA},
  author = {Dehbozorgi, Nasrin and Roopaei, Mehdi},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1109/ISEC61299.2024.10664997},
  isbn = {9781450367936},
  issn = {2473-7623},
  keywords = {Cognition; Computational Thinking; Computational modeling; Focusing; Higher Education; Industries; Integrated STEM Education; Logic gates; Pattern recognition; Student Performance; Surveys; blended-learning; coding; computational thinking; computer-science-education; preservice-teachers; teacher-education},
  location = {Portland, OR, USA},
  month = {March},
  numpages = {1},
  pages = {01-04},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Improving Computational Thinking Competencies in STEM Higher Education},
  url = {https://doi.org/10.1145/3328778.3372571},
  year = {2024}
}

@inproceedings{merged17,
  abstract = {The purpose of this study is to make learning material that can develop both Computational thinking and Mathematical thinking. This study suggest a hamburger flowchart as a teaching material that combines the three elements of "unplugged", "thinking from the end " and "mathematics class". Using this flowchart, basic experiment was conducted for 8 to 12 years old. The purpose of this experiment is to confirm whether it is possible for children to develop both Computational thinking and Mathematical thinking by using the hamburger flowchart. We evaluated both Computational thinking and Mathematical thinking from the state in this class and the content of the worksheet and prior and subsequent tests. As a result, the state related to Computational thinking and Mathematical thinking increased, and the correct answer rate of many children increased from the prior test to the subsequent test. Therefore it turned out that the hamburger flowchart affects mathematical thinking.},
  address = {New York, NY, USA},
  author = {Nakamura, Takayasu and Kawasaki, Tetsushi},
  booktitle = {2019 International Joint Conference on Information, Media and Engineering (IJCIME)},
  doi = {10.1109/IJCIME49369.2019.00108},
  isbn = {9781450324557},
  keywords = {21st-century-skills; Computational-thinking; Education; Flowcharts; K-12 education; Mathematical-thinking; Programming profession; Sugar; Tools; Toxicology; computational thinking; cs4fn; thinking-from-the-end; unplugged},
  location = {Aarhus, Denmark},
  month = {Dec},
  numpages = {4},
  pages = {305-308},
  publisher = {Association for Computing Machinery},
  series = {WiPSE '13},
  title = {Computer Science Unplugged for Developing Computational Thinking and Mathematical Thinking},
  url = {https://doi.org/10.1145/2532748.2611263},
  year = {2019}
}

@inproceedings{merged18,
  abstract = {The term computational thinking has received some discussion in the field of computer science education research. The term is defined as the concept of thinking about problems in a way that can be implemented in a computing device. Of course, after having thought about a problem using computational thinking skills, the next step should be to use programming skills to implement the solution. This work in progress is exploring ways in which programming can be employed as a tool to teach computational thinking and problem solving. Data is collected from teachers, academics, and professionals from various industries. They are purposively selected because of their knowledge of or interest in the topics of problem solving, computational thinking, and the teaching of programming. This data is analyzed within the paradigm of the grounded theory approach. The results of an initial analysis imply an ordering of complexity associated with computational thinking skills, imply connections between computational thinking skills and programming activities, and imply a relationship between computational thinking skills and other taxonomies of learning.},
  address = {New York, NY, USA},
  author = {Turchi, Tommaso and Malizia, Alessio},
  booktitle = {2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
  doi = {10.1109/VLHCC.2016.7739692},
  isbn = {9781450317870},
  issn = {1943-6106},
  keywords = {Computational Thinking; Concrete; Encoding; End-User Programming; Programming environments; Programming profession; Tangible User Interface; Visualization; computational thinking; pedagogy of programming; problem solving},
  location = {Hamburg, Germany},
  month = {Sep.},
  numpages = {4},
  pages = {232-233},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '12},
  title = {Fostering computational thinking skills with a tangible blocks programming environment},
  url = {https://doi.org/10.1145/2481449.2481466},
  year = {2016}
}

@inproceedings{merged19,
  abstract = {This work-in-progress research-to-practice paper presents an intervention on integrating computational thinking modules into a software engineering course. The national consensus on the significance of computational thinking has prompted the expansion of related educational initiatives over the past decade. Since the definition of computational thinking by Wing in 2006, this concept has gained significant attention within the educational community. Particularly this surge of interest has led to extensive research into its conceptual foundations and subsequent integration into educational curricula since 2013. National initiatives have since emerged to incorporate computational thinking into the educational system. Furthermore, as artificial intelligence and computing systems become increasingly integrated into daily life, there is a growing demand from industries for a workforce and graduates adept at critical thinking and problem-solving. Aligned with this national movement, our study presents a two-year institutional initiative, aimed at integrating computational thinking into the software engineering program. The software engineering discipline extensively involves design thinking and problem-solving skills. However, we noticed that these higher-level skills are not imparted early in the program to teach students this method of thinking and approaching problems. To bridge this skill gap, we developed a set of computational thinking modules and integrated them into a gateway course in the software engineering program. Over two years, we implemented this intervention in an introductory-level course and evaluated its impact on students' computational thinking skills by analyzing their responses to a standard Computational Thinking Assessment survey. The results showed significant improvement in most components. These early findings underscore the effectiveness of integrating these computational thinking modules into the gateway courses, regardless of the specific course topic. A notable feature of these modules is their adaptability to diverse engineering courses, suggesting broader applicability across disciplines. Moving forward, our research aims to expand the integration of the computational thinking modules into various courses in other institutes across the nation and analyze their impact on student performance.},
  address = {New York, NY, USA},
  author = {Dehbozorgi, Nasrin and Nezafati, Maysam and Roopaei, Mehdi},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1109/FIE61694.2024.10892914},
  isbn = {9781450367936},
  issn = {2377-634X},
  keywords = {Artificial intelligence; Bridges; Computational Thinking; Engineering Education; Engineering education; Industries; Logic gates; Problem-solving; Software Engineering; Software engineering; Standards; Surges; Surveys; blended-learning; coding; computational thinking; computer-science-education; preservice-teachers; teacher-education},
  location = {Portland, OR, USA},
  month = {Oct},
  numpages = {1},
  pages = {1412},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Integrating Computational Thinking Into the Curricula to Bridge the Skill Gap in Engineering Education},
  url = {https://doi.org/10.1145/3328778.3372571},
  year = {2024}
}

@inproceedings{merged20,
  abstract = {Programming robots playing with the environment is an ongoing research project aimed at developing a robot and intervention program capable of enhancing young children's cognitive abilities and computational thinking skills. Using a robot sensitive to color and distance, children are able to use everyday objects in order to interact with it and program its movements. An eleven session intervention program using this robot was designed with the objective of creating playful learning instances were children would practice abilities associated with what is generally thought of as computational thinking. We'll assess children's computational thinking, fluid intelligence, working memory, planning, sequencing, number recognition and magnitude comparison, vocabulary, mental rotation, inhibitory control and cognitive flexibility to test for cognitive effects of the intervention. An active control in which children interact with the robot by remotely controlling it was used.},
  address = {New York, NY, USA},
  author = {Caballero-Gonzalez, Yen-Air and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel and Garc\'{\i}a-Holgado, Alicia},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1109/LACLO49268.2019.00046},
  isbn = {9781450371919},
  keywords = {Color; Computational modeling; Computational thinking; Motors; Robot kinematics; Robot sensing systems; Robots; Silicon; computational thinking; early childhood; educational robotic; educational robotics; problem solving; social skills; young children},
  location = {Le\'{o}n, Spain},
  month = {Oct},
  numpages = {5},
  pages = {226-230},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Learning computational thinking and social skills development in young children through problem solving with educational robotics},
  url = {https://doi.org/10.1145/3362789.3362874},
  year = {2019}
}

@article{merged21,
  abstract = {Since Jeannette Wing wrote her opinion paper on Computational Thinking in 2006 [1], there has been much discussion about the idea of making computational thinking a central component of the effort to expose the field of computing to all disciplines. This panel will cover national and local efforts taking place in universities to bring computational thinking to the forefront of all disciplines that use computing in their field.},
  address = {Evansville, IN, USA},
  author = {Bryant, Robert and Chinn, Donald and Hauser, George and Folsom, Michele and Wallace, Scott},
  booktitle = {Computational Thinking},
  isbn = {9780262353410},
  issn = {1937-4771},
  issue_date = {October 2009},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {1},
  numpages = {2},
  pages = {170–171},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking: what is it, how is it relevant, who's doing what with it?},
  url = {https://ieeexplore.ieee.org/document/8709358},
  volume = {25},
  year = {2019}
}

@inproceedings{merged22,
  abstract = {Several countries have usually adopted several priorities for developing ICT competences from kindergarten to secondary education. Most of them are focused on the development of key competences and/or coding skills. Although coding may be very attractive for young students and a very good practice or experience, it could be more interesting to develop students' logical thinking skills and problem-solving skills throughout programming approaches or computational thinking. This is a very exciting challenge with lots of possibilities regarding coding, robots, mobiles devices, Arduino-based application, game-based learning and so on. Thus it is very important discuss the experiences that are being developed worldwide in specialized for a with researchers that are working on this field, such as for example European Union TACCLE 3 - Coding project. This track is devoted to identify, share and valorize best practices and experiences (including technological and methodological issues) that focused on the development of computational thinking and related skills in any level of pre-university education.},
  address = {New York, NY, USA},
  author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco J. and Cruz-Benito, Juan},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1109/CSTE64638.2025.11092078},
  isbn = {9781450347471},
  keywords = {Computational modeling; Computer science; Context modeling; Digital signal processing; Education; Knowledge engineering; STEM; STEM education; TACCLE 3; Training; coding in schools; coding skills throughout games; computational thinking; computational thinking skills and curriculum; controlling things; digital signal processing course; instructional model; programming robots; using logic},
  location = {Salamanca, Spain},
  month = {April},
  numpages = {5},
  pages = {52-56},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Cultivation of Computational Thinking in University Students through STEM Education: A Case Study of Digital Signal Processing},
  url = {https://doi.org/10.1145/3012430.3012490},
  year = {2025}
}

@inproceedings{merged23,
  abstract = {With a focus on problem resolution, Computational Thinking (CT) can assist in developing cognitive abilities. A way to work with CT is using educational digital games (EDG), a ludic tool that stimulates the students’ learning. Still, adjustments are needed so that students with Intellectual Disabilities (ID) can use these games. Based on this scenario, we presented a Bachelor’s final paper that envisioned the creation of an EDG, aiming to contribute to the learning of the target audience, based on the promotion of the development of CT. Called “Pensar e Vestir”, the game uses the four pillars of CT by addressing choosing and wearing clothes. For that, the development counted with a multidisciplinary group – stakeholders and specialists from the areas of Computer Science, Education, Specialized Educational Assistance, and ID – and followed the Simple Interaction Design lifecycle model, with the definition of requirements, designing alternatives, prototyping, and evaluation. As a result, this EDG has two phases and eight situations each: time to sleep, the school in the heat, school in the cold, costume, park, tour, teacher, and market. The game was evaluated by specialists, Computing students, and one neurotypical child, we also intend to make a large evaluation with the target audience. As an outcome, the interaction design process with different stakeholders and specialists provides different insights and improvements to the game. Also, the game is accessible to neurotypical and with ID students.},
  address = {New York, NY, USA},
  articleno = {34},
  author = {Geremias, Matheus Soppa and Dutra, Taynara Cerigueli and Gasparini, Isabela and Maschio, Eleandro},
  booktitle = {Proceedings of the XXII Brazilian Symposium on Human Factors in Computing Systems},
  doi = {10.1109/ICALT58122.2023.00036},
  isbn = {9798400717154},
  issn = {2161-377X},
  keywords = {Computer science; Design methodology; Education; Games; Heat treatment; Pattern recognition; Technical requirements; computational thinking; educational digital games; intellectual disa-bilities.; intellectual disability},
  location = {Macei\'{o}, Brazil},
  month = {July},
  numpages = {10},
  pages = {105-107},
  publisher = {Association for Computing Machinery},
  series = {IHC '23},
  title = {An Educational Game to Promote the Development of Computational Thinking in Children Both Neurotypical and with Intellectual Disabilities},
  url = {https://doi.org/10.1145/3638067.3638113},
  year = {2023}
}

@inproceedings{merged24,
  abstract = {Contribution: This article proposes a new theoretical model with a goal to develop future human computational thinking (CT) in foundational computer science (CS) education. The model blends six critical types of thinking, i.e., logical thinking, systems thinking, sustainable thinking, strategic thinking, creative thinking, and responsible thinking into the design of a first-year undergraduate programming course. The study describes a creative blended pedagogy that embeds the proposed model into the course plan.Background: The emergence of artificial intelligent systems such as large language models from a knowledge provider perspective, coupled with a gradual change in post-pandemic outlook of education challenge the relevance and raises concerns about the future of education. The 21st-century human CT requirements, viz., learning to code (skill) and thinking computationally (competency), will be inadequate in the future. Moreover, there is substantial evidence which shows that most introductory programming courses fail to integrate critical elements like ethics and responsibility as part of the course.Intended Outcomes: The authors anticipate experiential learning models such as this has immense potential to future-proof CS education, as well as make future software engineers responsible citizens.Application Design: The proposed model blends six types of thinking into the design and activities of the course. The underlying theoretical basis of these activities revolve around three key principles: 1) experiential learning; 2) self-reflection; and 3) peer learning.Findings: This case study from a liberal educational institution in India qualitatively shows evidence of students developing six critical elements of thinking that shapes their future CT ability.},
  address = {New York, NY, USA},
  author = {Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati and Chippa, Divyaansh},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1109/TE.2024.3394060},
  isbn = {9781450336857},
  issn = {1557-9638},
  journal = {IEEE Transactions on Education},
  keywords = {21st-century skills; Computational modeling; Education; Green products; Programming profession; Software systems; Sustainable development; Systems thinking; computer science (CS); creative pedagogy; foundational education; future thinking},
  location = {Memphis, Tennessee, USA},
  month = {Dec},
  number = {6},
  numpages = {6},
  pages = {944-953},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {Developing Future Computational Thinking in Foundational CS Education: A Case Study From a Liberal Education University in India},
  url = {https://doi.org/10.1145/2839509.2844655},
  volume = {67},
  year = {2024}
}

@inproceedings{merged25,
  abstract = {The number of undergraduates entering computer science has declined in recent years. This is paralleled by a drop in the number of high school students taking the CS AP exam and the number of high schools offering computer science courses. The declines come at a time when career opportunities in CS continue to grow and computer science graduates are seen as crucial in building a globally competitive workforce for the 21st century. Efforts aimed at reversing the declining interest in computer science include curriculum revisions at the undergraduate level at many institutions, a re-design of computer science AP courses [1], and the inclusion of computational thinking into disciplines outside computer science [3].This panel discusses four projects of computer science researchers collaborating with high school teachers on integrating computing and computational thinking into their courses. The majority of the high school teachers involved is teaching science and math courses. They are teaching a diverse group of talented and college-bound students. The goal of all projects is to integrate computing into disciplines represented in the high school curriculum and to raise the awareness of computer science as an exciting and intellectually rewarding field.This panel will outline recent and on-going activities and interaction with high school teachers. Each panelist will describe how he/she got involved and the nature of the interaction. The panelists will talk about their individual projects, outline their visions for future interactions, and how their effort can be replicated by others. The session will briefly describe NSF's RET program which provided teacher support for three of the four projects. The session will then be opened for discussion; the audience will be encouraged to ask questions and contribute additional ideas for the inclusion of computational thinking in high school courses.},
  address = {New York, NY, USA},
  author = {Allan, Vicki and Barr, Valerie and Brylow, Dennis and Hambrusch, Susanne},
  booktitle = {2025 16th International Conference on E-Education, E-Business, E-Management and E-Learning (IC4e)},
  doi = {10.1109/IC4e65071.2025.11075441},
  isbn = {9781450300063},
  keywords = {Computer languages; Education; Electronic learning; Information technology; Interviews; PBL teaching mode; Problem-solving; Programming; Surveys; Systematics; computational thinking; education; graphical programming; information technology course},
  location = {Milwaukee, Wisconsin, USA},
  month = {April},
  numpages = {2},
  pages = {566-571},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {Construction and Application of a Project-based Learning Mode for the Development of Computational Thinking in junior high school},
  url = {https://doi.org/10.1145/1734263.1734395},
  year = {2025}
}

@inproceedings{merged26,
  abstract = {The Swedish government has recently introduced digital competence including programming in the Swedish K-9 curriculum starting no later than fall 2018. This means that 100 000 teachers need to learn programming and digital competence in less than a year. In this paper we report on our experience working with professional teacher training in Sweden's fifth largest city. The city has about 150 000 inhabitants and about 50 schools with about 14 000 students in primary education. The project has been carried out in close cooperation with the municipality.The work started in the fall of 2014 with a pilot study with 10 teachers in different subjects that was carried out during spring 2015. The pilot study was successful as the teachers were able to introduce activities related to programming and computational thinking in their subjects after only two half day workshops. The next step was to scale this up to include all the schools in the city. As expected, this turned out to be a larger challenge. More than 70 teachers were involved in the second part of the project. Some of the lessons learned are that it is quite easy to provide teacher training, but harder to get teachers to actually change their teaching and even more challenging to get teachers to help their colleagues introduce programming or computational thinking in their teaching.Based on our experience we draw some general conclusions and make suggestions for how to scale up the teaching of programming and computational thinking to all.},
  address = {New York, NY, USA},
  author = {Denning, Peter J. and Tedre, Matti},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159586},
  isbn = {9780262353410},
  keywords = {computational thinking; digital competence; k-9 education; programming; teacher professional development},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {175-192},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Computational Thinking for All: An Experience Report on Scaling up Teaching Computational Thinking to All Students in a Major City in Sweden},
  url = {https://ieeexplore.ieee.org/document/8709357},
  year = {2019}
}

@inproceedings{merged27,
  abstract = {Computer science education is more important than ever. The COVID-19 pandemic has highlighted our society's reliance on computing and its power to help businesses innovate and adapt, yet at the same time has surfaced greater disparities for students studying computer science. Computing is the number one source of all new wages in our economy, and there are currently 400,000 open computing jobs across the United States. However, unequal access to computer science instruction and opportunities to engage in computational thinking and practices remain prevalent (Google &amp; Gallup, 2015). In the 2018-19 school year, only 15 percent of Maryland graduates took at least one computing related course, and there were significant gaps in the course taking patterns by gender and race (Maryland Center for Computing Education, 2021). To grow students' competencies with computational thinking and computer science, it is essential to build the capacity of teachers to integrate computational thinking competencies and standards into their practice. The Frostburg State University College of Education's Maryland Accelerates (MA) Program provides aspiring teachers the opportunity to earn an accelerated Master of Arts in Teaching (Elementary or Secondary track) degree along with an innovative yearlong teacher residency in partnership with Frederick and Garrett County Public Schools. One of the primary goals of the program is to integrate mathematical problem solving and computational thinking to promote scientific inquiry in partnering elementary and secondary schools. To this end, Frostburg State University has developed an exciting opportunity for Master of Arts in Teaching (MAT) students to earn a microcredential in Computational Thinking that is aligned to the ISTE Educator Standards, the High Leverage Practice Standards from TeachingWorks, and the Interstate Teacher Assessment and Support Consortium InTASC Model as part of their teacher preparation program. In this panel, faculty from the Computer Science Department and the College of Education at Frostburg State University will discuss their partnership to develop a microcredential for Computational Thinking for pre-service teachers, how and why the credential was developed, and what competencies aspiring teachers develop. Two recent graduates of the Maryland Accelerates MAT Teacher Residency program will discuss their experience using these skills and knowledge during their residency and how they plan to apply and integrate computational thinking into their practice as new teachers.},
  address = {Evansville, IN, USA},
  author = {Flinn, Michael B. and McGee, Kristine and Barnes, Katelyn and Morton, Haylee},
  booktitle = {2011 International Conference on Computer Science and Service System (CSSS)},
  doi = {10.1109/CSSS.2011.5974984},
  issn = {1937-4771},
  issue_date = {October 2021},
  journal = {J. Comput. Sci. Coll.},
  keywords = {Business; Computational Thinking; Computational modeling; Computer science; Computers; Education; computer fundamental education; teaching model},
  month = {October},
  number = {3},
  numpages = {3},
  pages = {1158-1159},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Integrating computational thinking into K-12 teacher preparation: a collaborative partnership between the department of computer science and the college of education: panel discussion},
  volume = {37},
  year = {2011}
}

@inproceedings{merged28,
  abstract = {The benefits of developing children's computational thinking have been widely discussed with various approaches and learning tools. This paper reports the piloting of second-year longitudinal study, aiming to examine the effect of computational thinking education on the 5th grade students (n = 85) as they develop their algorithmic thinking and debugging skills. The results show that students benefited from our designed curriculum with learning gains in algorithmic thinking, especially in analyzing and finding the essential instructions to solve computational problems. Students also achieved significant gains in debugging programs. The study demonstrated that with age-appropriate learning materials and learning approach, even young children can develop computational thinking skills important to thriving in 21st century. This pilot study sets the direction of analyzing the rest of the 5th grade students' performance as well as the next year study.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Stephenson, Chris and Hong, Hai},
  booktitle = {2018 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)},
  doi = {10.1109/TALE.2018.8615232},
  issn = {2470-6698},
  issue_date = {April 2017},
  journal = {Commun. ACM},
  keywords = {Debugging; Education; Games; Problem-solving; Programming profession; algorithmic thinking; coding education; computational thinking; debug; primary school},
  month = {March},
  number = {4},
  numpages = {8},
  pages = {328-334},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking Education for Children: Algorithmic Thinking and Debugging},
  url = {https://doi.org/10.1145/2994591},
  volume = {60},
  year = {2018}
}

@inproceedings{merged29,
  abstract = {During the UnboxingCT project summer professional development, the Integrated CT Assessment was piloted with 72 elementary teachers. The assessment is based on computational thinking integration literature and asks teachers to identify different computational thinking concepts in content area scenarios. The assessment allowed us to identify which computational thinking concepts teachers were most familiar with prior to the professional development and assess changes in their understanding following the professional development. Our next step will be validation of the assessment with a larger group of teachers.},
  address = {New York, NY, USA},
  author = {Joshi, Deepti and Joswick, Candace and Albert, Jennifer and Jocius, Robin and Blanton, Melanie and Petrulis, Robert and Dawson, Trent},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705131},
  isbn = {9780262353410},
  keywords = {assessment; computational thinking; integrated assessment; teacher assessment; teacher professional development},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1501–1502},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Assessing Elementary Teachers' Knowledge of Integrated Computational Thinking},
  url = {https://ieeexplore.ieee.org/document/8709361},
  year = {2019}
}

@inproceedings{merged30,
  abstract = {Computational Thinking (CT) is a method of analysis and problem solving that enables the development of life skills and positively influences the social and competitive conditions of people. This type of thinking promotes learning through the application of planning, analysis, abstraction and decomposition of problems into their constituent parts. In addition, PC contributes to the formation of critical thinking, creativity and cooperation between people. In education, the mechanisms used to foster CP are diverse; among them, learning through programming. Databases of source code generated in learning exercises using the CP method are a valuable tool for discovering learning patterns. However, there are no robust and scalable methods for studying the huge source code bases of learning products to recognize the predominant patterns and determine the effectiveness of the method. Consequently, a comprehensive analysis of learners’ skills, knowledge, outcomes and performance levels is necessary to identify points of improvement to meet learning objectives and modify curricula and exercises. This paper presents the joint research between the Costa Rica Institute of Technology (TEC) and the PRONIE MEP-FOD program of the Omar Dengo Foundation. Its objective is to automatically analyze the source code created by the students, evaluate the Computational Thinking skills they developed and compare the results with the learning objectives established in the study plans.},
  address = {New York, NY, USA},
  author = {Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Zuniga-Cespedes, Magaly and Monge-Fallas, Jorge and Navas-Su, Jose},
  booktitle = {2021 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI54926.2021.00222},
  isbn = {9798400704246},
  keywords = {Codes; Computation thinking; Education; Measurement; Pattern recognition; Planning; Scientific computing; Software; assessment; automatic grading; bebras; computational thinking; program analysis; validation},
  location = {Portland, OR, USA},
  month = {Dec},
  numpages = {2},
  pages = {1037-1042},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Validation of a Bebras-Based Test to Assess Computational Thinking Abilities in First-Year College Students},
  url = {https://doi.org/10.1145/3626253.3635523},
  year = {2021}
}

@inproceedings{merged31,
  abstract = {This study attempted to investigate elementary school teachers' understandings, beliefs, and intentions toward STEM and Computational Thinking. We collected data through a survey of 16 teachers at one elementary school in Malang City, Indonesia. They represented a variety of subjects with diverse learning experiences. The survey took place after the respondents received a short training about STEM and Computational Thinking. Quantitative analysis showed that most elementary school teachers positively demonstrated Computational Thinking practices in their schools. Besides, they believed that Computational Thinking could help students think logically, structurally, and creatively, while STEM helped train students to be problem solvers in an analytical, critical, and practical way. In addition, most respondents intended to continue learning and applying STEM and Computational Thinking approaches in their learning design. Added to this, the participants' understanding of STEM and Computational Thinking also improved based on the results of the Wilcoxon test conducted on the pre-test and post-test. This study provides valuable information on the need for elementary teacher development programs, namely improving teachers' teaching skills based on STEM and Computational Thinking for preparing students with 21 st-century learning skills.},
  address = {New York, NY, USA},
  author = {Surahman, Ence and Hua Wang, Tzu and Turner Lam, Kee-Fui and Sulthoni and Nendra Pratama, Ujang and Nur Aisyah, Eny},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1109/ICITE54466.2022.9759837},
  isbn = {9781450371919},
  keywords = {Computational thinking; Education; Oceans; Problem-solving; STEAM; STEM; Statistical analysis; Training; Urban areas; beliefs; coding in schools; computational thinking; computational thinking skills and curriculum; computer science in K-12; elementary teachers; intentions; programming; robots; understandings},
  location = {Le\'{o}n, Spain},
  month = {Jan},
  numpages = {4},
  pages = {175-180},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Investigating Elementary Teachers' Understanding, Beliefs, and Intentions toward STEM and Computational Thinking in Education},
  url = {https://doi.org/10.1145/3362789.3362957},
  year = {2022}
}

@inproceedings{merged32,
  abstract = {Existing literature presents many cases of computational thinking analysis through the perspective of a skill set for 21st century. However it is important to go deeper and understand how computational thinking activities fosters the cognitive development of the young, especially if we want them to have “a significant advantage in problem solving”, becoming innovative thinkers [1]. To be innovative it is necessary that a person use sophisticated cognitive structures to reason over abstractions and deal with hypothesis. These are the characteristics of the formal operational thinking [2]. Therefore, this paper is about the use of formal thinking on computational thinking activities over a digital fabrication project developed in a Brazilian makerspace (POALab FabLab). Using a Case Study we want to show that computational thinking and digital fabrication projects demand the use of formal thinking and, since that, the importance of designing learning activities for makerspaces taking in mind the possibilities of cognitive development.},
  address = {New York, NY, USA},
  author = {Borges, Karen Selbach and de Menezes, Crediné Silva and da Cruz Fagundes, Léa},
  booktitle = {2017 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2017.8190654},
  issn = {0001-0782},
  issue_date = {July 2018},
  journal = {Commun. ACM},
  keywords = {Complexity theory; Computational modeling; Creativity; Fabrication; Floors; Games; Jean Piaget; Tools; computational thinking; formal thinking; making},
  month = {June},
  number = {7},
  numpages = {7},
  pages = {33–39},
  publisher = {Association for Computing Machinery},
  title = {The use of computational thinking in digital fabrication projects a case study from the cognitive perspective},
  url = {https://doi.org/10.1145/3214354},
  volume = {61},
  year = {2017}
}

@inproceedings{merged33,
  abstract = {With the coming of the digital intelligence era, contemporary middle school students should have the key literacy and ability to quickly adapt to the current social development. Computational thinking, as a critical problem-solving skill in the era of artificial intelligence, has also become a basic literacy for students to face the future. However, the traditional “duck and filler” teaching mode is ineffective in developing computational thinking skills, while the gamified learning approach allows learners to interact with games in an immersive way. Therefore, this study combines games and programming teaching, builds a teaching model of gamified text programming, and develops a series of programming courses. It can develop not only computational thinking skills and improve students' programming ability but also effectively avoid the limitations of traditional programming teaching.},
  address = {New York, NY, USA},
  author = {Li, Wei-Lin and Hu, Chiu-Fan and Wu, Cheng-Chih},
  booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1109/CSTE59648.2023.00037},
  isbn = {9781450342315},
  keywords = {Artificial intelligence; Codes; Computational modeling; Digital intelligence; Education; Games; Problem-solving; computational thinking; computer science; gamified teaching; hands-on; teaching model; text programming},
  location = {Arequipa, Peru},
  month = {April},
  numpages = {1},
  pages = {175-179},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '16},
  title = {Research on Developing Computational Thinking of Middle School Students Based on Gamified Text Programming Teaching Activities},
  url = {https://doi.org/10.1145/2899415.2925496},
  year = {2023}
}

@inproceedings{merged34,
  abstract = {In the era of digital transformation, Computational Thinking (CT) has emerged as a core 21st-century competency, providing a systematic approach to problem-solving. Programming education is widely recognized as a key avenue for cultivating CT skills. However, current online programming platforms often fall short, facing challenges such as insufficient CT development, limited interactivity, and suboptimal learning outcomes. To address these issues, this study proposes the integration of Artificial Intelligence into instructional design to enhance the effectiveness of online programming education. Guided by the Human-AI Co-Creation Model, the research investigates the collaborative roles of educators and AI, and outlines a design framework for developing instructional content. Case studies demonstrate that this model significantly improves learners' computational thinking abilities and engagement, contributing to the advancement of teacher-AI collaborative systems in digital programming education.},
  address = {New York, NY, USA},
  author = {Zhuang, Yaojie and Ji, Yi and Huang, Zhaowen and Shang, Yujiao and Li, Xiuhong and Su, Xiaomin},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1109/SEAI65851.2025.11108869},
  isbn = {9781450365185},
  keywords = {Artificial Intelligence; Artificial intelligence; Collaboration; Computational Thinking; Computational modeling; Computational thinking; Constructivist Theory; Digital transformation; Education; Human-AI Co-Creation Model; Problem-solving; Programming Education; Programming profession; Software engineering; Systematics; Teaching Design; coding in schools; computational thinking skills and curriculum; computer science in K-12; programming},
  location = {Salamanca, Spain},
  month = {June},
  numpages = {4},
  pages = {325-329},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {Exploring the Integration of Artificial Intelligence and Programming Education: A Practice-Oriented Study on the Development of Computational Thinking Based on Human-AI Co-Creation},
  url = {https://doi.org/10.1145/3284179.3284184},
  year = {2025}
}

@inproceedings{merged35,
  abstract = {This research-to-practice full paper describes K-12 Diversity and Broadening Participation through the integration of Computational Thinking (CT) across the curriculum. CT is implicit within the current high school curriculum and used by teachers and students every day in their classrooms across multiple content areas. Most students are unaware they are using these skills and that these skills are the foundation of learning computer science. Over a series of workshops, high school teachers and students, and university faculty discussed the need to incorporate CT skills throughout the high school curriculum to improve those skills in students and to impart a better understanding of computer science. The result was a guide created to assist high school teachers to make CT concepts explicit in their classes. A main component of the guide includes specific examples of how to incorporate CT skills in various content areas. The guide was created on a foundation of cultural relevance and cogenerative dialogues. Here we describe salient points about the creation of the guide and insights gained during these workshops.},
  address = {New York, NY, USA},
  author = {DeMarco, Donna and Frye, Lisa and Schwesinger, Dylan},
  booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
  doi = {10.1109/FIE61694.2024.10893039},
  isbn = {9781450310178},
  issn = {2377-634X},
  keywords = {Computer science; Conferences; Cultural differences; Education; community outreach; computational thinking; diversity; inclusivity; k-12; preconceptions; underrepresentation},
  location = {West Point, New York, USA},
  month = {Oct},
  numpages = {2},
  pages = {311–312},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '11},
  title = {Towards Incorporating Computational Thinking Skills Across the Curriculum},
  url = {https://doi.org/10.1145/2047594.2047678},
  year = {2024}
}

@inproceedings{merged36,
  abstract = {With the development of the era of artificial intelligence(AI), China has put forward the cultivation of computational thinking(CT) in the compulsory education curriculum standard. CT includes three dimensions: CT concept, CT practice, and CT perspective. As a part of CT, the development of the CT perspective can promote the growth of students ‘ connection ability, questioning ability, and expression ability. CT perspective promotes the formation of computational identity through the internalization of concepts. At present, there are relatively few studies on the CT perspective. Based on this, this study proposes a design-based STEM + AI teaching model, aiming to create a combination of artificial intelligence and interdisciplinary to cultivate pupils ‘ CT perspective and form their computational identity. In this study, a single group of pre-test and post-test experiments were conducted to test the CT perspective and computational identity of students in the third grade of a primary school in Wuhan. The research shows that the design-based STEM + AI teaching has significantly improved the expression ability and questioning ability of primary school students in the CT perspective, as well as the correlation ability, participation ability, realization ability, and goal-setting ability in the computational identity. The implementation of STEM + AI teaching helps students to internalize ideas from the perspective of CT, thus cultivating students' computational identity.},
  address = {New York, NY, USA},
  author = {Li, Xing and Xiang, Hui and Zhao, MingYue and Zhou, XiaoChun and Huang, Jing},
  booktitle = {2024 6th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE62025.2024.00024},
  isbn = {9798400700422},
  keywords = {Artificial intelligence; Computational modeling; Computer science; Correlation; Education; Pupils; STEM + AI; Standards; computational thinking perspective and identity; teaching model},
  location = {Beijing, China},
  month = {April},
  numpages = {7},
  pages = {93-98},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '23},
  title = {An Empirical Study on Designing STEM+AI Teaching to Cultivate Primary School Students' Computational Thinking Perspective and Identity},
  url = {https://doi.org/10.1145/3606094.3606130},
  year = {2024}
}

@article{merged37,
  abstract = {The purpose of this study is to look at how a music programming course affects the development of computational thinking in undergraduate music conservatory students. In addition to teaching the fundamentals of computational thinking, music programming, and logic, the course addresses the Four C’s of education. The change in students’ attitudes toward computer and algorithmic skills, creativity, communication, and collaboration is measured using a pre- and post-test experimental design. Additionally, computational thinking abilities are assessed through the administration of music analysis, procedural, graphical, and logic quizzes, while creativity is evaluated through a qualitative grading of the students’ final music projects. Results show a general perceived improvement of the students’ attitudes toward the Four C’s as well as a good ability to convert learned computational models into musical creativity. However, more effort is needed in order to guarantee an overall improvement in the students’ actual computational thinking abilities.},
  address = {New York, NY, USA},
  author = {Lee, Irene and Martin, Fred and Apone, Katie},
  doi = {10.1109/TE.2023.3313394},
  issn = {1557-9638},
  issue_date = {December 2014},
  journal = {IEEE Transactions on Education},
  keywords = {Collaboration; Computational thinking; Creativity; Education; Music; Production; Programming profession; Visualization; abstraction; analysis; automation; computational thinking; computer science education; digital transformation; professional musical education; the Four C’s},
  month = {December},
  number = {6},
  numpages = {8},
  pages = {836-845},
  publisher = {Association for Computing Machinery},
  title = {Integrating Computational Thinking With the Curriculum of Future Professional Musicians},
  url = {https://doi.org/10.1145/2684721.2684736},
  volume = {67},
  year = {2024}
}

@inproceedings{merged38,
  abstract = {In recent years, the elementary schools in Macao have increasingly offered programming curriculum. Programming curriculum emphasizes computational thinking, which is the capacity to analyze, design algorithms, and find solutions to programming problems. However, it is not easy to develop students’ computational thinking abilities. In addition, students' poor learning attitudes are connected to difficulties in learning programming. Therefore, it is crucial for educators to investigate how to improve students' computational thinking and learning attitudes. This study applied a quasi-experimental research method to a single group and used a pretest-posttest method to measure the influence of using Code.org on computational thinking and learning attitudes. The participants were 20 third-grade students in an elementary school in Macao. The teaching duration is carried out for three weeks, six lessons per week, a total of eighteen lessons, and 40 minutes per lesson. The Programming Computational Thinking Scale (PCTS) and the Attitude Scale of Computer Programming Learning (ASCOPL) were used to evaluate the implementation's effect. After analyzing the questionnaire scores and students' achievements on the Code.org website, it was found that after receiving the Code.org instruction, students were able to complete most of the stage of the Course B curriculum in Code.org, and their computational thinking and learning attitudes have improved significantly.},
  address = {New York, NY, USA},
  author = {Choi, Wan Chong},
  booktitle = {Proceedings of the 2022 6th International Conference on Education and E-Learning},
  doi = {10.1109/FIE.2016.7757408},
  isbn = {9781450398428},
  keywords = {Algorithm design and analysis; Calculation; Computational Thinking; Computational modeling; Computers; Education; Human Brain; Programing; Programming profession},
  location = {Yamanashi, Japan},
  month = {Oct},
  numpages = {7},
  pages = {235–241},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '22},
  title = {The Influence of Code.org on Computational Thinking and Learning Attitude in Block-Based Programming Education},
  url = {https://doi.org/10.1145/3578837.3578871},
  year = {2016}
}

@inproceedings{merged39,
  abstract = {Computational thinking (CT)., considered to be one of the three major scientific thinking styles of human beings., is a competency fundamental to computing education and beyond. However., as a cross-domain competency., appropriate assessment design and method remain equivocal. Indeed., the majority of the existing assessments have a predominant focus on using scales or test to measure programming proficiency and neglecting process evaluation in which CT can also be manifested. Game-based learning assessments (GBLA) are able to assess tacit knowledge by avoiding jargon in test items., constructing irrelevant material., and reducing anxiety., avoiding the barriers of traditional assessments in assessing students' abilities. To broaden the promotion and practice of CT., it is necessary to integrate diverse problem-solving contexts using a digital game-based assessment model to measure CT. We invited 13 experts to participate in three rounds of the Delphi method and constructed a CT skills assessment model based on the digital game. The model had good consistency and was divided into four primary indicators., namely “Analysis”., “Design”., “Iteration”., and “Generalization”., which were weighted as 0.26., 0.11., 0.24., and 0.39., respectively and 14 secondary indicators. Taken together., the study demonstrated the feasibility to expand from traditional assessment methods to integrating digital games in measuring CT skills in a comprehensive manner.},
  address = {New York, NY, USA},
  author = {Yi, Xitian and Liu, Fanhua and Zhan, Zehui},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1109/CSTE55932.2022.00048},
  isbn = {9781450347044},
  keywords = {Adaptation models; Computational modeling; Education; Games; Indexes; Particle measurements; Predictive models; assessing; assessment model; computational thinking; computational thinking skills; digital game; school},
  location = {Bologna, Italy},
  month = {May},
  numpages = {1},
  pages = {226-230},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {A Digital Game-Based Model for Assessing Computational Thinking Skills},
  url = {https://doi.org/10.1145/3059009.3072999},
  year = {2022}
}

@inproceedings{merged40,
  abstract = {With the development of science and technology, the talents of high-quality composite New Engineering Subjects need strong engineering practice ability, innovation ability, and international competitiveness. The college students have not only basic skills in computer operation but also certain programming skills. Those who understand and practice computational thinking will solve various non-universal computing problems encountered in work and study in the contemporary information society. In order to support the teaching objectives and educational concepts of the new engineering discipline, teaching reforms have been carried out in terms of teaching objectives, teaching content, teaching models, teaching resources, and ideological and political education. We cultivate interdisciplinary and professional integration through advanced thinking methods. It integrates knowledge points into practical engineering applications and cultivates students' computational thinking ability. It also improves the practical application and problem-solving abilities of students. In addition, we integrate ideological and political elements into the teaching process. It is a teaching method that combines moral education and professional courses.},
  address = {New York, NY, USA},
  author = {Lee, Irene and Martin, Fred and Denner, Jill and Coulter, Bob and Allan, Walter and Erickson, Jeri and Malyn-Smith, Joyce and Werner, Linda},
  booktitle = {2023 13th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME60234.2023.00156},
  issn = {2474-3828},
  issue_date = {March 2011},
  journal = {ACM Inroads},
  keywords = {Computational modeling; Education; Ethics; Knowledge engineering; Problem-solving; Technological innovation; Training; abstraction; analysis; automation; blended teaching; computational thinking; computer science education; ideological and political elements; new engineering},
  month = {February},
  number = {1},
  numpages = {6},
  pages = {760-765},
  publisher = {Association for Computing Machinery},
  title = {Training and Practice of Computational Thinking for New Engineering Subjects},
  url = {https://doi.org/10.1145/1929887.1929902},
  volume = {2},
  year = {2023}
}

@inproceedings{merged41,
  abstract = {We present our ideas how to apply modern data science technology and methodology to effectively prepare and statistically analyze large educational datasets which in our case map inquiry skills and computational thinking developed by students in primary and secondary schools at the Slovak national scale, within the project “IT Academy - Education for the 21st Century”. Combining the top two open-source data science tools, Python (within Jupyter notebooks) and R (within R studio software), we illustrate some of results from data preprocessing (cleaning, wrangling) for the diagnostic primary-school test of inquiry skills where Python tools (e.g. Pandas library) became more advantageous. As for the subsequent intensive statistical analysis, R environment was more suitable. We demonstrate summary results of the statistical analysis of the computer thinking diagnostic test for primary and secondary schools, finally cross-checked in SPSS software. Due to the current COVID-19 situation, we are still collecting data from ITA project impacts for which we finally show how we plan to implement further methods for data collecting, analysis and implementation in collaboration with our colleagues - education researchers.},
  address = {New York, NY, USA},
  author = {Mike, Koby and Ragonis, Noa and Rosenberg-Kima, Rinat B. and Hazzan, Orit},
  booktitle = {2020 18th International Conference on Emerging eLearning Technologies and Applications (ICETA)},
  doi = {10.1109/ICETA51985.2020.9379266},
  issn = {0001-0782},
  issue_date = {August 2022},
  journal = {Commun. ACM},
  keywords = {Data science; Education; IBSE; Jupyter; Libraries; Open source software; Pandas; Python; R packages; Statistical analysis; Tools; computational thinking; education data},
  month = {July},
  number = {8},
  numpages = {3},
  pages = {125-129},
  publisher = {Association for Computing Machinery},
  title = {Data science tools in the analysis of developing inquiry skills and computational thinking within the “IT Academy” Project},
  url = {https://doi.org/10.1145/3545109},
  volume = {65},
  year = {2020}
}

@inproceedings{merged42,
  abstract = {Computational Thinking (CT) is a key skill set for students in higher education to thrive and adapt to an increasingly technology-driven future and workplace. While research on CT education has gained remarkable momentum in K-12 over the past decade, it has remained under-explored in higher education, leaving higher education teachers with an insufficient overview, knowledge, and support regarding CT education. The proliferation and adoption of artificial intelligence (AI) by educational institutions have demonstrated promising potential to support instructional activities across many disciplines, including CT education. However, a comprehensive overview outlining the various aspects of integrating AI in CT education in higher education is lacking.To mitigate this gap, we conducted this systematic literature review study. The focus of our study is to identify initiatives applying AI in CT education within higher education and to explore various educational aspects of these initiatives, including the benefits and challenges of AI in CT education, instructional strategies employed, CT components covered, and AI techniques and models utilized.This study provides practical and scientific contributions to the CT education community, including an inventory of AI-based initiatives for CT education useful to educators, an overview of various aspects of integrating AI into CT education-such as its benefits and challenges (e.g., AI's potential to reshape CT education versus its potential to diminish students' creativity)-and insights into new and expanded perspectives on CT in light of AI (e.g., the 'decoding' approach alongside the 'coding' approach to CT).},
  address = {New York, NY, USA},
  author = {Curasma, Ronald Paucar and Paucar Curasma, Herminio},
  booktitle = {2020 IEEE XXVII International Conference on Electronics, Electrical Engineering and Computing (INTERCON)},
  doi = {10.1109/INTERCON50315.2020.9220200},
  isbn = {9798400715693},
  keywords = {Analytical models; Computed tomography; Education; Programming profession; Robots; South America; Systematics; Tools; ai; artificial intelligence; computational thinking; ct; higher education; methodology; regular basic education; systematic literature review},
  location = {Nijmegen, Netherlands},
  month = {Sep.},
  numpages = {1},
  pages = {1-4},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Computational thinking in school education in South America: Systematic review of the literature},
  url = {https://doi.org/10.1145/3724389.3730775},
  year = {2020}
}

@inproceedings{merged43,
  abstract = {Context In many countries, it is now important to integrate learning-oriented views to foster computational thinking (CT) in the classroom. This has inspired ideas for new lesson plans, instructional strategies, teacher guidance, and, most importantly, new approaches to grading these skills. Aim: This article presents the results of a systematic review initially focused on identifying the various ways of assessing CT in school and their relationship to relevant CT skills. Method: We conducted a systematic review of the literature to assess CT in schools. This review applied a semi-automatic search for specific terms within the selected papers. These terms came from the analysis of several established definitions of CT. Results: We present a set of the most representative competencies and concepts developed in various experiences, in which the main topic is the assessment of CT, as well as some that have not been developed and that may be the subject of future works. Conclusions: The evaluation of CT in the school requires multiple approaches; it is a challenge to have a single method or strategy to evaluate everything that CT implies.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Muñoz, Rene Fabián Zúñiga and Alegría, Julio Ariel Hurtado and Robles, Gregorio},
  booktitle = {Proceedings of the 2024 Conference on United Kingdom &amp; Ireland Computing Education Research},
  doi = {10.1109/RITA.2023.3323762},
  isbn = {9798400711770},
  issn = {1932-8540},
  journal = {IEEE Revista Iberoamericana de Tecnologias del Aprendizaje},
  keywords = {Assessment; Computational Thinking; Computational modeling; Computational thinking; Computing; Data mining; Education; Higher Education; Problem-solving; Programming profession; Proposals; Reliability; STEM; Systematics; Training; assessment; education},
  location = {Manchester, United Kingdom},
  month = {Nov},
  number = {4},
  numpages = {1},
  pages = {319-330},
  publisher = {Association for Computing Machinery},
  series = {UKICER '24},
  title = {Computational Thinking Assessment Tools: A Systematic Review of the Literature (Initial Findings).},
  url = {https://doi.org/10.1145/3689535.3689545},
  volume = {18},
  year = {2023}
}

@inproceedings{merged44,
  abstract = {In this work we, study the self-efficacy of the use of the Choreographe software in block programming using the NAO robot in order to develop instructional videos in the classroom within the framework of Computational Thinking. The put forward objectives were three; (1) Evaluate the level of significance of self-efficacy and the applicability of CT concepts. (2) Measure the relationship between the applicability of CT concepts with the ease of use, usefulness, attitude and intention to work in the future with an instructional program. (3) Establish the percentages and means of the items of the variables concepts CT and self-efficacy. Thus, from a quantitative approach, we propose to create a questionnaire to measure self-efficacy and the level of knowledge acquired in block programming. 4 practical workshops of 2 hours each have been carried out with 28 initial training students between the ages of 23 and 27. The results yielded a positive correlation between the variables self-efficacy and computational thinking. Highlighting a positive acceptance of self-efficacy in the use of Choreographe software in the block programming experience and a growing ascendancy of interaction.},
  address = {Evansville, IN, USA},
  author = {Li, Jiang and Shockey, Paulette and Cuddapah, Jennifer and Graybeal, Christy and Torres-Crespo, Marisel and Williams, Anthony},
  booktitle = {2023 XIII International Conference on Virtual Campus (JICV)},
  doi = {10.1109/JICV59748.2023.10565688},
  issn = {1937-4771},
  issue_date = {October 2021},
  journal = {J. Comput. Sci. Coll.},
  keywords = {Conferences; Correlation; Market research; Programming; Self efficacy; Social sciences; Software; Training; block programming; computational thinking; teachers in initial training},
  month = {October},
  number = {3},
  numpages = {7},
  pages = {74–80},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Self-Efficacy to Train Computational Thinking Skills in Pre-Service Teachers*},
  volume = {37},
  year = {2023}
}

@inproceedings{merged45,
  abstract = {In the age of Artificial Intelligence, the status of C++ Education Program in China's general high schools is somewhat embarrassing. On one hand, the programming training courses targeted K-12 students have been a big industry; on the other hand, the four editions of the current National High School Information Technology Curriculum textbooks are all in python. Based on the teaching experience of frontline teachers who have been teaching in general high schools for 18 years and the analysis of China's latest curriculum standards and core literacy requirements in information technology, this paper explores how general high schools can achieve sustainable C++ education program. At the curriculum level, combining the characteristics of C++ and students' developmental needs, two series of courses are formed: the General Studies Series and the Competition Series, the General Studies Series feature "wide range of content" and "real problem-driven"; the Competition Series featuring "deep" and "classic problems of computer science algorithms". At the teaching level, putting "problem understanding", "algorithm design", "algorithm experimentation and analysis" and "algorithm thinking communication" at the core of teaching practice, in stages and according to the types of students, differential teaching strategies are adopted, attaching importance to the problem context design and algorithm design, and emphasizing the process of "computational thinking" of the students. Only based on the all-round development of students' individuality, adjusting the curriculum and teaching, can the C++ Programming Education of ordinary high school be sustainable.},
  address = {New York, NY, USA},
  author = {Tissenbaum, Mike and Sheldon, Josh and Abelson, Hal},
  booktitle = {2020 15th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE49874.2020.9201830},
  issn = {2473-9464},
  issue_date = {March 2019},
  journal = {Commun. ACM},
  keywords = {C++ languages; C++ programming education; Education; Information technology; Programming profession; Standards; computational thinking; sustainability},
  month = {February},
  number = {3},
  numpages = {3},
  pages = {35-38},
  publisher = {Association for Computing Machinery},
  title = {Sustainable C++ Education in General High School: from Teaching Programming Skills to Developing Computational Thinking},
  url = {https://doi.org/10.1145/3265747},
  volume = {62},
  year = {2020}
}

@inproceedings{merged46,
  abstract = {We present our approach and experiences in teaching computational thinking, problem solving, team-work and project management skills to several elementary level children using Lego Mindstorms EV3 robotics education kit. We taught students how to design, construct and program robots using components such as motors, sensors, wheels, axles, beams, connectors and gears. Students also gained knowledge on basic programming constructs such as control flow, loops, branches and conditions using a visual programming environment. We carefully observed how students performed various tasks and solved problems. We present experimental results which demonstrates that our teaching methodology consisting of both the course content and pedagogy was useful in imparting the desired skills and knowledge to elementary level children.},
  address = {New York, NY, USA},
  author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e} and Conde, Miguel \'{A}ngel and Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e}},
  booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3434780.3436703},
  isbn = {9781450388504},
  keywords = {Computational Thinking and Programming; Computational thinking; Education; Elementary Level Children; Games; Lego Mindstorms EV3; Programming profession; Robot sensing systems; Robotics Education Kit; STEAM; STEM; Technology for Education; coding in schools; computational thinking skills and curriculum; computer science in K-12; programming; robots},
  location = {Salamanca, Spain},
  month = {Dec},
  numpages = {4},
  pages = {38-41},
  publisher = {Association for Computing Machinery},
  series = {TEEM'20},
  title = {An Experience Report on Teaching Programming and Computational Thinking to Elementary Level Children Using Lego Robotics Education Kit},
  url = {https://doi.org/10.1145/3434780.3436703},
  year = {2016}
}

@inproceedings{merged47,
  abstract = {This feasibility study investigates the practicality of incorporating Computational Thinking (CT) education into secondary school curricula, aiming to equip students with essential 21st-century skills. The study assesses the readiness of educational institutions, teachers and students to embrace CT as an integral part of their learning journey, identifying potential challenges and barriers to successful implementation. To achieve these objectives, the research examines the existing landscape of CT education, evaluates teacher preparedness, analyses student receptiveness, and explores resource requirements and best practices from around the world. As part of this investigation, an immersive learning approach will be integrated. A five-day training program was implemented, featuring a comprehensive curriculum that covered key CT concepts, problem-solving techniques, presentation skills, and problem-based learning aligned with Sustainable Development Goals. The program included pre-and post-surveys to measure students’ understanding of CT concepts and practical projects to apply their learning. Results showed consistent improvement in students’ self-reported understanding of CT skills and their ability to apply these concepts to real-world problems. The study reveals that integrating CT into secondary education is not only necessary but also highly beneficial. The study emphasizes that a holistic educational reform incorporating leadership, technology and curriculum adjustments is essential for the successful implementation of CT education. The study also highlights the importance of aligning CT education with current educational policies and trends, such as KSSM (Kurikulum Standard Sekolah Menengah -Secondary School Standard Curricular), which advocate for the inclusion of CT as a fundamental practice of science education. In conclusion, this study provides valuable insights and recommendations for educational policymakers, administrators, and educators interested in enhancing CT skills in secondary students.},
  address = {New York, NY, USA},
  author = {Grgurina, Nata\v{s}a and Barendsen, Erik and Zwaneveld, Bert and van de Grift, Wim and Stoker, Idzard},
  booktitle = {Proceedings of the 8th Workshop in Primary and Secondary Computing Education},
  doi = {10.1109/ICTeD62334.2024.10844653},
  isbn = {9781450324557},
  keywords = {Computational Thinking; Computational modeling; Context modeling; Immersive Learning; Immersive learning; Leadership; Market research; Problem-solving; Project-Based Learning; Scalability; Secondary Education; Standards; Sustainable development; Training; computational thinking; computer science education; pedagogical content knowledge; problem-solving},
  location = {Aarhus, Denmark},
  month = {Dec},
  numpages = {2},
  pages = {20-25},
  publisher = {Association for Computing Machinery},
  series = {WiPSE '13},
  title = {Integrating Computational Thinking Skills in Secondary Education: a Feasibility Study},
  url = {https://doi.org/10.1145/2532748.2532768},
  year = {2024}
}

@inproceedings{merged48,
  abstract = {As computational thinking becomes a fundamental skill for the 21st century, K-12 teachers should be exposed to computing principles. This paper describes the implementation and evaluation of a computational thinking module in a required course for elementary and secondary education majors. We summarize the results from open-ended and multiple-choice questionnaires given both before and after the module to assess the students' attitudes toward and understanding of computational thinking. The results suggest that given relevant information about computational thinking, education students' attitudes toward computer science becomes more favorable and they will be more likely to integrate computing principles in their future teaching.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Zhou, Ninger and Mayfield, Chris and Hambrusch, Susanne and Korb, John T.},
  booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1109/BigData.2018.8622511},
  isbn = {9781450305006},
  keywords = {Appraisal; Computational modeling; Cultural differences; Education; K-12 education; Libraries; MLIS curriculum; Mathematics; Metadata; archival science; computational thinking; non-majors},
  location = {Dallas, TX, USA},
  month = {Dec},
  numpages = {6},
  pages = {2761-2765},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '11},
  title = {Introducing Computational Thinking into Archival Science Education},
  url = {https://doi.org/10.1145/1953163.1953297},
  year = {2018}
}

@article{merged49,
  abstract = {Computational thinking (CT) stands as a universal problem-solving approach applicable across diverse disciplines, transcending the domain of computer science. It embodies the mental process of structuring a problem to enable a computational solution feasible for both humans and machines. This methodology involves dissecting problems into smaller parts that are easier to understand and solve. This study delineates a meticulously designed series of CT activities within an introductory computer science course and explores their profound impact on student engagement and problem-solving proficiency. Our findings underscore the pivotal role of hands-on CT practice in augmenting students' ability to decompose problems, recognize patterns, and abstract complexities, and employ algorithms effectively. Notably, this infusion of CT not only cultivates theoretical understanding but also bridges the gap between conceptual knowledge and real-world application through the use of computational tools like Python programming. As CT continues to emerge as a cornerstone skill in diverse domains, this research presents compelling evidence advocating for its integration into introductory courses, laying a robust foundation for students to navigate the evolving technological landscape with enhanced problem-solving capabilities.},
  address = {Evansville, IN, USA},
  author = {Benkarroum, Younes and Azhar, Mohammad Q.},
  booktitle = {Computational Thinking},
  isbn = {9780262353410},
  issn = {1937-4771},
  issue_date = {April 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {8},
  numpages = {15},
  pages = {149-174},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Infusing Computational Thinking into a Computer Science Gateway Course},
  url = {https://ieeexplore.ieee.org/document/8709378},
  volume = {39},
  year = {2019}
}

@inproceedings{merged50,
  abstract = {Across the world there has been a paradigm shift in school education, as many countries are incorporating Computer Science (CS), programming, and Computational Thinking (CT), into their K-12 curriculums for the first time. In 2018 these subjects will be introduced to the New Zealand (NZ) Digital Technologies curriculum under the subject of "Computational Thinking". Like the majority of countries who have introduced these topics, NZ faces challenges in preparing teachers, and in successfully implementing a curriculum which achieves its educational goals. To support this curriculum, we have been conducting studies in primary schools across NZ, trialing resources with teachers and students. Building on a 2014 exploratory study on CS and programming in intermediate school, this project investigates the existing assumptions around CT education in K-12. It aims to address the specific questions: How do we teach CT concepts and approaches to primary aged students? If they learn CT, does it have the expected positive impacts on students learning? And, what other positive and negative impacts does this have?Throughout 2015 and 2016 a study was conducted with 18 primary school teachers from across NZ, who used CS Unplugged and educational programming languages in their classrooms. Teachers submitted feedback on these classes through an online form, and participated in semi-structured interviews. The feedback responses and interview transcripts were analysed using a thematic approach, which revealed many positive impacts on students general learning, minimal negative impacts, and observations of CT development.},
  address = {New York, NY, USA},
  author = {Snalune, Phillip},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162325},
  isbn = {9781450351034},
  issn = {1746-5710},
  journal = {ITNOW},
  keywords = {computational thinking; primary school; problem solving; programming education},
  location = {Baltimore, Maryland, USA},
  month = {Dec},
  number = {4},
  numpages = {1},
  pages = {58-59},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Reported Development of Computational Thinking, Through Computer Science and Programming, and its Benefits for Primary School Students: (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162325},
  volume = {57},
  year = {2015}
}

@inproceedings{merged51,
  abstract = {Training computer scientists to address wicked problems means to focus respectively on the individual capability to think in a computational-oriented way (i.e., Computational Thinking), and on the social dimension of coding (i.e., Agile Values). In this study we propose the conceptual model of Cooperative Thinking, a new education construct of team-based computational problem solving. Cooperative Thinking is not only the sum of Computational Thinking and Agile Values, rather it is a new overarching competence suitable to deal with complex software engineering problems. We suggest to tackle the Cooperative Thinking construct as an education goal, to train new generations of software developers to Pareto-optimize both their individual and teaming performances.},
  address = {New York, NY, USA},
  author = {Russo, Daniel and Missiroli, Marcello and Ciancarini, Paolo},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
  doi = {10.1145/3183440.3195062},
  isbn = {9781450356633},
  issn = {2574-1934},
  keywords = {Agile values; Computational Thinking; Computational modeling; Computer science; Cooperative Thinking; Education; Problem-solving; Software; Software engineering; Task analysis; agile values; computational thinking; cooperative thinking},
  location = {Gothenburg, Sweden},
  month = {May},
  numpages = {2},
  pages = {157-158},
  publisher = {Association for Computing Machinery},
  series = {ICSE '18},
  title = {Poster: A Conceptual Model for Cooperative Thinking},
  url = {https://doi.org/10.1145/3183440.3195062},
  year = {2018}
}

@inproceedings{merged52,
  abstract = {Studies with augmented reality show that while the technology helps the student learn, it may end up disturbing other points, showing that more research is needed with the use of augmented reality. Also, a topic that is growing within education is Computational Thinking, which says that the thinking like computer scientists is necessary for the 21st century and should be disseminated mainly in schools during basic education. In the face of this, this work created an augmented reality android application that tracks physical tiles and creates 3D maps for the user, also giving a character that can be programmed to walk on this created map, simulating a programming toy. Finally, tests carried out with the application have shown that augmented reality currently has performance problems when multiple targets are used, so, devices with low processing have problems at map tracking. These issues affected the tests with the children, which made it difficult for them to track the map like they wanted, but they still liked the app even after it. That shows that the acceptance of the technology by the children is good, which can help developing Computational Thinking, but the technology limitation is still a problem. These obstacles while currently hindering the use of augmented reality in education may in the future be irrelevant due to the constant advancement of technology. This paper's main contribution is showing one possibility of using AR with Computational Thinking and what needs to evolve for it to be used by the usable by the children.},
  address = {New York, NY, USA},
  author = {Gerini, Lorenzo and Delzanno, Giorgio and Guerrini, Giovanna and Solari, Fabio and Chessa, Manuela},
  booktitle = {Proceedings of the 2nd International Workshop on Gamification in Software Development, Verification, and Validation},
  doi = {10.1145/3617553.3617886},
  isbn = {9798400703737},
  keywords = {Androids; Augmented Reality; Augmented reality; Computational Thinking; Education; Programming profession; Rendering (computer graphics); Target tracking; Technology in Education; coding; computational thinking; extended reality; gamification; passive haptics; virtual reality},
  location = {San Francisco, CA, USA},
  month = {Oct},
  numpages = {9},
  pages = {102-106},
  publisher = {Association for Computing Machinery},
  series = {Gamify 2023},
  title = {Use of Augmented Reality for Computational Thinking Stimulation through Virtual},
  url = {https://doi.org/10.1145/3617553.3617886},
  year = {2019}
}

@inproceedings{merged53,
  abstract = {Computational thinking skills have been shown to have a unique cross-curricular relevance. Developing these skills in children using constructionist design to deliver personally meaningful computational experiences could lead to improved dispositions and attitudes towards other forms of STEM learning. The Secret Communication Panel is a constructionist toy in the form of a secret communications device that allows children to create their own highly personalized forms of communication in a computational environment.},
  address = {New York, NY, USA},
  author = {Havlásková, Tatiana and Homanová, Zuzana and Tran, Daniel},
  booktitle = {2019 17th International Conference on Emerging eLearning Technologies and Applications (ICETA)},
  doi = {10.1109/ICETA48886.2019.9040113},
  isbn = {9781450391979},
  keywords = {Aging; Education; Games; Graphics; Learning toy; Problem-solving; Task analysis; Visual perception; coding; computational thinking; constructionism},
  location = {Braga, Portugal},
  month = {Nov},
  numpages = {4},
  pages = {210-215},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {The Secret Communication Panel: A Constructionist Communications Device for Developing Computational Thinking Skills in School-Age Children},
  url = {https://doi.org/10.1145/3501712.3535277},
  year = {2019}
}

@inproceedings{merged54,
  abstract = {This paper suggests a Cyberlearning tool based on a highly innovative assessment methodology that helps teachers with computer science education. Currently, there is a strong push to integrate aspects of programming and coding into the classroom environment. However, few if any tools exist that enable real-time formative assessment of in-class programming tasks. The proposed REACT (Real Time Evaluation and Assessment of Computational Thinking) system is a first step toward allowing teachers to see which high-level concepts students have mastered and which ones they are struggling with as students code in real time. REACT supports and facilitates the teaching of 21st century computing skills such as computational thinking [1] in the classroom environment.},
  author = {Koh, Kyu Han and Basawapatna, Ashok and Nickerson, Hilarie and Repenning, Alexander},
  booktitle = {2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
  doi = {10.1109/VLHCC.2014.6883021},
  issn = {1943-6106},
  keywords = {Computational Thinking; Computational Thinking Pattern; Computational Thinking Pattern Analysis; Computer science education; Educational institutions; Games; Online Assessment; Pattern analysis; Programming profession; Real Time Assessment; Real-time systems},
  month = {July},
  pages = {49-52},
  title = {Real Time Assessment of Computational Thinking},
  year = {2014}
}

@inproceedings{merged55,
  abstract = {Promoting computational thinking is one of the top priorities in CS education as well as in other STEM and non-STEM disciplines. Our innovative NSF-funded IC2Think project blends computational thinking with creative thinking so that students leverage their creative thinking skills to “unlock” their understanding of computational thinking. In Fall 2012, we deployed creative exercises designed to engage Epstein's creative competencies (Surrounding, Capturing, Challenging and Broadening) in introductory level CS courses targeting four different groups (CS, engineering, combined CS/physical sciences, and humanities majors). Students combined hands-on problem solving with guided analysis and reflection to connect their creative activities to CS topics such as conditionals and arrays and to real-world CS applications. Evaluation results (approximately 150 students) found that creative thinking exercise completion had a linear “dosage” effect. As students completed more exercises [0/1 – 4], they increased their long-term retention [a computational thinking test], F(3, 98) = 4.76, p =.004, partial Eta2 = .127 and course grades, F(3, 109) = 4.32, p =.006, partial Eta2 = .106. These findings support our belief that the addition of creative thinking exercises to CSCE courses improves the learning of computational knowledge and skills.},
  author = {Miller, L. Dee and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Ramsay, Stephen and Hazley, Melissa Patterson},
  booktitle = {2013 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2013.6685067},
  issn = {2377-634X},
  keywords = {CS1; Ciphers; College; Computational Thinking; Computer Science; Computer science; Creative Thinking; Data collection; Debugging; Educational institutions; Reflection; Writing},
  month = {Oct},
  pages = {1426-1432},
  title = {Improving learning of computational thinking using creative thinking exercises in CS-1 computer science courses},
  year = {2013}
}

@inproceedings{merged56,
  abstract = {Today, Computational Thinking is seen as an important competency and the fourth skill that every child should process. Several significant attempts have been made to increase a student's exposure to Computational Thinking at the K-12 level, however the process is complex and requires systematic planning and comprehensive curriculum. In this paper, we describe the STEPP-UP program that aims to introduce middle schoolers to Computational Thinking via Scratch and Java coding sessions. A comprehensive curriculum and hands-on activities are applied to introduce Computational Thinking for a total of 41 students for a period of five semesters from Fall 2017 until Fall 2019. To assess the learning objectives, we used three methods of evaluation; design-scenarios, paper-assessments, and learner-documentation. Findings indicate that the students have increased knowledge of Computational Thinking and its applications for problem solving.},
  author = {Swaid, Samar and Suid, Taima},
  booktitle = {2019 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI49370.2019.00150},
  keywords = {Coding Literacy; Computational Thinking; Computed tomography; Dogs; Education; Java; K -12; Problem Solving; Programming; Scratch Linear Search; Sprites (computer); Tools},
  month = {Dec},
  pages = {788-792},
  title = {Computational Thinking Education: Who Let the Dog Out?},
  year = {2019}
}

@inproceedings{merged57,
  abstract = {Both Computational thinking and Practical thinking are important concepts of great concern to the international computer community. They are also hot topics needed to be studied in education. Inspired by these two kinds of thinking, we expound how to better carry out teaching practice. The teaching process is task-oriented, teacher-led and student-centered. In the whole teaching process, teachers use the way of integrating computational thinking with practical thinking to prepare courses, design tasks and guide students to complete learning tasks. Compared with the traditional teaching mode, the teaching mode of integrating computational thinking and practical thinking has made great progress in training students' computer practical ability and innovation ability. It can not only improve learning efficiency, but also train students' computer practical ability. Finally, the feasibility and efficiency of this method are verified by Java Web course design.},
  author = {Yu, Fengping and Wang, Hong},
  booktitle = {2019 10th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME.2019.00078},
  issn = {2474-3828},
  keywords = {Computational Thinking; Information technology; Java; Java Web; Practical Thinking; Programming; Software; Task analysis; Training},
  month = {Aug},
  pages = {312-316},
  title = {Computational Thinking & Practical Thinking Inspired Java Web Curriculum Reform Method},
  year = {2019}
}

@inproceedings{merged58,
  abstract = {Computational thinking is the process sequence of solving problems and behaves a method of systematic solving problems. Computational thinking is essentially a view of systematic information processing process. In essence, developing the computational thinking of middle school students is to improve their problem-solving ability and the corresponding practical accomplishment. The instructional activity design based on six links of problem solving can well meet the need of cultivating students’ computational thinking. The instructional mode of systematic problem solving in middle school can improve students’ learning effects and satisfaction, and promote students’ computational thinking ability significantly. The method of systematic information processing process can be trained.},
  author = {Zhao, Miaomiao and Hu, Weixing},
  booktitle = {2022 3rd International Conference on Education, Knowledge and Information Management (ICEKIM)},
  doi = {10.1109/ICEKIM55072.2022.00225},
  keywords = {Analytical models; Computation; Computational modeling; Computational thinking; Information management; Information processing; Middle school information technology class; Problem-solving; Systematics; Training; component},
  month = {Jan},
  pages = {1037-1040},
  title = {A practical research on the training of middle school students' computational thinking based on problem solving in systematic information process view},
  year = {2022}
}

@article{merged59,
  abstract = {A significant aspect of computational thinking is as a way of reasoning about the world in terms of data. This mindset channels number-crunching toward an ambition to discover knowledge through logic, models and simulations. Here we show how computational cognitive science can be used to reconstruct and analyse the structure of computational thinking mindsets (forma mentis in Latin) through complex networks. As a case study, we investigate cognitive networks tied to key concepts of computational thinking provided by (i) 159 high school students enrolled in a science curriculum and (ii) 59 researchers in complex systems and simulations. Researchers' reconstructed knowledge highlighted a positive mindset about scientific modelling, semantically framing data and simulations as ways of discovering nature. Students correctly identified different aspects of logic reasoning but perceived ‘computation’ as a distressing, anxiety-eliciting task, framed with math jargon and lacking links to real-world discovery. Students' mindsets around ‘data’, ‘model’ and ‘simulations’ critically revealed no awareness of numerical modelling as a way for understanding the world. Our findings provide evidence of a crippled computational thinking mindset in students, who acquire mathematical skills that are not channelled toward real-world discovery through coding. This unlinked knowledge ends up being perceived as distressing number-crunching expertise with no relevant outcome. The virtuous mindset of researchers reported here indicates that computational thinking can be restored by training students specifically in coding, modelling and simulations in relation to discovering nature. Our approach opens innovative ways for quantifying computational thinking and enhancing its development through mindset reconstruction.},
  author = {Stella, M and Kapuza, A and Cramer, C and Uzzo, S and Latora, Vito},
  doi = {10.1093/comnet/cnab020},
  issn = {2051-1329},
  journal = {Journal of Complex Networks},
  keywords = {cognitive network science; computational thinking; education; mindset reconstruction},
  month = {Nov},
  number = {6},
  pages = {1-13},
  title = {Mapping computational thinking mindsets between educational levels with cognitive network science},
  volume = {9},
  year = {2021}
}

@inproceedings{merged60,
  abstract = {This thesis study is an evaluation tool that measures the user's Computational Thinking (CT) according to its performance on Block-Based Programming Languages (BBPL) by using Machine Learning Techniques. The evaluation tool makes an evaluation for Machine Learning Model and each of the Computational Thinking seven fields. Via this developed tool, the objective is to product an alternative to the limited evaluation tools on Block-Based Programming Languages. Literature research was brought out in two sides as Machine Learning and Block-Based Programming Languages. In the first stage, on Machine Learning, the data set and the methods used in educational field were researched. In the second stage, the devices which are used to measure the performance on Block- Based Programming Languages were analyzed. On literature, there are various sources for teaching Computational Thinking ,but it occurs that measuring instruments that evaluates Computational Thinking are inadequate. To evaluate Computational Thinking a machine learning model was trained. Trained model was turned into online evaluation tool by which both the tutors and the students evaluate Computational Thinking easily. In the final stage, the developed online evaluation tool and the outcome was analyzed.},
  author = {Karakaş, Elif and Turhan Yöndem, Meltem},
  booktitle = {2020 Turkish National Software Engineering Symposium (UYMS)},
  doi = {10.1109/UYMS50627.2020.9247066},
  keywords = {Block-Based Programming Languages; Computational Thinking; Computational modeling; Computer languages; Machine Learning; Machine learning; Performance evaluation; Programming profession; Software engineering; Tools},
  month = {Oct},
  pages = {1-5},
  title = {Performance-based evaluation of computational thinking skills using machine learning},
  year = {2020}
}

@inproceedings{merged61,
  abstract = {Software talents should have the engineering ability, a common sense in IT industry, which is characterized by the fact that design plays a very important role in software engineering. Basis on the enhancement of computational thinking, the reform ideas of the development of the student's engineering ability are introduced. The detailed approaches include: 1) Extraction of fundamental discipline concept of engineering ability development; 2) Problem solving-centered organization of courses of software development tools; 3) Initiate the courses of software engineering as soon as possible; 4) Continual training of abstract logical thinking for the purpose of software abstract thinking.},
  author = {Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng and Wen, Peizhi},
  booktitle = {2009 4th International Conference on Computer Science & Education},
  doi = {10.1109/ICCSE.2009.5228288},
  keywords = {Application software; Computational thinking; Computer industry; Computer science; Computer science education; Design engineering; Educational technology; Engineering management; Programming; Software engineering; Software systems; abstract; design; software engineering},
  month = {July},
  pages = {1665-1668},
  title = {Exploration of ability development of engineering and computational thinking skills in software engineering majors},
  year = {2009}
}

@inproceedings{merged62,
  abstract = {The integration of artificial intelligence (AI) tools such as ChatGPT into educational contexts is reshaping the landscape of student learning and critical thinking. This study investigates the influence of ChatGPT on the critical thinking abilities of university students by enhancing computational strategies for analysis. We developed an advanced computational framework that leverages natural language processing (NLP) and machine learning (ML) techniques to evaluate the interaction between students and ChatGPT. Our approach involves the collection and analysis of large-scale interaction data to identify patterns and impacts on critical thinking development. We employed sentiment analysis, topic modeling, and argumentation mining to decode the nature of student responses and their evolution over time. The results reveal significant improvements in critical thinking skills among students who actively engage with ChatGPT, suggesting that the AI can act as a catalyst for developing higher-order thinking skills. This study contributes to the growing body of research on AI in education by providing insights into the mechanisms through which AI tools can enhance critical thinking, and proposes practical implications for integrating such tools into academic curricula. The findings support the notion that computational analysis can provide a nuanced understanding of AI’s educational impacts, paving the way for more effective AI-assisted learning environments.},
  author = {Gunawan and Palupi, Shinta and Hardi, Richki and Pribadi, Agung Sakti and Zulkarnain, Riski and Setiawan, M. Nurfalah and Sari, Nariza Wanti Wulan and Sulistiyanto and Utomo, Denny Trias},
  booktitle = {2024 4th International Conference of Science and Information Technology in Smart Administration (ICSINTESA)},
  doi = {10.1109/ICSINTESA62455.2024.10748139},
  keywords = {Analytical models; Artificial intelligence; ChatGPT; Chatbots; Computational modeling; Data mining; Education; Information technology; Learning (artificial intelligence); Machine learning; Sentiment analysis; Technological innovation; computational strategies; critical thinking; education; machine learning; natural language processing},
  month = {July},
  pages = {27-32},
  title = {Enhancing Computational Strategies to Decode ChatGPT’s Influence on the Critical Thinking Abilities of University Students},
  year = {2024}
}

@inproceedings{merged63,
  abstract = {Computational thinking (CT) has been described as a set of valuable skills for tackling complex problems. To foster CT among K-12 students, different initiatives have been introduced by governmental and non-governmental entities, and numerous studies have been carried out by researchers to define and integrate CT into school curriculum. However, previous studies has shown little agreement among researchers, governmental and non-governmental sectors about a unified CT definition. These dissensions have introduced challenges in formulating a definition for CT at the K-12 level. The absence of a unified definition may increase the challenges for teachers to teach and integrate CT into school curriculum. To foster CT among K-12 students, we introduce a definition and framework for CT. We evaluated 39 articles and extracted the most common elements used in the literature to frame CT definition and describe its elements. Several studies have discussed, as well as investigated, the significance of conceptualizing and comprehending the interaction and dependency relationships among computational objects. However, our literature review discovered that little attention has been dedicated to the concept of dependency in the CT body of knowledge. Based on the literature review, we define CT as the thought process used for solving problems, and it encompasses the elements of problem decomposition, abstraction, and algorithmic thinking. We conjecture the CT definition is missing the element of dependency. In the context of CT, we define dependency as the knowledge of comprehending the interrelationships between different sections of a decomposed problem.},
  author = {Ismail, Redar and Steinbach, Theresa A. and Miller, Craig S.},
  booktitle = {2022 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON52537.2022.9766703},
  issn = {2165-9567},
  keywords = {Abstraction; Algorithmic Thinking; Bibliographies; Computational Thinking (CT); Computational modeling; Computer science; Conferences; Decomposition; Dependency; Engineering education; K-12 Education},
  month = {March},
  pages = {801-810},
  title = {A Guide Towards a Definition of Computational Thinking in K-12},
  year = {2022}
}

@article{merged64,
  abstract = {The paper discusses tools for teaching logic used in Logic & Proofs, a web-based introduction to modern logic that has been taken by more than 1,300 students since the fall of 2003. The tools include a wide array of interactive learning environments or cognitive mini-tutors; most important among them is the Carnegie Proof Lab. The Proof Lab is a sophisticated interface for constructing natural deduction proofs and is central, as strategically guided discovery of proofs is the distinctive focus of the course. My discussion makes explicit the broader intellectual context, but also the pursuit of pedagogical goals and their experimental examination. The intellectual context includes i) the theoretical background for the proof search algorithm AProS and its use for a dynamic Proof Tutor, and ii) the programmatic expansion of the course to Computational Logic. (I recommend that the reader enter the virtual classroom of Logic & Proofs: the interactive components just cannot be properly reflected in a narrative. It is also very easy to download AProS and observe its ways of searching for proofs.) 1},
  author = {Sieg, Wilfried},
  doi = {10.1093/jigpal/jzm026},
  issn = {1368-9894},
  journal = {Logic Journal of the IGPL},
  keywords = {Carnegie Proof Lab; Open Learning Initiative (OLI); automated proof search; dynamic proof tutor; intercalation calculus; introduction to logic; natural deduction proof; strategic thinking},
  month = {Aug},
  number = {4},
  pages = {359-368},
  title = {The AProS Project: Strategic Thinking & Computational Logic},
  volume = {15},
  year = {2007}
}

@inproceedings{merged65,
  abstract = {Engineering education (CDIO) plays a crucial role in developing students' comprehensive abilities, solving real-world problems, and addressing future technological challenges. As information technology advances rapidly, effectively integrating advanced teaching models to enhance students' engineering literacy and computational thinking has become a key focus in educational reform. This study examines the effects of the DMCT-CDIO dual-mainline computational thinking-integrated engineering education model on students' computational thinking, motivation, engagement, and cognitive load. Conducted in a data mining course at a teacher training university in China, the study involved 76 second-year undergraduates. The experimental group (n=38) followed the DMCT-CDIO model, while the control group (n=38) implemented the traditional CDIO model. ANOVA results indicated that the experimental group demonstrated significant improvements in intrinsic motivation, behavioral engagement, emotional engagement, and computational thinking (including algorithmic thinking, critical thinking, and problem-solving ability), outperforming the control group. Additionally, the experimental group exhibited significantly lower cognitive load. These findings offer valuable insights for educators and researchers, suggesting future research directions, such as further integrating the DMCT-CDIO model with engineering learning, exploring the relationship between psychological variables and academic performance, and analyzing the cognitive development of computational thinking and engineering practice behaviors among diverse student groups. These efforts aim to optimize instructional design based on empirical data.},
  author = {Lei, Yu and Yi, Baolin and Liu, Jianfang and Fu, Xin},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092056},
  keywords = {Cognitive load; Computational modeling; Computational thinking; DMCT-CDIO; Data mining; Engineering education; Information technology; Learning engagement; Learning motivation; Load modeling; Problem-solving; Psychology; Training; Virtual environments},
  month = {April},
  pages = {57-65},
  title = {Impact of DMCT-CDIO Dual Mainline Computational Thinking Integrated Engineering Education on Students' Computational Thinking, Motivation and Engagement},
  year = {2025}
}

@inproceedings{merged66,
  abstract = {Recent college students have been observed to be motivated and engaged in acquiring information and communication technology (ICT) knowledge and skills with robots and digital media. The purpose of this study is to develop students’ technology comprehension through a learning activity by constructing robot-based storytelling systems. A sample of 15 college students participated in the program. Data collected include the pre-and post-computational thinking tests (CTt) and computational thinking skill (CTs) tests for evaluating their learning effects of technology comprehension (TC) in terms of computational thinking knowledge and skills and their perceptions toward the robot-based storytelling development environment and learning activities. The results show that the learning activities were an effective approach for enhancing the students’ TC as shown in the post-test. The differences between the students’ CT and perceptions were also confirmed. The results revealed that the learning activities with the robot-based storytelling development environment could improve the students’ TC knowledge and skills, and learning perceptions.},
  author = {Hu, Chih-Chien and Chen, Ming-Hsien and Yuadi, Imam and Chen, Nian-Shing},
  booktitle = {2022 24th International Conference on Advanced Communication Technology (ICACT)},
  doi = {10.23919/ICACT53585.2022.9728803},
  issn = {1738-9445},
  keywords = {Computational thinking; Creativity; Education; Information and communication technology; Media; Robot-based storytelling; Robots; Technology comprehension},
  month = {Feb},
  pages = {496-500},
  title = {The effects of constructing robot-based storytelling system on college students' computational thinking skill and technology comprehension},
  year = {2022}
}

@inproceedings{merged67,
  abstract = {As the process of artificial intelligence progresses, it is recognized that computational thinking is one of the basic skills for understanding and solving problems and one of the core literacies of the IT discipline. There are various ways to develop students’ computational thinking, and at the primary and secondary school levels, graphical programming classes are an important way to do so. This study establishes a framework for an instructional program aimed at developing students’ computational thinking skills based on elementary school graphic programming classes. Combining curriculum standards, graphic programming standards for youth programming skills, and International Computational Thinking Challenge standards, relevant teaching cases are designed to foster students’ computational thinking and promote the development of computational concepts, computational practices, and computational concepts.},
  author = {Xue, Tianyu and He, Shiyan and Guo, Weitong},
  booktitle = {2024 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET61814.2024.00081},
  issn = {2766-2144},
  keywords = {Artificial intelligence; Computational Thinking; Educational technology; Graphical Programming; Graphics; Programming profession; Standards; Teaching},
  month = {July},
  pages = {376-380},
  title = {Design and implementation of a graphical programming class for computational thinking in elementary schools},
  year = {2024}
}

@inproceedings{merged68,
  abstract = {In regular basic education environments, one of the challenges of Computer and Computing courses or similar is to motivate students, who perceive programming as a difficult task. Arduino board is recognized as a tool to improve programming skills and to facilitate teamwork. In this paper, Computational Thinking is evaluated through concepts, practices and computational perspectives of the activities carried out with the Arduino board by the 5th-grade students of secondary education of the “José Obrero” Parochial Technical Educational Institution in the district of San Mateo from the province of Huarochirí of Lima region.},
  author = {Curasma, Ronald Paucar and Jara, Nolan Jara and Curasma, Herminio Paucar and Ornetta, Victor Cruz},
  booktitle = {2019 IEEE XXVI International Conference on Electronics, Electrical Engineering and Computing (INTERCON)},
  doi = {10.1109/INTERCON.2019.8853613},
  keywords = {Arduino; Computational modeling; Computational thinking; Education; Encoding; Programming profession; Tools; coding; computational dimensions; programming; regular basic education},
  month = {Aug},
  pages = {1-4},
  title = {Assessment of Computational Thinking in regular basic education: case I.E.T.P. “José Obrero”},
  year = {2019}
}

@inproceedings{merged69,
  abstract = {The online independent learning is one of the topics, which is currently focused by educational technology. Computational thinking is another important concept that international computer field widely concerned on. With the feature of online learning model, this paper builds Online Independent Learning Model Based on Computational Thinking (OILMCT). Comparing with the traditional teaching model, the OILMCT makes a great improvement in developing learners' self-building knowledge and the capability of innovative thinking. Not only improve the learning efficiency, but also make learners' computational thinking capability getting progress.},
  author = {Zhou, Xiongjun},
  booktitle = {2011 International Conference on E-Business and E-Government (ICEE)},
  doi = {10.1109/ICEBEG.2011.5881653},
  keywords = {Computational efficiency; Computational modeling; Computer science; Computers; Education; Learning systems; Mathematical model; computational thinking; independent learning; online environment},
  month = {May},
  pages = {1-5},
  title = {The research on online independent learning model based on computational thinking},
  year = {2011}
}

@inproceedings{merged70,
  abstract = {Recent developments in pedagogy have focused upon computational thinking. Computational thinking provides a way to solve the problem and it is a key practice of science education. The importance of computational thinking is rarely found in K-12 education. Computational thinking is a an important skill everyone needs and it is correlated with many other concepts. These factors have made the development of new tools and syllabus. In this paper, we aim to show the experiments of fractal geometry using MIT Scratch. These computational exercises facilitate to learn many of computational thinking skills that are very important for the people in the near future. Based on our experience with students, we claim that the concept of fractal and its implementation in MIT Scratch is the best practices to improve computational thinking in K-12 school level students.},
  author = {Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle = {2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  doi = {10.1109/ICCCNT.2018.8494172},
  keywords = {21st century learning skills; Computational thinking; Education; Fractals; Games; K-12 education; Programming profession; Scratch; Visualization; block based programming; fractal geometry},
  month = {July},
  pages = {1-6},
  title = {Fractal Geometry: Enhancing Computational Thinking with MIT Scratch},
  year = {2018}
}

@inproceedings{merged71,
  abstract = {Computational thinking has been globally recognized as a necessary skill in the "Artificial Intelligence Era". With the popularization of programming and computational thinking education, how to effectively assess students' computational thinking skills in the context of AI has attracted the attention of researchers. Therefore, this study used a collaborative approach between teachers and AIGC to develop test questions to assess Chinese elementary and middle school students' computational thinking by combining artificial intelligence, machine learning algorithms, and computational thinking skills. The analysis of 125 students in China showed that the computational thinking test developed in this study has good validity and reliability. It was also found that the higher the student's grade level, the higher their computational thinking skills. The study's findings can provide practical references for frontline primary and secondary school IT teachers to conduct computational thinking education.},
  author = {Gong, Chao and Zhao, Jun and Gan, Shujuan and Xia, Xiaojun},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092264},
  keywords = {Collaboration; Education; Generative AI; Machine learning algorithms; Programming profession; Reliability; computational thinking; generative artificial intelligence; human-computer collaboration; test development},
  month = {April},
  pages = {866-870},
  title = {Development and Validation Study of Computational Thinking Test for Elementary and Middle School Students in Artificial Intelligence Contexts},
  year = {2025}
}

@inproceedings{merged72,
  abstract = {The present study focuses on comparing the achievement levels of computational thinking skills in first-year engineering students at two Peruvian universities, one located in an area with a high human development index (Lima) and the other in a more vulnerable area (Amazonas). The study is based on a computational thinking competence assessment model carried out with 112 students who were given challenges and problems. The results show that: (a) the achievement levels of computational thinking competences differ significantly between the Lima group and the Amazonas group, (b) the highest levels of competence achievement are associated with students who had some level of previous instruction in secondary education, and (c) the differences in the achievement of computational thinking skills according to student gender are not significant.},
  author = {Nunez, Nicolas A. and Cornejo-Meza, Giuliana and Sánchez, Sandro A.},
  booktitle = {2020 IEEE ANDESCON},
  doi = {10.1109/ANDESCON50619.2020.9272097},
  keywords = {Analysis of variance; Conferences; Education; Engineering students; Latin America; Peru; Programming profession; Standards; Training; computational thinking; education in engineering; vulnerable environments},
  month = {Oct},
  pages = {1-5},
  title = {Comparing computational thinking skills of engineering students in urban and rural areas of Peru},
  year = {2020}
}

@inproceedings{merged73,
  abstract = {Under the background of modern computer science education, the development of students' computational thinking ability and programming problem solving skills is the most important work. This paper researches on group-based learning teaching mode to computational thinking ability development based on Blackboard system, which explores a suitable learning way in terms of learner cognitive engagement and constructivist perspective using Blackboard system, and emphasizes the student's subject position in learning and the teacher's dominant position in teaching. It can also enhance the interaction between the teacher and the student, a positive teacher-student relationship facilitates affective learning, thus developing the educational process and making it more comfortable. This paper discusses the development of computational thinking ability and Blackboard system, and the current situation of the computer teaching. Then put forward the key elements of course content selection in computer science education, and designed a group-based learning teaching mode to computational thinking ability development based on Blackboard system.},
  author = {Wang, Yintong and Li, Shuo},
  booktitle = {2021 International Conference on Education, Information Management and Service Science (EIMSS)},
  doi = {10.1109/EIMSS53851.2021.00021},
  keywords = {Collaboration; Computational modeling; Computer science education; Education; Information management; Problem-solving; Programming profession; computational thinking; computer science education; group-based learning teaching mode},
  month = {July},
  pages = {58-61},
  title = {Research on group-based learning teaching mode to computational thinking ability development based on Blackboard system},
  year = {2021}
}

@inproceedings{merged74,
  abstract = {During training at the Complementary Formation Program (CFP), Colombian primary school teachers do not acquire Computational Thinking (CT) skills, which are considered fundamental for the knowledge economies of the 21st century. In this paper, we describe the early stages of a project aiming to reform the CFP curriculum, such that CT skills becomes an integral part. As a first step, we carried-out four introductory workshops with 64 first-and third-semester CFP students and then surveyed them to gather their perceptions on CT. The results show that the students have a limited understanding of CT and its associated skills, but they recognize their importance. Moreover, they agree that primary school should be the starting point to develop them. The project will continue gathering information from current CFP teachers, current primary school teachers, and university professors who are experts in curriculum development, to develop the curricular proposal.},
  author = {Muñoz del Castillo, Armando and Muñoz, Mario A. and Acosta Huertas, Lydia Cruz and Herrera, Edgar and Jimenez Toledo, Javier and Ramos, Deixy Ximena},
  booktitle = {2019 XIV Latin American Conference on Learning Technologies (LACLO)},
  doi = {10.1109/LACLO49268.2019.00012},
  keywords = {Computational Thinking; Curriculum design; Teacher training},
  month = {Oct},
  pages = {8-11},
  title = {Developing a Teacher Training Curriculum Including Computational Thinking Skills: Early Advances on a Study Focused on Colombia},
  year = {2019}
}

@inproceedings{merged75,
  abstract = {Fundamental skills acquired by undergraduate students during their academic, play a crucial role in their career. One such skill is computational thinking (CT), which will help to solve problems algorithmically using computers. Computational thinking will improve their problem solving skills in a non-conventional manner as this leads the student to think in multiple paths to reach the solution. However, it is a challenge in Computing Education to develop student's ability to solve problems in an algorithmic way. The aim of this paper is to introduce a potential and pragmatic approach to develop computational thinking skills in novices.},
  author = {Philip, Mintu and Renumol, V. G. and Gopeekrishnan, R},
  booktitle = {2013 IEEE International Conference in MOOC, Innovation and Technology in Education (MITE)},
  doi = {10.1109/MITE.2013.6756334},
  keywords = {Computational modeling; Computers; Educational institutions; Problem-solving; Programming profession; abstraction; algorithm; computational thinking; computing education; problem solving},
  month = {Dec},
  pages = {199-204},
  title = {A pragmatic approach to develop computational thinking skills in novices in Computing Education},
  year = {2013}
}

@article{merged76,
  abstract = {Visual programming in 3D sounds much more appealing than programming in 2D, but what are its benefits? Here, University of Colorado Boulder educators discuss the differences between 2D and 3D regarding three concepts connecting computer graphics to computer science education: ownership, spatial thinking, and syntonicity.},
  author = {Repenning, Alexander and Webb, David C. and Brand, Catharine and Gluck, Fred and Grover, Ryan and Miller, Susan and Nickerson, Hilarie and Song, Muyang},
  doi = {10.1109/MCG.2014.46},
  issn = {1558-1756},
  journal = {IEEE Computer Graphics and Applications},
  keywords = {3D design; 3D programming; AgentCubes; AgentSheets; Computational modeling; Educational institutions; Games; Programming profession; Solid modeling; Three-dimensional displays; computational thinking; computer graphics; computer programming; computer science education; conversational programming; graphics; spatial thinking; syntonicity},
  month = {May},
  number = {3},
  pages = {68-71},
  title = {Beyond Minecraft: Facilitating Computational Thinking through Modeling and Programming in 3D},
  volume = {34},
  year = {2014}
}

@inproceedings{merged77,
  abstract = {Computer science is expanding into K12 education and numerous educational games and systems have been created to teach programming skills, including many block-based programming environments. Teaching computational thinking has received particular attention, and more research is needed on using educational games to directly teach computational thinking skills. We propose to investigate this using Dragon Architect, an educational block-based programming game we are developing. Specifically, we wish to study ways of directly teaching computational thinking strategies such as divide and conquer in an educational game, as well as ways to evaluate our approaches.},
  author = {Bauer, Aaron and Butler, Eric and Popović, Zoran},
  booktitle = {2015 IEEE Blocks and Beyond Workshop (Blocks and Beyond)},
  doi = {10.1109/BLOCKS.2015.7369019},
  keywords = {CS education; Computer science education; Games; Problem-solving; Programming environments; Programming profession; block-based programming; computational thinking; game-based learning},
  month = {Oct},
  pages = {121-123},
  title = {Approaches for teaching computational thinking strategies in an educational game: A position paper},
  year = {2015}
}

@inproceedings{merged78,
  abstract = {The promotion of computational thinking education has become a worldwide trend. To cultivate the computational thinking ability of children at young age, many computational thinking board games have appeared recently. This article introduces five computational thinking board games, including Robot Turtles, King of Pirates, Doggy Code, ROBOT WARS Coding Board Game, and Code master, and then to analyze its characteristics respectively. Additionally, this article also points out the current limitations and challenges of computational thinking board games. We hope more schools or operators will join the development of computational thinking education in the future.},
  author = {Wu, Sheng-Yi},
  booktitle = {2018 1st International Cognitive Cities Conference (IC3)},
  doi = {10.1109/IC3.2018.00-45},
  keywords = {Education; Encoding; Games; Programming profession; Robots; board game; coding; computational thinking; game-based learning},
  month = {Aug},
  pages = {129-131},
  title = {The Development and Challenges of Computational Thinking Board Games},
  year = {2018}
}

@inproceedings{merged79,
  abstract = {Computational thinking aims to employ Computer Science foundations to solve problems in different knowledge areas. This paper describes projects related to computational thinking and starts a discussion on the challenges for implementing computational thinking in primary and secondary education in Brazil.},
  author = {Carvalho, Tainã and Andrade, Daiane and Silveira, Jayne and Auler, Victor and Cavalheiro, Simone and Aguiar, Marilton and Foss, Luciana and Pernas, Ana and Reiser, Renata},
  booktitle = {2013 2nd Workshop-School on Theoretical Computer Science},
  doi = {10.1109/WEIT.2013.27},
  keywords = {Basic education; Computational thinking; Computer science; Computer-aided learning; Computers; Constructive thinking; Educational institutions; Games; Google; Informatics in education; Proposals},
  month = {Oct},
  pages = {111-115},
  title = {Discussing the Challenges Related to Deployment of Computational Thinking in Brazilian Basic Education},
  year = {2013}
}

@inproceedings{merged80,
  abstract = {Computational thinking is advocated as a skill that everyone should possess, and stem content and background can be conducive to the learning of computational thinking. This study constructed a theoretical model of the impact of stem courses on students’ computational thinking, and measured the mediating effects of problem solving skills and stem attitudes on stem courses and students’ computational thinking. The study included a questionnaire of 1870 secondary school students and a descriptive, correlational and mediating analysis. The results show that stem courses can predict students’ computational thinking through students’ problem solving ability and students’ attitude towards stem. The results of this study have a positive reference value for discussing the factors affecting students’ computational thinking, implementing stem course education, improving students’ problem-solving ability and enhancing students’ attitude towards stem.},
  author = {Zhang, Jiaying and Zhang, Yi and Lin, Yuru},
  booktitle = {2023 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET58841.2023.00023},
  issn = {2766-2144},
  keywords = {Computational modeling; Computational thinking; Educational technology; Extensibility; Mediation; Problem Solving Ability; Problem-solving; stem Attitude; stem course},
  month = {July},
  pages = {74-78},
  title = {The Impact of stem Courses on Students’ Computational Thinking: Mediation based on problem solving ability and stem attitude},
  year = {2023}
}

@inproceedings{merged81,
  abstract = {This research study presents our work focused on studying the development of introductory computational thinking in undergraduate biomedical engineering students. In response to the growing computational intensity of the healthcare industry, biomedical engineering (BME) undergraduate education is starting to emphasize computation and computational thinking. Computational thinking is a way of thinking that uses concepts and methodologies of computing to solve problems in interdisciplinary and multidisciplinary subjects. In broader terms, computational thinking is not only associated with using computational tools but also with the thought process of solving a problem by data representation, problem decomposition, and algorithm design. Despite being so important, there is little research work or information available on the development of computational thinking in BME undergraduate students. Our research focuses on how BME undergraduate students develop computational thinking skills while performing group activities related to problem-solving. In order to conduct this study, we incorporate a teaching methodology that prompts computational thinking in a thermodynamics course being taught at a public mid-western university to approximately 120 sophomore students. We observe classroom activities involving analytical problem solving followed by pseudo code generation for computational coding. In order to investigate computational thinking, we collect classroom observations of small groups of students as they come up with a solution to an analytical problem with each other. We complement the observation notes of the classroom activities with follow up semi structured interviews with individual students from five groups. Thematic analysis of the student interviews is used in order to analyze student responses towards the incorporation of computation intensive teaching methodology. This Work in Progress helps us expand our understanding of computational thinking development and the challenges involved in performing computational thinking activity in BME undergraduate students.},
  author = {Shoaib, Huma and Cardella, Monica and Madamanchi, Aasakiran and Umulis, David},
  booktitle = {2019 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE43999.2019.9028503},
  issn = {2377-634X},
  keywords = {Analytical models; Computational modeling; Interviews; Mathematical model; Problem-solving; Testing; Thermodynamics; computational thinking; thermodynamics},
  month = {Oct},
  pages = {1-4},
  title = {An Investigation of Undergraduates’ Computational Thinking in a Sophomore-Level Biomedical Engineering Course},
  year = {2019}
}

@inproceedings{merged82,
  abstract = {With the development of science and technology, the interdisciplinary knowledge penetration has become an important trend in the development of science and technology. Computational thinking is expanding from the field of computer science to other disciplines. The computational thinking is the focus of the information technology in science and engineering. Python teaching is widely used in programming courses in colleges and universities. The combination of theory and practice can stimulate students' initiative of independent innovation by teaching practice. It can effectively improve the effect and quality of computer thinking training.},
  author = {Wang, Xuemei and Zou, Xuelan and Yin, Weifeng and Li, Qingsheng and Zhang, Li and Hong, Liang},
  booktitle = {2021 IEEE 3rd International Conference on Computer Science and Educational Informatization (CSEI)},
  doi = {10.1109/CSEI51395.2021.9477758},
  keywords = {Education; Electronic learning; Market research; Online services; Systematics; Technological innovation; Training; case teaching; computational thinking; python programming},
  month = {June},
  pages = {311-314},
  title = {Research and Application of Computational Thinking on Python Teaching},
  year = {2021}
}

@inproceedings{merged83,
  abstract = {Observations have shown the need of adequate collaboration among the engineering educators for effective achievement of its goals. Nevertheless, there have been reports of the inadequate relationship among engineering educators. Consequently, it is vital to develop strategies to boost the synergy among the parties. Computational Thinking (CT) could be a dependable approach. This paper presents ways of ensuring synergy among engineering educators through computational thinking. A questionnaire survey that sought information from the respondents on the ways computational thinking: promotes thinking abilities, reduces personal clashes, and improves decision-making process among the engineering educators was administered to 400 respondents. 348 survey answers were returned, found reliable and used in the data analysis. The analysis revealed that computational thinking plays vital roles in the repositioning of engineering education for solving of novel problems, assurance of mutual respect among educators, and intensive research for renown engineering education with relative contribution index above 0.8. The paper recommends the development of a computational thinking based comprehensive engineering educators' synergy framework as a suggestion for future research.},
  author = {Johnson, Charles A. N. and Bin Daud, Moh'd Fadzil and Arsat, Mahyuddin Bin and Bt. Wan Hussin, Wan Nazdah and Egba, Ernest Ituma},
  booktitle = {2017 7th World Engineering Education Forum (WEEF)},
  doi = {10.1109/WEEF.2017.8467140},
  keywords = {Computational modeling; Decision making; Engineering education; Instruments; Solid modeling; Teamwork; computational thinking; engineering discipline; engineering educators; higher education; synergy},
  month = {Nov},
  pages = {636-641},
  title = {Enhancing Synergy Among Engineering Educators through Computational Thinking},
  year = {2017}
}

@inproceedings{merged84,
  abstract = {Computational thinking ability is a very important, and it is a basic necessary skill for future talents. This paper describes the shortcomings of the current education of cultivating students’ computational thinking ability, analyzes the needs of cultivating students’ innovative ways of computational thinking in the information age, and expounds the necessity of innovative education and teaching. In this paper, the project driven teaching mode and the teaching method of computational thinking cultivation are proposed. The Small Private Online Course (SPOC) teaching method is used in the teaching practice, which is a kind of information technology method. Combined with project driven and SPOC teaching methods, the students' computational thinking ability is further cultivated. In the teaching practice, the information technology and project driven learning are made full use, which are two key factors in the information age, so the students’ computational thinking ability has been greatly improved, and the teaching effect is obvious.},
  author = {Xiaohong, Cong and Jie, Liu and Zhibin, Miao and Li, Xu},
  booktitle = {2021 2nd International Conference on Artificial Intelligence and Education (ICAIE)},
  doi = {10.1109/ICAIE53562.2021.00125},
  keywords = {Artificial intelligence; Education; Employment; Information age; Innovation education; Project driven; Teaching practice; Technological innovation; Training; computational thinking; information technology},
  month = {June},
  pages = {564-567},
  title = {Teaching research on the cultivation of computational thinking ability by using information technology},
  year = {2021}
}

@inproceedings{merged85,
  abstract = {The traditional information technology course focuses on the learning of programming tools and ignores the development of students' Computational Thinking. The emergence of visual programming tools provides a new opportunity for the training of Computational Thinking. On the basis of studying the limitations of thinking training in the traditional information technology class and the advantages of visual programming in computational thinking, this paper proposes a computational thinking training model based on visual programming. The model based on project adopt the combination of teaching plan and learning plan to design teaching and cultivate Computational Thinking. Applying this model to the actual teaching process by designing a teaching case based on the visual programming tool App Inventor, the experimental results show that the Computational Thinking of students in this model is improved in formalization and modeling. Through proposing this model and verifying its validity, we can provide the feasibility and research ideas for further studies by using visual programming to cultivate students' Computational Thinking.},
  author = {Xiao, Min and Yu, Xiaohua},
  booktitle = {2017 International Conference of Educational Innovation through Technology (EITT)},
  doi = {10.1109/EITT.2017.26},
  keywords = {Computational modeling; Computer Thinking; Programming profession; Projectbased Learning; Tools; Training; Visual Programming; Visualization},
  month = {Dec},
  pages = {75-80},
  title = {A Model of Cultivating Computational Thinking Based on Visual Programming},
  year = {2017}
}

@inproceedings{merged86,
  abstract = {Computational thinking is taken for the fundamental skills for everyone, not just computer scientist, to learn and use. It remains to be explored in many aspects how to understand the essence of computational thinking and how cultivate the computational thinking ability of students. In the view of course teaching of computer science, this paper discusses the perception of the essence of computational thinking and presents a method for the cultivation of the computational thinking ability by using courses as carrier, and a case study of the course Data Structures and Algorithms.},
  author = {Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng},
  booktitle = {2009 International Conference on Education Technology and Computer},
  doi = {10.1109/ICETC.2009.16},
  issn = {2155-1812},
  keywords = {Computational thinking; Computer science; Computer science education; Computer vision; Concurrent computing; Data structures; Educational technology; Embedded computing; Humans; Pervasive computing; Printing machinery; course teaching; data structure and algorithm; methodology},
  month = {April},
  pages = {197-200},
  title = {Discussion of Ability Cultivation of Computational Thinking in Course Teaching},
  year = {2009}
}

@inproceedings{merged87,
  abstract = {This compilation introduces a series of coding challenges and activities strategically crafted to nurture computational thinking skills across different proficiency levels. These exercises accommodate both individual and collaborative learning preferences targeting essential elements like problem-solving, algorithmic design, pattern recognition abstraction, and logical reasoning. These coding challenges are for everyone, from beginners to advanced learners, and can be used with different programming languages. They help build skills starting from basic problem-solving to more complex tasks like breaking down advanced problems. These challenges specifically draw inspiration from practical domains like data science, artificial intelligence, and software engineering which encourages learners to explore and understand the practical connections between theoretical concepts and real-world applications which gives a thorough grasp of computational thinking in action.},
  author = {Gojaria, Sakshi and Kolambkar, Vedika and Pandey, Aditi and Sajwan, Pratibha},
  booktitle = {2025 International Conference on Next Generation Communication & Information Processing (INCIP)},
  doi = {10.1109/INCIP64058.2025.11019799},
  keywords = {Artificial Intelligence; Artificial intelligence; Coding Challenges; Computational Thinking; Data Science; Data science; Encoding; Focusing; Information processing; Pattern recognition; Problem-solving; Software engineering; Systematics; Teamwork},
  month = {Jan},
  pages = {535-538},
  title = {Create Coding Challenges and Activities that Foster the Development of Computational Thinking},
  year = {2025}
}

@inproceedings{merged88,
  abstract = {Visual programming languages (VPLs), such as Scratch and StarLogo TNG, can make computer science education more accessible to everyone. Current researches in the study of using VPLs for educational purposes primarily focus on understanding motivational benefits and computational thinking gains. All these educational VPLs claim to scaffold students learning computational thinking concepts. Although the evaluations show that students may exhibit more enthusiasm, it is not clear what computational thinking concepts are actually learned by students. In this paper, we attempt to develop a visual programs recognition tool for student-created StarLogo TNG simulations which representing the computational thinking concepts implemented by the students. Through collecting student's created projects over time, this visual programs recognition tool can possibly indicate the patterns of computational thinking in science simulations created by StarLogo TNG.},
  author = {Chang, Chih-Kai},
  booktitle = {2016 5th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI.2016.27},
  keywords = {Computational modeling; Computers; Ice; Programming profession; StarLogo TNG; Syntactics; Visual programming languages; Visualization; computational thinking; computer science education},
  month = {July},
  pages = {397-400},
  title = {Using Computational Thinking Patterns to Scaffold Program Design in Introductory Programming Course},
  year = {2016}
}

@inproceedings{merged89,
  abstract = {Some curriculum of making computer games were developed to engage students in digital game-making activities so as to enhance their computational thinking skills during the last few years. The findings of those studies are quite positive, especially concerning the promotion of computational thinking skills. However, many students seem to face difficulties in the processes of the game development, such as debugging, applying mathematics, or physics subjects. Additionally, students often have solved the problems and understood concepts, mainly math formulas and physics concepts, alone while creating their games. This study presents an innovative curriculum design that suggests two students playing different role to make motion-based touchless games (i.e., games that are based on natural user interaction technologies, like the Microsoft Kinect camera or Leap Motion). Based on the requirements of the innovative curriculum and interaction technologies, students can naturally fulfill the ideal of pair programming and get various benefits from each other.},
  author = {Chang, Chih-Kai and Tsai, Yu-Tzu},
  booktitle = {2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI.2018.00061},
  keywords = {Cameras; Collaboration; Face; Games; Kinect; Programming; Task analysis; Tools; computational thinking; learning by making games; natural user interaction; pair programming},
  month = {July},
  pages = {284-287},
  title = {Pair-Programming Curriculum Development of Motion-Based Game for Enhancing Computational Thinking Skills},
  year = {2018}
}

@inproceedings{merged90,
  abstract = {The latest concept evolving in pedagogy is flipped class room where class room is utilized for active learning by students with their peers and faculty. This necessitates development of new syllabus and pedagogy for each subject for class room activities. This paper attempt to propose spreadsheet based experiments in linear algebra that can be used to learn many abstract concepts that are very important for mastering many engineering disciplines. There is vast amount of evidence showing that the computational experiments support active learning and develop exploratory and inventive skill of students.},
  author = {Se, Shriya and Ashwini B and Chandran, Archana and Soman K.P},
  booktitle = {2015 International Conference on Innovations in Information, Embedded and Communication Systems (ICIIECS)},
  doi = {10.1109/ICIIECS.2015.7193021},
  keywords = {Communication systems; Conferences; Eigenvalues and eigenfunctions; Flipped class room computational thinking; Linear algebra; Matrix decomposition; Singular value decomposition; Spread sheet; Technological innovation},
  month = {March},
  pages = {1-6},
  title = {Computational thinking leads to computational learning: Flipped class room experiments in linear algebra},
  year = {2015}
}

@inproceedings{merged91,
  abstract = {This paper is focused on the teaching/learning process of Computational Thinking at primary and secondary schools. It is generally accepted that Programming is a complex task that requires a long learning process. Theoretical knowledge about fundamentals on algorithms and data structures, as well as, on programming languages are required but are not enough; practicing a lot is also necessary. However, teaching Computer Programming is a hard job, most of the times unsuccessful. To overcome all the difficulties, felt by teachers and students, an increasingly bigger community of researchers in Computer Science is defending the importance of teaching Computational Thinking to young students to train them, since very earlier, in logic and abstract reasoning for problem solving. Our starting point to approach this topic relies on the use of an Ontology (OntoCnE) that describes in detail the concepts “Computational Thinking” and “Programming”, and maps those concepts to different education levels, starting with the first year. We believe that a person just acquires a new way of thinking, or a new way of behaving, if he is trained with the appropriate learning resources. So a main investment to educate people in Computational Thinking is on the choice/creation of those convenient resources. In particular we intended to investigate the impact of Augmented Reality in the usefulness of the referred resources. In that direction we will also discuss the development of a Web Platform to help on collecting and classifying (according to the referred ontology) learning resources to be used by teachers in computing classes. On the other hand, the platform will help on the retrieval, from that repository, of the most adequate resources to teach a specific subject to a specific level.},
  author = {Araújo, Cristiana and Lima, Lázaro V O and Henriques, Pedro Rangel},
  booktitle = {2019 International Symposium on Computers in Education (SIIE)},
  doi = {10.1109/SIIE48397.2019.8970131},
  keywords = {computational thinking; learning resource; ontology; programming; teacher support tools},
  month = {Nov},
  pages = {1-6},
  title = {An Ontology based approach to teach Computational Thinking},
  year = {2019}
}

@inproceedings{merged92,
  abstract = {In this paper, the existing problems and teaching characteristics of VB programming are first analyzed. Then the specific measures to reform the teaching and examination modes are proposed in accordance with the requirements of computational thinking ability training. After that, how to train the students' “computational thinking” in the VB program curriculum is elaborated on, in the hope of enabling the students to analyze and solve problems and to innovate with computers.},
  author = {Zhang, Chunying and Chen, Xiao and Li, JianJing},
  booktitle = {2011 6th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE.2011.6028861},
  keywords = {Computers; Educational institutions; Programming profession; Training; VB programming; Visual BASIC; computational thinking; computational thinking ability},
  month = {Aug},
  pages = {1260-1263},
  title = {Research of VB programming teaching mode based on the core of computational thinking ability training},
  year = {2011}
}

@inproceedings{merged93,
  abstract = {Recent trends in Science, Technology, Engineering, and Mathematics (STEM) education are focused on developing problem-solving skills and computational thinking and empowering students with the STEM discipline's knowledge to solve real-world problems. STEM incorporates an interdisciplinary approach that includes inquiry, analysis, critical thinking, practical experimentation, and cooperative problem-solving. Technological advancements are offering new ways to integrate new tools such as drones, robotics and gaming in teaching and learning practices and modify the pedagogical approaches that are more appealing and engaging. This paper presents an innovative pedagogical approach and practice that integrate drone technology and block-based programming to foster students' computation thinking in a STEM context. The block-based visual programming languages provide an interactive environment to connect the blocks and write programs. The study was conducted in six Australian schools. Students were assigned projects to automate drones using the DroneBlocks app and make programs to fly the drone in different geometrical patterns; straight line, arch, rectangle, triangles and zig-zag and integrate the various manoeuvres; bounce, 8D flips, and throw & go along flight paths. Students' computational thinking development was examined with an emphasis on their performance in formulating and problem-solving. Results have shown that integrated drone and programming pedagogy contributed significantly to students' learning of developing computational thinking for problem-solving and decomposing a problem into smaller parts in a sequence that includes mathematical algorithms to write programs.},
  author = {Sattar, Farha and Nawaz, Muhammad},
  booktitle = {2023 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON54358.2023.10125117},
  issn = {2165-9567},
  keywords = {Block-based Programming; Coding; Computational Thinking; Drone Technology; Encoding; Pattern recognition; Problem-solving; Programming profession; Task analysis; Tello Edu Drones; Visualization; Writing},
  month = {May},
  pages = {1-5},
  title = {Developing Computational Thinking in STEM Education with Drones},
  year = {2023}
}

@inproceedings{merged94,
  abstract = {In today's world of growing complexity and interconnectedness, computational thinking (CT) and systems thinking (ST) are imperative for everyone to solve complex problems, create advanced solutions, and innovate cutting-edge technologies and systems. Traditional teaching approaches for CT and ST offer limited avenues for applying the knowledge and skills learned in class. This paper presents and discusses the design and development of intelligent aquaponics capstone projects to foster CT and ST in undergraduate students. Specifically, students designed and built an automated aquaponics system with internet of things for real-time remote monitoring and control. Aquaculture and hydroponics subsystems, hardware and software components, communication networks, and data acquisition and analysis of fish and plant growth were integrated and tested, with high yield and quality of fish and vegetables. Attributable to the multidisciplinary and multifaceted high-tech aquaponics system, students can broaden and deepen their theoretical understanding and practical experience of CT and ST.},
  author = {Ng, Andrew Keong and Mahkeswaran, R},
  booktitle = {2021 IEEE International Conference on Engineering, Technology & Education (TALE)},
  doi = {10.1109/TALE52509.2021.9678854},
  issn = {2470-6698},
  keywords = {Education; Fish; Real-time systems; Reflection; Software; Systems thinking; Writing; aquaponics; capstone project; computational thinking; systems thinking; urban farming technology},
  month = {Dec},
  pages = {1039-1044},
  title = {Fostering Computational Thinking and Systems Thinking through Aquaponics Capstone Projects},
  year = {2021}
}

@inproceedings{merged95,
  abstract = {To better understand the impact of students' personality on their computational thinking (CT), this paper develops a CT evaluation tool for college students. Correlation analysis is used to explore the relationship between students' computational thinking skills (CTS) and their five personality traits: extraversion, agreeableness, conscientiousness, neuroticism, and openness. 219 college students completed the CT Assessment Test and the Big Five Personality Inventory. The results showed that there were statistically significant correlations between CTS and extraversion, conscientiousness, and openness, among which openness had the greatest impact on CTS, and extraversion and conscientiousness had moderate effects on CTS. These results are consistent with the conclusions of most related literatures, confirming the existence of non-cognitive influencing factors of CT. Based on these findings, this paper recommends that teachers can pay attention to the individual differences of students from the perspective of personality, and provide them with suitable education to comprehensively improve students' CTS.},
  author = {Zhang, Wei and Song, Lingling and Zeng, Xinyao and Li, Panpan},
  booktitle = {2023 5th International Workshop on Artificial Intelligence and Education (WAIE)},
  doi = {10.1109/WAIE60568.2023.00026},
  keywords = {Artificial intelligence; Big Five model; Computational modeling; Conferences; Correlation; Education; computational thinking; computational thinking evaluation; personality traits},
  month = {Sep.},
  pages = {101-105},
  title = {Exploring the Relationship Between Computational Thinking and Personality Traits},
  year = {2023}
}

@inproceedings{merged96,
  abstract = {Gender differences in computational thinking (CT) among students are obvious, with boys ‘CT being significantly higher than girls’. Therefore, how to effectively improve girls' CT has become a serious concern. This study integrated two types of project-based learning (PBL) into a Scratch programming course, one with extensive teacher-supported scaffolding and the other with limited teacher-supported scaffolding. To examine their impact on girls' CT skills and self-efficacy, this study applied mixed research methods, conducted a pretest-posttest control group experiment, and analyzed the quantitative and qualitative data collected from 21 grade-3 girls in a primary school. It was found that the extensive teacher-supported scaffolding of PBL in a Scratch programming course is more effective in promoting the CT skills and self-efficacy than limited teacher-supported scaffolding of PBL. These findings have some implications for the effective PBL practice and related teacher professional development.},
  author = {Jin, Yunbo and Sun, Junmei and Ma, Hongliang and Wang, Xiaohong},
  booktitle = {2021 Tenth International Conference of Educational Innovation through Technology (EITT)},
  doi = {10.1109/EITT53287.2021.00077},
  issn = {2166-0549},
  keywords = {Programming profession; Technological innovation; computational thinking; girls; project-based learning; scaffolding},
  month = {Dec},
  pages = {362-366},
  title = {The impact of different types of scaffolding in project-based learning on girls' computational thinking skills and self-efficacy},
  year = {2021}
}

@inproceedings{merged97,
  abstract = {This study aims to examine the development of Project Based Learning kits using Scratch program to improve students' mathematical computational thinking skills in statistics content. The research method used is Research and Development (R & D) approach which refers to Four-D model: Define, Design, Develop, and Disseminate. In the initial stage, researchers conducted preliminary research through literature studies, school surveys, and draft designs. The study produces Project Based Learning kits using Scratch program consist of student's worksheet, lesson plans, and an instrument of mathematical computational thinking. The design of the model was then revised by the expert trial subject. The subjects of the expert test were mathematics learning experts and several mathematics school teachers. The field Pre-Test and Post-Test were conducted in a Junior High School in Tangerang Selatan on mathematical computational thinking instruments, consisting of four essay test (8 question items). The collected data were analyzed using qualitative and quantitative techniques. In validity aspects, all the three learning kits are valid. From the aspect of effectiveness, the Project Based Learning model intervention can improve students' mathematical computational thinking skills. In terms of practicality, students' responses to the developed worksheets are positive.},
  author = {Hadi, Mega Ekka and Nur Atiqoh, Khamida Siti and Kadir},
  booktitle = {2021 9th International Conference on Cyber and IT Service Management (CITSM)},
  doi = {10.1109/CITSM52892.2021.9588856},
  keywords = {COVID-19; Computational modeling; Instruments; Mathematical models; Pandemics; Research and development; Tools; mathematical computational thinking; project based learning; scratch program},
  month = {Sep.},
  pages = {1-5},
  title = {Improving Students' Mathematical Computational Thinking Using Scratch Program through Project Based Learning: A Development Research during Pandemic Covid-19},
  year = {2021}
}

@inproceedings{merged98,
  abstract = {Learning to program is the new literacy of the 21st century. Computational thinking, closely related to programming, requires thinking and solving problems with different levels of abstraction and is independent of hardware devices. The early childhood education stage provides teachers with the opportunity to lay the foundations for a comprehensive quality education using innovative tools and technologies. Educational robotics in early childhood education becomes a tool that facilitates the acquisition of knowledge to children, playfully, based on the principles of interactivity, social interrelationships, collaborative work, creativity, constructivist and constructionist learning, and a student-centered didactic approach, allowing in turn that student can acquire digital competencies and develop logical and computational thinking in an underlying way. This project explores the current state of teaching and learning computational thinking and programming in early childhood education in an inclusive manner. Moreover, the lack of diversity and inequality is particularly latent in science, Technology, Engineering, and Mathematics (STEM) fields. Therefore, this work considers this problem and presents an inclusive coeducation approach to this new literacy, eliminating gender stereotypes and extending them to people with Down syndrome and hospitalized minors.},
  author = {González-González, Carina S. and Caballero-Gil, Pino and García-Holgado, Alicia and García-Peñalvo, Francisco J. and Molina, Jezabel and del Castillo-Olivares, José M. and San Juan, Bernardo Candela and Cuesta, Sara García and Perdomo, Inmaculada and Caballero-Gil, Cándido and Gutíerrez-Vela, Francisco and Paderewski, Patricia and Holz, Verónica Violant and Iranzo, Rosa Gil and Ramos, Sofía},
  booktitle = {2021 International Symposium on Computers in Education (SIIE)},
  doi = {10.1109/SIIE53363.2021.9583648},
  keywords = {Collaborative work; Computational thinking; Computers; Education; Hardware; Programming profession; Robots; STEM; Tools; childhood education; digital literacy; inclusion; programming},
  month = {Sep.},
  pages = {1-4},
  title = {COEDU-IN Project: an inclusive co-educational project for teaching computational thinking and digital skills at early ages},
  year = {2021}
}

@inproceedings{merged99,
  abstract = {With the development of digital technologies, teaching computational thinking and relative skills in the K-12 curriculum can benefit students in thinking and create in the digital area. This study designed a programming course to help students develop computational thinking and relative skills, and conducted a practice in a primary school. Results indicated that students were benefited from three stages of the teaching process. Students' computational thinking knowledge, programming knowledge and skills, and problem-solving were developed after the learning of a semester. The programming works of the students also revealed that there was a tendency in the development of creativity.},
  author = {Wang, Yichi and Zhang, Yi and Mao, Aiping and Wang, Jue and Li, Niu},
  booktitle = {2020 Ninth International Conference of Educational Innovation through Technology (EITT)},
  doi = {10.1109/EITT50754.2020.00051},
  issn = {2166-0549},
  keywords = {Debugging; K-12 curriculum; Media; Problem-solving; Programming profession; Task analysis; Testing; Visualization; computational thinking; programming course design},
  month = {Dec},
  pages = {250-255},
  title = {The Research of Programming Teaching in Primary School on the Cultivation of Computational Thinking},
  year = {2020}
}

@article{merged100,
  abstract = {The computational thinking view recognizes that underlying computing concepts are integral to our everyday lives and pervasive in many disciplines of study. Computer science, information systems, computer engineering, informatics, software engineering-these are among the smorgasbord of choices available to college students interested in a computing career. The choices for noncomputing-oriented students who want to learn about the field are even more confounding. Indeed, the established term "computer science" is not well-defined or well understood, leading to further confusion for students and their parents as well as the general public. These are some factors I view as contributing to the drop in interest in the study of computer science. The student should learn the fundamental concept of computer sciences. Computing education has been too slow moving from the computing = programming model to a more general and understandable model that captures the essence of the discipline for everyone.},
  author = {Henderson, Peter B.},
  doi = {10.1109/MC.2009.334},
  issn = {1558-0814},
  journal = {Computer},
  keywords = {Computational thinking; Computer science; Computer science education; Education; Educational institutions; Engineering profession; Informatics; Information systems; Mathematical thinking; Pervasive computing; Software; Systems engineering and theory; Ubiquitous computing},
  month = {Oct},
  number = {10},
  pages = {100-102},
  title = {Ubiquitous Computational Thinking},
  volume = {42},
  year = {2009}
}

@inproceedings{merged101,
  abstract = {This study is a systematic review of the effects of computational thinking on students’ academic performance from 2006 to 2023. The main purpose of this study is to explore whether computational thinking can promote students’ academic performance and the characteristics of such research. After literature collection and screening from three databases, a total of $\mathbf{2 3}$ articles were included. According to the coding table, the literature was coded in five aspects, including basic information, sample, research, computational thinking and academic performance. Then, the publication trend, research types, effect results, computational thinking measurement and the characteristics of academic achievement evaluation of the impact of computational thinking and academic achievement are reviewed. It is found that computational thinking has a better effect on students’ academic achievement, and finally some suggestions are put forward.},
  author = {Zhou, Pinghong and Tang, Yumin and Zhang, Yi and Yu, Yue and Li, Yixin},
  booktitle = {2024 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET61814.2024.00038},
  issn = {2766-2144},
  keywords = {Databases; Educational technology; Encoding; Market research; academic achievement; computational thinking; systematic review},
  month = {July},
  pages = {153-157},
  title = {Does computational thinking really have an impact on academic performance? A systematic review},
  year = {2024}
}

@inproceedings{merged102,
  abstract = {This paper introduces the notion of predicting academic performance based on Computational Thinking. The integral role that Computational Thinking modalities play in engineering disciplines can serve as an accurate indicator of the student future academic success. Therefore, this study investigated the students' performance in a Computational Thinking course offered at the freshman level to predict student academic success. To achieve this goal, a two-year study of the correlation between the students' accumulative grade point averages and their grades obtained in this course was conducted. The performance of nine hundred and eighty two students in forty sections was assessed over the two-year period. It was concluded that the students' future academic performance is strongly correlated to their Computational Thinking skills assessed at the freshman level. This clearly suggests the viability of using Computational Thinking skills as a fairly accurate predictor of students' academic success. These results have also implied that the assessment of Computational Thinking can be used as an early intervention tool to improve the students' retention, progression, and graduation rates in STEM related disciplines.},
  author = {Haddad, Rami J. and Kalaani, Youakim},
  booktitle = {2015 IEEE Integrated STEM Education Conference},
  doi = {10.1109/ISECon.2015.7119929},
  keywords = {Academic performance; Computational Thinking; Computational modeling; Computers; Conferences; Correlation; Education; Electrical engineering; Prediction of performance; Programming},
  month = {March},
  pages = {225-229},
  title = {Can computational thinking predict academic performance?},
  year = {2015}
}

@inproceedings{merged103,
  abstract = {Computational thinking is a type of analytical thinking that is developed intentionally, that is, under a “learned” approach, and the best way to learn it is through computer programming. In this paper, the experience of using block-based programming environments such as Scratch, Lightbot and the PSelnt pseudo-code tool for the understanding of computational concepts and development of computational thinking skills is reported. A quasi-experimental methodological design was used, since it did not work with a control group. A mixed exploratory investigation was carried out. 85 first-year students from the Accounting Professional School of the National University of San Agustin de Arequipa participated in the experience. The results show that in introductory programming courses of short time period, teaching with block-based programming environments compared to the use of pseudocode with the PSelnt tool, facilitates the appropriation of computational concepts and the development of computational thinking skills; thus obtaining better learning results. It is concluded that block-based programming environments favor the construction of knowledge and foster the development of creativity and algorithmic thinking.},
  author = {Laura-Ochoa, Leticia and Bedregal-Alpaca, Norka},
  booktitle = {2021 XVI Latin American Conference on Learning Technologies (LACLO)},
  doi = {10.1109/LACLO54177.2021.00070},
  keywords = {Creativity; Design methodology; Education; Programming environments; Programming profession; algorithmic thinking; computational thinking; constructionism; digital literacy; problem solving},
  month = {Oct},
  pages = {112-117},
  title = {Development of Computational Thinking Skills: An Experience With Undergraduate Students},
  year = {2021}
}

@inproceedings{merged104,
  abstract = {The outbreak of COVID-19 has impacted traditional teaching methods in schools, and blended teaching in the post-pandemic has gradually become a hot topic of research in higher education. Computational thinking, as one of the core literacies to be acquired in the 21st century, can help students realize the importance of computers as well as enable them to solve specific problems more effectively when facing real-life situations. The article takes the C language programming course as an example, analyzes the problems faced in teaching in the post-pandemic, introduces the concept of computational thinking and integrates it into all aspects of blended teaching design, pays attention to students' individual differences, and proposes a blended teaching model based on computational thinking and puts it into practice. The results show that this teaching model can improve students' learning performance, exercise students' computational thinking skills, and promote blended teaching reform and students' personalized development.},
  author = {Zhao, Fengzhi and Liu, Sijie},
  booktitle = {2022 12th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME56794.2022.00048},
  issn = {2474-3828},
  keywords = {C languages; COVID-19; Computational modeling; Computers; Education; Problem-solving; Training; blended teaching; computional thinking; personalized learning; teaching reform},
  month = {Nov},
  pages = {184-188},
  title = {Research on blended teaching reform based on computational thinking},
  year = {2022}
}

@inproceedings{merged105,
  abstract = {Computer programming is one of compulsory courses for science and engineering majors in colleges and universities, and C language is one of the most common programming language. In view of teaching problems of traditional programming course, for example, the concepts are abstract and difficult to understand for students, and students are lack of logical thinking of programming, this paper introduced the concept of computational thinking, analyzed how to integrate computational thinking into teaching contents of computer programming course, and flipped classroom teaching method was discussed too. The teaching practice showed that good teaching effects were achieved.},
  author = {Ding, Haiyan},
  booktitle = {2019 IEEE International Conference on Computer Science and Educational Informatization (CSEI)},
  doi = {10.1109/CSEI47661.2019.8938909},
  keywords = {Online services; Problem-solving; Programming profession; Training; computational thinking; computer programming; flipped classroom; pedagogy},
  month = {Aug},
  pages = {72-75},
  title = {Teaching Research on Computer Programming based on Cultivation of Computational Thinking},
  year = {2019}
}

@article{merged106,
  abstract = {Computational thinking (CT) skills are becoming increasingly relevant for future professionals across all domains, beyond computer science (CS). As such, an increasing number of bachelor's and master's programs outside of the CS discipline integrate CT courses within their study program. At the same time, tools such as notebooks and interactive apps designed to support the teaching of programming concepts are becoming ever more popular. However, in non-CS majors, CT might not be perceived as essential, and students might lack the motivation to engage with such tools in order to acquire solid CT skills. This article presents a field study conducted with 115 students during a full semester on a novel computational notebook environment. It evaluates computational notebooks and CT skills in an introductory course on information technology for first-year undergraduates in business and economics. A multidimensional evaluation approach makes use of pre- and post-test surveys, lectures, and self-directed laboratory sessions tracking analytics. Our findings suggest that, in the process of learning CT for non-CS students, engagement in active learning activities can be a stronger determinant of learning outcomes than initial knowledge. Furthermore, gamifying computational notebooks can serve as a strong driver of active learning engagement, even more so than initial motivational factors.},
  author = {De Santo, Alessio and Farah, Juan Carlos and Martínez, Marc Lafuente and Moro, Arielle and Bergram, Kristoffer and Purohit, Aditya Kumar and Felber, Pascal and Gillet, Denis and Holzer, Adrian},
  doi = {10.1109/TLT.2022.3180588},
  issn = {1939-1382},
  journal = {IEEE Transactions on Learning Technologies},
  keywords = {Active learning; Codes; Education; Encoding; Games; Hybrid learning; Programming profession; Python; computational notebooks; computational thinking (CT); fieldwork learning; gamification; motivation},
  month = {June},
  number = {3},
  pages = {392-405},
  title = {Promoting Computational Thinking Skills in Non-Computer-Science Students: Gamifying Computational Notebooks to Increase Student Engagement},
  volume = {15},
  year = {2022}
}

@inproceedings{merged107,
  abstract = {Computational thinking is an important concept that is widely concerned by international computer community, and it is considered as an important way to carry out university computer education reform. This paper firstly analyzes the existing problems in university computer teaching for non-computer majors, and then it discusses a series of teaching practices that integrate computational thinking into university computer teaching, including: (1) Students are divided into different classes according to their computer proficiency; (2) We abandon the concept of “Narrow Instrumentalism”, and teach the most essential knowledge of computer foundation; (3) We propose the “data” as the mainline, and then reconstruct teaching content according to the mainline; (4) We also reconstruct experimental content with the mainline, and separate experimental teaching into a single course. The practices has proved that the teaching methods put forward in this paper yield good results, and it provides a new model for University Computer Foundation teaching, which aims at improving students’ computational thinking.},
  author = {He, Zhenyu and Zhao, Haihu},
  booktitle = {2019 IEEE International Conference on Engineering, Technology and Education (TALE)},
  doi = {10.1109/TALE48000.2019.9225879},
  issn = {2470-6698},
  keywords = {Databases; Education; Instruments; Programming profession; Software; computational thinking; non-computer major; teaching reform; university computer foundation},
  month = {Dec},
  pages = {1-6},
  title = {Practical Exploration of Integrating Computational Thinking into University Computer Foundation Education},
  year = {2019}
}

@inproceedings{merged108,
  abstract = {Computational thinking is a crucial skill for students to analyze and solve problems, and programming education serves as an important pathway to cultivate computational thinking. This study combines relevant literature and utilizes Scratch, a visual programming software, to construct a gamified teaching model for Scratch courses. A quasi-experimental research design was employed, involving two fifth-grade classes from a primary school in K city. The study employed methods such as analysis of student works, SPSS scale data analysis, and student interviews to investigate the impact of gamified teaching in Scratch courses on developing elementary students' computational thinking. The results indicate that gamified teaching in Scratch courses significantly enhances the computational thinking level of elementary students, particularly in the dimensions of critical thinking, problem-solving ability, and algorithmic thinking. Based on the research findings, it is recommended that gamified teaching in Scratch courses should involve appropriate teaching tools, incorporate game-based learning, emphasize problem-solving, encourage collaborative learning, and provide training for educators competent in programming education.},
  author = {Chen, Yuxi and Zhao, Yang and Wang, Min},
  booktitle = {2024 13th International Conference on Educational and Information Technology (ICEIT)},
  doi = {10.1109/ICEIT61397.2024.10541025},
  keywords = {Education; Federated learning; Problem-solving; Software; Training; Urban areas; Visualization; computational thinking; elementary students; empirical study; gamification; scratch},
  month = {March},
  pages = {78-83},
  title = {An Empirical Study on the Effect of Gamified Teaching in Scratch Courses on Developing Elementary Students' Computational Thinking},
  year = {2024}
}

@inproceedings{merged109,
  abstract = {The study aims to examine the effectiveness of flipped-classroom instruction on college students’ computational thinking skills (CTS). Participants were enrolled in the basic computer course from two classes at a university in central China. One class as an experimental group was chosen for the flipped-classroom instruction method (n=55); the other as a control group used the traditional lecture-based instruction method (n=54). The results show that learning through the flipped-classroom approach can significantly promote students’ levels of creativity, algorithmic thinking, cooperativity, and critical thinking, compared with the traditional lecture-based instruction approach. The findings of this research suggest that instructors should be encouraged to take the flipped-classroom instruction method to teach.},
  author = {Gong, Di and Yang, Harrison Hao and Cai, Jin},
  booktitle = {2021 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET52350.2021.00050},
  issn = {2766-2144},
  keywords = {Creativity; Educational technology; computational thinking skills; flipped-classroom instruction; quasi-experiment; traditional lecture-based instruction},
  month = {Aug},
  pages = {207-210},
  title = {Investigating the Flipped-classroom Approach on College Students’ Computational Thinking Skills},
  year = {2021}
}

@article{merged110,
  abstract = {Programming is considered a skill to arouse and inspire learner's potential. Learning to program is a complex process that requires students to write grammar and instructions. The structure of a programming language does not cause impose problems to students, the real obstacle is how to apply these learned grammars and present them in a complete and correct program code for problem solving. In this study, a deep learning recommendation system was developed, which includes augmented reality (AR) technology, and learning theory, and is provided for study by students in non-major and also from different learning backgrounds. Those students divided into two groups, the students participating in the experimental group were using the AR system with deep learning recommendation and the students participating in the control group were using the AR system without deep learning recommendation. The results show that students in experimental group perform better than the control group with regards to learning achievement. On the other hand, in the part of computational thinking ability, students using a deep learning recommendation based AR system is significantly better than those using non-deep learning recommendation based AR system. Among the various dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills are significantly different among the two groups of students. The students in experimental group perform better than the control group with regards to the dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills.},
  author = {Lin, Pei-Hsuan and Chen, Shih-Yeh},
  doi = {10.1109/ACCESS.2020.2977679},
  issn = {2169-3536},
  journal = {IEEE Access},
  keywords = {AR technology; Augmented reality; Deep learning recommendation; Education; Grammar; Machine learning; Problem-solving; Programming profession; computational thinking},
  pages = {45689-45699},
  title = {Design and Evaluation of a Deep Learning Recommendation Based Augmented Reality System for Teaching Programming and Computational Thinking},
  volume = {8},
  year = {2020}
}

@inproceedings{merged111,
  abstract = {This article introduces an exploratory method for automatically grading programming exam questions using syntactic analysis. The target problem is the lack of a robust, scalable, and automated method to analyze computational thinking skills from source code written by elementary school students. The proposed method uses a variety of techniques to assess student responses, including analyzing the programming structure, programming correctness, and code execution based on certain parameters defined during the exercise specification. Analysis of the source code and evaluation of the answers to the exercises are carried out using high performance computing to improve the response time of the system. This preliminary work will contribute to a robust method for automated exam scoring, which is expected to assess and support the development of computational thinking among students.},
  author = {Gonzalez-Torres, Antonio and Ramirez-Trejos, Elliot and Sancho-Chavarria, Lilliana and Navas-Su, Jose and Garita, Cesar and Monge-Fallas, Jorge},
  booktitle = {2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)},
  doi = {10.1109/CSCE60160.2023.00181},
  keywords = {Automatic evaluation; Cloning; Codes; High performance computing; Programming; Prototypes; Source coding; Syntactics; abstract syntax trees; computational thinking; source code analysis},
  month = {July},
  pages = {1090-1095},
  title = {Towards the Assessment of Basic Computational Thinking Skills Using Syntactic Analysis Techniques},
  year = {2023}
}

@inproceedings{merged112,
  abstract = {Computational thinking (CT) gained significant importance in education, leading to a surge in the development of dedicated instructional platforms. The cultivation of students’ CT skills posed a challenge, often involving the introduction of abstract and challenging-to-visualize programming concepts. This study aimed to bridge this gap by introducing an augmented reality-based coding game—an interactive learning platform designed to facilitate students in acquiring programming skills and enhancing their grasp of computational thinking concepts. The augmented reality (AR) digital game is specifically directed towards fundamental CT skills, such as pattern recognition, decomposition, abstraction, and developing algorithms. To evaluate the effectiveness of the AR game in enhancing CT skills, a study was conducted with 124 middle school students, entailing in grades 6th and 8th. The experimental group (N = 63) utilized the AR game, while the control group (N = 61) relied on conventional text materials. The findings of the experiment strongly supported the integration of AR technology along with game-based learning as a means to enhance CT knowledge and skills while simultaneously reducing cognitive load.},
  author = {Rao, Toluchuri Shalini Shankar and Tiwari, Ajay Shankar and Mitra, Utanko and Bhagat, Kaushal Kumar},
  booktitle = {2024 IEEE International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT61570.2024.00071},
  issn = {2161-377X},
  keywords = {Augmented reality; Codes; Cognitive load; Education; Encoding; Games; Pattern recognition; Writing; cognitive load; computational thinking; game-based learning},
  month = {July},
  pages = {222-226},
  title = {Effectiveness of marker-based augmented reality game on computational thinking skills and cognitive load for middle school students},
  year = {2024}
}

@inproceedings{merged113,
  abstract = {Computational thinking is an important skill for solving complex problems, including processes such as decomposition, pattern recognition, abstraction, and algorithmic design. Game-based learning has recently seen an increase in prevalence for teaching computational thinking, making games an important topic of study. However, there is currently no validated tool for assessing Computational Thinking (CT) that performs reliably across disciplines and age groups. In the absence of such a tool, this paper examines several software testing methods for the evaluation of CT pedagogy effectiveness within serious games. Namely, it makes recommendations for the application of standardized questionnaires, think-aloud testing, and automated data logging for evaluating games that promote CT learning. It concludes with a potential use case to demonstrate how the methods can be combined to achieve a granular and actionable understanding of a complex CT assessment problem and its causes.},
  author = {Fanfarelli, Joey R.},
  booktitle = {2021 IEEE/ACIS 20th International Fall Conference on Computer and Information Science (ICIS Fall)},
  doi = {10.1109/ICISFall51598.2021.9627365},
  keywords = {Bibliographies; Education; Games; Information science; Manuals; Software testing; Tools; algorithmic thinking; assessment; computational thinking; development; game; gaming; serious games; test; testing},
  month = {Oct},
  pages = {149-152},
  title = {Assessing Computational Thinking Pedagogy in Serious Games Through Questionnaires, Think-aloud Testing, and Automated Data Logging},
  year = {2021}
}

@inproceedings{merged114,
  abstract = {Computational thinking is the third major mode of thinking in the age of artificial intelligence. Many primary and secondary schools adopt graphical programming as an important way for students' computational thinking development. However, elementary school students have less self-control in learning and are more dependent on teachers, so timely and effective teaching interaction is an important guarantee for the realization of the teaching goals of graphical programming. Through three rounds of action research, the essay investigated the impact of teaching interaction strategies on the development of students' computational thinking. The findings show that students are satisfied with the designed interaction strategies, and the interaction strategies can significantly improve students' computational thinking ability and level.},
  author = {Wang, Fan and Chen, Lan and Wang, Wei},
  booktitle = {2023 5th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE59648.2023.00009},
  keywords = {Artificial intelligence; Education; Programming profession; computational thinking; computer-assisted learning; graphical programing; teaching interaction},
  month = {April},
  pages = {10-14},
  title = {Design and Effectiveness Analysis of Interactive Strategies for Teaching Graphical Programming Oriented to Cultivate Computational Thinking},
  year = {2023}
}

@inproceedings{merged115,
  abstract = {The purpose of this study is to design a computational thinking curriculum standard for K-12 education. The Delphi technique was employed to collect different views and derive consensus from a panel of thirteen experts, including computer scientists, computer science educators, K-12 computer teachers, and industry experts. The first draft of Delphi survey questionnaire, consisting of nine themes (problem solving, problem decomposition, algorithms, data representation, data analysis, modeling and simulation, abstraction, automation, and others) and 60 competence indicators, was developed based on our investigation of the nature of computational thinking. After three rounds of survey and a final round-table discussion, the expert panel derived 49 essential competence indicators (13 for grades K to 6, nine for grades 7 to 9 and 27 of grades 10 to 12) and eight optional competence indicators (one for grades 7 to 9 and seven for grades 10 to 12). According to the results, the core ability and training of computational thinking are different in grades. In grades K to 6, students develop logical thinking and problem solving skills in personal and family life. In grades 7 to 9, students must understand the basic concepts of programming and write basic programs. Finally, in grades 10 to 12, they will use high-level skills to apply the concepts of abstraction, modeling, and structured problem decomposition to solve problems in different fields. The results serve as useful references for developing Taiwan's new K-12 computing curriculum.},
  author = {Chuang, Hui-Chi and Hu, Chiu-Fan and Wu, Cheng-Chih and Lin, Yu-Tzu},
  booktitle = {2015 International Conference on Learning and Teaching in Computing and Engineering},
  doi = {10.1109/LaTiCE.2015.44},
  keywords = {Analytical models; Computational Thinking; Computational modeling; Computer science; Computers; Computing Curriculum; Data models; Delphi Survey; Education; K-12 education; Standards},
  month = {April},
  pages = {213-214},
  title = {Computational Thinking Curriculum for K-12 Education -- A Delphi Survey},
  year = {2015}
}

@inproceedings{merged116,
  abstract = {This research aims to develop STEM learning activities for promote student's computational thinking skills and the results of this learning activities toward computational thinking of senior school student in the computing classroom. The study groups were 30 secondary school students in Pranakorn Si Ayutthaya who were studying in Semester 1, Academic Year 2019. They were selected by purposive sampling method. The research instruments were; (1) STEM education lesson plans for computational thinking developments; (2) The student's journals; and (3) Computational thinking test. The research was divided into three phases. The first phase focused on design lesson plans and learning activities for developing student's computational thinking skills. The second phase is implement the lesson plans and learning activities with the study group. The third phase is evaluation of the effectiveness of learning activities on develop student's computational thinking skills. The results shown learning activities can develop student's computational thinking skills, because of these activities were challenged students with real everyday life problems that required to used their computational thinking to solve the problems by decompose problems, find pattern recognition, abstraction thinking and develop algorithm for computer programming. So, these STEM learning activities could be effectively used in Computing course.},
  author = {Srisangngam, Pichet and Dechsura, Chaiyos},
  booktitle = {2020 5th International STEM Education Conference (iSTEM-Ed)},
  doi = {10.1109/iSTEM-Ed50324.2020.9332734},
  keywords = {Computational thinking; Education; Instruments; Pattern recognition; Programming profession; STEM; STEM Education.; Sampling methods; Silicon},
  month = {Nov},
  pages = {103-105},
  title = {STEM Education Activities Development to Promote Computational Thinking’s Students},
  year = {2020}
}

@inproceedings{merged117,
  abstract = {Developing computational thinking through Computer Science Unplugged activities is a fantastic way to introduce students to the core concepts of computing without the need for programming tools. These activities are interactive, engaging, and help learners build problem-solving and logical reasoning skills. CT in CS Unplugged activities involves evaluating how well the activities promote the core components of CT, which are fundamental skills in algorithmic thinking and problem-solving. This paper tries to contribute to a better understanding of the related field.},
  author = {Triantafyllou, Serafeim A. and Sapounidis, Theodosios and Oikonomou, Andreas},
  booktitle = {2024 32nd National Conference with International Participation (TELECOM)},
  doi = {10.1109/TELECOM63374.2024.10812249},
  issn = {2837-5246},
  keywords = {Cognition; Games; Problem-solving; Programming profession; Taxonomy; Telecommunications; computational thinking; computer science unplugged activities; gamification},
  month = {Nov},
  pages = {1-4},
  title = {Trying to Develop and Assess Computational Thinking in Computer Science Unplugged Activities with Gamification},
  year = {2024}
}

@inproceedings{merged118,
  abstract = {Computational thinking is seen as the core literacy of 21st century talent, and many countries and institutions are actively investing resources in cultivating this ability. Immerse virtual reality technology provides a new teaching method for embodied learning, and different degrees of embodied interaction have different effects on learning results. Based on this, this study designed an innovative teaching mode integrating Design-Based learning approach and VR to explore the effects of low-embodied interaction and high-embodied interaction on students' computational thinking and learning performance. Through the experiment of 42 undergraduates majoring in digital media technology, the research results show that DBL approach integrating virtual reality significantly improves students' computational thinking, especially in the aspects of problem solving, algorithmic thinking and collaborative thinking, and the learning performance of high embodied is better than that of low embodied.},
  author = {Li, Xing and Luo, JingJing and Ai, Di and Zhou, XiaoChun and Zhao, MingYue and Xiang, Hui},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092099},
  keywords = {Assembly; Autonomous aerial vehicles; Collaboration; Education; Interviews; Media; Problem-solving; Resistance; Technological innovation; Virtual environments; computational thinking; design-based learning; embodied learning; virtual reality},
  month = {April},
  pages = {25-29},
  title = {Using Design-Based Learning Approach Integrated with Immerse Virtual Reality to Enhance Computational Thinking},
  year = {2025}
}

@inproceedings{merged119,
  abstract = {Soft skills are important criteria in preparing for a viable future employment, the lack of which, may result in a low employment rate among university graduates. These skills can be acquired via the use of Computational Thinking (CT) to cultivate problem solving and thinking skills. Since the inception of CT, however, not a single unified model has been developed as a guideline for educators. Based on the relevant articles available in IEEE Xplore Digital Library, Springer and ScienceDirect Journal, this paper comparing different CT models that focus on different CT dimensions which is concepts, practices and perspectives.},
  author = {Rozali, Nurul Faizah and Zaid, Norasykin Mohd and Noor, Norah Md and Ibrahim, Nor Hasniza},
  booktitle = {2018 IEEE 10th International Conference on Engineering Education (ICEED)},
  doi = {10.1109/ICEED.2018.8626930},
  keywords = {Computational modeling; Data models; Education; Problem-solving; Programming profession; Taxonomy; computational thinking; employment; problem solving; soft skill; thinking},
  month = {Nov},
  pages = {208-213},
  title = {Developing A Unified Model of Teaching Computational Thinking},
  year = {2018}
}

@inproceedings{merged120,
  abstract = {Building a classroom environment based on student-led, meaningful collaboration is an ideal being promoted by educators and administrators seeking to equip students with 21st century workforce skills. More and more often, teachers are challenged to design lessons that utilize students' innate desire to communicate with one another rather than more traditional direct instruction. With a heavy focus on student-driven instruction and a reduced role for direct instruction, Carson Middle School's Game Design I course is able to utilize collaboration as a means for allowing students to not only learn but master and retain Computational Thinking Patterns and apply them in formal summative assessments. Through the collection of these data points throughout the course of a semester of learning, an educator can fully appreciate the learning of Computational Thinking skills that occurs as students build a sequence of games and simulations.},
  author = {Worrell, Benjamin and Brand, Catharine and Repenning, Alexander},
  booktitle = {2015 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
  doi = {10.1109/VLHCC.2015.7357215},
  keywords = {Programming; assessment; collaborative programming; computational thinking; computational thinking patterns; game design; middle school computer education},
  month = {Oct},
  pages = {183-187},
  title = {Collaboration and Computational Thinking: A classroom structure},
  year = {2015}
}

@inproceedings{merged121,
  abstract = {Computational thinking is a hot topic in the field of K-12 education, and analyzing the relationship between computational thinking and its influencing factors is of great importance for the development of computational thinking in K-12 students. This study conducted a comprehensive quantitative analysis of 53 selected studies based on the meta-analytic structural equation modelling (MASEM) approach to examine the effects and mechanisms of programming experience, thinking style, learning attitude, and academic performance on K-12 students' computational thinking. It was found that thinking style, learning attitude and academic performance all had a significant positive effect on K-12 students' computational thinking, and programming experience could have a significant effect on K-12 students' computational thinking through the chain mediation of thinking style, learning attitude and academic performance. In addition, the moderation analysis revealed that there is a moderating role of grade in the above relationships. The findings provide strong evidence that programming experience, thinking style, learning attitude, and academic performance predict K-12 students' computational thinking and provide theoretical guidance for the development of K-12 students' computational thinking.},
  author = {Lei, Yu and Yi, Baolin and Fu, Xin and Zhao, Jingjie},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092066},
  keywords = {Analytical models; Computational Thinking; Computational modeling; Education; Influencing Factors; K-12 Education; Mathematical models; Mediation; Meta-Analysis; Programming profession; Statistical analysis; Structural Equation Modeling},
  month = {April},
  pages = {83-92},
  title = {Analysis of the Factors Influencing K-12 Students' Computational Thinking Using Meta-analytic Structural Equation Modeling},
  year = {2025}
}

@inproceedings{merged122,
  abstract = {Recent college students have been observed to be motivated and engaged in acquiring science, technology, engineering, and mathematics (STEM) knowledge and skills with robots and IoT objects. A sample of 13 master's students participated in the program. Data collected include the pre-and post- STEM and computational thinking (CT) written tests, and the pre- and post- surveys of learning perceptions toward the robots and IoT objects learning activities. The results show that the learning activities were an effective approach for the master's students' STEM learning outcome and CT as shown in the post-test. The differences between the master's students' STEM learning outcome, CT, and perceptions were also confirmed, particularly between the groups of computer programming-experienced learners and computer programming-novice learners. The results revealed that the learning activities with robots and IoT objects could improve the overall master's students' CT, STEM knowledge, and learning perceptions. Both programming-experienced and programming-novice learners' STEM learning outcome were improved.},
  author = {Hu, Chih-Chien and Tseng, Hsiao-Ting and Chen, Ming-Hsien and Goh Phaik Imm, Alexis and Chen, Nian-Shing},
  booktitle = {2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT49669.2020.00033},
  issn = {2161-377X},
  keywords = {Computational thinking; Educational robots; IoT; Learning perception; Programming profession; Robot-assisted learning; STEM; STEM learning},
  month = {July},
  pages = {87-89},
  title = {Comparing the effects of robots and IoT objects on STEM learning outcomes and computational thinking skills between programming-experienced learners and programming-novice learners},
  year = {2020}
}

@inproceedings{merged123,
  abstract = {Educational robots have been used in schools for STEM education and for teaching students programming and computational thinking (CT) for many years. The look and feel of traditional robots for educational purposes such as LEGO Mindstorms and NXT have been mostly engineering-oriented. Not until recently, have robotic products such as Dash & Dot utilized physical appearance which were cute and kid-friendly. This study compared the effects of using two kinds of robots– Dash & Dot and LEGO NXT, in terms of students' performance, student's attitudes about learning activities, and how different genders respond to various robots. A Quasi-Experimental Design was conducted. The participants consisted of 106 6th graders from four classes of students. Two classes were designated as the experimental groups which used Dash & Dot robots,). The other two classes of students were the control groups which used NXT robots. With respect to students' attitudes toward learning, the study showed no significant difference between experimental and control groups. With respect to learning programming skills, it was found that females in the experimental group prefer to use robots. Females showed a definite preference for using the Dash & Dot robots.},
  author = {Huang, Wei-Yeh and Hu, Chiu-Fan and Wu, Cheng-Chih},
  booktitle = {2018 International Conference on Learning and Teaching in Computing and Engineering (LaTICE)},
  doi = {10.1109/LaTICE.2018.00-13},
  issn = {2475-1057},
  keywords = {Attitude control; Computational thinking; Education; Educational robots; Gender; Hardware; Programming profession; Robot; Robot programming; Robots; Software; Sparks},
  month = {April},
  pages = {11-16},
  title = {The Use of Different Kinds of Robots to Spark Student Interest in Learning Computational Thinking},
  year = {2018}
}

@inproceedings{merged124,
  abstract = {Project-Based Learning and STEAM Education are widely favored by schools and teachers because both of them are student-centered learning models by allowing students to collaborate and explore around issues in order to promote the development of students' learning in the 21st century. However, in practical pedagogical applications, specific educational models and implementations are highly dependent on exceptional teachers with innovative abilities, especially in the cultivation of implicit higher-order thinking of students still lacking a better landing point. In the context of the current era of rapid development of information technology, the educational changes caused by the new development of smart education mean that more attention should be paid to the level of thinking and operational skills of students. As a result, the Problem-Based Learning for Computational Thinking Development Model for Primary and Secondary Schools (CTPBL), which is interdisciplinary, contextual, innovative, experiential and humanistic in nature, has emerged. As a new educational model, CTPBL helps integrate the advantages of existing Project-Based Learning and STEAM Education, crack the dilemma of teachers' choice of the inherent educational model, and realize the cultivation of students' information literacy and the improvement of their comprehensive ability. However, it still needs to be further explored, such as its operation mechanism, technology carrier, and teachers' roles.},
  author = {Zhao, Danqing and Li, Yatao},
  booktitle = {2022 11th International Conference on Educational and Information Technology (ICEIT)},
  doi = {10.1109/ICEIT54416.2022.9690630},
  keywords = {Computational modeling; Information age; Printing; Production; Solid modeling; Training; Virtual reality; computational thinking; educational model; interdisciplinary learning; production-based learning; project-based learning},
  month = {Jan},
  pages = {10-15},
  title = {Research on the Educational Model of Computational Thinking Cultivation in Primary and Middle Schools Oriented to Production-Based Learning},
  year = {2022}
}

@article{merged125,
  abstract = {Contribution: This study represents the first systematic attempt to develop Science, Technology, Engineering, Arts, and Mathematics (STEAM) integrated project-based learning (PBL) as a transdisciplinary teaching method for fostering students’ creativity and computational thinking (CT) skills. Background: With the growing importance of creativity and CT skills in the modern world, there is a need for innovative teaching methods that can effectively nurture these abilities in students. This study explores the potential of integrating STEAM into PBL as a transdisciplinary teaching approach to address this need. Intended Outcomes: The outcomes of this approach include significant improvements in various dimensions of students’ creativity (fluency, flexibility, originality, and elaboration) and enhanced CT skills, particularly in medium and hard tasks. Application Design: The study involved 54 junior high school seventh-graders, with 28 students in the experimental group and 26 students in the comparison group. The experimental group was exposed to a semester of STEAM PBL, while the comparison group followed the regular curriculum. Findings: After a semester of STEAM PBL, the experimental group demonstrated significant improvements in creativity dimensions, while the comparison group showed no significant changes. In terms of CT skills, the experimental group exhibited significant improvements in medium and hard tasks, whereas the comparison group did not. These results highlight the potential benefits of integrating STEAM into PBL as a transdisciplinary teaching approach for enhancing students’ creativity and CT skills. The implications for educational practice and future research are discussed in depth.},
  author = {Chang, Chu-Yang and Du, Zhengyi and Kuo, Hsu-Chan and Chang, Chih-Ching},
  doi = {10.1109/TE.2023.3297221},
  issn = {1557-9638},
  journal = {IEEE Transactions on Education},
  keywords = {Art; Arts; Computational thinking (CT); Creativity; Education; Engineering; Games; STEM; Science; Task analysis; Technological innovation; Technology; and Mathematics (STEAM); creativity; design thinking (DT); project-based learning (PBL)},
  month = {Dec},
  number = {6},
  pages = {673-681},
  title = {Investigating the Impact of Design Thinking-Based STEAM PBL on Students’ Creativity and Computational Thinking},
  volume = {66},
  year = {2023}
}

@inproceedings{merged126,
  abstract = {The call for innovative talents in the information age is imminent. With the promulgation of the domestic high school information technology curriculum standards in 2017, the formulation and positioning requirements of the core literacy of the disciplines, computational thinking as one of the four core literacy, is the thinking ability that everyone should have. Many foreign educational practice studies have shown that mind mapping can effectively promote students' cognitive development and knowledge construction. However, the domestic educational application research is relatively lacking in this aspect, and there is little research on the comprehensive and in-depth combination of it and the core literacy “computational thinking” of the specific information technology discipline. To this end, based on the research status at home and abroad, this paper attempts to use the concept map tool to represent several important functions of computational thinking, "definition of problems", "abstract function", "build model" and "Debugging and improvement". The diagram incorporates the teaching model in the computational thinking development curriculum. This study used quasi-experimental research methods to explore the effect of conceptual map tools on students' computational thinking. The research results show that this teaching method has a significant effect on the development of students' computational thinking.},
  author = {Xu, Ling and Tong, Ming-Wen and Li, Bin and Meng, Jiang and Fan, Chen-Yao},
  booktitle = {2019 14th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE.2019.8845505},
  issn = {2473-9464},
  keywords = {Computational modeling; Creativity; Education; Programming; Standards; Tools; Visualization; computational thinking; concept map; project-based learning},
  month = {Aug},
  pages = {454-459},
  title = {Application of Concept Map in the Study of Computational Thinking Training},
  year = {2019}
}

@inproceedings{merged127,
  abstract = {The learning style in these day has been changed since the traditional style has been replaced by the modern style of learning processes using new technology such as social media, smart phone or edutainment. Nowadays, simulation game plays an important role in educational ground because its characteristic can enhances the learners' motivation. The paper aims to purpose the novel idea of how to identify appropriate factors which relate to the learner's motivation for supporting the computational thinking skills via simulation game. This is importance because games are considered as efficiency tools in which lecturers can employ to escalate the interest of lessons and to make the learning to be more effective.},
  author = {Daungcharone, Kannika},
  booktitle = {2017 International Conference on Digital Arts, Media and Technology (ICDAMT)},
  doi = {10.1109/ICDAMT.2017.7904960},
  keywords = {Computational Thinking Skills; Computational modeling; Computers; Engineering profession; Games; Learning Motivation; Object oriented modeling; Programming profession; Simulation Game},
  month = {March},
  pages = {195-199},
  title = {Enhancement the computational thinking skills via the simulation game},
  year = {2017}
}

@inproceedings{merged128,
  abstract = {Promoting computational thinking is a priority in CS education and other STEM and non-STEM disciplines. Our innovative, NSF-funded IC2Think project blends computational and creative thinking. In Spring 2013, we deployed Computational Creativity Exercises (CCE) designed to engage creative competencies (Surrounding, Capturing, Challenging and Broadening) in an introductory CSI course for engineering students. We compared this CCE implementation semester (80 students, 95% completing 3 or 4 CCEs) to the Fall 2013 semester of the same course (55 students) without CCEs. CCE implementation students had significantly higher scores on a CS concepts and skills knowledge test (F(1, 132) = 7.72, p < 01, partial Eta2 = .055; M=7.47 to M=6.13; 13 items) and significantly higher self-efficacy for applying CS knowledge in their field (F(1, 153) = 12.22, p < .01, partial Eta2 = .074; M=70.64 to M=61.47; 100-point scale). CCE implementation students had significantly higher study time (t(1, 136) = 2.08, p = .04; M=3.88 to M=3.29; 7-point scale) and significantly lower lack of regulation, which measures difficulties with studying (t(1, 136) = 2.82, p = .006; M=2.80 to M=3.21; 5-point scale). The addition of computational creativity exercises to CS courses may improve computational thinking and learning of CS knowledge and skills.},
  author = {Shell, Duane F. and Hazley, Melissa Patterson and Soh, Leen-Kiat and Dee Miller, L. and Chiriacescu, Vlad and Ingraham, Elizabeth},
  booktitle = {2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
  doi = {10.1109/FIE.2014.7044489},
  issn = {2377-634X},
  keywords = {CSI; Computational Thinking; Creative Thinking; Educational institutions; Engagement; Engineering; Engineering profession; Instruments; Problem-solving; Programming; Reflection; Self-Efficacy; Self-Regulation; Student Learning},
  month = {Oct},
  pages = {1-7},
  title = {Improving learning of computational thinking using computational creativity exercises in a college CSI computer science course for engineers},
  year = {2014}
}

@inproceedings{merged129,
  abstract = {Computational thinking is an important concept that is currently receiving widespread attention in the international computing community. Teaching programming is an effective way to develop students' computational thinking. Students in adult colleges and universities face the pressure of study and work, and there is a need to improve their computational thinking skills. In this paper, we design and develop a set of programming activities based on computational thinking development for adult college students, and study the changes in students' computational thinking before and after they participate in the activities. It provides a reference for frontline teachers and related researchers to design programming activities and conduct research in computational thinking.},
  author = {Chen, Jiefei},
  booktitle = {2023 5th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE59648.2023.00021},
  keywords = {Education; Faces; Programming profession; activity design; computational thinking; programming},
  month = {April},
  pages = {81-85},
  title = {Study on Teaching Programming in Adult Colleges Based on the Cultivation of Computational Thinking},
  year = {2023}
}

@inproceedings{merged130,
  abstract = {The primary objective of this research was to investigate effective learning sequences starting with computational thinking, programming, or both. We experimented with and analyzed the learning sequence of students from the Department of Computer Engineering, Information Management, and Mechanical Engineering. The findings indicated that the students of the Department of Computer Engineering possessed prior experiences in programming or computational thinking. Their learning sequences limitedly impacted learning outcomes. Conversely, for the students of the Department of Information Management, learning computational thinking before programming did not result in better learning outcomes, emphasizing the need for coherence in courses. The students of the Department of Mechanical Engineering showed the practical value of computational thinking in non-IT disciplines, particularly in using specialized software such as MATLAB. For students with foundational knowledge, the learning sequence between learning computational thinking and programming was less significant. However, for beginners or those from non-IT backgrounds, effective learning required the coherence and integration of courses. Thus, it is required to maintain cross-course coherence and establish links between computational thinking and programming skills to offer a more in-depth learning experience.},
  author = {Lai, Chien-Hung and Hsieh, Cheng-Han},
  booktitle = {2023 IEEE 3rd International Conference on Social Sciences and Intelligence Management (SSIM)},
  doi = {10.1109/SSIM59263.2023.10469197},
  keywords = {Coherence; Information management; Programming; Social sciences; Software; Systematics; Training; computational thinking; course coherence; interdisciplinary application; learning sequence; programming},
  month = {Dec},
  pages = {175-179},
  title = {Exploring the Impact of the Learning Sequence of Computational Thinking and Programming on Learning Outcomes},
  year = {2023}
}

@article{merged131,
  abstract = {This article illustrates that the task design and problem selection are of characteristic influence to evoke sense-reason-act programming (SRA) among primary school pupils when programming robots. Research shows that the task design influences the development of computational thinking (CT). The literature provides evidence that the context, the problem space, and the representation of the problem to apply SRA-programming require the programming task to be embedded in a dynamic context in which a programmable robot must use sensory information to anticipate changes in the environment. In order to ascertain whether the problem space and the task design influence the evocation of SRA-thinking, this article uses a research design comparing the differences between two programming conditions (static/dynamic). In these conditions, pupils use Lego EV-3 robots and Mindstorms software to solve programming problems. As a post-measurement, a Lego challenge is applied. In this article, it is shown that the integration of a dynamic task design to solve a programming problem is essential for a deeper understanding of CT skills. Furthermore, when pupils can immediately test the consequences of their program in a dynamic environment and, thus, the learning environment provides an appropriate problem, they gain a deeper understanding of the added value of sensors and will be better able to reason about complex problems. It is found that programming in a dynamic problem environment almost naturally evokes SRA-thinking, as opposed to programming in a static environment. The influence of SRA-programming as demonstrated identifies characteristics of CT.},
  author = {Fanchamps, Nardie and Slangen, Lou and Specht, Marcus and Hennissen, Paul},
  doi = {10.1109/TLT.2022.3162895},
  issn = {1939-1382},
  journal = {IEEE Transactions on Learning Technologies},
  keywords = {Computational thinking (CT); Problem-solving; Programming; Programming profession; Pupils; Robot sensing systems; Robots; Task analysis; dynamic environments; robotics; sense-reason-act (SRA)-thinking; tangible output},
  month = {April},
  number = {2},
  pages = {213-222},
  title = {The Effect on Computational Thinking Using SRA-Programming: Anticipating Changes in a Dynamic Problem Environment},
  volume = {15},
  year = {2022}
}

@inproceedings{merged132,
  abstract = {Critical thinking is one of the core missions of higher education. It emphasizes self-reflection and critical examination. There are few proven methods to teach critical thinking effectively, and assessment of students' thinking skills often fell short. Most universities do not teach critical thinking in a cohesive and systematic fashion after the students enter a specific discipline, such as management or engineering. This paper proposes to design a discipline specific critical thinking curriculum by adopting a Problem Solving Life Cycle framework. Critical thinking skills are reinforced in every phase throughout the Life Cycle with documented deliverables and assessment criteria.},
  author = {Lee, C. Sophie and Chou, Chi-Chun},
  booktitle = {2018 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI46756.2018.00135},
  keywords = {Business; Cognition; Information systems; Problem-solving; Taxonomy; Training; assessment; critical thinking; curriculum design; problem solving life cycle},
  month = {Dec},
  pages = {671-674},
  title = {Discipline-Specific Critical Thinking Curriculum with A Problem Solving Life Cycle Framework},
  year = {2018}
}

@inproceedings{merged133,
  abstract = {The essence of computational thinking is thinking about data and ideas, and using and combining these resources to solve problems. The internal requirement of the programming courses is to cultivate the student's the ability to use programming language for problem analysis and problem solving. According to the characteristics of the courses themselves, this paper proposes a course teaching system built on the core of computational thinking ability cultivation and related reform method, which emphasizes the problem solving and algorithm design and determines the relationship between object-oriented method and procedure-oriented method in theoretical teaching, and designs multi-layer experiments and project-based experiment organization. This teaching strategy proves effective through teaching practice.},
  author = {Huang, Wenming and Deng, Zhenrong and Rongsheng, Dong},
  booktitle = {2009 International Association of Computer Science and Information Technology - Spring Conference},
  doi = {10.1109/IACSIT-SC.2009.52},
  keywords = {Algorithm design and analysis; Computational thinking; Computer languages; Computer science; Concrete; Education; Humans; Mathematical programming; Problem-solving; Programming; Programming profession; Springs; methodology},
  month = {April},
  pages = {182-185},
  title = {Programming Courses Teaching Method for Ability Enhancement of Computational Thinking},
  year = {2009}
}

@inproceedings{merged134,
  abstract = {While in the workplace are highly demanded work-related awareness of computing and information technology, this discipline does not have sufficient and accurate dissemination, especially in schools. New technologies have positioned more as a communication tool than as a means for building innovative products. On the other hand, it has missed the application of own abilities in the area, such as the development of logical reasoning, algorithmic thinking and problem solving, both the school curriculum as well as in instances of informal learning of students. In literature and on the web, there are tools that are accessible by both self-study students to be used as a complement to other activities. However, these tools seek the development of computational thinking itself, and not within a broader framework, which allows to present the computer science as an area of professional development, for example, inserted in a context where should solve problems requiring support programming and algorithms. Problock is proposed as a tool to (1) develop computational thinking, in a context of learning based on addiction problems, (2) disseminate and motivate students for future professional development in higher education in computer science and disciplines related. In this paper, the results of the construction of the tool are presented and the work in progress in a Chilean school.},
  author = {Calderón, Juan Felipe and Ebers, Javier},
  booktitle = {2017 36th International Conference of the Chilean Computer Science Society (SCCC)},
  doi = {10.1109/SCCC.2017.8405132},
  keywords = {Buildings; Computational thinking; Employment; Information technology; Programming profession; Tools; problem-based learning; programming learning},
  month = {Oct},
  pages = {1-5},
  title = {Problock: A tool for computational thinking development using problem-based learning},
  year = {2017}
}

@inproceedings{merged135,
  abstract = {This paper introduces a new teaching tool for K-12 schools with the aid to transfigure the way young peoples use of online data. The tool involves participators who don't have prior programming knowledge and wish to learn computational concepts as part of playing with online data. Computational thinking provides a way for solving many real-world problems that are not learned easily by using many existing tools. Map-Blocks is a software suite that combines the easy to use visual programming environment with easy to get started block shaped programming environment.},
  author = {Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle = {2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  doi = {10.1109/ICCCNT.2018.8493700},
  keywords = {21st century learning skills; Computational thinking; Computer languages; Education; K-12 education; Map-Blocks; Programming environments; Programming profession; Tools; Visualization; block based programming; online data},
  month = {July},
  pages = {1-6},
  title = {Map-Blocks: Playing with Online Data and Infuse to Think in a Computational Way},
  year = {2018}
}

@inproceedings{merged136,
  abstract = {The concept of computational thinking is timely. It is widely agreed that in order to benefit and thrive in a digital world, more than digital literacy is required. Computational thinking promises understanding of information technology and its utilization without necessarily knowing how to write code. According to many authors, skills in computational thinking include the ability to evaluate and design solutions to problems. However, the vision for computational thinking, laid out by a number of scholars, is even bigger than this. It proposes that thinking habits from computer science are beneficial for any kind of problem solving and that those thinking habits form a central part of modern sciences. It might be that components of computational thinking are indeed useful in problem solving and that they play an important part in other sciences. However, computer science combines three types of thinking traditions: theoretical (mathematical) tradition, engineering tradition and scientific tradition, and it is important to differentiate between what is an aspect in one or more of these traditions and what is unique for computer science. This clarification will support the application and teaching of computational thinking. This paper explores the uniqueness of computational thinking and its roots in theoretical, engineering and scientific traditions of computing.},
  author = {Larsson, P. and Apiola, M-V. and Laakso, M-J.},
  booktitle = {2019 42nd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)},
  doi = {10.23919/MIPRO.2019.8756712},
  issn = {2623-8764},
  keywords = {CSER; Computational ideas; Computational modeling; Computational thinking; Computer science; Computer science education; Context modeling; Digital intelligence; Disciplinary ways of thinking and practicing; Education; History; History of computational thinking; Information and communication technology; Microelectronics; Problem-solving},
  month = {May},
  pages = {687-692},
  title = {The uniqueness of Computational thinking},
  year = {2019}
}

@inproceedings{merged137,
  abstract = {Computational thinking (CT) term came into extensive use as an accepted term in recent years between practitioners and researchers in the educational field. It was predicted that CT would be a primary ability which would harmonize reading, writing and arithmetic intended for Science Technology Engineering and Medicine (STEM) students and educators to sustain scientific revolution. The incorporation at earlier stages of CT and related concepts to students' education has gained significance and is paramount evidenced by the changes in policy, curriculum and practice. This work deals with the computational education considerations for the Freshman Engineering Course learners, a step further than teaching with programming and employing CT elements for enhancing student's problem-solving abilities and logical thoughts which benefit to a great extent throughout the student's learning expedition. Finally, the outcomes achieved have been presented and suggesting what should be done on bringing computational thinking into classes},
  author = {Revana, Guruswamy and Kavita, K. and Madhavi, V.},
  booktitle = {2021 World Engineering Education Forum/Global Engineering Deans Council (WEEF/GEDC)},
  doi = {10.1109/WEEF/GEDC53299.2021.9657230},
  keywords = {Computational Thinking; Engineering Education; Freshman Course; Heart; Market research; Problem-solving; STEM Education; Sociology; Statistics; Technological innovation; Writing},
  month = {Nov},
  pages = {375-380},
  title = {Exploring the Concept of Computational Thinking in STEM Education},
  year = {2021}
}

@inproceedings{merged138,
  abstract = {The software design pattern is an important core course for software engineering. However, the traditional classroom teaching method only focuses on the teaching of technical knowledge, but ignores the importance of thinking ability. In order to develop students' "computational thinking" and "engineering thinking" ability to combine the Exploration curriculum reform teaching methods paper from the main body, teaching content, teaching methods and evaluation of the four aspects of the course, presents a concrete and feasible teaching development program that combines "computational thinking" with "engineering thinking".},
  author = {Wang, Feng and Wang, Hong},
  booktitle = {2019 10th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME.2019.00071},
  issn = {2474-3828},
  keywords = {Computational efficiency; Computer science; Design pattern; Education; Education Mode Research; Engineering thinking; Information technology; Knowledge engineering; Software Development; Software design; computational thinking; programming},
  month = {Aug},
  pages = {284-287},
  title = {Analysis of the Curriculum Reform Method Based on the Combination of Computational Thinking and Engineering Thinking},
  year = {2019}
}

@inproceedings{merged139,
  abstract = {For the last two decades, the world of pre-academic and academic education has been occupied with ways of developing computational thinking. Responding to the common perception to develop those thinking skills in all learners, and indeed in the entire population, we developed a MOOC on computational thinking. The course advocates the development of computational thinking skills in every human being, at any age, and in any subject matter, emphasizing the common, essential computational thinking skills: problem decomposition, abstraction, and generalization. Based on our belief in the importance of the application of computational thinking skills when using computerized environments, and the importance of its significant application in developing an understanding of any discipline, the course is based on the development of simulations of computational processes in any area of knowledge. We widely discuss the pedagogical challenges of developing a MOOC on thinking skills without teacher-learner interaction, and share how we overcame these challenges by implementing the Four Pedagogies for Developing Computational Thinking (4P4CT) framework, which integrates the pedagogies of active learning, project-based learning, product-based learning, and context-based learning. We present preliminary findings from research we conducted during the first two MOOC cycles with about 1,600 learners. Specifically, quantitative and qualitative data analysis of students' learning processes are discussed, reflecting the students' multi-faceted and deep engagement in the MOOC.},
  author = {Ragonis, Noa and Hazzan, Orit},
  booktitle = {2022 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI58124.2022.00350},
  issn = {2769-5654},
  keywords = {4P4CT; Computational modeling; Computer aided instruction; Data analysis; Education; Electronic learning; MOOC; Scientific computing; Sociology; active learning; computational thinking; context-based learning; product-based learning; project-based learning; teacher education},
  month = {Dec},
  pages = {1943-1949},
  title = {A MOOC on Computational Thinking for All: Pedagogical Principles, Challenges, and Their Application},
  year = {2022}
}

@inproceedings{merged140,
  abstract = {Smart Cities development has progressed rapidly with Internet of Things (IoT), ambient intelligence and increasingly, crowdsourcing. Engaging the community thus plays a key role in developing meaningful communal growth along with other stakeholders. This paper briefly presents a pilot study on developing computational perspectives for community-based engagement and innovations in Smart Cities for the young and thereafter, to explore possibilities of engaging seniors in self and community development, and the young and old in community-based engagement and possibly in the future, the development of viable values-based innovations in information systems.},
  author = {Lee, Chien-Sing and Wong, K. Daniel},
  booktitle = {2017 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)},
  doi = {10.1109/IEEM.2017.8290008},
  issn = {2157-362X},
  keywords = {Dementia; Games; Information systems; Media; STEM; Smart Cities; Smart cities; Technological innovation; community engagement; computational thinking; design thinking; service innovation and management},
  month = {Dec},
  pages = {832-836},
  title = {Developing community-based engagement in smart cities: A design-computational thinking approach},
  year = {2017}
}

@inproceedings{merged141,
  abstract = {How to develop students' capacity for computational thinking during the teaching process of computer programming, is one of the basic goals of computer fundamental education. Using C program language as example, this paper discusses how to train thinking capability of students during the programming language teaching. Computer programming languages have the features of mass content and practical techniques, and it is difficult for students to master one in short period of time. We provide some advices about how to organize the teaching content and experiments are proposed for improving the teaching results, and human thinking characters are exploited for increasing creative capability. The teaching methods proposed have proved effective for training thinking capability of students.},
  author = {Yinnan, Zhang and Chaosheng, Luo},
  booktitle = {2012 7th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE.2012.6295420},
  keywords = {Algorithm Practice; Algorithm design and analysis; Computational Thinking; Computer languages; Computer programming; Computers; Educational institutions; Lab teaching; Programming profession; Teaching methodology},
  month = {July},
  pages = {1804-1809},
  title = {Training for computational thinking capability on programming language teaching},
  year = {2012}
}

@inproceedings{merged142,
  abstract = {Nowadays, the ability to code is becoming increasingly important in industry and is often mentioned as a crucial skill for future employment. In maker culture, the ability to program along with other technical skills often exceeds this limitation and also includes fun activities through personally fabricated projects. In this paper, we examine computational design projects that are intended to be 3D printed and could potentially introduce coding learning actions. To find computationally rich designs that are appealing to learners, we conducted data analysis on an online makerspace which exploits computational design tools for personal fabrication. We found the most liked designs of the online makerspace and examined which of them included programming features (iterations, conditional statements and functions/modules) and could foster computational thinking elements such as abstract and algorithmic thinking, pattern recognition, and decomposition. The most liked category of designs was Figures (of animals and popular animation characters among other things) which surprisingly often also included programming features. We discuss the implications of our research for technologists, academics and teachers who wish to include 3D modeling and printing in coding learning activities.},
  author = {Chytas, Christos and Tsilingiris, Alexandros and Diethelm, Ira},
  booktitle = {2019 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2019.8725202},
  issn = {2165-9567},
  keywords = {3D printing; Computational modeling; Encoding; Fabrication; Programming profession; Solid modeling; Three-dimensional displays; computational design; computational thinking; online makerspace; personal fabrication},
  month = {April},
  pages = {1173-1179},
  title = {Exploring Computational Thinking Skills in 3D Printing: A Data Analysis of an Online Makerspace},
  year = {2019}
}

@inproceedings{merged143,
  abstract = {The objective of this work is focused on the definition of a methodology for the development of computational thinking and the subsequent measurement of the development obtained in the students. The methodological proposal includes specific tasks or activities to develop computational thinking as well as tests that allow analyzing the extent to which computational thinking or skills related to problem solving have been developed in a scientific, specific, or even general or of practical application in situations of daily life. Once the methodological framework was defined, we proceeded to develop a computer tool that provides global support for the implementation of this methodology. The implemented platform has a simple and intuitive design that allows an easy use of it since it is aimed at pre-university students and teachers who necessarily do not have advanced knowledge of Computer Science. Finally, the platform automatically provides progress reports and course development, including statistical data by age or gender, among others.},
  author = {Pérez, Alexis Daniel Fuentes and Valladares, Gara Miranda},
  booktitle = {2018 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2018.8363311},
  issn = {2165-9567},
  keywords = {21st century skills; Abstractly; Computational modeling; Education; Problem-solving; Programming profession; Proposals; Tools; computational thinking; methodology for development and assessment; pre-university education; problem solving; web platform},
  month = {April},
  pages = {787-795},
  title = {Development and assessment of computational thinking: A methodological proposal and a support tool},
  year = {2018}
}

@inproceedings{merged144,
  abstract = {CS for ALL is a new education initiative launched in 2016 to empower a generation of American students with the computer science skills they need to thrive in a digital economy. In order to keep up with trends in the growing technology-driven world, students should have the ability to analyze and consider the consequences of computing problems critically. However, introducing CS and computational thinking skills to the first year students in college is a difficult task because the nature of the subject tends to be dry and conceptual. Thus, we introduce a computer science course that helps all undergraduate students to prepare for digital life as well as enhance their critical thinking skills through hands-on learning experiences. The course contents introduce the general concept of computer science such as computing system, basic networking, algorithms and programming with Scratch and mBot robot exercises. Our student feedback shows a high level of enthusiasm and engagement among the students. The strong hands-on learning nature of the course helped our students to have more engaging and interactive classroom experiences.},
  author = {Jung, Andrew and Park, Jinsook and Ahn, Andrew and Yun, Mira},
  booktitle = {2017 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI.2017.187},
  keywords = {Computational Thinking; Computational intelligence; Computer Science Education; Computer science education; Digital economy; Education; Educational robots; Hands-on; Market research; Programming profession; Robot programming; Scientific computing},
  month = {Dec},
  pages = {1073-1078},
  title = {CS for ALL: Introducing Computational Thinking with Hands-On Experience in College},
  year = {2017}
}

@inproceedings{merged145,
  abstract = {Computational thinking refers to thinking and solving issues in the same way as computer scientists do. This study aims to evaluate the computational thinking skills of prospective elementary teachers. This study uses a quantitative descriptive research method. The research instrument uses a computational thinking skills test containing four indicators, namely decomposition, algorithm, pattern recognition, abstraction/generalization. The subjects of this study were 244 prospective elementary teachers from a Study Program of Elementary School Teacher Education at a public university in Pekanbaru, Riau, Indonesia. The results of this study indicate that the computational thinking skills of prospective elementary teachers are in the moderate category. Among the four indicators, prospective elementary teachers’ skills of decomposition and pattern recognition are higher than algorithm and abstraction/generalization.},
  author = {Putra, Zetra Hainul and Witri, Gustimal and Dahnilsyah and Gunawan, Yahya and Sumadinata, Herry and Putri, Arisya Ruspina},
  booktitle = {2024 2nd DMIHER International Conference on Artificial Intelligence in Healthcare, Education and Industry (IDICAIEI)},
  doi = {10.1109/IDICAIEI61867.2024.10842752},
  keywords = {Artificial intelligence; Education; Industries; Instruments; Medical services; Pattern recognition; abstraction; algorithm; computational thinking skills; decomposition; pattern recognition},
  month = {Nov},
  pages = {1-4},
  title = {Prospective Elementary Teachers’ Computational Thinking Skills: A Preliminary Study},
  year = {2024}
}

@article{merged146,
  abstract = {The rise of the Industrial Revolution 4.0 and the increasing reliance on the digital economy drive the need for a new set of skills, especially in robotics learning, that includes computational thinking (CT) and adversarial thinking (AT) for the young generation. The need for CT-related skills includes various fields, such as robotics, engineering, computer science, mathematics, music, arts, and humanities. Therefore, adopting robotic learning with CT and AT can enhance learning skills over the conventional learning model. This paper presents a systematic literature review on CT and AT practices in robotics learning to improve educational methods. This study conducts a systematic literature review from four databases: ACM, Scopus, IEEE Xplore, and ScienceDirect. Sixty-five studies in robotics learning to increase CT and AT skills were analyzed by applying the inclusion and exclusion criteria. The study’s findings show that CT and AT are significant in training students to engage in robotics learning activities. These considerations will lead to strengthening their skill and critical thinking. The study also suggests that integrating these skills can prepare teachers for critical thinking and boost student learning. The findings suggest that CT and AT can directly adopt digital adversarial learning skills to improve overall robotics learning activities. For future studies, the difference in learning ages related to robotics activities with CT and AT applications can be studied to deeply comprehend the effectiveness of CT and AT applications.},
  author = {Adnan, Noridayu and Abdullah, Siti Norul Huda Sheikh and Raja Yusof, Raja Jamilah and Zainal, Noor Faridatul Ainun and Qamar, Faizan and Yadegaridehkordi, Elaheh},
  doi = {10.1109/ACCESS.2023.3249761},
  issn = {2169-3536},
  journal = {IEEE Access},
  keywords = {Adaptation models; Computational modeling; Education; Fourth Industrial Revolution; Learning systems; Mathematical models; Robotics; Robots; Systematics; adversarial thinking; computational thinking; experiential learning model},
  pages = {44806-44827},
  title = {A Systematic Literature Review in Robotics Experiential Learning With Computational and Adversarial Thinking},
  volume = {11},
  year = {2023}
}

@inproceedings{merged147,
  abstract = {Block-oriented programming environments, such as Scratch and AppInventor, have become mainstream and have helped introduce non-programmers to algorithmic thinking; that is, to computational thinking (CT) skills. In various experiments, referenced in this paper, we observed how objects (tangibles) augmented with digital properties - that is, tangible user interface (TUI) objects - can help develop CT skills. We investigate which paradigm can be used to introduce CT skills with TUIs. By drawing on past experience, we conclude that block-oriented programming provides a suitable answer to our research questions. Furthermore, we introduce a framework for implementing block-oriented programmable objects that we believe can help end-users learn CT skills.},
  author = {Malizia, Alessio and Turchi, Tommaso and Olsen, Kai A.},
  booktitle = {2017 IEEE Blocks and Beyond Workshop (B&B)},
  doi = {10.1109/BLOCKS.2017.8120413},
  keywords = {Block-Oriented Programming; Computational Thinking Skills; Concrete; Programming; Programming environments; Protocols; Shape; Tangible User Interfaces; Tools; User interfaces},
  month = {Oct},
  pages = {61-64},
  title = {Block-oriented programming with tangibles: An engaging way to learn computational thinking skills},
  year = {2017}
}

@inproceedings{merged148,
  abstract = {Computational thinking (CT) has received increasing attention from educational researchers as a higher-order thinking skill. CT is a key factor that influences the learning process and facilitates the acquisition of knowledge and the improvement of students’ academic performance. However, the mechanisms of how CT affects students’ academic performance have yet to be explored in depth. Based on this, this study used a large-scale questionnaire to construct a model with problem-solving ability and learning anxiety as mediators with 8,134 Chinese elementary school students. The results showed that CT was a significant direct predictor of academic achievement; problem-solving ability and learning anxiety played significant mediator roles between CT and students’ academic achievement. CT can improve students’ problem-solving ability and reduce anxiety, which leads to better academic performance.},
  author = {Zhu, Zhifang and Zhang, Yi and Zhu, Wanze and Ma, Jingsi},
  booktitle = {2023 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET58841.2023.00027},
  issn = {2766-2144},
  keywords = {Anxiety disorders; Educational technology; Problem-solving; academic achievement; computational thinking; elementary; learning anxiety; problem-solving ability},
  month = {July},
  pages = {94-98},
  title = {Computational Thinking and Academic Achievement: The Mediator Roles of Problem-solving Ability and Learning Anxiety},
  year = {2023}
}

@inproceedings{merged149,
  abstract = {Computational thinking (CT) concept is a problem-solving approach that includes logical ordering, analyzing data and preparing solutions with the help of different visualization tools like flowcharts, graphs, pie charts etc. CT is not just used by computer programmer, but it can also be used by students and teachers in any classroom so that teaching learning process becomes successful. CT is an important element for the expansion of computer software, along with providing the huge support to problem solving skills across all disciplines of education like engineering, science, humanities and K12 education. It gives a logical idea to the students to solve a problem systematically using algorithm development, flowchart design and programming and problem-solving skills. CT increases the confidence among students in dealing with complexity of difficult problems, the capacity to handle complex issues and collaborate with others to find a shared purpose or solution. In this research paper, authors discuss the impact of CT among the students of different specialization of engineering and K12 by using different problem-solving techniques and strategies such as modeling, making sub goals, pruning and searching so that students will be able to think differently towards new problems.},
  author = {Rana, Deepak Singh and Dimri, Sushil Chandra and Malik, Preeti and Dhondiyal, Shiv Ashish},
  booktitle = {2022 4th International Conference on Inventive Research in Computing Applications (ICIRCA)},
  doi = {10.1109/ICIRCA54612.2022.9985593},
  keywords = {Computational modeling; Computational thinking; Data visualization; Flowcharts; Humanities; K12 education; Problem solving skills; Search problems; Software; Software algorithms},
  month = {Sep.},
  pages = {697-701},
  title = {Impact of Computational Thinking in Engineering and K12 Education},
  year = {2022}
}

@inproceedings{merged150,
  abstract = {Integrating the STEM concept and computational thinking (CT-STEM) comprehensively into the teaching of undergraduate courses can not only significantly improve teaching quality and effectiveness but also promote students' development in many aspects. However, how to effectively integrate CT-STEM into every link of undergraduate curriculum teaching by means of task-driven approaches, project-based cases and other methods still remains to be further explored and tapped. Based on this, taking the chapter "Database Connection and Application" as an example, this paper explores how to use a project-based case, the task-driven method, and group collaboration to comprehensively integrate CT-STEM into the teaching process of specialized courses through four key phases: pre-class design, in-class development, post-class assignments, and project evaluation. The purpose is to strengthen students' higher-order thinking and teamwork awareness, thereby improving their comprehensive abilities to analyze and solve complex problems. The entire idea of the project-based teaching design elaborated in this paper can serve as a valuable reference for university teachers and educators.},
  author = {Guo, Yansha},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11092204},
  keywords = {Computational modeling; Computer science; Databases; Design methodology; Education; Knowledge engineering; Layout; STEM; STEM concept; Teamwork; Technological innovation; computational thinking; project-based case; task-driven method; teaching design},
  month = {April},
  pages = {66-71},
  title = {Project-based Teaching Design for Undergraduate Computer Courses Incorporating STEM Concept and Computational Thinking},
  year = {2025}
}

@inproceedings{merged151,
  abstract = {With the concept of Computational Thinking proposed, how to cultivate students' Computational Thinking in basic computer courses has become the focus of basic computer education reform in recent years. Computational Thinking has gradually been recognized by computer educators and has become an important goal of basic computer education. According to the author's experience, the paper analyzes the reasons why students of literal arts also need to acquire Computational Thinking after summarizing the current research status of Computational Thinking at home and abroad. Regarding the cultivation of Computational Thinking ability as a higher level than knowledge learning and skill training, the paper puts forward some improving suggestions on how to cultivate Computational Thinking among students of liberal arts.},
  author = {Chen, Li and Xia, Jiaoxiong and Tao, Jie},
  booktitle = {2018 5th International Conference on Systems and Informatics (ICSAI)},
  doi = {10.1109/ICSAI.2018.8599435},
  keywords = {Art; Computational Thinking; Computer Foundation; Computer science; Economics; Educational Reform; Software; Students of Liberal Art; Training; Writing},
  month = {Nov},
  pages = {544-548},
  title = {Cultivating Computational Thinking Among Students Of Liberal Art In Basic Computer Courses},
  year = {2018}
}

@inproceedings{merged152,
  abstract = {Design thinking is considered as a creative, humancentred, participative, exploratory and problem-solving process that values different perspectives of a problem. In this study, we bring the design thinking in a curriculum framework of K-12 game creation by App Inventor which is currently popular block based programming environments for fostering Computational Thinking. In a case study on a middle-school students game creation course in Beijing, the students' creative thinking process and computational thinking skill are investigated in order to understand perceptions of App Inventor and physics cognitive knowledge involved in the game creation. The future work is to construct a framework of integrating the Design Thinking for cultivating K-12 students' computational thinking.},
  author = {Chen, Peng and Huang, Ronghuai},
  booktitle = {2017 IEEE 17th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT.2017.161},
  issn = {2161-377X},
  keywords = {App Inventor; Computational Thinking; Computer science education; Conferences; Design Thinking; Game Creation; Games; Physics; Programming profession},
  month = {July},
  pages = {139-141},
  title = {Design Thinking in App Inventor Game Design and Development: A Case Study},
  year = {2017}
}

@inproceedings{merged153,
  abstract = {This document presents some results obtained in the development of the pilot experience "My first steps in robotics". The activity is part of a doctoral research aimed at promoting programming skills and computational thinking through robotics in the early stages of school. In the formative experience participated teachers and students of pre-school education from a school in Salamanca, Spain, during the academic year 2016-2017. The proposed activities were based on solving problems through programming challenges with the Bee-Bot® robot. In order to collect data, questionnaires, rubrics, field diaries and interviews were used. The results show teachers and students favorably accepted the robotics resource used and the learning activities. In the same way, the performance achieved by the students marked a favorable level according to the evaluation scale used. Therefore, the development of the pilot experience was effective and useful in strengthening the research activities that were subsequently carried out.},
  author = {Caballero-González, Yen-Air and Muñoz, Lilia and Muñoz-Repiso, Ana García-Valcárcel},
  booktitle = {2019 7th International Engineering, Sciences and Technology Conference (IESTEC)},
  doi = {10.1109/IESTEC46403.2019.00113},
  keywords = {Education; Instruments; Medical services; Programming; Programming profession; Robot sensing systems; computational thinking; learning; robotics; young children},
  month = {Oct},
  pages = {601-606},
  title = {Pilot Experience: Play and Program with Bee-Bot to Foster Computational Thinking Learning in Young Children},
  year = {2019}
}

@inproceedings{merged154,
  abstract = {This paper mainly studies the features of problem theory, analyses the relationship between the problems and Bloom's taxonomy to train computational thinking, brings a method to construct problems using concept map. Then an instance of "data structure" curriculum is given, Our experience shows it is an effective way using the concept map to constructive teaching problems.},
  author = {Weiwei, Chen and Zhigang, Li and Aihua, Bao and Yanqin, Tang},
  booktitle = {2015 7th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME.2015.58},
  keywords = {Binary trees; Cognition; Problem-solving; Taxonomy; Training; computational thinking; concept map; data structure curriculum; problem-based teaching methods},
  month = {Nov},
  pages = {413-416},
  title = {Curriculum Design for Computational Thinking Training Based on Concept Map},
  year = {2015}
}

@inproceedings{merged155,
  abstract = {Current information technology courses have problems such as insufficient attention from students, unclear training goals and single teaching methods. Traditional teaching can no longer meet the needs of modern education, and the teaching reform of information technology courses is imperative. Therefore, this article proposes to apply gamification teaching to information technology courses to increase students’ interest in learning and cultivate students’ computational thinking, that is, the ability to use the basic concepts of computer science to solve complex problems. This article takes the secondary vocational information technology course as an example to study the specific application of gamification teaching, and proposes a case of “Gobang Game” to provide a reference for the implementation of gamification teaching.},
  author = {Ren, Xiaokang and Cai, Tiantian and Wang, Hong and Yang, Deyi},
  booktitle = {2021 2nd International Conference on Information Science and Education (ICISE-IE)},
  doi = {10.1109/ICISE-IE53922.2021.00083},
  keywords = {Computational Thinking; Computer science; Education; Gamification Teaching; Information Technology Course; Information science; Information technology; Optimization; Secondary Vocational Education; Training},
  month = {Nov},
  pages = {331-334},
  title = {Research on the Development of Secondary Vocational Students' Computational Thinking Based on Gamiflcation Teaching : —Taking the Secondary Vocational Information Technology Course as an Example},
  year = {2021}
}

@inproceedings{merged156,
  abstract = {Research purpose of the article is to explore new ideas for the reform of university computer basic courses. The proposed method starts with the background of the construction of new liberal arts and the demand for computational thinking and empowerment education. It aims at the current teaching status of college computer basic courses in application-oriented local undergraduate universities, and deeply analyzes the new situation faced by the reform of college computer basic courses. The result is to explore the path and methods of computer basic course reform in liberal arts universities from three aspects: setting course modules, reconstructing teaching content, and reforming teaching methods. The conclusion is a new idea for the reform of computer basic courses in universities.},
  author = {Zhang, Shiguang and Fang, Xiaonan and Yuan, Feng and Zhou, Ting},
  booktitle = {2023 13th International Conference on Information Technology in Medicine and Education (ITME)},
  doi = {10.1109/ITME60234.2023.00053},
  issn = {2474-3828},
  keywords = {Art; Basic courses; Career development; College Computer; Computational thinking; Correlation; Education; Empowerment education; Information technology; New liberal arts; Organizations; Technological innovation},
  month = {Nov},
  pages = {220-223},
  title = {The Reform and Practice of College Computer Basic Courses Towards Computational Thinking and Empowerment Education Under the Background of New Liberal Arts},
  year = {2023}
}

@inproceedings{merged157,
  abstract = {Computational thinking (CT) is recognized as a crucial problem-solving skill in the age of artificial intelligence. However, there remains a significant gap in the availability of intelligent tools that effectively foster computational thinking in line with contemporary educational needs. To address this, the present study proposes a gamified intelligent tutoring system that supports learners' CT development through a process-oriented assessment methodology and targeted guidance. The assessment framework leverages machine learning algorithms to construct predictive models based on the frequency of six behavioral elements observed during gameplay, including a process-oriented failure risk assessment model for formative evaluation and a summative computational thinking level assessment model. The system identifies the critical process element contributing most to the prediction outcome to provide targeted guidance for learners at risk of failure or exhibiting low computational performance. Using a dataset of 754 real learner cases, five machine learning algorithms were compared, and multi-metric evaluation confirmed strong predictive performance, with accuracy exceeding 80%. Logistic regression was selected as the final algorithm due to its simplicity, efficiency, and interpretability, ensuring practical applicability. The tool will enable the scaling and personalization of computational thinking development.},
  author = {Cen, Zhilin and Zheng, Linlin and Zhan, Zehui},
  booktitle = {2025 14th International Conference on Educational and Information Technology (ICEIT)},
  doi = {10.1109/ICEIT64364.2025.10975898},
  keywords = {Computational modeling; Focusing; Information technology; Logistic regression; Machine learning; Machine learning algorithms; Prediction algorithms; Predictive models; Problem-solving; Risk management; computational thinking; gamified Learning; intelligent tutoring system; machine learning; process-oriented assessment},
  month = {March},
  pages = {181-187},
  title = {Design and Performance Validation of a Computational Thinking Gamified Intelligent Tutoring System Focusing on Thinking Process},
  year = {2025}
}

@inproceedings{merged158,
  abstract = {This paper, based on findings in brain organization and cognitive neuroscience, proposed a more low-level and plausible architecture of human cognition, called CAUT, which can demonstrate the diagram and mechanism of human thinking. Comparing with existing models, three changes are made: (1) a pathway called inner loop is added from motor controller to thalamus; (2) a memory controller is added in front of long-term declarative memory, which can judge whether the memory operation is retrieval or not; (3) two new modules, Active Object buffer (AO) and Active Action buffer, are separated out of the general working memory model. With CAUT architecture, a dynamic cognitive model is put out with which typical thinking processes can be interpreted and described more precisely. Problem solving are demonstrated with this model, and two typical problems, decision problem and search problem, are interpreted. Experiments with ACT-R indicate that CAUT is consistent with ACT-R in functional level, and the description can be easily transformed into ACT-R model, and CAUT architecture can be taken as a meta-description and design tool to construct cognitive model. Experiments with ACT-R also indicate the effectiveness of CAUT architecture.},
  author = {Guangzuo, Cui and Wei Xuefeng and Lili Wang Boling},
  booktitle = {2011 Seventh International Conference on Natural Computation},
  doi = {10.1109/ICNC.2011.6022208},
  issn = {2157-9563},
  keywords = {Brain modeling; Cognition; Cognitive architecture; Cognitive model; Computational modeling; Computer architecture; Human thinking; Humans; Presses; Speech},
  month = {July},
  pages = {992-996},
  title = {A cognitive model of human thinking},
  volume = {2},
  year = {2011}
}

@inproceedings{merged159,
  abstract = {Computational thinking (CT) has been widely used to improve students' comprehension of mathematical and scientific subjects. However, there is a scarcity of information available regarding the challenges faced by students and the development of their conceptual knowledge in these learning environments, particularly in relation to the integrated curriculum. There is a need to help with course-level curriculum development to improve teaching and learning. Hence, this paper proposes an artificial intelligence-based student computational thinking analysis model (AI-SCTAM) to predict student engagement in learning and improve curriculum development. This research attempted to determine the association between student engagement measures using the machine learning (ML) method to determine the degrees of student involvement. The ML divides students into two groups: highly engaged and poorly engaged, according to the criteria used to measure their degree of involvement. The findings of the correlation study showed a positive association between engagement measures and performance. Analyzing the relationship between student engagement and performance will guide the development of course materials and activities. STEM education metrics based on engagement levels will be proposed to personalize students' learning experiences.},
  author = {K, Sowmiya and R, Umar Farook and B, Giridharan and A, Shalini},
  booktitle = {2025 International Conference on Machine Learning and Autonomous Systems (ICMLAS)},
  doi = {10.1109/ICMLAS64557.2025.10968634},
  keywords = {Analytical models; Artificial Intelligence (AI); Artificial intelligence; Computational Thinking; Computational modeling; Curriculum Development; Curriculum development; Machine Learning (ML); Machine learning; Pandemics; Programming profession; Public healthcare; Social factors; Training},
  month = {March},
  pages = {1292-1299},
  title = {Artificial Intelligence-Based Student Computational Thinking Analysis Model (AI-SCTAM) for Curriculum Development},
  year = {2025}
}

@inproceedings{merged160,
  abstract = {Self-efficacy is critical for improving computational thinking in gaming. However, conventional assessment methods like questionnaires can produce disengaged responses or require additional work to understand the questions and have limitations in the assessment of dynamic self-efficacy. To address this challenge, this study proposes a method using in-game features to assess self-efficacy, which can change over the playtime. The employed in-game feature is the Planning Stage, in which learners strategize and prepare their approach before engaging with challenges. We collect data on the time spent in this stage, which is newly proposed in this study. The experiment was conducted with twenty-five students in the Multimedia Technology and Animation Major playing Tenacity-P to accomplish tasks from a computer programming course. To validate the method, we compared self-efficacy results from the game-based approach with those from conventional questionnaires. The findings highlight the need for strategic planning in managing difficult tasks. As challenges increased, performance measures varied more, underscoring the importance of strong problem-solving skills. Efficient strategic planning directly improved self-efficacy, as participants with better planning skills maintained higher self-efficacy despite increasing task difficulty.},
  author = {Nobnop, Ratchanon and Chondamrongkul, Nacha and Temdee, Punnarumol},
  booktitle = {2024 5th Technology Innovation Management and Engineering Science International Conference (TIMES-iCON)},
  doi = {10.1109/TIMES-iCON61890.2024.10630739},
  keywords = {Animation; Computational Thinking; Educational game; Game features; Games; Innovation management; Particle measurements; Problem-solving; Real-time systems; Self-efficacy; Strategic planning},
  month = {June},
  pages = {1-4},
  title = {Assessing Self-Efficacy Method for Enhancing Computational Thinking in Educational Game Environment},
  year = {2024}
}

@inproceedings{merged161,
  abstract = {STEAM education has been paid much attention currently for fostering the interdisciplinary thinking abilities. However, the current learning content of STEAM almost focuses on the learning of STEM subjects and the cultivation of the Computational Thinking (CT), so the learning of ART subject is insufficient. Therefore, this paper proposes a Scheme of STEAM Interactive Learning Toy for Musical Thinking (MT) and Computational Thinking (ILT-MCT), to engage primary level elementary students in learning knowledge and concepts of the MT and CT both. In ILT-MCT scheme, children read the paper-based learning content (learning book) to learn the concepts of MT and CT, interact with a Mobile-based learning toy using substantial Programming Blocks, and further play the digital game-based learning content via the learning toy to enhance the learning motivation.},
  author = {Su, Jun-Ming and Liao, Chu-Ti and Chen, Chih-Ting and Wang, Li-Hung},
  booktitle = {2019 International Joint Conference on Information, Media and Engineering (IJCIME)},
  doi = {10.1109/IJCIME49369.2019.00032},
  keywords = {Art; Computational Thinking; Interactive Learning Toy; Music; Musical Thinking; Primary Level Elementary Students; Programming profession; STEM; Toy manufacturing industry},
  month = {Dec},
  pages = {116-118},
  title = {A Scheme of STEAM Interactive Learning Toy for Musical and Computational Thinking},
  year = {2019}
}

@inproceedings{merged162,
  abstract = {Computational Thinking (CT) is the new way of learning experience in this 21st century learning. It has been integrated through education in other developing countries like Australia, America and UK. In order for students and teachers in Malaysia to be equipped with this new skill, this research study has employed action research and qualitative research methodologies. A new framework known as CICP has been constructed to integrate CT in higher educational curriculum. This research study has also shown two different components of student's learning experience.},
  author = {Azman, Sharifah Maryam Syed and Arsat, Mahyuddin and Mohamed, Hasnah},
  booktitle = {2017 IEEE 6th International Conference on Teaching, Assessment, and Learning for Engineering (TALE)},
  doi = {10.1109/TALE.2017.8252305},
  issn = {2470-6698},
  keywords = {Computational modeling; Concrete; Education; Interviews; Object recognition; Planning; Technological innovation; computational thinking; ideation stage; innovation course},
  month = {Dec},
  pages = {61-65},
  title = {The framework for the integration of computational thinking in ideation process},
  year = {2017}
}

@inproceedings{merged163,
  abstract = {Computational thinking (CT) is a set of abilities, which has lately acquired great relevance because it brings to students the components to handle in-formation and develop analytical skills, which allows them to perform ac-cording to today's society. In this study, the authors describe the development of a formative assessment tool for Scratch programming. This web tool allows school teachers to design challenges for their students, supports the assessment of CT dimensions, gives feedback to students through the challenges' results and a gamified strategy, and keeps a track of the development of CT for each student.},
  author = {Orozco-Garcia, Laura and Gonzalez, Carolina and Montano, Juan and Mondragon, Cristian and Tobar-Munoz, Hendrys},
  booktitle = {2019 International Conference on Virtual Reality and Visualization (ICVRV)},
  doi = {10.1109/ICVRV47840.2019.00043},
  issn = {2375-141X},
  keywords = {Assessment Too; Computational Thinking; Computational intelligence; Education; Electronic mail; Programming profession; Scratch programming; Servers; Tools},
  month = {Nov},
  pages = {185-188},
  title = {A Formative Assessment Tool to Support Computational Thinking in the Classroom},
  year = {2019}
}

@inproceedings{merged164,
  abstract = {Computational thinking (CT), one of the 21st-century essential competencies, has been broadly accepted by artificial intelligence (AI) and STEM. However, little was conducted to explore its potential in foreign language (FL) learning and teaching. To examine its possibilities, the relevant challenges, computer-language input and output process, and literature shreds of evidence were offered and analyzed. English grammar learning and teaching practice based on CT principal skills steps-focused mode further confirmed its social mediation tool in English learning and teaching.},
  author = {Tang, Youjun and Ma, Xiaomei},
  booktitle = {2023 International Conference on Artificial Intelligence and Education (ICAIE)},
  doi = {10.1109/ICAIE56796.2023.00016},
  keywords = {Big Data; Computational modeling; EFL grammar learning and teaching; EFL learning and teaching; Education; Learning (artificial intelligence); Natural languages; Syntactics; Vocabulary; challenges; computational thinking; possibilities},
  month = {March},
  pages = {20-24},
  title = {Can Computational Thinking contribute to EFL learning and teaching?},
  year = {2023}
}

@inproceedings{merged165,
  abstract = {The monotonicity of traditional teaching mode and the high demandingness of modern project-oriented teaching method determine that single teaching mode cannot reach adequate teaching performance. In consistence with the teaching characteristics of Python course and the current situation of computational thinking applied in college computer education, this paper proposed the progressive hybrid teaching mode which adopts staged teaching methods for ability enhancement to comprehensively improve students' practical skills in Python programming.},
  author = {Ren, Haodong and Yang, Li and Jiang, Liheng and Bai, Yu and Lu, Wei and Chang, Jie},
  booktitle = {2021 IEEE 3rd International Conference on Computer Science and Educational Informatization (CSEI)},
  doi = {10.1109/CSEI51395.2021.9477642},
  keywords = {Case analysis method.; Computational modeling; Computational thinking; Conferences; Education; Problem-solving; Programming profession; Python; Socratic method},
  month = {June},
  pages = {81-84},
  title = {A Computational-thinking-oriented Progressive Teaching Mode for Python Course},
  year = {2021}
}

@inproceedings{merged166,
  abstract = {Maths is presently regarded as the key driver that underpins Science, Education and Technology (SET) skills. In spite of significant studies, investment and efforts, math skills and widespread enthusiasm for SET remain elusive. In South Africa's disadvantaged communities, poor quality maths teaching and poor maths performance, both legacies of past political engineering, further fuel marginalization. Computational thinking is a new characterization of some specific procedural thinking, abstraction, problem solving and organizational skills that are finding their way from computer science programs into other fields. The paper describes our refocus of content in BingBee, a SET skill-building kiosk project targeting disadvantaged communities. As we shift to emphasize computational thinking more explicitly, we speculate that these skills could complement, and perhaps eventually displace, some elements of maths as the dominant driver of SET. The confluence of better tools, open service interfaces, and the rapid spread of handsets and devices into marginalized communities is an opportunity to build more widespread computational thinking skills. This could in turn facilitate a future Internet which is more inclusive, and in which users are able to create their own services.},
  author = {Wentworth, Peter},
  booktitle = {2010 ITU-T Kaleidoscope: Beyond the Internet? - Innovations for Future Networks and Services},
  keywords = {Computational thinking; Computer science; Educational institutions; Games; Internet; Mathematics; Problem-solving; abstraction; cognitive skills; marginalized communities; problem solving},
  month = {Dec},
  pages = {1-5},
  title = {Can computational thinking reduce marginalization in the future Internet?},
  year = {2010}
}

@inproceedings{merged167,
  abstract = {The use of video scenarios is an active learning approach designed to aid in the development of computational and entrepreneurial thinking skills. Video scenarios present problems in the context of lifelike settings in order to emphasize the complexity as well as creative potential presented by problems which are diverse, multi-layered and frequently ill-defined. Students must carefully observe and critically listen to the characters in the videos in order to understand the problems they are experiencing. Through discussion, design or implementation, students explore potential ways in which computing can be used to help the characters solve their problems. The approach is designed to develop creative problem solving skills, while also encouraging students to view themselves as capable of entrepreneurship and innovation in computing. The videos are freely available on the website www.virt-u.org, and can be used for a wide range of learning activities.},
  author = {Spezialetti, Madalene},
  booktitle = {2010 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2010.5673382},
  issn = {2377-634X},
  keywords = {Communities; Companies; Computer science; Context; Educational institutions; Facebook; Problem-solving; active learning; computational thinking; entrepreneurial thinking; video scenarios},
  month = {Oct},
  pages = {F2C-1-F2C-2},
  title = {Work in progress — The video scenario approach for developing computational and entrepreneurial thinking skills},
  year = {2010}
}

@inproceedings{merged168,
  abstract = {A CDM (cognitive design medium) is defined as a medium which supports the cognitive nature of design in computerized environments. We review the theoretical background and demonstrate the basis upon which an interactive counterpart can be achieved in supporting the cognitive capabilities of the designer, such as visual thinking. The approach is elaborated and illustrated by experimental work in the area of conceptual design. We define three phenomena related to visual thinking in design which are characteristic of conceptual design: ideation, re-representation, and the evocation of generic representations. Finally, we demonstrate through examples how interactive computational environments can support these cognitive design phenomena.},
  author = {Oxman, R.},
  booktitle = {Proceedings. 1998 IEEE Conference on Information Visualization. An International Conference on Computer Visualization and Graphics (Cat. No.98TB100246)},
  doi = {10.1109/IV.1998.694219},
  issn = {1093-9547},
  keywords = {Buildings; Cognition; Computational modeling; Computer architecture; Couplings; Graphics; Process design; Psychology},
  month = {July},
  pages = {192-195},
  title = {Computational support for visual thinking in design ideation},
  year = {1998}
}

@inproceedings{merged169,
  abstract = {For students majored in computer science, the ability to have computational thinking is an essential skill. Facilitating computational thinking cannot only help students understand the professional knowledge and principles of computer, but also bring new ideas to addressing complex problems, therefore, many colleges and universities have carried out computer professional curriculum reform based on computational thinking. Due to the high degree of abstraction of computational thinking, traditional teaching methods will cause students to understand computational thinking only at the conceptual level, and cannot realize the flexible use of computational thinking concepts. This study takes the software engineering course as an example to explain how to integrate the concepts of computational thinking into the original courses. The goal is to enable students to understand software engineering contents problems from the perspective of problem-solving.},
  author = {Dong, Xueyan and Jia, Jingpeng},
  booktitle = {2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE)},
  doi = {10.1109/ICAICE51518.2020.00084},
  keywords = {Artificial intelligence; Computational Thinking; Computer science; Education; Problem Solving; Problem-solving; Software; Software Engineering; Software design; Software engineering; Teaching Reform},
  month = {Oct},
  pages = {399-402},
  title = {Teaching Reform of Software Engineering Course Based on Computational Thinking},
  year = {2020}
}

@inproceedings{merged170,
  abstract = {With the introduction of computer programming in schools around the world, Scratch has risen in prominence for its thinkable, meaningful and social. Aiming to assessing the Computational Thinking skills of a Scratch program, we design and implement a new Scratch program analysis tool based on ANTLR. To solve some flaws (e.g., high failure rate and low efficiency) in Dr. Scratch which is the most relevant tool to assess Computational Thinking skills of Scratch programs, we choose the recognition tool ANTLR to design the system module and the assessing flow. And then, we customize more than 200 lexical and syntax parser rules in ANTLR. Furthermore, we expand the grading standard of assessing Computational Thinking skills in Dr. Scratch. Some fundamental concepts in Computer Science, such as stack, queue and recursion method, are involved in our grading standard. Experiment results show the performance (e.g., success rate, execution time) of SAT is superior to that of Dr. Scratch.},
  author = {Chang, Zhong and Sun, Yan and Wu, Tin-Yu and Guizani, Mohsen},
  booktitle = {2018 14th International Wireless Communications & Mobile Computing Conference (IWCMC)},
  doi = {10.1109/IWCMC.2018.8450296},
  issn = {2376-6506},
  keywords = {ANTLR; Analysis Tool; Computational Thinking; Grammar; Python; Scratch; Standards; Syntactics; Tools; Visualization},
  month = {June},
  pages = {950-955},
  title = {Scratch Analysis Tool(SAT): A Modern Scratch Project Analysis Tool based on ANTLR to Assess Computational Thinking Skills},
  year = {2018}
}

@inproceedings{merged171,
  abstract = {In recent years, engineering education has become one of the challenging issues in Thailand education. By teaching and learning subjects independently, students are limited to subject-oriented problems, which are not in reality. To address these flaws, integrating knowledge across disciplines becomes significantly necessary. In the past years, STEM has been accepted as one of the effective strategies to bridge the difference in nature of each field to construct more practical projects and innovations. Moreover, the educational robot can be employed as a learning tool in that strategy since it not only provides challenging learning missions but also promotes computational thinking for the students. Therefore, this research study proposed STEM learning activities on three-day workshop to lay out the foundation to the high-school science-and-technology students who are becoming the engineering students. The workshop comprises of eight phases to facilitate their learning inquiry process with hands-on experience; moreover, the activities were designed in consideration of promoting computational thinking with challenging learning missions. The findings of this study showed that the proposed workshop activities are beneficial for the students who outperformed on robotics with higher computational thinking; meanwhile, they could provide more relevant responses regarding the proposed learning activities.},
  author = {Chookaew, Sasithorn and Howimanporn, Suppachai and Pratumsuwan, Pornjit and Hutamarn, Santi and Sootkaneung, Warin and Wongwatkit, Charoenchai},
  booktitle = {2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI.2018.00047},
  keywords = {Conferences; Programming profession; Robot sensing systems; STEM; computational thinking; educational robot; engineering education},
  month = {July},
  pages = {204-208},
  title = {Enhancing High-School Students' Computational Thinking with Educational Robotics Learning},
  year = {2018}
}

@inproceedings{merged172,
  abstract = {Algorithmic thinking is one of the main key concepts in computational thinking. With using computers in close to all areas of our lives, the progress of algorithmic solutions to problems is very crucial. The comprehension of the character of problems and their algorithmic solutions is enormously most important for everyone. Algorithmic thinking is the capability to realize, execute, assessment, and create computational procedures for solving problems. This paper presents Alg-Design, a visual and block based programming environment to facilitate novices to improve the comprehension of Algorithmic thinking using programming and computing. The visual programming environment motivates students and they find enjoyable while creating personally meaningful projects.},
  author = {Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle = {2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  doi = {10.1109/ICCCNT.2018.8493952},
  keywords = {21st century learning skills; Algorithmic thinking; Chaos; Computational thinking; Games; K-12 education; Programming environments; Programming profession; Sprites (computer); Visualization; block based programming},
  month = {July},
  pages = {1-6},
  title = {Alg-Design: Facilitates to Learn Algorithmic Thinking for Beginners},
  year = {2018}
}

@article{merged173,
  abstract = {Contribution: This document presents a systematic bibliographic review that demonstrates the need to conduct research on how the user experience impacts the development of computational thinking. Background: In the field of computer science, computational thinking is defined as a method that enhances problem-solving skills, system design, and human behavior understanding. Over the last few decades, several tools have been proposed for the development of computational thinking skills; however, there is no area of study that evaluates the implications or the impact that these types of platforms have on users belonging to any knowledge area. Research Question: Do user interfaces influence the development of computational thinking skills? Methodology: To address this issue, a systematic review of the literature was conducted using the preferred reporting items for systematic reviews and meta-analyses (PRISMA) methodology for analyzing and evaluating scientific publications. Findings: The results show that despite the dearth of literature on the subject, the specific design of a user interface has a significant impact on the development of computational thinking. Bearing the above in mind, it is necessary to conduct research that delves more deeply into the effects caused by the technologies that are used to develop computational thinking, this being a line of research that is worthy of consideration.},
  author = {Rijo-García, Sara and Segredo, Eduardo and León, Coromoto},
  doi = {10.1109/TE.2022.3159765},
  issn = {1557-9638},
  journal = {IEEE Transactions on Education},
  keywords = {Computational modeling; Computational thinking; Libraries; Programming profession; Systematics; Usability; User experience; User interfaces; human–computer interaction; preferred reporting items for systematic reviews and meta-analyses (PRISMA); survey; systematic review; usability; user experience; user interface; visual programming},
  month = {Nov},
  number = {4},
  pages = {647-656},
  title = {Computational Thinking and User Interfaces: A Systematic Review},
  volume = {65},
  year = {2022}
}

@inproceedings{merged174,
  abstract = {Human control thinking process maybe classified as two kinds which are active control thinking process and passive control thinking process. The control methods and strategy of each control thinking process are discussed in this paper, the storage and mining of control experiences are analyzed. The test results are given in this paper, it is proved that the research content is right and could be used in the process control. It provides the basis for Human-like intelligent control to be used in complex system},
  author = {Wang, Peijin},
  booktitle = {The Proceedings of the Multiconference on "Computational Engineering in Systems Applications"},
  doi = {10.1109/CESA.2006.4281993},
  keywords = {Application software; Artificial intelligence; Computational modeling; Computer Control; Computer science; Computer simulation; Control systems; Human thinking; Human-like Intelligent Control; Humans; Intelligent Control; Intelligent control; Process control; Systems engineering and theory},
  month = {Oct},
  pages = {2146-2150},
  title = {Analysis and Implementation of Human Control Thinking Process},
  volume = {2},
  year = {2006}
}

@inproceedings{merged175,
  abstract = {Game-based learning (GBL) can motivate learners and enable them to engage in their learning experience. Additionally, the popularity of GBL has grown in computer science and programming courses, where it can be used to develop computational thinking (CT) skills. CT is critical thinking used to apply fundamental concepts and reasoning derived from computing and computer science. Research has shown that digital GBL can improve critical thinking skills and help learners understand programming concepts, structures, and problem-solving strategies. Despite the popularity of digital GBL, analog card games and bingo games are still valuable and effective tools for learning. However, most studies on GBL that aim to train critical thinking skills have focused on digital approaches. This indicates a gap in the body of knowledge because few studies have explored the effectiveness of analog games for developing CT skills through GBL. The theoretical framework of this study is grounded in two learning theories. Constructivist theory frames learning as the construction of knowledge through a process of action, reflection, and construction. Constructionist learning theory calls for construction of artifacts, learner agency, authentic purpose, or authentic audience during the process. To investigate the design of GBL for developing CT skills and to generate discourse for its widespread adoption, the current study implemented design-based research (DBR) in an undergraduate computer science course for non-computer science majors. By addressing the gap in the literature on GBL for CT skill development, the study aimed to investigate complex learner experiences, including learner struggles and successes, alignment with learning theory principles, and design moves for future iterations of the project. The research question posed is: how can we optimize CT learning through GBL, based on learner experiences and learning theories? Prior to this study, the instructor used GBL in which learners played an analog, three-dimensional tic-tac-toe game with ping pong balls and then wrote a computer program that simulated that game. We chose to conduct DBR to strengthen the learning associated with this activity. DBR uses iterative designs to develop knowledge that improves educational practices. In the spring of 2023, we assessed the extent to which the non-digital game and programming the simulated game enhanced learners' CT skills by analyzing their experiences with CT. This involved collecting and analyzing learner surveys to gain insight into their learning experiences. Using network analysis and betweenness centrality measures, the data will be analyzed to identify learner struggles and successes. The results are expected to be available by August 2023. The contributions of this study include identifying effective design principles for GBL, optimizing CT learning, and generating discourse for the widespread adoption of GBL in computer science education.},
  author = {Adam, Kelli and Lightfoot, Robert and Chowdhury, Mahjabin and Phillip Donaldson, Jonan},
  booktitle = {2023 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE58773.2023.10342931},
  issn = {2377-634X},
  keywords = {Computer science education; Digital simulation; Education; Games; Reflection; Solids; Surveys; analog; computational thinking; computer science; constructionist; constructivist; design-based research (DBR); game-based learning (GBL); undergraduate},
  month = {Oct},
  pages = {1-4},
  title = {Cultivating Computational Thinking through Game-Based Learning},
  year = {2023}
}

@inproceedings{merged176,
  abstract = {Computational thinking is the systematic approach of defining a problem and crafting its solution. It employs computer programming algorithms to address scientific, engineering, and mathematical challenges using programming languages. Feedback plays a pivotal role in the learning journey of computational thinking. It is widely recognized that offering timely feedback to students on their computational endeavors significantly contributes to their achievement and overall satisfaction with the course. This research explores the implementation of an automated feedback system designed to evaluate and offer early feedback on computer engineering projects. The aim is to integrate best practices and software tools related to computational thinking into the thinking and learning processes within an engineering curriculum. Preliminary findings suggest that the automated feedback system enhances students' computational skills and improves their performance in the course. We anticipate that the insights gained from this research will inform the enhancement of curricula and course evaluations across different computational thinking tasks, disciplines, and courses.},
  author = {Parsa, Faraz and Moghadam, Amir Ali Amiri and Ashuri, Turaj},
  booktitle = {SoutheastCon 2024},
  doi = {10.1109/SoutheastCon52093.2024.10500041},
  issn = {1558-058X},
  keywords = {Automated Feedback System; Best practices; Computational Thinking; Computer Programming; Computer languages; Programming; Software Engineering; Software engineering; Software tools; Systematics; Task analysis},
  month = {March},
  pages = {1621-1626},
  title = {Automated Feedback in Software Engineering: Enhancing Computational Thinking Process},
  year = {2024}
}

@inproceedings{merged177,
  abstract = {This Work-in-Progress study focuses on computational thinking (CT) in children. Women, minorities, and persons with disabilities are currently underrepresented in STEM education and careers. However, providing appropriate early CT learning opportunities can potentially help learners develop both interest and self-efficacy in computer science and STEM fields.Our research aims to characterize computational thinking and engineering thinking for K-2 aged children. In this paper, we report on our findings of children exploring a recently installed exhibit at a local Midwestern science center. The exhibit was designed to help children learn about engineering careers and CT, and provides different learning activities to elicit CT in children from diverse learning groups. The exhibit provides information about different engineering disciplines/fields, and examples of engineers from diverse groups (i.e. it includes images of people of different races, ethnicities, gender, and ability).In this study, we audio- and video-recorded families while they explored the exhibit. They then participated in interviews and completed surveys. The video data provided evidence that children can engage in a range of CT competencies in the computer-supported coding game. Our findings can help us further consider how families can support children as they learn CT skills in out-of-school environments.},
  author = {Ehsan, Hoda and Ohland, Carson and Dandridge, Tikyna and Cardella, Monica},
  booktitle = {2018 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2018.8659268},
  issn = {2377-634X},
  keywords = {Animals; Computational Thinking; Computed tomography; Encoding; Engineering Education; Games; Out-of-School; Robots; STEM},
  month = {Oct},
  pages = {1-5},
  title = {Computing for the Critters: Exploring Computational Thinking of Children in an Informal Learning Setting},
  year = {2018}
}

@inproceedings{merged178,
  abstract = {This Research to practice work in progress paper explores teachers' experiences about a professional development program focused on discipline-based computational thinking (CT). The goal of the program is to integrate computational practices into disciplinary learning environments at the K-12 level in Colombia. To promote this integration and to explore teachers' conceptions and possible scenarios to integrate CT in this context, the research team designed, implemented, and assessed a 20-hour professional development program with 21 teachers from public middle and high schools in Antioquia, Colombia. The program introduced the concepts and practices of CT and discussed why these are relevant for students to learn. A use-modify-create instructional sequence was used as the pedagogical approach to scaffold participants' learning process. At the end of the workshop, the teachers completed a survey regarding their experience in the program. Preliminary results indicate that the participating teachers increased their knowledge and interest to integrate computational thinking practices into their disciplinary learning environments.},
  author = {Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
  booktitle = {2021 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE49875.2021.9637310},
  issn = {2377-634X},
  keywords = {Conferences; Professional Development; computational thinking; k-12; teachers},
  month = {Oct},
  pages = {1-4},
  title = {Professional Development in Computational Thinking for teachers in Colombia},
  year = {2021}
}

@inproceedings{merged179,
  abstract = {Computational thinking, also called structural thinking is characterized by design and construction. In view of the existing problems of traditional teaching methods in high vocational colleges, we propose a teaching method aimed at developing the computational thinking of students. This article analyses the courses of high vocational colleges and the characteristics of students firstly. Then we design the teaching activities based upon the principles and strategies of computational thinking. Finally we offer a real teaching case. The teaching evaluations from students indicate that the teaching method based on computational thinking is very effective.},
  author = {Shuiyan He and Yongmin Hang and Yi Ding},
  booktitle = {2014 9th International Conference on Computer Science & Education},
  doi = {10.1109/ICCSE.2014.6926576},
  keywords = {Computers; Educational institutions; High vocational colleges; Laboratories; active directory; computational thinking},
  month = {Aug},
  pages = {817-820},
  title = {Teaching method based on computational thinking a case research},
  year = {2014}
}

@inproceedings{merged180,
  abstract = {The development of computational thinking skills through computer programming is a major topic in education, as governments around the world are introducing these skills in the school curriculum. In consequence, educators and students are facing this discipline for the first time. Although there are many technologies that assist teachers and learners in the learning of this competence, there is a lack of tools that support them in the assessment tasks. This paper compares the computational thinking score provided by Dr. Scratch, a free/libre/open source software assessment tool for Scratch, with McCabe's Cyclomatic Complexity and Halstead's metrics, two classic software engineering metrics that are globally recognized as a valid measurement for the complexity of a software system. The findings, which prove positive, significant, moderate to strong correlations between them, could be therefore considered as a validation of the complexity assessment process of Dr. Scratch.},
  author = {Moreno-León, Jesús and Robles, Gregorio and Román-González, Marcos},
  booktitle = {2016 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2016.7474681},
  issn = {2165-9567},
  keywords = {Complexity theory; Correlation; Dr. Scratch; Fitting; Measurement; Programming profession; Scratch; Vocabulary; assessment tools; complexity; computational thinking; programming; software metrics},
  month = {April},
  pages = {1040-1045},
  title = {Comparing computational thinking development assessment scores with software complexity metrics},
  year = {2016}
}

@inproceedings{merged181,
  abstract = {This study explored the role of visual programming activities in computational thinking. A group of 158 freshmen majoring in information science and communication in Northern Taiwan were engaged in this study. A visual programming platform, computational thinking questionnaire and a programming examination were employed to collect the log data of programming activities, self-responses to computational thinking and the score of programming examination for later analyses. The results reveal that visual programming activities would be critical to the evolution of multiple computational thinking perspectives.},
  author = {Lin, Chia-Ching and Chao, Po-Yao and Lin, En-Ting and Tzeng, Huei-Lin},
  booktitle = {2018 1st International Cognitive Cities Conference (IC3)},
  doi = {10.1109/IC3.2018.00-43},
  keywords = {Computer aided instruction; Conferences; Data collection; Problem-solving; Programming; Urban areas; Visualization; computational thinking; problem solving; programming learning; visual programming},
  month = {Aug},
  pages = {135-138},
  title = {Exploring the Role of Visual Programming Activities in Computational Thinking},
  year = {2018}
}

@inproceedings{merged182,
  abstract = {As a fundamental and introductory course in undergraduate education, Computer Basis aims to cultivate the scientific computational thinking mode and the ability of solving problem for students who are not the computer majors. In this study, a new pedagogical method named PBL-VP combining the Problem-Based Learning (PBL) and the visual programming Blockly was applied to Computer Basis. This paper described a classical example about problem solving to explain the teaching process of the PBL-VP in detail. The process of problem solving was divided into several operable steps to gradually guide students to analyze problems, provide solutions and establish scientific logic thinking. Blockly was introduced to obscure the grammar of programming language and implement the algorithm visually. Finally, we evaluated the effectiveness of the PBL-VP teaching method on student learning by a contrast test. The empirical results proved that students in the class with PBL-VP earned higher final grades and the teaching method we proposed played a positive role in computer general education.},
  author = {Gao, Peipei and Lu, Mingxiao and Zhao, Hong and Li, Min},
  booktitle = {2019 14th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE.2019.8845503},
  issn = {2473-9464},
  keywords = {Education; Mathematical model; Navigation; Problem-Based Learning (PBL); Problem-solving; Programming profession; Visualization; computational thinking; computer general education; problem solving; visual programing},
  month = {Aug},
  pages = {304-308},
  title = {A New Teaching Pattern Based on PBL and Visual Programming in Computational Thinking Course},
  year = {2019}
}

@inproceedings{merged183,
  abstract = {This study attempted to carry out interdisciplinary learning activities which integrate computational thinking into language learning. The participants were 56 5th-grade Chinese as a Second Language (CSL) students in Singapore. The students were required to learn the ability to apply conditional complex sentences in Chinese language and learn the conditional structural logic through coding educational robots to interact with each other in Chinese. The results showed that the students improved significantly in the linguistic knowledge. Furthermore, the computer programming self-efficacy of the students has also promoted significantly in terms of logical thinking, control and debugging. The students had also shown a high level of learning engagement, low anxiety and a high intention in the robot coding activity. This study presented the empirical results of this cross-domain integration of educational robots and language learning, providing a reference and teaching practices for future teachers.},
  author = {Hsu, Ting-Chia and Wong, Lung-Hsiang and Aw, Guat Poh},
  booktitle = {2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT49669.2020.00077},
  issn = {2161-377X},
  keywords = {Chinese as a Second Language; Computational Thinking; Computer Programming Self-Efficacy; Education; Educational Robots; Educational robots; Encoding; Linguistics; Programming profession},
  month = {July},
  pages = {236-237},
  title = {Learning Chinese as a Second Language by Educational Robots Integrating the Operation of Conditional Logic in Computational Thinking and the Usage of the Causal Sentences},
  year = {2020}
}

@inproceedings{merged184,
  abstract = {This study intended to explore the definitions and components of CT (computational thinking) and establish a framework that depicts the relationship between CT and problem-solving procedures. The framework is expected to aid in the development of CT pedagogy and assessment. CT is defined as a problem-solving process and method, utilizing "computer science concepts" and "digital technology skills" to develop strategic methods to solve specific problems, and ten components are synthesized as the main facets of CT in correspondence with the progressive phases of problem-solving. The CT framework is expected to provide guidelines for teachers and students to understand the essence of CT so that students' higher order thinking can be promoted osmotically.},
  author = {Jeng, Hi-Lian and Liu, Li-Wen and Chen, Chung-Nien},
  booktitle = {2019 8th International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI.2019.00061},
  keywords = {Computational Thinking; Pedagogy and Assessment; Procedural Problem solving-based Framework},
  month = {July},
  pages = {272-277},
  title = {Developing a Procedural Problem-solving-based Framework of Computational Thinking Components},
  year = {2019}
}

@inproceedings{merged185,
  abstract = {This research article assesses the concepts of Computational Thinking (CT) as applied in basic education. Although widely used in K12 education, many articles indicate a lack of uniformity in the conceptualization of CT. CT is defined as the systematic problem-solving ability based on algorithmic processes. It is seen as crucial for stimulating interest and diversity in STEM careers. Effective CT teaching requires precise conceptualization and appropriate teaching techniques. With the world's increasing digitization, CT is considered as fundamental as reading or math skills and should be taught from K12 education. This article reports a systematic mapping of CT con-cepts applied in K12 activities, reflecting on the chosen activities and teaching techniques. Despite some articles highlighting the unclear definition of CT, there is a notable agreement on its key concepts. The study used the IEEEXplore database, analyzing primary articles from 2019–2023. The findings reveal a high degree of similarity in CT concepts, indicating a trend towards standardization. A catalog of frequently cited activities used to teach CT is presented, aiding teachers in introducing CT in their classes. This study supports the development of teaching policies and initiatives. contributing to STEM interest and diversity.},
  author = {Hagstrom, Rodrigo and Rezende, Calebe and de Oliveira Brandão, Leonidas and Brandão, Anarosa Alves Franco and da Silva Neves Lima, Priscila},
  booktitle = {2024 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE61694.2024.10892901},
  issn = {2377-634X},
  keywords = {Databases; Education; Engineering profession; K12; Market research; Problem-solving; STEAM; STEM; STEM education; Standardization; Systematics; computational thinking; computational thinking concepts},
  month = {Oct},
  pages = {1-9},
  title = {What Concepts of Computational Thinking are Being Effectively Used in K12 Education: A Systematic Mapping},
  year = {2024}
}

@inproceedings{merged186,
  abstract = {The role of computing in society is fundamental for the political, economic and cultural development of countries, especially in a globalized context. Computational thinking is an extremely important skill in the education of young students, since the ability of intuitively abstracting information and knowledge promotes an expansion of the learning dimension. This study aims to gather approaches used for teaching computational thinking exclusively to high school students, highlighting their performance and motivation resulting from the applications of such approaches. In order to answer our research question, a systematic mapping of the analysis of 15 studies was conducted. The use of computer programming proved to be the most used way to disseminate computational thinking. The students who participated in approaches regarding the insertion of computational thinking in the classroom showed positive impact on the development of classroom activities, as well as motivation to learn.},
  author = {Ribeiro Silva, Laíza and Pedro da Silva, Alan and Toda, Armando and Isotani, Seiji},
  booktitle = {2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT.2018.00072},
  issn = {2161-377X},
  keywords = {Approach; Computational Thinking; Databases; Education; K-12; Programming profession; Robots; Systematics; Tools},
  month = {July},
  pages = {285-289},
  title = {Impact of Teaching Approaches to Computational Thinking on High School Students: A Systematic Mapping},
  year = {2018}
}

@inproceedings{merged187,
  abstract = {The purpose of this study is to develop and test a pedagogical platform for teaching computational thinking through tangible and mobile technologies. Arducation Bot combines educational robotics and mobile application to create an intuitive and less intimidating approach in computational thinking and computer science. A large-scale testing of Arducation Bot platform was conducted with 180 high school students from Thailand and Japan. A strong pattern of improved computational thinking was shown in the collected data. Arducation Bot shows its universal appeal or suitability for pupils with different nationalities and backgrounds. Teachers and educators could potentially benefit from applying this mobile application and tangible technology platform to help students understand computational thinking skill - an imperative skill for the 21st century.},
  author = {Phetsrikran, Titiphan and Massagram, Wansuree and Phoka, Thanathorn and Harfield, Antony},
  booktitle = {2018 22nd International Computer Science and Engineering Conference (ICSEC)},
  doi = {10.1109/ICSEC.2018.8712671},
  keywords = {Bluetooth; DC motors; Robot sensing systems; Software; Tablet computers; computational thinking; educational robotics; mobile technology; pedagogy; tangible technology},
  month = {Nov},
  pages = {1-6},
  title = {A Feasibility Study of Arducation Bot : An Educational Robotics and Mobile Application Kit for Computational Thinking Skills},
  year = {2018}
}

@inproceedings{merged188,
  abstract = {This study aims to investigate students’ engagement in computational thinking skills through game-based learning in science classrooms. Data was gathered through observation and interviews with 30 secondary school students. Research data were analyzed qualitatively through six stages involving preparing and organizing data, exploring data, developing descriptions, representing results, interpreting findings, and validating the accuracy of findings. The study results show that game-based learning makes students engaged in computational thinking skills. Interaction with educational games trains students to find solutions more precisely and bravely in making decisions. Game-based learning can be a solution to introduce students’ computational thinking skills in a more enjoyable way. Teachers are expected to use this research to teach students computational thinking skills through game-based learning.},
  author = {Handayani, Rif’Ati Dina and Prastowo, Srihandono Budi and Jamalludin and Triyanto and Thohir, Mohammad Anas},
  booktitle = {2023 9th International Conference on Education and Technology (ICET)},
  doi = {10.1109/ICET59790.2023.10435201},
  issn = {2770-4807},
  keywords = {Atmosphere; Education; Games; Interviews; computational thinking; game-based learning; student engagement},
  month = {Oct},
  pages = {148-151},
  title = {Students’ Engagement in Computational Thinking Skills Using A Game Based-Learning},
  year = {2023}
}

@inproceedings{merged189,
  abstract = {The objective of this article was to determine the level of development of computational thinking of teachers who are in service and who are studying for a postgraduate degree in Education. The research approach was quantitative, descriptive, and non-experimental, the sample consisted of 100 teachers from different educational levels (initial, primary, secondary, and higher education), where the Aman Yadav questionnaire of computer attitudes towards Computational Thinking for in-service teachers was applied as an instrument. This instrument allows us to identify the five dimensions of computational thinking, in terms of definitions, level of comfort, level of interest, use in the classroom, and professional/future use, establishing an interest in the implementation of defined strategies to incorporate them into their teaching work. The results obtained showed that a total of 67 of the 100 teachers surveyed are at a regular level of computational thinking.},
  author = {Laime-Choque, Adriana Maria and Mamani-Calcina, Jorge Gilbert and Cardona-Reyes, Hector and Ponce-Aranibar, Maria Del Pilar and Vera-Vasquez, Cesar Gonzalo and Espinoza-Suarez, Silvia},
  booktitle = {2022 XII International Conference on Virtual Campus (JICV)},
  doi = {10.1109/JICV56113.2022.9934274},
  keywords = {Computational thinking; ICT; Instruments; Teachers in training; Training},
  month = {Sep.},
  pages = {1-5},
  title = {Attitude towards Computational Thinking of in-service teachers},
  year = {2022}
}

@inproceedings{merged190,
  abstract = {Computational Thinking (CT), problem-solving and programming skills are important for the students with major of computer education of higher levels education which related to the computing science contents. The instructions must provide the basic contents and learning activities, including Internet of Things (IoT), big-data and programming, as well as Artificial Intelligence (AI) and machine learning. However, these courses present learning difficulties based upon the students' individual skills. Development and integration of the IoT system would offer supporting tools for learning activities and improve the students' computational thinking, problem-solving, and programming skills. This paper presents the design and development of IoT system to support students' computational thinking, problem-solving, and programming skills training through block-based programming and integrated platforms. The IoT system comprises three layers (hardware, middleware, and applications), using existing platforms and devices as well as newly developed. To validate the viability of the proposed pipelined realization, the developed systems were implemented for higher education level students of computer education program. The students' computational-thinking, problem-solving, and programming skills were significantly improved through the proposed learning system throughout the course.},
  author = {Sonsilphong, Suphachoke and Sonsilphong, Amornthep and Hormdee, Daranee and Sae-Joo, Phongthanat},
  booktitle = {2022 7th International STEM Education Conference (iSTEM-Ed)},
  doi = {10.1109/iSTEM-Ed55321.2022.9920899},
  keywords = {Education; Hardware; Internet of Things; Learning (artificial intelligence); Learning systems; Machine learning; Training; computational thinking; computer programming; computing skills; problem solving},
  month = {July},
  pages = {1-4},
  title = {A Design and Development of Internet of Things (IoT) System and Learning Activity to Promote Computational Thinking},
  year = {2022}
}

@inproceedings{merged191,
  abstract = {STEAM education requires learners to be able to utilize interdisciplinary knowledge to draw wisdom from different disciplines to solve complex real-world problems, from which computational thinking capacity is necessary for decomposing problems, abstracting problems and designing algorithms. The personalized support capabilities of artificial intelligence can facilitate effective STEAM courses. Analyzing students' computational thinking behaviors in AI-enhanced STEAM classrooms can help teachers understand patterns of learning behavior, diagnose potential challenges in fostering computational thinking, and adapt instructional strategies to improve learning outcomes. In this study, the computational thinking behavioral patterns of teachers and students in an AI-enhanced school-based STEAM course was developed for a voluntary teaching program for an under-represented primary school was explored. This course lasted for six weeks and a total of 798 behavioral samples were collected from students and teachers. Three behavioral sequences, which were decompose problems, design algorithms, and summarize, were derived from lagged sequence analysis.},
  author = {Pan, Dongchen and Li, Jimei and Long, Taotao},
  booktitle = {2025 7th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE64638.2025.11091993},
  keywords = {AI; Artificial intelligence; Computer science; Education; STEAM; Sequences; Sequential analysis; computational thinking; lag sequential analysis},
  month = {April},
  pages = {1076-1080},
  title = {Exploring Primary School Students’ Computational Thinking Process in an AI-Enhanced STEAM Course: A Lag Sequential Analysis Approach},
  year = {2025}
}

@inproceedings{merged192,
  abstract = {This Innovative Practice Full Paper details a design-based research approach for implementing computational learning activities in a first-year engineering physics course. This study contributes to the growing body of research on computation in engineering education by introducing computational concepts and activities during a physics laboratory class. Drawing from Experiential Learning Theory and using an adapted version of the Use-Modify-Create framework for teaching computational thinking, a series of lab activities was designed that combined physical lab experiments with computational modeling using custom-built VPython simulations. Data was collected from the labs in the form of (1) responses to lab activity worksheets, (2) code modified and/or generated by the students during lab activities, (3) in-code comments provided by the students during the activities. A qualitative thematic analysis was used to analyze students' learning benefits and any challenges faced during the activities. While results show a number of learning benefits, an observed homogeneity of student responses to the questions on the lab handouts point to a set of potential limitations within the activities themselves that warranted further examination. Insight gained from this analysis process is presented as a set of four design principles that will inform future implementations of the hybrid course design.},
  author = {Fennell, Hayden W. and Lyon, Joseph A. and Magana, Alejandra J. and Rebello, Sanjay and Rebello, Carina M. and Peidrahita, Yuri B.},
  booktitle = {2019 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE43999.2019.9028390},
  issn = {2377-634X},
  keywords = {Atmospheric modeling; Computational modeling; Context modeling; Education; Physics; Programming; Software; computational modeling; computational thinking; design-based research; engineering education; physics education},
  month = {Oct},
  pages = {1-8},
  title = {Designing hybrid physics labs: combining simulation and experiment for teaching computational thinking in first-year engineering},
  year = {2019}
}

@inproceedings{merged193,
  abstract = {Computational thinking, as one of the core literacies of the Chinese IT courses, is an important area of IT education in primary and secondary schools. This research aims to improve the level of computational thinking of high school students by using Minecraft as a tool for Python gamified programming teaching design and analyzing the effectiveness of 60 high school students’ improvement in algorithmic thinking, problem solving, creativity, critical thinking, and collaboration after the teaching practice. The research results show that gamified programming teaching can significantly improve high school students’ computational thinking, providing a new teaching approach and ideas for high school IT education and computational thinking development.},
  author = {Qu, ZhiWei and Liu, JiaMing and Che, Lu and Su, YanXiu and Zhang, Wei},
  booktitle = {2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT)},
  doi = {10.1109/ICEIT57125.2023.10107843},
  keywords = {Collaboration; Data models; Education; Information technology; Problem-solving; Task analysis; Urban areas; computational thinking; game-based learning; gamification programming; high school information technology},
  month = {March},
  pages = {144-149},
  title = {Research on the Application of Gamification Programming Teaching for High School Students’ Computational Thinking Development},
  year = {2023}
}

@inproceedings{merged194,
  abstract = {Assembly language is a foundation courses for science and technology of computers. Computational thinking emphasizes just like computer scientists thinking. It is one of basic skills to solve problems with the computer technology. How to develop student's computational thinking is an urgent question in computer education. This paper analyzes the connotation of computational thinking, the embodiment of ability in assembly language and the process of formation; then proposes teaching programs of assembly language for computational thinking. In 2009 and 2010, cross-teaching experiments have been adopted between teachers and students. The feedback information from students shows that the introduction of computational thinking computing can help students to improve the professional ability. The teaching reform has achieved good results.},
  author = {Yin, Li-jie and Zuo, Rui-xin and Zhao, Yang},
  booktitle = {2011 International Conference on Consumer Electronics, Communications and Networks (CECNet)},
  doi = {10.1109/CECNET.2011.5769498},
  keywords = {Assembly; Biological system modeling; Computational modeling; Computer science; Computers; Economics; Education; assembly language; computational thinking; model; teaching},
  month = {April},
  pages = {3649-3652},
  title = {Teaching and research on assembly language for computational thinking},
  year = {2011}
}

@inproceedings{merged195,
  abstract = {Currently, the education sector has been transformed because of the incorporation of information and communication technologies as a valuable support for the formation of digital skills and significant learning. In this article, we present how educational robotics can be integrated into a school environment allowing the achievement of curricular objectives and the development of programming skills and computational thinking. The study was oriented towards a population of 131 students of early childhood education, belonging to a concerted educational center of the autonomous community of Castilla y León, during the 2016-2017 academic period. It describes the resources used, the teaching-learning activities developed and shows what was the acceptance expressed by teachers and students about the incorporation of educational robotics in the classroom.},
  author = {González, Yen Air Caballero and Muñoz-Repiso, Ana García-Valcárcel},
  booktitle = {2017 International Symposium on Computers in Education (SIIE)},
  doi = {10.1109/SIIE.2017.8259652},
  keywords = {Education; Programming profession; Robot kinematics; Robot sensing systems; Service robots; children's education; computational thinking; constructionism; educational robotics; programming skills},
  month = {Nov},
  pages = {1-5},
  title = {Educational robotics for the formation of programming skills and computational thinking in childish},
  year = {2017}
}

@inproceedings{merged196,
  abstract = {The essence of curriculum ideological and politics education is value guidance, strengthening students’ recognition of politics, culture and thought, and implementing the fundamental task of establishing morality and cultivating people. In the background of promoting the implementation of Ideological and political in university courses, aiming at the actual situation of computer foundation courses, taking computational thinking as the main line, according to the teaching objectives of the course, mining the ideological and political elements, constructing teaching cases, and adopting the teaching mode of “MOOC+SPOC+Flipped classroom” to teach. The examination results and questionnaire show that after the implementation of the curriculum ideological and political teaching, students’ learning initiative, self-confidence, legal consciousness, moral quality have been improved, which provides a reference for the normalization of Ideological and political education in computer foundation courses.},
  author = {Gou, Pingzhang and Zhang, Wenxuan and Han, Yuyue},
  booktitle = {2021 16th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE51940.2021.9569423},
  issn = {2473-9464},
  keywords = {Education; Ethics; Landline; Law; Task analysis; Technological innovation; computational thinking; computer foundation; curriculum ideological and political education; implementation path; teaching effect},
  month = {Aug},
  pages = {427-430},
  title = {Research on Teaching of Ideological and Political Education in Computer Foundation Based on Computational Thinking},
  year = {2021}
}

@inproceedings{merged197,
  abstract = {Technologies for development have great potential in accelerating the socio-economic progress of disadvantaged communities. But these technologies are usually developed by people removed from the daily realities of fieldwork. This paper explores the need and the possibilities of educating rural populations and social workers on the use of technology to create their own digital artifacts. We discuss two workshops, one for villagers in the state of Telangana and the second one for graduate students of a university social work department exploring the use of MIT's Scratch software as a tool for assisting in social interventions. We also discuss the results of an acceptability study among the social work students to gauge the potential for such a tool to be used in the field.},
  author = {Anitha, Parameswari and Babu, Sooraj K. and R., Unnikrishnan and Bhavani, Rao R.},
  booktitle = {2018 IEEE Tenth International Conference on Technology for Education (T4E)},
  doi = {10.1109/T4E.2018.00011},
  keywords = {CHI for Development; Computational Thinking; Conferences; Constructionism; Digital Fluency; Education; Games; Inclusive Education; Sociology; Software; Statistics; Tools},
  month = {Dec},
  pages = {16-19},
  title = {Scratching Out Problems: Exploring the Use of Computational Thinking for Social Work in Rural India},
  year = {2018}
}

@inproceedings{merged198,
  abstract = {This paper summarizes research in progress, at a national scale, that analyzes large volumes of elementary school and high school projects to assess the development of skills, attitudes, and practices that students develop when solving problems via computer programming, grounded on their under-standing of fundamental concepts in computing. The approach is independent of programming languages and uses a generic abstract syntax tree and projects’ metadata to calculate metrics, and establish relationships between measures, school regions, educational centers, and student groups. The research relates source code analysis using abstract syntax trees to some of the main computational thinking concepts. Preliminary results obtained using the proposed method are presented and discussed.},
  author = {Pacheco-Portuguez, Steven and Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Trejos-Zelaya, Ignacio and Monge-Fallas, Jorge and Navas-Su, Jose and Cañas, Alberto J. and Rodríguez, Andrés and Chinchilla, Carol Angulo},
  booktitle = {2022 International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT55010.2022.00050},
  issn = {2161-377X},
  keywords = {Code analysis; Codes; Computer languages; Measurement; Metadata; Programming profession; Syntactics; computational thinking assessment; generic abstract syntax tree},
  month = {July},
  pages = {144-146},
  title = {A method for assessing computational thinking in students using source code analysis},
  year = {2022}
}

@inproceedings{merged199,
  abstract = {The Asia-Pacific region has been dominating the global video game market for years. In recent years, an increasing number of Indonesia students are turning their interest to study in Taiwan. However, Chinese education in Indonesia is fundamentally based on studies of Mainland China, therefore lacking opportunities for students to understand profoundly Taiwan's language and culture. Furthermore, there is a lack of opportunities for students to understand game design power and industry in Taiwan. The purpose of this on-going program (2014-recent) is to enhance the understanding of game and animation design education in Taiwan, through exchanges with students in Indonesia. It aims to promote exchanges between the faculty and students at the universities with faculties, lecturers and artists in Taiwan for collaborative work, especially in game art design, game engine and animation. It sincerely hopes that students could understand profoundly Taiwan's language and culture by game and animation online tutorials, and provide opportunities for students to understand game design power and industry in Taiwan, Indonesia, and worldwide market. After a year of implementing the four points mentioned in this article, we have already observed some evident outcome. The biggest achievement comes from the workshop which has received significant responses and an increasing number of attendances from both Taiwan and Indonesia. In the near future, it hopes that we can hold a public event such as lecture, workshop and exhibition to raise awareness of and develop an affinity with Taiwanese langue and culture among the general public using the design thinking approach for computational creativity, such as co-design Taiwan language on-line course or game-based learning.},
  author = {Chen, Tin-Kai and Chowanda, Andry and Udjaja, Yogi and Fang, Hsiao-Lin},
  booktitle = {2019 IEEE International Conference on Engineering, Technology and Education (TALE)},
  doi = {10.1109/TALE48000.2019.9225911},
  issn = {2470-6698},
  keywords = {Animation; Computational Creativity; Computer science; Conferences; Design Thinking; Game and Animation; Games; Industries; International Exchanges; Tutorials},
  month = {Dec},
  pages = {1-6},
  title = {Design Thinking for Computational Creativity – a Case Study of International Exchanges Using Game and Animation (2014-Recent)},
  year = {2019}
}

@inproceedings{merged200,
  abstract = {The present research aimed to assess if the teaching of the Yupana using the Tawa Pukllay method developed by Prem [16] enables to develop the computational thinking (CT) in children of 10 and 11 years old. For this purpose, a quasi-experiment with 52 children of two elementary schools located in Lima, Peru was performed. The obtained results were statistically significant showing that the experimental group, comprised with the students who were trained with the Yupana improved their CT compared to the control group, in which the students kept doing their regular activities. This highlights the fact that using this ancestral math tool could serve as an instrument to develop the CT in children.},
  author = {Alvarado, Lorena and Falcon, Carla and Gutiééérrez-Cááárdenas, Juan and Romero-Romero, Vilma S.},
  booktitle = {2022 IEEE World Engineering Education Conference (EDUNINE)},
  doi = {10.1109/EDUNINE53672.2022.9782386},
  keywords = {Computational thinking; Conferences; Engineering education; Instruments; Yupana; distance learning; quasi-experiments},
  month = {March},
  pages = {1-5},
  title = {Teaching of the Yupana with the Tawa Pukllay method for developing the Computational Thinking in children},
  year = {2022}
}

@inproceedings{merged201,
  abstract = {This paper puts forward the basic computer teaching practice by carrying out professional integration and the enhancement of computational science thinking ability. Since 2007 the teaching system has been applied extensively in a number of universities. Feasibility and validity of the system are proven. The practice has demonstrated that it is an effective way to promote the students' ability of computer knowledge application.},
  author = {Wei, Ying and Du, ChengLie},
  booktitle = {2014 IEEE International Conference on Signal Processing, Communications and Computing (ICSPCC)},
  doi = {10.1109/ICSPCC.2014.6986325},
  keywords = {Automation; Computers; Correlation; Education; Scientific computing; Software; Technological innovation; computational science thinking ability; computer basic teaching; rofessional integration},
  month = {Aug},
  pages = {886-889},
  title = {Reform of basic computer teaching practice by enhancing computational science thinking ability},
  year = {2014}
}

@inproceedings{merged202,
  abstract = {Based on the C-POTE instructional design model, this study developed an interdisciplinary project-based learning curriculum on traditional archway culture using three-dimensional immersive virtual simulation to examine its effects on students' creativity and computational thinking. A total of 98 seventh-grade students participated in an 8-week controlled experiment (with one class each week). The experimental group (N=49) used the virtual simulation platform, while the control group (N=49) created projects using traditional WPS documents. The results indicate that virtual simulation technology positively influences students' creativity and computational thinking. However, no statistically significant differences were observed in the sub-dimensions of critical thinking, algorithmic thinking, and curiosity. The findings suggest that integrating three-dimensional immersive virtual simulation can effectively enhance creativity and computational thinking in interdisciplinary teaching. The study highlights the importance of adapting teaching strategies to individual student needs, offering valuable insights for future educational practices and innovative talent development.},
  author = {Zhou, Pei and Chen, Xiaoting and Zhan, Zehui},
  booktitle = {2025 14th International Conference on Educational and Information Technology (ICEIT)},
  doi = {10.1109/ICEIT64364.2025.10975868},
  keywords = {Computational Thinking; Computational modeling; Creativity; Education; Immersive Three-Dimensional Virtual Simulation; Interdisciplinary Education; Optimization; Problem-solving; Refining; Solid modeling; Three-dimensional displays; Training; Visualization},
  month = {March},
  pages = {32-38},
  title = {Effect of Constructive 3D Virtual Simulation on Students' Creativity and Computational Thinking in Interdisciplinary Education},
  year = {2025}
}

@inproceedings{merged203,
  abstract = {Computational thinking has recently been widely recognized as a fundamental skill that should be cultivated for everyone and in every field. Although there is an increasing interest in research in teaching and learning computational thinking in recent years, an engaging, effective online learning system is yet to be built for teaching, learning, and applying computational thinking online. To this end, we have developed DATAVIEW, an online social learning system for learning computational thinking concepts and skills online. The main contributions of this paper are: 1) we developed a new, effective online learning model for computational thinking based on our previous widely-applied R2D2 model. A signature characteristic of this new model is being interactive and learner-centered, thus "i" is carried out through the entire learning experiences, which provides teaching facilities to instructors and interactional tools among instructors and learners, 2) we implemented, validated, and refined iR2D2 in our DATAVIEW computational thinking online service, 3) We propose to use the DBR (design-based-research) approach to study the relationship between technology and teaching in the context of computational thinking, generating research results and findings applicable to online teaching in other domains as well.},
  author = {Mohan, Aravind and Lu, Shiyong and Zhang, Ke},
  booktitle = {2015 IEEE International Conference on Services Computing},
  doi = {10.1109/SCC.2015.54},
  keywords = {Algebra; Computational efficiency; Computational modeling; Computers; DATAVIEW; Education; Learning systems; Visualization; computational thinking; eLearning; scientific workflow management systems},
  month = {June},
  pages = {340-347},
  title = {Towards an Online Service for Learning Computational Thinking Using Scientific Workflows},
  year = {2015}
}

@inproceedings{merged204,
  abstract = {The purposes of this research were to: 1) develop interactive e-Learning courses integrated with simulations had the efficiency of 80/80 criteria, 2) compare analytical thinking skill scores before and after learning by using interactive e-Learning courses, and 3) study the students' opinions who studied via the interactive e-Learning courses integrated with simulations. The sample groups of the research were 26 second-year students of bachelor's degree in Teacher Training in Electrical Engineering Department, King Mongkut's University of Technology North Bangkok. Research instruments include interactive e-Learning courses integrated with simulations, assessment form of analytical thinking skill, and evaluation form of students' opinions. The research results shown that 1) the efficiency of interactive e-Learning courses using simulations had the efficient of 82.22/83.74 higher than the 80/80 criteria., 2) the analytical thinking skill scores after learning by using interactive e-Learning courses were statistically significant higher than before learning at 0.01 level 3) the students' opinions toward learning by using interactive e-Learning courses were at a high level (the mean equaled to 4.26 and S.D. equaled to 0.69).},
  author = {Chuumchuen, Nutchanat and Surpare, Kitti},
  booktitle = {2022 7th International STEM Education Conference (iSTEM-Ed)},
  doi = {10.1109/iSTEM-Ed55321.2022.9920923},
  keywords = {Analytical Thinking Skill; Analytical models; Computational modeling; Electrical engineering; Electronic learning; Instruments; Problem-solving; Simulation based Interactive e-Learning courses; Student Teacher; Training},
  month = {July},
  pages = {1-4},
  title = {The Development of Simulation Based Interactive e-Learning Course to Enhance Analytical Thinking Skill for Training Student Teacher},
  year = {2022}
}

@inproceedings{merged205,
  abstract = {Computational thinking has become a interesting subject and important concept in education throughout the nation. Computational Thinking (CT) has been defined as an important skill as digital literacy that must be learned by next generation. Along with the need to make an agreed definition of CT many countries are still in the process of, or have not started, introducing CT into the curriculum at all levels of education. It was also found in Indonesia that Computer Science / Computing, which could be the most obvious place to teach CT, has not been the main subject in several schools. This research aim is to design an alternative CT learning media to study interestingly and effectively computational concept which consists of 4 elements, namely decomposition, abstraction, pattern recognition and algorithm. Research and Development followed by ADDIE development model (Analysis, Design, Development, Implementation and Evaluation) is used to capture the problem, identify the user need to be implemented in digital media. This learning media application product is equipped with an educational game based on computational thinking. The media has several features such as presentation of material and examples of problems and the solution, and small challenges in a games consisting of 3 stages. The subjects of this study were students of K-12. The data used for analysis was collected in several ways, including observation, questionnaire, pre-test and post-test in similar question. The result is the use of CT learning media is very helpful to improve students' understanding of CT in problem solving even in different topics.},
  author = {Yuliana, Irma and Octavia, Langga Putra and Sudarmilah, Endah and Matahari, Matahari},
  booktitle = {2019 19th International Symposium on Communications and Information Technologies (ISCIT)},
  doi = {10.1109/ISCIT.2019.8905149},
  issn = {2643-6175},
  keywords = {ICT; computational thinking; learning media},
  month = {Sep.},
  pages = {549-554},
  title = {Introducing Computational Thinking Concept Learning in Building Cognitive Capacity and Character for Elementary Student},
  year = {2019}
}

@inproceedings{merged206,
  abstract = {The era of big data witnesses that ‘computing’ has become an indispensable tool for medical development in many aspects of medicine domain. The ability of computational thinking is of great significance to medical students engaging in basic research and clinical diagnosis and treatment in the future. However, medical students are lack of this strategy in dealing with problems at present. Meanwhile, there is also a problem of ‘insufficient skills and no training’ in computer learning. In this article, we recommend training students’ computational thinking from three aspects. First, students can learn the basic concepts of computational thinking and different thinking modes of computer scientists through computer courses in both theory and practice in order to train their computational thinking. Second, in the process of thinking, students can directly carry out divergent thinking, logical integration, and practice the thinking methods of scientists such as abstraction and simplification through the mind maps produced by IMindMap software. Third, during the practice of modeling and programming, after using mind maps to make the problem abstract and sort out the content of the creation to draw a flowchart, students start modeling and systematic design through Scratch software. At last, under the help of MATLAB, some specific medical cases enable students to apply computational thinking to practice comprehensively. Our practice in class shows that these training methods has positive influence in improving students computational thinking.},
  author = {Si, Jiarui and Feng, Huan and Niu, Zikun and Bian, Yizhou and Fu, Yu and Guo, Hong and Su, Zhenxing and Deng, Weimin and Li, Xiaoxia},
  booktitle = {2021 16th International Conference on Computer Science & Education (ICCSE)},
  doi = {10.1109/ICCSE51940.2021.9569311},
  issn = {2473-9464},
  keywords = {Big Data; Computational modeling; Computational thinking; Flowcharts; MATLAB; Medical students; Software; Systematics; Tools; Training; mind maps},
  month = {Aug},
  pages = {13-20},
  title = {Training Methods of Computational Thinking for Medical Students in Big Data Age},
  year = {2021}
}

@inproceedings{merged207,
  abstract = {Many educational resources are available that teach children computational thinking and visual programming. As part of this initiative, we develop computational puzzles from well-known computational thinking activities. Inspired by the idea of geocaching, we made our puzzles accessible and fun for the whole family by embedding them into a scavenger hunt. We describe our approach that frames computational puzzles as an outdoor family activity. Our project was launched in 2021 and has received informal positive feedback.},
  author = {Adeyemi, Opey and Hui, Bowen},
  booktitle = {2023 IEEE International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT58122.2023.00060},
  issn = {2161-377X},
  keywords = {Computational thinking; Programming profession; Visualization; blended learning; outdoors; puzzles},
  month = {July},
  pages = {187-189},
  title = {Using Open Technology to Bring Computational Thinking Activities to the Outdoors},
  year = {2023}
}

@inproceedings{merged208,
  abstract = {Promoting the computational thinking of the K12 students through artificial intelligence education is reflected in curriculum standards and academic research. Game-based learning promotes the learning interest and motivation, helps students reinforce computational thinking practices. Based on the input-process-result (IPO) game-based learning model, this study integrated the artificial intelligence instructional content, game-based learning, and the core elements of computational thinking practice to design game-based learning activities that was suitable for promoting computational thinking practices in artificial intelligence courses. In this research, the artificial intelligence course “Challenging Tic-Tac-Toe” was conduct in senior high school. The results showed that the game-based learning in artificial intelligence courses could help students to master artificial intelligence subject knowledge, significantly improved the computational thinking practices, enhanced learning interest, motivation, self-confidence, and reduce cognitive load. Thus, this study provides additional evidence that using the game-based learning strategies is an effective learning method that improves both learning performance and computational thinking practices.},
  author = {Ma, Jingsi and Zhang, Yi and Bin, Hesiqi and Wang, Kang and Liu, Jinfang and Gao, Hanrui},
  booktitle = {2022 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET55194.2022.00065},
  issn = {2766-2144},
  keywords = {Artificial intelligence; Artificial intelligence course; Computational modeling; Computational thinking practices; Educational technology; Game-based learning; IPO game-based learning model; Learning (artificial intelligence); Learning systems; Standards},
  month = {July},
  pages = {273-277},
  title = {The Development of Students' Computational Thinking Practices in AI Course Using the Game-Based Learning: A Case Study},
  year = {2022}
}

@inproceedings{merged209,
  abstract = {This work-in-progress paper will explore the effectiveness of topic modeling to support the analysis of Colombian teachers' conceptions of computational thinking (in Spanish) in an online professional development program. Computational thinking has become a form of literacy as it can help individuals to solve problems. Consequently, governments and bodies of accreditation worldwide have supported educational initiatives, primarily at the K-12 level. However, curricular changes are not enough. Teachers need to be prepared, so they develop the content knowledge associated with computational thinking concepts, practices, and applications in the classroom. To contribute to professional development opportunities geared toward the development of computational thinking pedagogical content knowledge, the Colombian National Academy of Exact, Physics, and Natural Sciences and the Global Center for Equitable Computer Science Education implemented an open online professional development program for Latin American early childhood and elementary educators. More than 100 teachers enrolled in a six-week online professional development program to integrate computational thinking activities from early childhood education. The program included two modules focused on conceptual understanding of computational thinking in early childhood and four more modules where the participants adapted, designed, implemented learning activities, and reflected on what happened during the implementation. As part of the participants' weekly interactions, the program included a Jamboard space, where the teachers answered a set of guiding questions, just like a discussion forum, but as a post-it wall, where they could access all their peers' contributions and questions in a single space.},
  author = {Castellanos, Hugo and Vieira, Camilo and Magana, Alejandra},
  booktitle = {2023 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE58773.2023.10343475},
  issn = {2377-634X},
  keywords = {Accreditation; Analytical models; Computational modeling; Computational thinking; Computer science education; Discussion forums; Education; Government; conception; topic modeling},
  month = {Oct},
  pages = {1-5},
  title = {A Topic Modeling Approach to Characterizing Colombian Teachers' Conceptions of Computational Thinking},
  year = {2023}
}

@inproceedings{merged210,
  abstract = {Identifying engaging programming tasks to teach computational thinking and programming skills, especially to students of post-secondary education, is a challenging problem for lecturers. Physical computing is a potential solution that provides ample opportunities for creative development of such skills. The availability of pre-assembled physical computing tool kits often do not offer the right level of abstraction and flexibility to suit educator's needs. Consequently, this paper presents the design of a custom physical computing tool kit, T{h}inker, primarily for learning and teaching computational thinking and programming skills. Prior to design discussions, the context and motivation behind designing T{h}inker has been presented. Preliminary pilot deployment sessions of T{h}inker for both teachers and students confirm its potential as an effective tool for both teaching and learning of thinking skills.},
  author = {Narayanan, V. Anantha and Shyamala, C. K. and Shunmuga Velayutham, C.},
  booktitle = {2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT.2018.00075},
  issn = {2161-377X},
  keywords = {Education; Gas detectors; Programming profession; Task analysis; Tools; computational thinking; constructionist learning; entry-level undergrads; introductory programming; physical computing},
  month = {July},
  pages = {298-300},
  title = {T{h}inker: A Physical Computing Tool Kit for Computational Thinking},
  year = {2018}
}

@inproceedings{merged211,
  abstract = {Complex problem solving is one of the key skills for future jobs, but it has not been clearly operationalized. We hypothesized that it is a construct of inquiry, computational thinking, and mathematical problem solving. The hypothesis was empirically tested by administering tests to 261 high school students for assessing three inquiry skills, two dimensions of computational thinking and five mathematical problem solving skills. Confirmatory factor analysis showed a three factor model of inquiry skills and two factor model of computational thinking skills to have a good fit. Mathematical problem solving skills were characterized with a two factor model. These factors were combined in a higher-order factor model into one construct that could be defined as a complex problem solving skill.},
  author = {Pedaste, Margus and Palts, Tauno and Kori, Külli and Sõrmus, Maarja and Leijen, Äli},
  booktitle = {2019 IEEE 19th International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT.2019.00071},
  issn = {2161-377X},
  keywords = {Pattern recognition; Problem-solving; computational thinking; inquiry-based learning; mathematical problem solving; problem solving; theory building},
  month = {July},
  pages = {227-231},
  title = {Complex Problem Solving as a Construct of Inquiry, Computational Thinking and Mathematical Problem Solving},
  volume = {2161-377X},
  year = {2019}
}

@inproceedings{merged212,
  abstract = {Computational Thinking (CT) is a fundamental skill that is not only confined to computer scientists’ activities but can be widely applied in daily life and is required in order to adapt to the future and, therefore, should be taught at early ages. Within this framework, assessing CT is an indispensable part to consider in order to introduce CT in the school curricula. Nevertheless, efforts involving the formal assessment of computational thinking has primarily focused on middle school grades and above; and are mostly based on the analysis of projects in specific programming environments. A Beginners Computational Thinking Test (BCTt), aimed at early ages, and based on the Computational Thinking Test [1], has been designed including several improvements; submitted to a content validation process through expert´s judgement procedure; and administered to Primary School students. The BCTt design is considered adequate by experts and results show a high reliability for the assessment of CT in Primary School, particularly in first educational stages.},
  author = {Zapata-Cáceres, María and Martín-Barroso, Estefanía and Román-González, Marcos},
  booktitle = {2020 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON45650.2020.9125368},
  issn = {2165-9567},
  keywords = {Assessment; Beginners Computational Thinking Test; Computational Thinking; Computer Science Education; Conferences; Early Childhood Education; Focusing; Instruments; Layout; Primary Education; Programming; Sociology; Statistical analysis; Three-dimensional displays},
  month = {April},
  pages = {1905-1914},
  title = {Computational Thinking Test for Beginners: Design and Content Validation},
  year = {2020}
}

@inproceedings{merged213,
  abstract = {Currently we see globalization and technological advances accelerating worldwide, transforming the world of work and human coexistence. We still notice that the educational systems, in their majority, are disconnected from these global realities. In this sense, it is necessary to have an educational formation more aligned to the contemporary world, preparing young people for the challenges of the 21st century, how to deal with technological resources and processes, developing soft and hard skills. In this way, it can be observed that in recent years computational thinking has gained relevance in this scenario, being a field of research in the most varied areas of knowledge, developing communication skills, creativity, leadership, problem solving, familiarity with technologies, management, transforming young people into autonomous individuals who are prepared for the technological changes that the world requires. Taking these transformations as a reference, this paper describes/presents the development of an online tool to stimulate computational thinking in elementary school, through online games. he use of the ThinkinGame makes it possible to identify the pillars to be worked on with young people, after its use, thus improving the approaches to be given in the formation of these young people, being able to turn attention to the challenge of teaching additional skills, such as sophisticated thinking and flexible problem solving.},
  author = {Farias, Adriano Fiad and Augusto Couto Barone, Dante},
  booktitle = {2023 32nd Annual Conference of the European Association for Education in Electrical and Information Engineering (EAEEIE)},
  doi = {10.23919/EAEEIE55804.2023.10181711},
  issn = {2472-7687},
  keywords = {Education; Europe; Games; Globalization; Leadership; Problem-solving; Technology management; computational thinking; educational game; hard skills; meaningful learning; soft skills},
  month = {June},
  pages = {1-6},
  title = {Computational thinking through an online game to develop soft and hard skills},
  year = {2023}
}

@article{merged214,
  abstract = {This paper describes how an educational digital material supports the improvement of skills in the development of algorithms within math problems, which belong to a part of an operative computational thinking, in students of the subject logic programming. This paper reflects how students lack the fundamentals of math and the algorithmic thinking which is required to solve the problems established in the educational digital material. The results show that doing a reiterative challenge helps student not only to get the fundamentals of math, but also to solve the algorithms used in the educational digital material, learning from the mistakes made.},
  author = {Rico Lugo, Mauricio Javier and Olabe, Xabier Basogain and Niño, Nancy Moreno},
  doi = {10.1109/RITA.2018.2809943},
  issn = {1932-8540},
  journal = {IEEE Revista Iberoamericana de Tecnologias del Aprendizaje},
  keywords = {Algorithms; Education; Instruments; Programming profession; Software; Tools; computational thinking; critical thinking; educational digital material; information and communication technologies},
  month = {Feb},
  number = {1},
  pages = {37-45},
  title = {“Evolution”: Design and Implementation of Digital Educational Material to Strengthen Computational Thinking Skills},
  volume = {13},
  year = {2018}
}

@inproceedings{merged215,
  abstract = {This study assesses how generative artificial intelligence tools enhance computational thinking and problemsolving skills in the context of programming education. Generative AI (GenAI) has ushered in a new era in programming education, offering immediate, personalised support through tools like ChatGPT and GitHub Copilot. Although generative AI tools have shown promise in enhancing immediate problem-solving abilities, there is a lack of research on their long-term effects on students' computational thinking and professional programming skills development. This study conducted a scoped evaluation of previously published papers using the Preferred Reporting Items for Systematic Reviews and Meta-Analyses (PRISMA) standard, and the data was analysed using a thematic approach. The findings from the study indicate that integrating GenAI can potentially enhance computational thinking and problem-solving for programming students. On the flipside, our study highlighted some significant ethical challenges associated with using GenAI in academia, particularly regarding issues of originality in student work. Contrary to expectations on how GenAI tools enhance learners' decomposition, abstraction, and algorithm design skills, most of the findings concentrated on students' completion of tasks. From a practical perspective, it is evident that GenAI has changed the learning landscape therefore, there is a need from a policy perspective to start thinking about the transformational roles of educators. Future studies should be carried out over a long period and should start by assessing students' levels of problem-solving at a particular age before the immersive use of GenAI and then check the results after the use of these tools.},
  author = {Matobobo, Courage and Ncube, Prince Daughin Ngqabutho and Ngesimani, Nomputumo Linah and Dzvapatsva, Godwin Pedzisai and Chinhamo, Edmore},
  booktitle = {2025 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON62633.2025.11016317},
  issn = {2165-9567},
  keywords = {ChatGPT; Chatbots; Computational Thinking; Ethics; Generative AI; Generative Artificial Intelligence; Inhibitors; Measurement; Problem Solving Skills; Problem-solving; Programming Education; Programming profession; Software development management; Standards; Systematic literature review},
  month = {April},
  pages = {1-9},
  title = {Enhancing Computational Thinking and Problemsolving in Programming Education Through Generative AI: A Scoped Review},
  year = {2025}
}

@inproceedings{merged216,
  abstract = {Computing in schools has gained momentum in the last two years resulting in GCSEs in Computing and teachers looking to up skill from Digital Literacy (ICT). For many students the subject of computer science concerns software code but writing code can be challenging, due to specific requirements on syntax and spelling with new ways of thinking required. Not only do many undergraduate students lack these ways of thinking, but there is a general misrepresentation of computing in education. Were computing taught as a more serious subject like science and mathematics, public understanding of the complexities of computer systems would increase, enabling those not directly involved with IT make better informed decisions and avoid incidents such as over budget and underperforming systems. We present our exploration into teaching a variety of computing skills, most significantly "computational thinking", to secondary-school age children through three very different engagements. First, we discuss Print craft, in which participants learn about computer-aided design and additive manufacturing by designing and building a miniature world from scratch using the popular open-world game Mine craft and 3D printers. Second, we look at how students can get a new perspective on familiar technology with a workshop using App Inventor, a graphical Android programming environment. Finally, we look at an ongoing after school robotics club where participants face a number of challenges of their own making as they design and create a variety of robots using a number of common tools such as Scratch and Arduino.},
  author = {Roscoe, Jonathan Francis and Fearn, Stephen and Posey, Emma},
  booktitle = {2014 International Conference on Interactive Technologies and Games},
  doi = {10.1109/iTAG.2014.15},
  keywords = {Computers; Educational institutions; Programming; Robots; STEM; Software; Three-dimensional displays; computational thinking; e ducation; games; technology},
  month = {Oct},
  pages = {9-12},
  title = {Teaching Computational Thinking by Playing Games and Building Robots},
  year = {2014}
}

@inproceedings{merged217,
  abstract = {In this study, the authors develop an iOS software “n-Queens Problem for Education” and discuss its application in the promotion of computational thinking. As it has already been pointed out in [1] and [2], playing games and solving puzzles are effective in cultivating computational thinking, and our gaming software can be a good tool to cultivate skills regarding “Generalization (Pattern Recognition),” “Abstraction;' and “Algorithms” of computational thinking. Our software “n-Queens Problem for Education” is based on the well-known “The n-Queens Puzzle,” which involves solving a puzzle of placing eight chess queens on an n × n chessboard so that they do not attack one another. This puzzle is a good way for students to learn computational thinking. Since this software shows the queens' moves and evaluates solutions, you can concentrate on using your brain without writing down the moves or erasing wrong solutions. In addition, this software has features such as the symmetry operations of rotation and reflection of the board that help users study their solutions.},
  author = {Sasaki, Yuji and Fukui, Masanori and Hirashima, Tsukasa},
  booktitle = {2019 IEEE 8th Global Conference on Consumer Electronics (GCCE)},
  doi = {10.1109/GCCE46687.2019.9015331},
  issn = {2378-8143},
  keywords = {Algorithmic Thinking; Computational Thinking; Conferences; Education; Games; Pattern recognition; Problem Solving Skills; Problem-solving; Software; Software algorithms; iOS Application; n-Queens Problem},
  month = {Oct},
  pages = {563-565},
  title = {Development of iOS Software n-Queens Problem for Education and Its Application for Promotion of Computational Thinking},
  year = {2019}
}

@article{merged218,
  abstract = {To meet the urgent need for a well-prepared CS&E workforce, we must better understand how students perceive the field.},
  author = {Magana, Alejandra J. and Mathur, Jyoti I.},
  doi = {10.1109/MCSE.2012.13},
  issn = {1558-366X},
  journal = {Computing in Science & Engineering},
  keywords = {Computational modeling; Computer science education; Professional aspects; Research and development; Science (general); Student perceptions; computational engineering; computational life science; computational science; interest and motivators; qualitative research; scientific computing},
  month = {Jan},
  number = {1},
  pages = {74-79},
  title = {Motivation, Awareness, and Perceptions of Computational Science},
  volume = {14},
  year = {2012}
}

@inproceedings{merged219,
  abstract = {In recent years we are witnessing movements around the world to bring computer programming to schools. Lots of these initiatives, however, have been conceived to address the shortage of professionals in the technology sector, an approach that is encouraged by the software industry. On the contrary, this article argues that the focus should swift towards computational thinking, an ability that goes far beyond computer science or technology, fostering fundamental skills for the citizens of the twenty-first century. In this paper we summarize the findings of recent investigations that study computational thinking from different perspectives, explaining what this new skill is made of, presenting outcomes of school interventions showing relationships between the development of this ability and improvements in different subjects and soft skills, presenting technologies to foster its development, and reviewing tools that support educators in the assessment of this skill.},
  author = {Moreno-León, Jesús and Román-González, Marcos and Robles, Gregorio},
  booktitle = {2018 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2018.8363437},
  issn = {2165-9567},
  keywords = {Encoding; Europe; Industries; Programming profession; Software; computational thinking; computer science education; digital literacy; programming; skills},
  month = {April},
  pages = {1684-1689},
  title = {On computational thinking as a universal skill: A review of the latest research on this ability},
  year = {2018}
}

@inproceedings{merged220,
  abstract = {The goal of this research is to identify a tool for use in assessing Computational Thinking Skills in undergraduate Computing students. To measure the effectiveness of interventions for the development of Computational Thinking skills, there is a need for valid and reliable assessment tools. Much of the research to date has been concentrated in primary and secondary education with a shortfall in research for higher education settings. This research aims to try and address this gap and is comprised of three main stages: a literature review; a pre-pilot study; and a pilot study. The literature review identified a validated tool with potential for use with undergraduate Computing students. The pre-pilot and pilot studies invited participants to engage with the tool, but engagement was limited with low participation rates. This paper examines the reasons for this and explores possible ways to move the research forward considering these challenges.},
  author = {Sheridan, Frances and Stynes, Paul and Pathak, Pramod and Quille, Keith},
  booktitle = {2025 IEEE Engineering Education World Conference (EDUNINE)},
  doi = {10.1109/EDUNINE62377.2025.10981347},
  keywords = {Assessment; Computational Thinking; Engineering education; Higher Education; Reliability; Systematic literature review},
  month = {March},
  pages = {1-4},
  title = {Work in Progress: Computational Thinking Skills Assessment in Higher Education},
  year = {2025}
}

@inproceedings{merged221,
  abstract = {With the development of virtual reality technology, 3D virtual robots are increasingly used in primary school robot programming teaching. Therefore, in this study, 64 fifth-grade students were divided into two groups, and the experimental research method was used to investigate which method is more conducive to improving students’ learning engagement and computational thinking by combining or separately using 3D virtual robots and physical robots in robot programming courses. The results show that the combined use of 3D virtual and physical robots in a robot programming course improves students’ Programming self-efficacy scale and learning engagement, thus improving students’ computational thinking.},
  author = {Gao, Hanrui and Zhang, Yi and Wang, Kang and Yu, Fan and Li, Tianyu},
  booktitle = {2024 International Symposium on Educational Technology (ISET)},
  doi = {10.1109/ISET61814.2024.00082},
  issn = {2766-2144},
  keywords = {3D VR Robot; Computational Thinking; Educational technology; Learning engagement; Physical Robot; Programming profession; Robot Programming; Robot programming; Three-dimensional displays; Virtual reality},
  month = {July},
  pages = {381-385},
  title = {Using 3D Virtual and Physical Robot Alone or Together-Which Works Better for Learning engagement and Computational Thinking},
  year = {2024}
}

@inproceedings{merged222,
  abstract = {There are several software companies that develop several products. Are all of them used? Even after software companies following Agile framework methodology to develop their software's, many software's still fail to meet the requirements and eventually customers end up not using them. This is usually because the software teams fail to completely understand the user requirements. Agile framework and Design Thinking framework can be used together to gain customer empathy and to overcome this problem. This study discusses how Agile framework and Design Thinking supports the same principles and can be used to reduce software development failures. A Flashcard application was developed to validate Agile framework Design Thinking framework. The results are discussed in the validation and result section.},
  author = {Mirza, Mahrukh Sameen and Datta, Soma},
  booktitle = {2020 International Conference on Computational Science and Computational Intelligence (CSCI)},
  doi = {10.1109/CSCI51800.2020.00335},
  keywords = {Agile framework; C# languages; Companies; Customer satisfaction; Design thinking; Production; Scientific computing; Software; XML; communication; prototype; software development},
  month = {Dec},
  pages = {1819-1823},
  title = {Developing Software Using Agile and Design Thinking Framework},
  year = {2020}
}

@inproceedings{merged223,
  abstract = {In the 21st Century, technology has become a part of almost everyone's lives in the world and will keep on evolving. Therefore, people's way of thinking must be able to follow the technology evolution. Since 2006, Computational Thinking (CT) has been stated as a fundamental skill for everyone, not just for computer scientists. The concept of CT is very important to be taught to children so that it can be applied as early as possible. In the digital era that is happening now, the suitable CT learning for children is in the form of digital game as an application on smartphones. The interaction and interface of this application is designed using user-centered design approach in ISO 9241210:2010. In order to make this application useful for children, it should be effective to use, easy to learn, and enjoyable. Those three things are the usability and user experience goals of this application. Usability testing is conducted to validate the achievement of the goals by using several metrics, such as completion rate, Single Ease Question (SEQ), System Usability Scale (SUS), and Intrinsic Motivation Inventory for interest/enjoyment subscale. The completion rate is 97,4 %/100% for usability goal effective to use, the SEQ score is 6,12/7 and the SUS score is 70,5/100 for usability goal learnability, and the IMI interest/enjoyment subscale score is 6,02/7 for user experience goal enjoyable. This application has achieved the usability and user experience goals because all the scores from the measurements using those four metrics are above the average.},
  author = {Ramadhani, Nira Rizki and Mulyanto, Adi and Niwanputri, Ginar Santika},
  booktitle = {2020 7th International Conference on Advance Informatics: Concepts, Theory and Applications (ICAICTA)},
  doi = {10.1109/ICAICTA49861.2020.9429049},
  keywords = {Games; Measurement; Prototypes; Usability; User centered design; User experience; User interfaces; computational thinking; game; interaction design; prototype; usability testing; user-centered design},
  month = {Sep.},
  pages = {1-6},
  title = {Designing Interaction and User Interface of Computational Thinking Digital Game for Children using User-Centered Design Approach},
  year = {2020}
}

@inproceedings{merged224,
  abstract = {The aim of this paper is to discuss the importance of computational thinking and how to include techniques to teach this kind of ability in schools in Brazil. First, we discuss what Computational Thinking is and the importance of teaching such skill in school. Then, we list some of the challenges that are involved in introducing this discipline in school curricula.},
  author = {Ribeiro, Leila and Nunes, Daltro José and Cruz, Marcia Kniphoff da and Matos, Ecivaldo de Souza},
  booktitle = {2013 2nd Workshop-School on Theoretical Computer Science},
  doi = {10.1109/WEIT.2013.32},
  keywords = {Algorithm design and analysis; Complexity theory; Computer science; Computers; Educational institutions; computational thinking; education in Brazil; elementary and middle school; high school},
  month = {Oct},
  pages = {22-25},
  title = {Computational Thinking: Possibilities and Challenges},
  year = {2013}
}

@inproceedings{merged225,
  abstract = {With the wide use of computers, how to make students understand the special way of thinking of computer science and find the appropriate methods to solve problems in their own fields like computer scientists are the challenges for educators. This paper proposed a computational thinking model based on blended learning Mctbbl and a descending dimension method for problem-space transformation. The Mctbbl model analyzes and researches the application of computational thinking in computer science by the organic combination of computational thinking and blended learning in a life-cycle perspective. On one hand, the model can summarize the core concepts and important principles in computer science and extract the typical thoughts and general methods of solving problems; on the other hand, the model can implement the teaching and learning of computational thinking by means of blended learning. Based on the model, the teachers can teach the problem-solving process by using computer more intuitively and clearly and the students can understand the application of computer knowledge more easily and simply. The Mctbbl prolongs the study life cycle which takes preview as beginning, teacher-student discussion as body and practical application as core to ensure integrity, endurance and consistency of teaching.},
  author = {Li, Ying and Liu, Yu and Shu, Pan},
  booktitle = {2015 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2015.7344415},
  keywords = {Abstract; Arrays; Automation; Blended learning; Computational Thinking; Computational modeling; Decision support systems; Descending dimension; Education; Handheld computers; Scientific computing},
  month = {Oct},
  pages = {1-8},
  title = {Teaching research and practice of blended leaning model based on computational thinking},
  year = {2015}
}

@inproceedings{merged226,
  abstract = {Computation is an increasingly essential tool for doing scientific research. It is expected that future engineers will need to engage and understand computing in order to work effectively with computational systems, technologies, and methodologies. Toward this goal, we leverage our previous work with SugarAid v0.2 to allow learners to test their knowledge of computing by applying engineering concepts. Applied concepts include designing multidisciplinary systems including electrical, mechanical, fluidic, and thermal components. Through this method, we expect learners to enhance their computing knowledge by applying their engineering knowledge.},
  author = {Magana, Alejandra J. and Marepalli, Prabhakar and Clark, Jason V.},
  booktitle = {2011 Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2011.6143083},
  issn = {2377-634X},
  keywords = {Computational modeling; Conferences; Education; Glass; Knowledge engineering; Mathematical model; Sugar industry; computational simulations; computational thinking; engineering thinking; systems design},
  month = {Oct},
  pages = {S3C-1-S3C-2},
  title = {Work in progress — Integrating computational and engineering thinking through online design and simulation of multidisciplinary systems},
  year = {2011}
}

@inproceedings{merged227,
  abstract = {Job opportunities and the need for programmers are increasing. Companies are looking for new hires who have the ability to learn how to learn, who have computational thinking skills. Student dropout rate in computer science is the highest among college majors. Educators are striving to find a way to teach efficiently and effectively the technical and the problem solving skills students need. In this paper we will be studying the effects of syntax exercises on a subject's ability to think computationally and precisely. We tested our process on professionals and students. Half of the professionals were in the computer science field and half of our students did syntax exercises. The other half of professionals and students had no exposure to syntax to compare. Our purpose is to find if teaching students syntax exercises are still relevant and can teach both technical and computational thinking skills.},
  author = {Johnson, Marina and Swanson, Hillary and Edwards, John},
  booktitle = {2022 Intermountain Engineering, Technology and Computing (IETC)},
  doi = {10.1109/IETC54973.2022.9796660},
  keywords = {Companies; Computer science; Computer science education; Education; Engineering profession; Problem-solving; Syntactics; computation thinking; computing eduation; precision in thinking; programming; syntax},
  month = {May},
  pages = {1-6},
  title = {Syntax Exercises and Their Effect on Computational Thinking},
  year = {2022}
}

@inproceedings{merged228,
  abstract = {Using the CiteSpace and a keyword trend computational method based on log-likelihood value, relative change rate, and betweenness centrality, and a set of keyword trends and type rules, this research comes up with the core words, common words, and frontier words in computational thinking research field, and their evolution history and trends. In computational thinking research field, the stable core words have “thinking”, the rising core words have “education”, the stable common words have “design” and “framework”, the fluctuating common words have “model” and “classroom”, and the frontier words have “game”, etc.},
  author = {Xu, Yilong and Zhao, Fujing},
  booktitle = {2022 European Conference on Communication Systems (ECCS)},
  doi = {10.1109/ECCS54035.2022.00010},
  keywords = {Analytical models; Computational modeling; Frequency estimation; Games; Market research; Maximum likelihood estimation; Soft sensors; co-word analysis; computational thinking; word frequency analysis},
  month = {May},
  pages = {6-9},
  title = {Research on Topic Evolution Analysis of Computational Thinking Based on Maximum Likelihood Estimation and CiteSpace},
  year = {2022}
}

@inproceedings{merged229,
  abstract = {In this pilot study we created and evaluated a new version of the TechCheck Computational Thinking (CT) assessment designed specifically for kindergarten students. The original version of TechCheck was validated in first and second graders and consists of 15 multiple choice unplugged challenges drawn from six CT domains. The kindergarten version, called TechCheck-K, consists of similar unplugged challenges but reduces the number of response choices from four to three and uses exclusively non-verbal material in the responses to accommodate younger, pre-literate children. We administered TechCheck-K to N =89 kindergarten students from four schools, including 45 boys and 44 girls with no coding experience. Participants completed the assessment in an average of 23.43 minutes. TechCheck-K scores were normally distributed (M =8.26, SD =2.33). Mean scores were numerically higher in boys (M =8.71, SD = 2.69) than girls (M =8.05, SD = 2.07). The difference between genders was not significant. The pattern of correct responses to the 15 TechCheck-K items correlated (r =.76) with the pattern observed in first and second graders on the original TechCheck, providing evidence that comparable CT constructs are measured by the two versions of the instrument. Results of this pilot study indicate that TechCheck-K has acceptable characteristics for assessment of CT in kindergarten children.},
  author = {Relkin, Emily and Bers, Marina},
  booktitle = {2021 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON46332.2021.9453926},
  issn = {2165-9567},
  keywords = {Assessment; Computational thinking; Computer Science; Conferences; Early Childhood Education; Encoding; Engineering education; Instruments; Unplugged},
  month = {April},
  pages = {1696-1702},
  title = {TechCheck-K: A Measure of Computational Thinking for Kindergarten Children},
  year = {2021}
}

@inproceedings{merged230,
  abstract = {Autism Spectrum Disorder (ASD) refers to a group of life-long conditions that are characterized by qualitative impairments in social interactions, problem solving and constructive skills. Children with learning disabilities such as autism face challenges in generating suitable and optimal solutions to problems. Those challenges can severely affect their interactions with others. Thus, teaching children with ASD problem solving and computational thinking skills could help them resolve conflicts that may happen in their everyday life. Effective problem solving is critical for their academic and social success and since one of the most effective tools for teaching children with autism is through using visual aids, the work in this paper reports the design and implementation of a serious game that aims at cultivating problem solving skills and teaching programming concepts to children with ASD. The presented game is suitable for children 7 to 14 years of age diagnosed with ASD to learn programming concepts. The preliminary prototype for the game gained positive responses from experts and 12 children with ASD from Caritas Egypt association and Hope Academy.},
  author = {Elshahawy, Menna and Bakhaty, Mariam and Sharaf, Nada},
  booktitle = {2020 24th International Conference Information Visualisation (IV)},
  doi = {10.1109/IV51561.2020.00135},
  issn = {2375-0138},
  keywords = {Autism; Children; Computational Thinking; Education; Problem-solving; Programming; Programming profession; Prototypes; Serious games; Visual Learners; Visualization},
  month = {Sep.},
  pages = {761-766},
  title = {Developing Computational Thinking for Children with Autism using a Serious Game},
  year = {2020}
}

@inproceedings{merged231,
  abstract = {This study investigated the outcome of project-based, airplane design activities on promoting computational thinking (CT) in sixth grade students in the context of an integrated STEM learning environment. A curriculum unit of airplane design activities was implemented in a sixth grade classroom over 10 days. The students' CT skills measured by the Bebras Challenges were significantly improved after their completion of the airplane design curriculum unit.},
  author = {Yang, Dazhi and Baek, Youngkyun and Swanson, Steve},
  booktitle = {2020 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE44824.2020.9274021},
  issn = {2377-634X},
  keywords = {Airplanes; Atmospheric modeling; Data models; Education; Pattern recognition; Problem-solving; STEM; computational thinking; computing education; engineering design; integrated STEM; project-based learning},
  month = {Oct},
  pages = {1-4},
  title = {Developing Computational Thinking through Project-Based Airplane Design Activities},
  year = {2020}
}

@inproceedings{merged232,
  abstract = {Computational Thinking (CT) refers to cognitive skills of logical reasoning, abstraction, and problem-solving that can be automated. Students with intellectual disabilities have cognitive deficits that can be improved by working the CT. To ensure that students develop this ability it is important to use appropriate and accessible tools for everyone and educational digital games are presented as a possibility to teach CT in a fun and engaging way. The present study aims to understand the relationship between the learning of children with intellectual disabilities and the existing guidelines for the development of accessible educational digital games, to promote CT for them. Also, a set of these guidelines is provided for designing educational digital games aimed at students with intellectual disabilities.},
  author = {Dutra, Taynara Cerigueli and Felipe, Daniel and Gasparini, Isabela and Maschio, Eleandro},
  booktitle = {2021 International Conference on Advanced Learning Technologies (ICALT)},
  doi = {10.1109/ICALT52272.2021.00101},
  issn = {2161-377X},
  keywords = {Bibliographies; Cognition; Games; Guidelines; Problem-solving; Search problems; Tools; accessibility; computational thinking; educational digital games; intellectual disabilities},
  month = {July},
  pages = {314-316},
  title = {Educational Digital Games and Computational Thinking for students with Intellectual Disabilities - Guidelines for accessibility},
  year = {2021}
}

@inproceedings{merged233,
  abstract = {The development of computer science has led to an increase in programming education for younger people. Many countries have begun programming education in elementary schools. As is a relatively new subject in elementary education, the course design and textbooks for programming education remain under development. The growth trend in computational thinking (CT) is helpful for educators to teach suitable programming concepts to students. Scratch, which is mostly used as an introductory programming language for elementary school students, can be evaluated to reflect students’ CT. In this work-in-progress research, we conducted a data-driven analysis on fourth-grade students’ CT growth in their first 3 years of programming learning by evaluating their Scratch projects. A preliminary result shows that CT grows rapidly in the first 2 years and tends to be stable in the third year. The reasons for the difference in growth of specific CT concepts are discussed.},
  author = {Yang, Guang and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle = {2023 IEEE Integrated STEM Education Conference (ISEC)},
  doi = {10.1109/ISEC57711.2023.10402181},
  issn = {2473-7623},
  keywords = {Computational thinking; Computer languages; Education; Elementary school; Market research; Programming education; Programming profession; Scratch},
  month = {March},
  pages = {234-237},
  title = {Data-driven Analysis of Elementary School Students’ Computational Thinking through Scratch Projects},
  year = {2023}
}

@inproceedings{merged234,
  abstract = {Programming education will be compulsory in elementary schools in Japan from 2020, but it is still little information on how to measure the effects of lessons conducted for students. In this study, to measure objectively and quantitatively the educational effect of programming education, we developed 30 quizzes of measuring the ability of computational thinking. In this paper, focusing on the programming experience of college students and above, we confirmed the measurable ability using these quizzes.},
  author = {Tanioka, Hiroki and Yano, Rina},
  booktitle = {2021 10th International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI53430.2021.00033},
  issn = {2770-8470},
  keywords = {Education; Focusing; Informatics; Programming profession; computational thinking; learning analytics; programming education},
  month = {July},
  pages = {188-191},
  title = {Development and Evaluation of Quizzes Aimed at Quantifying Computational Thinking},
  year = {2021}
}

@inproceedings{merged235,
  abstract = {BlockPy is a block-based program language which has both block-based interface and traditional text-based interface. It fills the gap between block-based programming and language coding. But there is little work that focuses on the Computational Thinking(CT) evaluation of BlockPy programs. In this paper, we design and implement a BlockPy Analysis Tool to assess the CT skills of BlockPy programs automatically. We use Python's built-in AST module to analyse each node in the abstract syntax tree(AST) of each BlockPy program. Then, considering the characteristics of Python language, we propose a new CT Evaluation Criteria based on Scratch Analysis Tool(SAT). Under the guidance of the CT Evaluation Criteria, we propose a detailed scoring program to analyze each node of the program and get the CT score. Experimental results show the superiority of our tool compared with other analysis tools.},
  author = {Xu, Can and Feng, Zhiyong and Qi, Peng and Sun, Yan},
  booktitle = {2020 International Wireless Communications and Mobile Computing (IWCMC)},
  doi = {10.1109/IWCMC48107.2020.9148514},
  issn = {2376-6506},
  keywords = {AST analysis; BlockPy; CT score assession; Complexity theory; Computational Thinking; Encoding; Programming; Python; Syntactics; Tools; Visualization},
  month = {June},
  pages = {2045-2050},
  title = {An Automatic Analysis Tool Based on Computational Thinking for BlockPy Programs},
  year = {2020}
}

@inproceedings{merged236,
  abstract = {This paper presents a design thinking process model that records not only the design procedure and decisions but also the design intents behind them. The design thinking process is evolved based on the interaction among design intents, operations and justifications. The taxonomy of design intents is explored. Based on different pairs of design intents and operations, segments of the design thinking process are identified. A design thinking process knowledge management prototype system is developed for modeling design thinking process. An example of the original design of an automatic teller machine (ATM) demonstrates how the design thinking process model is represented.},
  author = {Sun, Zhaoyang and Liu, Jihong},
  booktitle = {2008 International Symposium on Computational Intelligence and Design},
  doi = {10.1109/ISCID.2008.192},
  keywords = {Aerospace engineering; Computational intelligence; Design automation; Design intent; Design process; Design thinking process model; Knowledge management; Management information systems; Mechanical engineering; Process design; Prototypes; Sun; Taxonomy},
  month = {Oct},
  pages = {330-333},
  title = {A Design Thinking Process Model for Capturing and Formalizing Design Intents},
  volume = {2},
  year = {2008}
}

@inproceedings{merged237,
  abstract = {Research studies provide some evidence that computing and education robotics have a positive impact on female students' engagement in Computational Thinking (CT) practices and their self-efficacy for CT. Other issues raised by research concern the decontextualization of computing education from the actual lives of students which causes problems for students under represented in the fields of computing and engineering, such as female students. To tackle this problem, paper aimed to develop (STEM-Computational Thinking (CT)-Computing) scenarios related to students' actual lives and their local communities in order to help female students to develop STEM(Science, Technology, Engineering, Mathematics) competences, when core disciplinary ideas and cross-cutting concepts are infused in the scenarios. All scenarios were implemented using the didactic model of inquiry teaching and learning and the engineering design thinking instruction strategy using physical computing activities. A validated questionnaire for self-efficacy and CT practices was applied before and after the intervention to female prospective engineering school teachers studying at Higher Education Institutes in Greece. Results show a strong evidence for the effectiveness (enhancement of CT efficacy of female students) by using the STEM content epistemology through activities implemented with physical computing platforms.},
  author = {Psycharis, Sarantos and Kalovrektis, Konstantinos and Xenakis, Apostolos and Paliokas, Ioannis and Patrinopoulos, Matthaios and Georgiakakis, Petros and Iatrou, Paraskevi and Theodorou, Paraskevi and Papageorgiou, Theodora and Ntourou, Vasiliki},
  booktitle = {2021 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON46332.2021.9454003},
  issn = {2165-9567},
  keywords = {Computational Pedagogy; Computational Thinking; Computational modeling; Conferences; Engineering education; Mathematical model; Physical Computing; Robots; STEM; Women in Engineering},
  month = {April},
  pages = {308-315},
  title = {The Impact of Physical Computing and Computational Pedagogy on Girl’s Self – Efficacy and Computational Thinking Practice},
  year = {2021}
}

@inproceedings{merged238,
  abstract = {Human thinking is probably divided into three kinds: iconic imagery thinking, abstract logical thinking and afflatus thinking, but human control thinking process maybe classified as two kinds which are active control thinking process and passive control thinking process. The control methods and strategy of each control thinking process are discussed in this paper. The test results are given in this paper, it is proved that the research content is right and could be used in the process control. It provides the basis for human-like intelligent control to be used in complex system},
  author = {Wang, Pei-jin},
  booktitle = {2006 International Conference on Machine Learning and Cybernetics},
  doi = {10.1109/ICMLC.2006.258484},
  issn = {2160-1348},
  keywords = {Artificial intelligence; Computational modeling; Computer science; Computer simulation; Control systems; Electronic mail; Human thinking; Human-like Intelligent Control; Humans; Intelligent Control; Intelligent control; Learning; Process control; Testing},
  month = {Aug},
  pages = {850-854},
  title = {Learning and Control of Human-Like Thinking Process},
  year = {2006}
}

@inproceedings{merged239,
  abstract = {Thinking skills training can effectively improve students' creative thinking and learning ability, and it is simple, practical and feasible. Now there are lots of educators and teachers who have done some researches in this area. But many controversial problems still exist, for example, whether thinking is needed to be taught, how to be taught, etc. This paper first discusses the necessity and connotation of thinking skills training, and discusses the trainability of thinking skills, then designs a course framework based on Edward de Bono's thinking training system and Tony Buzan's mind map, and chooses teaching thinking directly as an effective way to teach thinking skills. At last, we introduce the practice of the course framework in Beijing Normal University. Constructing a practical course framework of training thinking and putting it into practice are the innovations of this paper.},
  author = {Zhao, Shu and Zhao, Guoqing and Wang, Qiong},
  booktitle = {2010 International Conference on Computational Intelligence and Software Engineering},
  doi = {10.1109/CISE.2010.5676754},
  keywords = {Brain; Educational institutions; Learning systems; Psychology; Training; Visualization},
  month = {Dec},
  pages = {1-4},
  title = {Teaching Thinking Directly-Construction and Practice of Thinking Skills Training Course},
  year = {2010}
}

@inproceedings{merged240,
  abstract = {STEAM education and Computational Thinking emphasize interdisciplinary, integrated learning. However, the STEAM learning scheme designed for the ART domain is limited. Therefore, this study develops an Interactive Picture Storybook Scheme for Lower-Grade Elementary Students to Learn Music and Computational Thinking. It combines picture storybooks to provide narrative contexts and knowledge learning with interactive digital content that offers interactive scenarios and hands-on activities, enhancing learning motivation and effectiveness.},
  author = {Su, Jun-Ming and Lin, Yu-En and Hsu, Wei-Fang and Wu, Ting-Ti},
  booktitle = {2024 16th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)},
  doi = {10.1109/IIAI-AAI63651.2024.00148},
  issn = {2472-0070},
  keywords = {Education; Informatics; STEAM; Subspace constraints; computational thinking; interactive content; music thinking; picture storybook},
  month = {July},
  pages = {712-713},
  title = {An Interactive Picture Storybook Scheme for Lower-Grade Elementary Students to Learn Music and Computational Thinking},
  year = {2024}
}

@article{merged241,
  abstract = {ChatGPT has received considerable attention in education, particularly in programming education because of its capabilities in automated code generation and program repairing and scoring. However, few empirical studies have investigated the use of ChatGPT to customize a learning system for scaffolding students’ computational thinking. Therefore, this article proposes an intelligent programming scaffolding system using ChatGPT following the theoretical framework of computational thinking and scaffolding. A mixed-method study was conducted to investigate the affordance of the scaffolding system using ChatGPT, and the findings show that most students had positive attitudes about the proposed system, and it was effective in improving their computational thinking generally but not their problem-solving skills. Therefore, more scaffolding strategies are discussed with the aim of improving student computational thinking, especially regarding problem-solving skills. The findings of this study are expected to guide future designs of generative artificial intelligence tools embedded in intelligent learning systems to foster students’ computational thinking and programming learning.},
  author = {Liao, Jian and Zhong, Linrong and Zhe, Longting and Xu, Handan and Liu, Ming and Xie, Tao},
  doi = {10.1109/TLT.2024.3392896},
  issn = {1939-1382},
  journal = {IEEE Transactions on Learning Technologies},
  keywords = {Artificial-intelligence-generated content (AIGC); ChatGPT; Chatbots; Codes; Education; Encoding; Problem-solving; Programming profession; Task analysis; computational thinking (CT); scaffolding},
  pages = {1628-1642},
  title = {Scaffolding Computational Thinking With ChatGPT},
  volume = {17},
  year = {2024}
}

@inproceedings{merged242,
  abstract = {Computational thinking is a necessary skill for human life. However, promoting this competency in primary school students sometimes is hard and difficult for instructors. This article proposes a learning approach based on the use of a platform as part of a strategy of computational thinking to enhance learning of geometry. A case study was performed with primary school children from fourth grade at the Comfacor School (Montería-Colombia). The aim of the study was to analyze the effects of the approach in the children's motivation and performance.},
  author = {Echeverría, Leovy and Cobos, Ruth and Morales, Mario and Moreno, Fernando and Negrete, Victor},
  booktitle = {2019 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2019.8725088},
  issn = {2165-9567},
  keywords = {Computational modeling; Computational thinking; Geometry; Learning of geometry; Moodle-G; Problem-solving; Programming profession; Taxonomy},
  month = {April},
  pages = {424-429},
  title = {Promoting Computational Thinking Skills in Primary School Students to Improve Learning of Geometry},
  year = {2019}
}

@inproceedings{merged243,
  abstract = {Intelligent product design has become an important part of product design due to its outstanding convenience and functionality. First of all, through the study of cognitive thinking and visual thinking, this article concludes that the two have important guiding roles in product design. Secondly, use the specific laws in cognitive thinking and visual thinking to derive the corresponding intelligent product design principles. Then, a intelligent product design process that is conducive to function setting and styling design is derived. The purpose is to introduce a good design plan for the material level, the behavior level, and the spiritual level. Finally, the research results are demonstrated by design practice. It is hoped that this article will have a certain enlightenment for related designers to carry out intelligent product design.},
  author = {Hemin, Du and Junjie, Jiang},
  booktitle = {2021 26th International Conference on Automation and Computing (ICAC)},
  doi = {10.23919/ICAC50006.2021.9594234},
  keywords = {Automation; Computational modeling; Product design; Reliability; Roads; Tools; Visualization; cognitive thinking; design practice; intelligent product design; visual thinking},
  month = {Sep.},
  pages = {1-6},
  title = {Research on Intelligent Product Design based on Cognitive Thinking and Visual Thinking},
  year = {2021}
}

@article{merged244,
  abstract = {The paper presents the details of a four-year project to test the effectiveness of teaching spreadsheeting with spreadsheet programming, instead of the traditional, widely accepted surface approach methods. The novel method applied in the project, entitled Sprego (Spreadsheet Lego), is a concept-based problem-solving approach adapted from the didactics of other sciences and computer programming. In the experimental group contextualized, real-world programming problems are presented in a spreadsheet environment. A semi-unplugged data-driven analysis is carried out based on each problem, which is followed by the building of a feasible algorithm, expressed by natural language expressions. The coding is completed in the following step by applying a limited number of spreadsheet (Sprego) functions, multilevel, and array formulas. The final steps of the process are discussion and debugging. On the other hand, classical, tool-centered approaches are applied in the control groups. Our research reveals that the traditional surface approach methods for teaching spreadsheeting do not provide long lasting, reliable knowledge which would provide students and end-users with effective problem-solving strategies, while Sprego does. Beyond this finding, the project proves that Sprego supports schema construction and extended abstraction, which is one of the major hiatus points of traditional surface navigation methods. The project also reveals that developing computational thinking skills should not be downgraded, and the misconceptions of self-taught end-users and user-friendly applications should be reconsidered, especially their application in educational environments. Gaining effective computer problem-solving skills and knowledge-transfer abilities is not magic, but a time-consuming process which requires consciously developed and effective methods, and teachers who accept the incremental nature of the sciences.},
  author = {Csernoch, Mária and Biró, Piroska and Máth, János},
  doi = {10.1109/ACCESS.2021.3126757},
  issn = {2169-3536},
  journal = {IEEE Access},
  keywords = {Algorithm-driven spreadsheeting; Education; Informatics; Mathematics; Problem-solving; Programming profession; Task analysis; cognitive load; computational thinking; end-user computing; long lasting knowledge; schema construction},
  pages = {153943-153959},
  title = {Developing Computational Thinking Skills With Algorithm-Driven Spreadsheeting},
  volume = {9},
  year = {2021}
}

@inproceedings{merged245,
  abstract = {Most efforts to incorporate computational thinking in K-12 education use visual tools (e.g., Scratch) and focus on students in their first grades. Fewer projects investigate the development of computational thinking in students in the last years of school, who usually have not had early formal preparation to acquire these skills. This study provides evidence of the effectiveness of teaching C++ (a low-level programming language) to develop computational thinking in high school students in Chile. By applying a test before and after a voluntary C++ workshop, the results reveal a significant improvement in computational thinking after the workshop. However, we observe that there was a tendency to drop out of the workshop among students with lower levels of initial computational thinking. Besides, tenth-grade students obtained lower final scores than eleventh and twelfth-grade students. These results indicate that teaching a low-level programming language is useful, but it has high entry-barriers.},
  author = {González, Felipe and López, Claudia and Castro, Carlos},
  booktitle = {2018 37th International Conference of the Chilean Computer Science Society (SCCC)},
  doi = {10.1109/SCCC.2018.8705239},
  issn = {1522-4902},
  keywords = {C++; C++ languages; Computational Thinking Test; Conferences; Education; Media; Programming in High School; Silicon compounds; Visualization},
  month = {Nov},
  pages = {1-8},
  title = {Development of Computational Thinking in High School Students: A Case Study in Chile},
  year = {2018}
}

@inproceedings{merged246,
  abstract = {The inclusion of computational thinking in third-level professional training is an alternative that revolutionize traditional teaching through new paradigms, ICT tools and new platforms such as the one proposed in this paper that describes the development and implementation of a prototype that allows incorporating computational thinking into educational constructivist models, exploiting the capacities and abilities of a global and interconnected society. The prototype was submitted to an evaluation by 120 students of Information Technology (IT) faculty of the Armed Forces University ESPE located in Sangolqua, Ecuador, in the fields: performance and acceptance of the user, obtaining acceptable results about its applicability, usability and adaptation to the training model by competencies of the institution. The research methodology Desing Science Research (DSR), SCRUM as a design methodology and AppGini as a development tool were applied.},
  author = {Delgado, Ramiro and Yacchirema, Silvana and Coral, Francisco and Celi, Juan},
  booktitle = {2019 14th Iberian Conference on Information Systems and Technologies (CISTI)},
  doi = {10.23919/CISTI.2019.8760819},
  issn = {2166-0727},
  keywords = {Computational modeling; Information systems; Prototypes; Software; Tools; Training; appgini; computational thinking; educational platform; scrum},
  month = {June},
  pages = {1-4},
  title = {Platform for university teaching applying Computational Thinking at the Armed Forces University ESPE},
  year = {2019}
}

@inproceedings{merged247,
  abstract = {This research intends to create a virtual laboratory-based student worksheets model on Electrostatic Forces, Fields, and Equipotential Lines to educate students computational thinking. This study was divided into four stages: needs analysis, practicum learning design, student worksheets development, and evaluation. The literature research and field investigations employed in the needs analysis stage are related to the need for virtual laboratories, whereas the practicum learning design stage begins by determining competency criteria and milestones in computational thinking. The decomposition process, pattern recognition, abstraction, and algorithms are all highlighted in the student worksheets development stage. Expert validation and limited trials are used in the evaluation step. Student responses and learning outcomes are classified as good and practicable to be used as a source of learning in learning activities based on the results of the validation.},
  author = {Rakhmawati, Lusia and Agung, Achmad Imam and Rohman, Miftahur},
  booktitle = {2022 Fifth International Conference on Vocational Education and Electrical Engineering (ICVEE)},
  doi = {10.1109/ICVEE57061.2022.9930462},
  keywords = {Classification algorithms; Computational modeling; Education; Electrical engineering; Electrostatics; Laboratories; Pattern recognition; Physics Education Technology (PhET); Virtual laboratory; computational thinking; student worksheets},
  month = {Sep.},
  pages = {221-225},
  title = {Virtual Laboratory-Based Student Worksheets Development for Computational Thinking Practices},
  year = {2022}
}

@inproceedings{merged248,
  abstract = {Visual programming languages can be used to make computer science more accessible to a broad range of students. The evaluative focus of current research in the area of visual languages for educational purposes primarily aims to better understand motivational benefits as compared to traditional programming languages. Often these visual languages claim to teach students computational thinking concepts; however, although the evaluations show that students may exhibit more enthusiasm, it is not always clear what computational thinking concepts students have actually learned. In this paper we attempt to develop a visual semantic evaluation tool for student-created games and simulations that goes towards depicting the computational thinking concepts implemented by the students. Through semantically analyzing a given student's created projects over time, this visual evaluation tool, called the Computational Thinking Pattern (CTP) graph, can possibly indicate the existence of computational thinking transfer from games to science simulations.},
  author = {Koh, Kyu Han and Basawapatna, Ashok and Bennett, Vicki and Repenning, Alexander},
  booktitle = {2010 IEEE Symposium on Visual Languages and Human-Centric Computing},
  doi = {10.1109/VLHCC.2010.17},
  issn = {1943-6106},
  keywords = {Computational Thinking; Computational modeling; Computer languages; Games; Knowledge Transfer; Programming; Semantics; Syntactics; Visual Language Programming; Visualization},
  month = {Sep.},
  pages = {59-66},
  title = {Towards the Automatic Recognition of Computational Thinking for Adaptive Visual Language Learning},
  year = {2010}
}

@inproceedings{merged249,
  abstract = {Education development continues to proliferate in Indonesia, so many learning methods are applied, but the number of students with HOTS abilities in Indonesia is minimal. The issues affecting HOTS in Indonesia are (1) Not yet able to adapt, (2) Lack of basic knowledge early on, and (3) Few apply HOTS. The research goals were to examine XYZ generations' HOTS variables in the e-learning concept. This research used Structural Equation Model (SEM) and SmartPLS as statistical tools. With the Judgement sampling method, data were collected through an online questionnaire from 184 respondents from April 21–28, 2022, consisting of students and lecturers at 20 universities in Indonesia who also came from various regions in Indonesia. The proposed model has six variables: Learning Environment, Learning Motivation, Peer Interaction, Learning Strategy, Learning Style, HOTS in e-learning concept, and eight hypotheses. All hypotheses have a significant influence.},
  author = {Halim, Erwin and Kevin and Kristian, Hans and Hebrard, Marylise},
  booktitle = {2022 IEEE International Conference on Cybernetics and Computational Intelligence (CyberneticsCom)},
  doi = {10.1109/CyberneticsCom55287.2022.9865409},
  keywords = {Adaptation models; Computational modeling; Education; Electronic learning; Higher-Order-Thinking skills; Learning Environment; Learning Motivation; Learning Strategy; Learning Style; Mathematical models; Numerical analysis; Sampling methods; e-learning},
  month = {June},
  pages = {297-302},
  title = {Investigating the Key Factors on XYZ Generations' Higher-Order Thinking Skills in E-Learning},
  year = {2022}
}

@inproceedings{merged250,
  abstract = {Technologies are growing rapidly and its applications are enormous in different strata of society. In this paper especially we are talking about educational technologies. We could see there is a significant change in elementary and secondary education over the past 10 years like classroom teaching, information and communications technology (ICT), and now everything is all about the cloud computing. Cloud computing technologies play a big role in the development of educational technologies. CT-Blocks is a virtual private cloud system developed for K-12 schools. The importance of the word computational thinking makes everyone to the development of educational tools to impart computational thinking to primary, middle and high school students. CT-Blocks is a cloud and block based programming language that reinforces the word computational thinking in all types of users.},
  author = {Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle = {2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  doi = {10.1109/ICCCNT.2018.8493669},
  keywords = {Cloud computing; Computational thinking; Computer languages; Education; Programming profession; Scratch; Snap; Sprites (computer); Tools},
  month = {July},
  pages = {1-7},
  title = {CT-Blocks: Learning Computational Thinking by Snapping Blocks},
  year = {2018}
}

@inproceedings{merged251,
  abstract = {Many technology and design-based disciplines are facing increasing demands to prepare students to perform effectively within computational and simulation environments. Further, students' spatial abilities are an important prerequisite to technological literacy within virtual environments. In this paper, we explore the challenges and opportunities teaching a large group of first-year, interdisciplinary students to apply spatial thinking skills by undertaking a team-based, design project using an industrial-strength computational design environment (SolidWorks). We describe key instructional principles and techniques used to minimize the complexity of this computational tool, thus enabling students to focus on the tasks and reasoning requirements of the design project. While encouraged by the high degree of students' motivation for building functioning animated mechanical toys (AMTs), students frequently reported being “lost” in SolidWorks (SW) during the modeling phases of the project. Our techniques for scaffolding learning activities have continued to evolve to minimize the challenges faced by novice users of SW and to better support them in developing their spatial thinking skills. We also present our experiences, lessons learned, and ideas for improving the design of the project, and learning activities, such as worked examples of an AMT model, to further reduce the cognitive load and to enable students to focus on visual-spatial reasoning rather than on the tacit skills associated with using SolidWorks.},
  author = {Ben Youssef, Belgacem and Berry, Barbara and Sjoerdsma, Michael},
  booktitle = {2012 2nd Interdisciplinary Engineering Design Education Conference (IEDEC)},
  doi = {10.1109/IEDEC.2012.6186914},
  keywords = {3D modeling; Assembly; Computational modeling; Education; Software; SolidWorks; Spatial thinking; Three dimensional displays; Tutorials; cognitive load; computational design software; first-year students; instructional principles; scaffolding techniques; small group projects},
  month = {March},
  pages = {10-17},
  title = {Teaching first-year interdisciplinary students to use computational design software in a spatial thinking course},
  year = {2012}
}

@inproceedings{merged252,
  abstract = {This full paper presents the instillation of computational thinking (CT) in undergraduate students across multiple disciplines through an adaptive gamified e-learning platform. In today’s fast-paced digital age, possessing CT abilities is essential for effective critical thinking and problem-solving across various fields. To cultivate CT proficiency in students from diverse disciplines, we designed an innovative adaptive gamified e-learning platform called Computational Thinking Quest (CTQ). The eight key features of CTQ are (1) interactive storyline with customizable avatars, mini-games, and questions; (2) performance profiler; (3) comprehensive question bank with questions at three difficulty levels; (4) feedback and answer to each question; (5) additional learning resources via hyperlinks; (6) badges and leaderboard; (7) progress saving feature; and (8) integrated online feedback survey. The CTQ was introduced to recently enrolled first-year undergraduate students across all five discipline clusters at Singapore Institute of Technology. The learning performance and feedback of 135 students were gathered and examined. The student population comprised 33 Business, Communication and Design (BCD); 48 Health and Social Science (HSS); and 54 Infocomm Technology (ICT) undergraduates. Statistical results from the paired Student’s t-test reveal significant differences (p < 0.05) (i) between the pre-test and post-test scores for HSS, ICT, and all students combined; (ii) between the pre-test duration and post-test duration for all three clusters and all students combined; (iii) between the self-assessed knowledge score before CTQ and after completing CTQ for all three clusters and all students combined. Moreover, majority of the students commented that the CTQ generates interest in CT, is an engaging learning platform with enriching educational content, and has motivated their independent learning. Lastly, CTQ functions as an online preparatory course aimed at reducing the diversity in academic backgrounds and varying levels of prior knowledge of computer programming languages among students. This will help smoothly transition students into programming-relevant modules, and ultimately enhance the effectiveness of teaching and learning.},
  author = {Ng, Andrew Keong and Atmosukarto, Indriyati and Lee Teo, Julia Kwok and Amran, Ashraaf Bin},
  booktitle = {2023 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)},
  doi = {10.1109/TALE56641.2023.10398325},
  keywords = {Computer languages; Education; Electronic learning; Games; Problem-solving; Sociology; Surveys; adaptive learning; computational thinking; gamification; independent learning; multiple disciplines; online education},
  month = {Nov},
  pages = {1-7},
  title = {Instilling Computational Thinking in Undergraduate Students Across Multiple Disciplines through an Adaptive Gamified e-Learning Platform},
  year = {2023}
}

@article{merged253,
  abstract = {This paper exhibits a systematic literature mapping of the considerations required to develop algorithmic thinking in a first course in computer programming (CS1) in university academic programs in computing. In the methodological process of this study, 5 stages were proposed: research questions, search, selection, quality assessment and synthesis extraction. In this way, 5 guiding questions were drawn, 136 articles generated by the search stage were analyzed and the synthesis of 55 documents that met the criteria of this research was concluded, thus compiling the different practices used for the development of algorithmic thinking. In addition, as a result of the systematic literature mapping, a definition of Algorithmic Thinking oriented Software Engineering and didactics is proposed.},
  author = {Jiménez Toledo, Javier Alejandro and Collazos, César A. and Ortega, Manuel and Ramos, Deixy Ximena},
  doi = {10.1109/RITA.2023.3323784},
  issn = {1932-8540},
  journal = {IEEE Revista Iberoamericana de Tecnologias del Aprendizaje},
  keywords = {Algorithms; Computational modeling; Education; Information services; Programming profession; Software algorithms; Software engineering; Systematics; computational logic; computational thinking; computer programming; computing},
  month = {Nov},
  number = {4},
  pages = {331-343},
  title = {Algorithmic Thinking and Extension of its Definition for Trainee Software Developers: A Systematic Literature Mapping},
  volume = {18},
  year = {2023}
}

@inproceedings{merged254,
  abstract = {In the present Research-to-practice Full-paper, the learning, reasoning, and problem-solving processes, in engineering students, have been analyzed from different approaches, one of them is the computational thinking process, where most of the activities must be performed as a computer does and the reasoning is developed with the well-oriented activities realized by them. In many of the engineering career programs, the Physics courses are fundamental, and because of the diversity in contexts, they have not been seen as a subject where students can develop the computational thinking process. Present work describes an empirical study based on the learning of the rigid body concept in physics, with the use of spreadsheets as an electronic tool for promoting the learning with the programming of all the dynamical system, describing the evolution, generating, and analyzing graphics, and explaining the physical phenomena with a high comprehension and transfer of knowledge. At the end, students identified where the concept can be applied in their professional context with the use of a simulation. The learning sequence was implemented in three sessions of 1.5 hours each one, two diagnostic tests were applied, one for identifying the previous knowledge and use of electronic spreadsheets, the second one used as a pretest and post-test, it was focused on the main concepts of the rigid body system, like forces, kinematics, and circular movement. The sequence was implemented with N = 77, students. Session 1, started with the introduction of electronic spreadsheets for their use in science and engineering, some examples in Physics and Mathematics were described with their respect feedbacking for students. For session two, the rigid body concept was described with the support of electronic spreadsheets, all the dynamics, equations, plotting of the results and the relationships of all variables were described; for reinforcing the concept learned, students were asked to solve two more similar exercises with the use of the spreadsheets as homework, and finally they were asked to record, in groups of three students, a video with the solution of the problem assigned. In the video, they must present the problem description, equations and dynamics involved in the solutions and explaining all the programming steps needed to perform the solution in an electronic spreadsheet with its graphical representation and interpretation of the variables, and a description of implications in the changing values of the variables in the mathematical model. At the end of the sequence, in session three, a virtual simulation related to their professional context was used for the reinforcement of all the concepts learned. For analyzing the impact in their learning process, the Normalized Conceptual Gain was used in the pre-test and post-test, results showed a g = 0.85, which represents a high learning and normalized conceptual gain. Finally, the results showed that the computational thinking process can be developed by students, as they must program equations, analyze data, understand it, and identify graphically the variables involved, linking the learning of a physical concept with a computational tool that let them understand in a more clear, specific, and ordered thinking.},
  author = {Juárez, Erika Cervantes and Guzmán, Daniel Sánchez},
  booktitle = {2022 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE56618.2022.9962398},
  issn = {2377-634X},
  keywords = {Cognition; Computational thinking; Engineering profession; Engineering students; Knowledge engineering; Mathematical models; Software; Solids; electronic spreadsheets for learning; engineering students; physics courses in engineering; professional skills},
  month = {Oct},
  pages = {1-6},
  title = {Developing the computational thinking process in Physics courses, an empirical study for the learning of the rigid body concept in engineering students},
  year = {2022}
}

@inproceedings{merged255,
  abstract = {With the worldwide momentum of promoting computational thinking (CT) education, greater attention has been received on assessing learning effects in both cognitive and attitudinal aspects. However, the cross-lagged relations between the two were unknown. This study investigated the cross-lagged association between CT cognitive performance and attitudinal beliefs of primary students through a three-wave longitudinal design. The paper reported the first two waves of data collection, with an 8-month time interval, involving a sample of 392 students (age 9-11). At each wave, students were asked to complete a CT cognitive test and a self-reported attitude survey. Through cross-lagged analyses, the results showed that prior CT cognitive performance significantly predicted later learning attitudes, and the paths remained significant after controlling for students’ demographics and learning experiences. The study contributes to the literature by pioneering documenting the cross-lagged relations between students’ cognitive and attitudinal attainments in the context of CT education.},
  author = {Zhang, Shuhan and Wong, Gary K. W.},
  booktitle = {2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)},
  doi = {10.1109/TALE54877.2022.00098},
  issn = {2470-6698},
  keywords = {Attitude control; Computational modeling; Data collection; Education; Surveys; coding attitudes; computational thinking; cross-lagged panel model; longitudinal study},
  month = {Dec},
  pages = {562-566},
  title = {Cross-lagged Associations between Cognitive Performance and Attitudinal Beliefs of Computational Thinking: A Preliminary Study},
  year = {2022}
}

@inproceedings{merged256,
  abstract = {According to the teaching problem of “Fundamentals of Information Technology” course, a strategy of Classified teaching based on computational thinking is brought forward. At the same time, it gives the design of Classified teaching task and the actual teaching cases.},
  author = {Chun-Hong, Wang and Qiao-Ling, Wang},
  booktitle = {2011 IEEE 3rd International Conference on Communication Software and Networks},
  doi = {10.1109/ICCSN.2011.6013931},
  keywords = {Classified teaching; Computational Thinking; Computational modeling; Educational institutions; Technological innovation; fundamentals of information technology},
  month = {May},
  pages = {702-704},
  title = {A study of the Classified teaching of “Fundamentals of Information Technology” course based on computational thinking},
  year = {2011}
}

@inproceedings{merged257,
  abstract = {We developed and piloted a new course titled Computer Science Teaching Methods (CSM) in the fall semester of 2019. This course was based on materials developed from a previous program that trained high school teachers in computational thinking and programming through LSU's Cain Center. Pedagogical content knowledge informed the design of this course. Also, data gathered from teacher and instructor interaction at multiple sites during the summer STEM professional development program contributed to the courses' design. The CS Methods course targeted undergraduate computer science majors who were considering a career in teaching or who were interested in CS pedagogy. We encountered several challenges recruiting and retaining students and found that computer science students attracted to teaching careers do not fall into the stereotype of most computer science majors. Participation of women was higher than the average undergraduate CS courses. A disconnect appeared between the pedagogical practices promoted for teaching computing at the high school level and those being practiced at the college level. After learning about the 5E pedagogical model for teaching computing, students expressed interest in the potential of using more student-centered instruction, not only for high school instruction, but also for their own college courses. An area of disconnect also emerged in the programming formats, as all the students were comfortable with Java but all were unfamiliar with popular block-based programming platforms, such as Scratch. The transition from the CS curriculum taught in high schools to what follows in college needs to be smoother.},
  author = {Alegre, Fernando and Moreno, Juana and Dawson, Trent and Tanjong, Egbeyong E. and Kirshner, David H.},
  booktitle = {2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)},
  doi = {10.1109/RESPECT49803.2020.9272455},
  keywords = {Computational modeling; Encoding; Interviews; Planning; Programming profession; Research Practitioner Partnership; STEM; Training; computational thinking; computer science teachers},
  month = {March},
  pages = {1-2},
  title = {Computational Thinking for STEM Teacher Leadership Training at Louisiana State University},
  volume = {1},
  year = {2020}
}

@inproceedings{merged258,
  abstract = {This work-in-progress paper reports on the establishment of preliminary reliability for a domain-agnostic evidence-centered assessment model to measure computational thinking (CT) in an online virtual world. Preliminary reliability was established between two researchers through manually coding 800 minutes of recorded learning sessions and over 350 minutes of consultation. Participants were three adolescents diagnosed with autism spectrum disorder. Findings indicate an acceptable level of reliability between the two coders, opening the way to more extensive application of the model in future studies.},
  author = {Barrett, Alex and Zhang, Nuodi and Ke, Fengfeng and Moon, Jewoong and Sokolikj, Zlatko},
  booktitle = {2022 8th International Conference of the Immersive Learning Research Network (iLRN)},
  doi = {10.23919/iLRN55037.2022.9815999},
  keywords = {Atmospheric measurements; Autism; Computational modeling; Encoding; Particle measurements; Reliability; autism spectrum disorder; behavioral coding; computational thinking; evidence-centered design; virtual worlds},
  month = {May},
  pages = {1-3},
  title = {Work-in-progress—Developing an Evidence-Centered Model for Computational Thinking in Virtual Worlds with Children with Autism},
  year = {2022}
}

@inproceedings{merged259,
  abstract = {This study originates from the content synthesis of studies on computational thinking, need assessment, gamification, and computational thinking with coding from Thai and international scholarly articles published in accredited databases. Then, the synthesis results were integrated into the development of computational thinking through gamification and programming knowledge to improve the efficacy of computational learning. The process commenced with an analysis of the learners' needs obtained through the questionnaires concerning computational thinking. Data analysis illuminated the learners' levels of computational thinking as well as a fundamental understanding of what the learners need to be taught or what areas of skills each learner. With regards to this, conventional teaching approaches may not serve best to transmit the relevant knowledge which may subsequently induce unfavorable attitudes toward computational thinking. With the data elicited through the need assessment, instructors will have a clear direction as to how the pedagogical process should be designed to directly address the needs in each of the computational thinking components. In general, each component of them is rather complex, so the researcher incorporated gamification theory-based learning defined by its enjoyable game mechanisms and challenging nature which makes the coding lesson fun with block programming enabling learners to proficiently grasp the concept of computational thinking.},
  author = {Aroonsiwagool, Athit and Tuntiwongwanich, Somkiat},
  booktitle = {2021 2nd SEA-STEM International Conference (SEA-STEM)},
  doi = {10.1109/SEA-STEM53614.2021.9668107},
  keywords = {Education; Encoding; Games; Navigation; Pattern recognition; Programming; Systematics; computational thinking; computational thinking with coding; gamification; need assessment},
  month = {Nov},
  pages = {146-150},
  title = {Development of CT Using Need Assessment and Gamification: A Systematic Review},
  year = {2021}
}

@inproceedings{merged260,
  abstract = {K-12 computer science education has challenges related to content and to teacher expertise and comfort. This is further made difficult with inconsistent standards and teacher preparation from state-to-state. We describe a K-12 Computer Science Teaching certificate program, located at Montclair State University, aimed at providing current teachers in northern New Jersey with enhanced understanding of computer science concepts, capabilities, and skills, plus scaffolding of equitable and inclusive teacher practices for applied CS pedagogy. We discuss a brief history of the field, our curriculum and approach and then our first graduating cohort’s experiences and challenges. Finally, we discuss our future work.},
  author = {Herbert-Berger, Katherine G. and Hagiwara, Sumi and Rogacki, Elizabeth M. and Marlowe, Thomas J.},
  booktitle = {2022 IEEE Integrated STEM Education Conference (ISEC)},
  doi = {10.1109/ISEC54952.2022.10025068},
  issn = {2330-331X},
  keywords = {Computer science; Computer science education; Curriculum development; Education; History; STEM; Standards; computational thinking; computer science K-12 pedagogy; computer science K-12 teacher preparation; computer science education; computer science education graduate curriculum development},
  month = {March},
  pages = {361-363},
  title = {Creating an Appropriate Computer Science and Computational Thinking Graduate Curriculum for K–12 Teachers: Context and Initial Results},
  year = {2022}
}

@inproceedings{merged261,
  abstract = {Computational thinking is considered an important skillset for 21st century learners and became a subject of focus in K-12 education in the recent years. It cultivates problem-solving and algorithmic thinking and can be helpful in wider aspects of everyday life, besides programming and computer science. There have been various approaches to teach computational thinking in early education stages that utilize modern technologies, such as physical computing and robotics, and adopt a playful manner. Mobile Augmented Reality is a promising technology along this path that lets users collaborate and interact with both physical and digital elements. However, the technology is still relatively new and has not been studied extensively with students, especially in formal educational settings. In this paper we present ARQuest, a collaborative mobile augmented reality game for developing computational thinking skills of primary school students. The game combines a physical board and tangible tokens with animated 3D content, and students use them to create and solve challenges in a gamified environment. We have performed an exploratory study in two primary schools in order to explore the impact of ARQuest on students' understanding of algorithmic concepts, engagement and collaboration. The study led to a number of interesting conclusions regarding the game, as well as more generic aspects of interacting and collaborating in mobile augmented reality.},
  author = {Gardeli, Anna and Vosinakis, Spyros},
  booktitle = {2019 11th International Conference on Virtual Worlds and Games for Serious Applications (VS-Games)},
  doi = {10.1109/VS-Games.2019.8864603},
  issn = {2474-0489},
  keywords = {Augmented reality; Education; Games; Problem-solving; Programming profession; collaborative learning; computational thinking; game-based learning; mobile augmented reality; tangible augmented reality},
  month = {Sep.},
  pages = {1-8},
  title = {ARQuest: A Tangible Augmented Reality Approach to Developing Computational Thinking Skills},
  year = {2019}
}

@inproceedings{merged262,
  abstract = {Recently, higher education has seen an increasing emphasis on the prominent role of computational thinking in all disciplines. Computational thinking is advocated as not only a fundamental skill or concept in computer science but also a core competency for all disciplines. Teaching students in non-computer science majors computing thinking is challenging because students do not have experts' mental models. This study investigates the knowledge gap that non-computing major college students (n=126) possess about computational thinking in an introductory MS Excel course by measuring their performance using spreadsheet functions in three categories: recall, application, and problem solving. The empirical result, analyzed using ANOVA, shows that students can recall the meaning of those functions but seem to have trouble using them correctly and precisely (cued or uncued). Students' test results suggest the following issues: (1) problems with understanding the data type, (2) failure in translating problems to productive representations using spreadsheet functions, and (3) inadequate stipulation of the computational representations in precise forms. Addressing these problems early and explicitly in future classes could improve the education of computational thinking and alleviate difficulties students may experience in using computational thinking in learning and problem solving.},
  author = {Yeh, Kuo-Chuan and Xie, Ying and Ke, Fengfeng},
  booktitle = {2011 Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2011.6142980},
  issn = {2377-634X},
  keywords = {Computational Thinking; Computer Science Education; Computer science; Computers; Conferences; Educational institutions; Instruments; Problem Solving; Problem-solving; Spreadsheet Functions},
  month = {Oct},
  pages = {F3J-1-F3J-5},
  title = {Teaching computational thinking to non-computing majors using spreadsheet functions},
  year = {2011}
}

@inproceedings{merged263,
  abstract = {Due to the popularity and development of computer science, the connection between computer science and other disciplines became closer. The multidisciplinary crossing centered on computer science is gradually formed. Computer has unparalleled advantages in calculation, modeling, simulation and so on. It makes computer science hold a significant position in other disciplines. How to make students better understand computer knowledge, how to make them easier use computer to solve actual problems in their fields and how to break the barriers between disciplines are the challenges computer educators will face. This paper thought computational thinking is a good method and introduced its core concepts, discussed the dialectical relationship between computation and thinking, analyzed its important role in computer teaching of various disciplines. It indicated computation is a kind of thinking process which uses computing technology to process information and thinking refers to the activities of the human brain to perceive the world in which computation plays an important role. Finally, the paper proposed a modular teaching method based on practical case, engineering project and disciplinary characteristics for achieving the cultivation of computational thinking.},
  author = {Li, Ying},
  booktitle = {2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
  doi = {10.1109/FIE.2014.7044465},
  issn = {2377-634X},
  keywords = {Abstraction; Abstracts; Algorithm design and analysis; Computational Thinking; Computational modeling; Computer science; Computers; Data models; Education; Engineering project case; Multidisciplinary crossing},
  month = {Oct},
  pages = {1-7},
  title = {Research into the computational thinking for the teaching of computer science},
  year = {2014}
}

@inproceedings{merged264,
  abstract = {This research examines the impact of playing Multiplayer Online Battle Arena (MOBA) video games on computational thinking skills among Indonesian college students. Using a quantitative approach, structured and valid questionnaires were administered to collect data and explore the potential benefits of video games in education. The findings indicate that playing MOBA games is associated with enhanced computational thinking skills. Additionally, Participants recognized the positive influence of playing MOBA games on computational thinking, highlighting improved strategic thinking, decision-making, and team coordination as main benefits. These results contribute to the existing research on gaming and cognitive skills, underscoring the potential of MOBA games for fostering computational thinking abilities. Educators and program developers can utilize these insights to enhance teaching and learning methods by integrating video games.},
  author = {Jumana, Athaillah Adhar and Umboh, Josua Golden and I Ketut Dharma Wijaya, K and Gunawan, Alexander Agung Santoso and Saputra, Karen Etania},
  booktitle = {2023 6th International Conference on Information and Communications Technology (ICOIACT)},
  doi = {10.1109/ICOIACT59844.2023.10455810},
  issn = {2770-4661},
  keywords = {Computational Thinking; Data analysis; Decision making; Education and training; Games; Indonesia; Learning systems; Multiplayer Online Battle Arena; Particle measurements; Students; Training; Video games},
  month = {Nov},
  pages = {108-113},
  title = {The Impact of Playing Multiplayer Online Battle Arena Video Games on the Enhancement of Computational Thinking Skills Among Students in Indonesia},
  year = {2023}
}

@inproceedings{merged265,
  abstract = {Computational thinking is a high-level skill that involves both critical and creative thinking. This research proposes an advanced method for analyzing source code to assess computational thinking skills in elementary school students. We present a large-scale approach that examines source code from various programming exercises using a generalized abstract syntax tree, enabling language-independent analysis. Clustering techniques are applied to identify different levels of computational thinking development in areas such as parallelism, data representation, abstraction and decomposition, control flow, and programming structure. The results of the automated assessment provide insights into students' computational thinking abilities across diverse populations, highlighting opportunities for improving the educational framework.},
  author = {Pacheco-Portuguez, Steven and Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Trejos-Zelaya, Ignacio and Monge-Fallas, Jorge},
  booktitle = {2025 IEEE Engineering Education World Conference (EDUNINE)},
  doi = {10.1109/EDUNINE62377.2025.10981362},
  keywords = {Codes; Computational thinking assessment; Data visualization; Engineering education; Parallel processing; Pattern recognition; Programming profession; Software measurement; Source coding; Syntactics; clustering techniques; code analysis; generic abstract syntax tree; pattern recognition; software metrics},
  month = {March},
  pages = {1-6},
  title = {Pattern recognition in programming to support the evaluation of Computational Thinking},
  year = {2025}
}

@inproceedings{merged266,
  abstract = {Author's mathematical model of thinking is modified so that the model covers the non-logical thinking as well as the logical thinking. A computer network system works as a secondary brain in the case of group thinking. It has been shown that the refined model has opened the way to studying group thinking over the Internet, where the non-logical factors sometimes play an important role in obtaining conclusion.},
  author = {Ozawa, Satoru and Minato, Atsushi and Itaba, Masanori and Murayama, Shigeyuki and Quarmal, Sarkar Barbaq},
  booktitle = {2014 IEEE International Conference on Bioinformatics and Biomedicine (BIBM)},
  doi = {10.1109/BIBM.2014.6999393},
  keywords = {Brain modeling; Computational modeling; Decision making; Internet; Mathematical model; Psychology; Servers; artificial brain; human brain; linkage of knowledge; networking; the Internet; thinking process},
  month = {Nov},
  pages = {15-17},
  title = {Modeling of personal thinking and its application to studies of group thinking over the Internet},
  year = {2014}
}

@inproceedings{merged267,
  abstract = {Artificial Intelligence technology has made remarkable progress in machine learning, but it is still in its infancy in creative thinking or computational creativity. In 2018, Yang and Li proposed that the physiological basis for the formation of memories and concepts in the human brain is engram cells (interneuron), and creative thinking is the process of forming new engram cells to connect previously seemingly unrelated concepts. During this process, association and prediction play a key role. In this study, a computational model based on engram cell theory was coded in Python to mimic the process of creative thinking. The validity of the model was tested by simulating the phenomenon of language generation and summarizing the artificial food-set regularity in the plus maze. The results show that, given 29 initial words and certain grammatical rules, the language generation program generates 25,405 sentences after 130,000 calculations, and these generated sentences can be combined into various short paragraphs. After 50 times of training in the cross maze puzzle solving program, the model can master 100% of the rules of artificial food settings. In conclusion, a computational model of creative thinking based on engram cell theory can creatively and automatically generate sentences and paragraphs, and can learn and summarize laws to solve simple puzzles. We plan to further use this model to address complex real-world problems, such as the study of cancer therapeutic targets},
  author = {Li, Qinhan and Li, Bin},
  booktitle = {2023 IEEE Conference on Artificial Intelligence (CAI)},
  doi = {10.1109/CAI54212.2023.00121},
  keywords = {Brain modeling; Computational modeling; Creativity; Machine learning; Physiology; Python; Training; computational model; creative thinking; engram cell theory; language generation; puzzle solution},
  month = {June},
  pages = {272-273},
  title = {A Model of Computational Creativity based on Engram Cell Theory},
  year = {2023}
}

@inproceedings{merged268,
  abstract = {Our research aims to improve the Traditional Decision Making Steps with efficiency and effectiveness. Creative Decision Making Steps are created through combining Game Theory and Lateral Thinking approach in an Enhanced Computer System. Computer system is able to help people make decisions as a result. In the current situation, computer system is a tool for human to output result after inputting data. Users could use the result to make decisions. In the past, data collection is limited to hardware. But big data and cloud computing change the situation, besides the infinite storage, the relationships among all the information are presented at the same time. Which means, if combine the creative methodology and logical process such as Game Theory and Lateral Thinking in computer system, computers will become more reliable in Decision Making.},
  author = {Zou, Lin and Yang, Hongji},
  booktitle = {2015 21st International Conference on Automation and Computing (ICAC)},
  doi = {10.1109/IConAC.2015.7313962},
  keywords = {Computational modeling; Computers; Creative Computing; Decision Making; Game Theory; Lateral Thinking; Nash equilibrium; Software; Vehicles},
  month = {Sep.},
  pages = {1-6},
  title = {Creative computing for decision making: Combining game theory and lateral thinking},
  year = {2015}
}

@inproceedings{merged269,
  abstract = {As Virtual reality (VR) devices become more widespread, they are being recognized as efficient teaching tools for many subjects. In the 21st century, learners are expected to master important skills, which are difficult to teach in conventional lectures, such as computational thinking, critical thinking, creativity, and abstract reasoning. [1] Therefore, computer science or information technology courses often limit the discussion of recursion to calculating a factorial or a Fibonacci number, even though recursion is presented as an academic-type oddity in most cases. [2] To elucidate how VR can improve students’ computational thinking skills and abstract thinking associated with solving problems that require recursive algorithms, this paper examines the use of VR in computer science education to teach the abstract concept of recursion. The results of learners using VR Tower of Hanoi software are compared to those using the conventional Hanoi puzzle. Most learners show an improved understanding after experiencing the gameplay in the VR software, and some demonstrate a better understanding of recursion. In the post-survey, most participants acknowledge that the immersive environment is helpful when learning abstract subjects.},
  author = {Wang, Xinze and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle = {2023 IEEE Integrated STEM Education Conference (ISEC)},
  doi = {10.1109/ISEC57711.2023.10402125},
  issn = {2473-7623},
  keywords = {Codes; Computer Science Education; Computer science; Education; Recursion; Software; Software algorithms; Surveys; Tower of Hanoi; Virtual Reality; Virtual reality},
  month = {March},
  pages = {243-246},
  title = {Facilitating Students’ Abstract and Computational Thinking Skills Using Virtual Reality},
  year = {2023}
}

@inproceedings{merged270,
  abstract = {Drones have emerged as powerful educational tools, offering students diverse ways to learn and develop critical thinking and problem-solving skills in STEM education. Drones are framed within real-world contexts, showcasing their applications in multiple industries. Drones offer the possibility to be used to teach programming and coding that promote computational and critical thinking. This research paper presents a pedagogical approach that combines the use of drones with inquiry-based learning to foster students' intellectual, creative, and technical abilities, enhancing their understanding of real-world scenarios and their capacity for critical thinking and problem-solving. The study was conducted in top-end schools in Northern Australia. The findings indicate that engaging in drone coding exercises within authentic bushfire scenarios offers an ideal environment for STEM education, enhancing students' critical thinking and problem-solving abilities.},
  author = {Sattar, Farha and Nawaz, Muhammad},
  booktitle = {2024 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON60312.2024.10578905},
  issn = {2165-9567},
  keywords = {Encoding; Industries; Problem-solving; Propulsion; Surveys; Tablet computers; Task analysis; automated flight path; critical thinking; drone coding & and programming; drone technology; inquiry-based learning; problem-solving; real-world scenarios},
  month = {May},
  pages = {1-5},
  title = {STEM Learning Through Drones: A Pedagogical Approach for Critical Thinking and Problem Solving},
  year = {2024}
}

@inproceedings{merged271,
  abstract = {Recently the education system has progressively emphasized computational thinking (CT) and coding skills. The curriculum progresses from foundational tools like Scratch in elementary education to more complex languages such as Python and C++ in senior high school. However, traditional teaching methods often fail to engage students effectively, hindering their development of critical coding skills. This research evaluates the effectiveness of myChatCT, an artificial intelligence (AI)-enabled learning assistant designed to enhance CT and coding skills among high school students. A distinctive feature of myChatCT is its integration of activity diagrams, bridging the gap between students' cognitive processes and their visual representations, along with the corresponding programming code. This not only clarifies complex concepts but also promotes deeper understanding and engagement. The study involved four distinct cohorts of high school students who completed coding tasks both with and without the assistance of myChatCT. A mixed-methods approach was employed, combining quantitative assessments of coding performance with qualitative feedback on learning experiences. The results revealed a significant improvement in performance metrics among students using myChatCT, as evidenced by higher accuracy rates and faster completion times. Qualitative feedback revealed that students felt more confident in their coding abilities and were more motivated to engage with programming concepts when supported by myChatCT. These findings underscore myChatCT's potential as a valuable educational tool that can facilitate deeper understanding and engagement in coding education, preparing high school students for a technology-driven future. By leveraging AI capabilities and visual aids, myChatCT not only enhances students' coding skills but also fosters a more interactive and supportive learning environment. This research contributes to the growing body of literature on AI application in education, emphasizing the significance of innovative pedagogical approaches in improving student learning experiences and outcomes within an evolving educational landscape. Ultimately, the integration of tools like myChatCT represents a significant step forward in addressing the challenges of traditional education, paving the way for a more effective and engaging learning experience in the digital age.},
  author = {Lin, Kuan-Yeh and Cheng, Po-Hsun and Chen, Li-Wei},
  booktitle = {2025 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON62633.2025.11016419},
  issn = {2165-9567},
  keywords = {AI Assistance; Codes; Coding Skills; Cognitive processes; Computational Thinking; Education; Encoding; Engineering education; Experiment; Information age; Learning (artificial intelligence); Programming profession; Python; Visual Diagrams; Visualization},
  month = {April},
  pages = {1-6},
  title = {AI-Driven myChatCT: Enhancing Computational Thinking and Coding Skills in High School Education},
  year = {2025}
}

@inproceedings{merged272,
  abstract = {The employment of technology as a tool is a reality in any area of knowledge. Technology is present and permanently impacts our society, including its effects on education. Computational thinking is a way of critically and creatively using the fundamentals of computer science to solve problems, making it essential for success in the job market. This article aims to stimulate computational thinking in children from the first years of elementary school, ranging from the 1 st to the 5 th grades, which corresponds to the age group from 6 to 10 years old. For developing computational thinking in the students, a didactic sequence was created using several tools, namely: naval battle, Blockly Games and the Scratch block programming language. The sequence of artifacts created with Scratch simulates a robot with color sensors, and, as students progress in learning, new challenges are added with the use of sensors, sounds and animations. This project aims to show the importance of computational thinking and encourage teachers to make it increasingly present in the classroom.},
  author = {Silva, Diego S. and Melo, Sérgio L. and Basto Diniz, Juliana R.},
  booktitle = {2021 XVI Latin American Conference on Learning Technologies (LACLO)},
  doi = {10.1109/LACLO54177.2021.00095},
  keywords = {Blockly game; Color; Computational thinking; Computer languages; Computer science; Education; Employment; Games; Robot sensing systems; Scratch},
  month = {Oct},
  pages = {526-529},
  title = {Developing a didactic sequence for introducing computational thinking in the early years of elementary school},
  year = {2021}
}

@inproceedings{merged273,
  abstract = {This work addressed the teaching of Computational Thinking for children from 7 to 11 years of elementary school I for the teaching of logical reasoning. From studies on accessibility in games for children aged 7 to 11 years old, with hearing impairment, an inclusive game was developed to support the teaching of computational thinking in the learning of logic. For the development of the game, not only Computational Thinking were studied, but educational games for children with hearing impairment, in addition to web accessibility guidelines. As a result of the research carried out, an inclusive game, FruitSort, was implemented for children with hearing impairment, which addressed the Merge Sort Sorting Algorithm, to support the teaching of Computational Thinking through a playful and inclusive environment.},
  author = {Raia, Marcos Librelon and Martins, André Giacon and Kas, Gustavo Paulino Al and Eliseo, Maria Amelia},
  booktitle = {2023 18th Iberian Conference on Information Systems and Technologies (CISTI)},
  doi = {10.23919/CISTI58278.2023.10211961},
  issn = {2166-0727},
  keywords = {Aging; Auditory system; Cognition; Computational Thinking; Education; Games; Information systems; Sorting; hearing impairment; inclusive games},
  month = {June},
  pages = {1-6},
  title = {FruitSort: the educational computational thinking game with accessibility for hearing-impaired children},
  year = {2023}
}

@inproceedings{merged274,
  abstract = {In the light of the involvement of information and communication technologies, Teaching the concepts of computer science, programming and algorithms has become necessary.We study in this article the approach of computational thinking and then we develop this approach through a descriptive methodology based mainly on the specification and algorithms and achieve the concepts of computational thinking called Relational Algorithmic thinking Approach and highlight the effectiveness of this methodology in education.},
  author = {Altaher, Marah and Ferchichi, Ahmed},
  booktitle = {2018 JCCO Joint International Conference on ICT in Education and Training, International Conference on Computing in Arabic, and International Conference on Geocomputing (JCCO: TICET-ICCA-GECO)},
  doi = {10.1109/ICCA-TICET.2018.8726205},
  keywords = {Algorithmic package; Computational thinking; Education; Information and communication technology; Learning; Problem-solving; Programming profession; Relational Algorithmic thinking approach; Task analysis; Teaching},
  month = {Nov},
  pages = {1-7},
  title = {AlgoThink: An Algorithmic Computational Thinking Approach},
  year = {2018}
}

@inproceedings{merged275,
  abstract = {This paper describes an investigation of GPT-4’s knowledge in some areas of archival practice, and its ability to think computationally about archival tasks. It is demonstrated that GPT-4 has shown an understanding of ten among the twenty-two distinct forms of computational thinking. When GPT-4 is combined with plugins, it is able to apply some of these methods and tools to digital archival tasks.},
  author = {Underwood, William and Gage, Joan},
  booktitle = {2023 IEEE International Conference on Big Data (BigData)},
  doi = {10.1109/BigData59044.2023.10386929},
  keywords = {Big Data; Computational modeling; Data mining; Data visualization; GPT-4; Metadata; Oral communication; Systems thinking; archival system; computational thinking; digitization; large language models; metadata extraction; systems thinking},
  month = {Dec},
  pages = {2105-2115},
  title = {Can GPT-4 Think Computationally about Digital Archival Practices?},
  year = {2023}
}

@inproceedings{merged276,
  abstract = {This study aims to explore how users’ immersion in games affects their computational thinking and problem-solving abilities and to obtain basic knowledge for applying games to health promotion and treatment. “The Japanese version of the Game Engagement Questionnaire (GEQ-J)” was prepared to grasp the immersion of games, and “the Japanese version of the Computational Thinking (CT) Scale” was prepared to measure CT. Correlation analysis was conducted to examine their relationships. We analyzed their relationships using correlation analysis and generalized structural equation modeling (GSEM). The results of the correlation analysis showed both weak positive correlations and weak negative correlations between the immersion factor and CT skills, indicating the importance of striking an appropriate balance between increasing player immersion and improving CT skills during game design. The results of generalized structural equation modeling revealed that while increased presence promoted creativity, high immersion hurt algorithmic thinking, flow state hurt problem-solving skills, and the factor of game immersion had no significant effect on cooperative skills. These findings suggest the importance of considering game design elements that target specific cognitive abilities in designing game-based health promotion and treatment programs. For example, immersive game design may effectively enhance creativity and problem-solving skills. This study is expected to contribute to the development of new approaches in the field of game-based health promotion and treatment.},
  author = {Fukui, Masanori and Sano, Yudai and Xiang, Li and Ong, Eng Tek and Yanuarto, Wanda Nugroho and Anggoro, Subuh and Ng, Khar Thoe},
  booktitle = {2024 IEEE 12th International Conference on Serious Games and Applications for Health (SeGAH)},
  doi = {10.1109/SeGAH61285.2024.10639567},
  issn = {2573-3060},
  keywords = {Analytical models; Computational modeling; Correlation; Games; Mathematical models; Problem-solving; Serious games; computational thinking; decision making; flow state; happiness; problem-solving; subjective well-being},
  month = {Aug},
  pages = {1-7},
  title = {Exploratory Study of the Influence of Immersion in Games on Computational Thinking among University Students},
  year = {2024}
}

@inproceedings{merged277,
  abstract = {We introduce the idea of a symbolic description of a complex human learning task, in order to contribute to better understand how we learn. The learner is modeled on the basis of knowledge from learning sciences with the contribution of cognitive neurosciences, including machine learning formalism, in the very precise framework of a task, named #CreaCube reviewed here, related to initiation to computational thinking presented as an open-ended problem, which involves solving a problem and appealing to creativity. We target problem-solving tasks using tangible interfaces for computational thinking initiation, and describe in details how we model the task and the learner behavior in this task, including goal-driven versus stimulus-driven behavior and the learner knowledge construction. We show how formalizing these elements using an ontology offers a well-defined computational model and the possibility of inferences about model elements, analyzing and predicting the learner behavior. This operationalization of a creative problem-solving task is still at a preliminary stage, but an effective proof of concept is described in this study.},
  author = {Mercier, Chloé and Roux, Lisa and Romero, Margarida and Alexandre, Frédéric and Viéville, Thierry},
  booktitle = {2021 IEEE International Conference on Development and Learning (ICDL)},
  doi = {10.1109/ICDL49984.2021.9515660},
  keywords = {Analytical models; Cognitive Neuroscience; Computational Thinking; Computational modeling; Conferences; Learning Sciences; Machine learning; Ontologies; Ontology; Predictive models; Problem-Solving; Problem-solving},
  month = {Aug},
  pages = {1-8},
  title = {Formalizing Problem Solving in Computational Thinking : an Ontology approach},
  year = {2021}
}

@inproceedings{merged278,
  abstract = {Game-based learning using interactive environments to impart theoretical and applied knowledge for introductory programming courses is divided in two popular approaches: “game making” and “game playing”. Various studies have been conducted following greatly the former approach in secondary and tertiary education with controversial results. However, there has been relatively little research shown about how game playing can be associated with the development of computational thinking and how fundamental programming concepts can be supported by playing games. This work investigates how a simulation game should be designed to support the development of computational problem-solving strategies through the medium of learning fundamental computer science concepts, by proposing a theoretical game playing framework.},
  author = {Pellas, Nikolaos and Vosinakis, Spyridon},
  booktitle = {2017 IEEE Global Engineering Education Conference (EDUCON)},
  doi = {10.1109/EDUCON.2017.7942991},
  issn = {2165-9567},
  keywords = {Computational modeling; Games; Open Sim; Problem-solving; Programming profession; Scratch4SL; Three-dimensional displays; Visualization; computational problem-solving; computing education; game-based learning},
  month = {April},
  pages = {1129-1136},
  title = {How can a simulation game support the development of computational problem-solving strategies?},
  year = {2017}
}

@inproceedings{merged279,
  abstract = {The increasing complexity of embedded systems turned the requirements management in an even more dificulty task. In addition, there is a demand for innovative, customized and trendy systems. Design Thinking can minimize these problems throughout the development of Embedded Systems. The use of Design Thinking aims to understand the real users needs and generate innovative solutions for new systems. It can improve the requirement elicitation process and increase the quality of the final system. This paper approaches new trends in the use of design thinking during the whole development process of innovative embedded technologies.},
  author = {Araújo, Rodolfo and Anjos, Eudisley and Silva, Danielle Rousy},
  booktitle = {2015 15th International Conference on Computational Science and Its Applications},
  doi = {10.1109/ICCSA.2015.25},
  keywords = {Design Thinking; Embedded Systems; Scientific computing; Software Engineering; System Requirement},
  month = {June},
  pages = {82-86},
  title = {Trends in the Use of Design Thinking for Embedded Systems},
  year = {2015}
}

@inproceedings{merged280,
  abstract = {In this paper, we discuss how to teach and learn computational literacy to all levels of students. Computational literacy is an important ability to understand and communicate information in current digital age and ubiquitous age. The digital has been used as a tool of communication along with language. Therefore, we would need to have ability to express our idea and understand an other's presentation with language and digital, which is just computational Literacy. However, most educators focus on using computer and internet, not computational literacy. Therefore, we define the operational definition about computational literacy suited for the present age by analyzing existing computational Literacy. In addition, we extract educational factors from the relation with computational thinking that is the purpose of computational literacy. Finally, we discuss teaching-learning strategy of computational literacy for all level s of students.},
  author = {Kim, SooHwan and Han, SeonKwan and Kim, HyeonCheol},
  booktitle = {2009 Fifth International Joint Conference on INC, IMS and IDC},
  doi = {10.1109/NCM.2009.192},
  keywords = {Arithmetic; Communications technology; Computational Literacy Education; Computational Thinking; Computer network management; Computer science education; Information analysis; Internet; Knowledge management; Pervasive computing; Technology management; Writing},
  month = {Aug},
  pages = {1395-1400},
  title = {How Can We Teach Computational Literacy to All Levels of Students?},
  year = {2009}
}

@inproceedings{merged281,
  abstract = {For a number of years, various games have been used as an educational tool at different academic levels, especially in primary education. However, only recently games that teach coding and algorithmic thinking or even broader, computational thinking, emerged. Initiatives like Hour of Code and similar online activities or block-based programming games popularized the field, while at the same time, projects like CSUnplugged showed that the “idea of programming” can be learned even without using the computer. In this paper, we present our experience so far in creating and implementing different unplugged activities that teach students of different age levels, from early primary school to the university students, the simple programming concepts and algorithms. As a part of Science, Technology, Engineering, Mathematics and Computer Science (STEM-C) outreach program named SUZA - From school to science and the academic community at University of Zagreb Faculty of Electrical Engineering and Computing, Croatia, we conducted a number of game-like activities based on graph paper programming, block-based programming and using the existing board games. Although this is a work in progress project, the participant reactions so far, collected through interviews and questionnaires, indicated that the conducted activities were well accepted by students and their teachers. We also received a number of useful feedback comments and proposals, such as to expand the activities to include the homework part, or to make them more physical and relocate them outdoors.},
  author = {Jagušt, Tomislav and Krzic, Ana Sovic and Gledec, Gordan and Grgić, Mislav and Bojic, Iva},
  booktitle = {2018 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE.2018.8659077},
  issn = {2377-634X},
  keywords = {Conferences; Education; Electrical engineering; Games; Programming profession; STEM-C; Shape; algorithmic thinking; computational thinking; education; unplugged programming},
  month = {Oct},
  pages = {1-5},
  title = {Exploring Different Unplugged Game-like Activities for Teaching Computational Thinking},
  year = {2018}
}

@inproceedings{merged282,
  abstract = {Because design is an iterative and evolving process, recording and representing designer's thinking process plays an important role for design change and reuse. After giving a brief review of the previous related research, a design thinking process model is created for representing the design thinking process. Its knowledge structure consisting of design intent, design decision, design rationale and design operation is explained in detail. Based on the proposed model, a knowledge modeling language (Design Mental Modeling Language, DMML) is developed for expressing and reasoning the design thinking process explicitly. Semi-formal structure is used by DMML, which can improve both the expressiveness and computability of this language. A visual modeling system is developed for implementing DMML and an example is presented for illustration.},
  author = {Liu, Jihong and Zhang, Minqing and Hu, Xujie},
  booktitle = {2011 12th International Conference on Computer-Aided Design and Computer Graphics},
  doi = {10.1109/CAD/Graphics.2011.56},
  keywords = {Cognition; Computational modeling; Computers; Grammar; Solid modeling; Unified modeling language; Visualization; design intent; design thinking process; knowledge representation; modeling language},
  month = {Sep.},
  pages = {44-48},
  title = {DMML: A Design Thinking Process Modeling Language},
  year = {2011}
}

@inproceedings{merged283,
  abstract = {Thinking innovation is one of important driving forces to promote scientific and technological progress. Information technology can help humans to brainstorm as many potential ideas and methods as possible for given problems so as to inspire their creative thinking. Knowledge graph provides a structural method to storage human prior knowledge described by concepts and relationships between them in a graph way. The frame and models of Probability Construction Space Theory(PCST) explained the mechanism of human creative thinking and procedure of new ideas generation. Our research work explores generation of new potential methods of detecting and perception geophysical information through simulating the creative thinking of new ideas of aircraft guidance based on the combination of theory and technology of knowledge graph and PCST. One experiment software system has been built to verify feasibility of this novel cognitive model and simulation method presented in our research work.},
  author = {Huang, Xuejuan and Wang, Lina and Ruan, Jun and Wu, Songling and Li, Dehua},
  booktitle = {2018 Chinese Automation Congress (CAC)},
  doi = {10.1109/CAC.2018.8623666},
  keywords = {Atmospheric modeling; Brain modeling; Cognition; Computational modeling; Software systems; Sports; Technological innovation; cognitive model; knowledge graph; thinking innovation},
  month = {Nov},
  pages = {1040-1045},
  title = {Exploration research of thinking innovation based on PCST theory and knowledge graph},
  year = {2018}
}

@inproceedings{merged284,
  abstract = {Problem-solving skills can make students more autonomous in their learning in addition to contributing to the individual's success in real-life situations (professionally or personally). In this sense, Computational Thinking, as a problem-solving approach that can involve information technologies, can contribute a lot to this subject. Therefore, due to its essence, the development of Computer Science concepts is closely related to the employment of problem-solving activities. However, teachers may face difficulties when proposing Computational Thinking problem-solving activities to their students. This paper proposes the engineering of a software that aims to allow teachers to generate challenges related to game and interactive animations programming to support their classes. The problems generated by the system, do not limit the learners' creative power. Besides that, teachers can balance the reasoning component of the challenges according to the learners' level of knowledge in programming and algorithms. An experiment with Computational Thinking workshops was analyzed in order to design the proposed software.},
  author = {de Jesus, Ângelo Magno and Frango Silveira, Ismar},
  booktitle = {2020 XV Conferencia Latinoamericana de Tecnologias de Aprendizaje (LACLO)},
  doi = {10.1109/LACLO50806.2020.9381143},
  keywords = {Games; Generators; Information technology; Problem-solving; Programming profession; Software; Software algorithms; computational thinking; problem-solving; software engineering},
  month = {Oct},
  pages = {1-9},
  title = {A Generator of Game Programming Challenges for Computational Thinking Development},
  year = {2020}
}

@inproceedings{merged285,
  abstract = {Computational thinking is critical to students' ability to solve problems. Analyzing students' computational thinking behaviors in STEAM classrooms can aid teachers in understanding learning behavior patterns, diagnosing potential challenges in developing computational thinking, and adjusting instructional strategies to enhance learning outcomes. This study utilized lag sequential analysis to quantify the learning behavior patterns of both teachers and students in STEAM classrooms. The findings revealed 240 behavior samples from students, with a high frequency of behaviors associated with decomposition, abstraction, algorithm design, and summary. The study identified three important behavioral sequence paths that illustrate the processes of problem decomposition, algorithm design, and summarization by students. The findings have reference value for studying the sequences of computational thinking behaviors in interdisciplinary contexts.},
  author = {Li, Jimei and Wu, Dong and Pan, Dongchen and Liu, Bingxue and Long, Taotao},
  booktitle = {2024 5th International Conference on Information Science and Education (ICISE-IE)},
  doi = {10.1109/ICISE-IE64355.2024.11025496},
  keywords = {Education; High frequency; Information science; STEAM; Sequential analysis; computational thinking; lag sequential analysis},
  month = {Dec},
  pages = {479-483},
  title = {Capturing Teachers and Students' Computational Thinking Behavioral Patterns in Elementary School STEAM Courses: A Lag Sequential Analysis Approach},
  year = {2024}
}

@inproceedings{merged286,
  abstract = {Education plays an important part in everybody life. As per the study, 92% of college students believe that colleges and universities should incorporate sustainability education into their curriculum. 82% of college students believe that sustainability is a critical issue facing society. This paper emphasizes on application of design thinking principles to create a sustainable education curriculum, focusing on teaching arrays in computer science. By addressing the needs of students and educators, the study aimed to make learning engaging and impactful. The process included primary research, SWOT (Strength, Weakness, Opportunities and Threats) analysis, and empathy mapping to identify key challenges, such as difficulty in differentiating sorting techniques. A Virtual Reality (VR) prototype is developed to offer an interactive, immersive learning experience, simplifying complex concepts and enhancing understanding. User feedback helped refine the VR tool, ensuring it was educational and accessible. The study demonstrates design thinking's potential to improve educational outcomes and make complex subjects more approachable.},
  author = {Aithal, Ravikiran and Kumar, Shiva and M N, Vijayalakshmi},
  booktitle = {2024 8th International Conference on Computational System and Information Technology for Sustainable Solutions (CSITSS)},
  doi = {10.1109/CSITSS64042.2024.10816897},
  issn = {2767-1097},
  keywords = {Arrays; Computer science; Design Thinking; Education; Empathy; Focusing; Immersive learning; Information technology; Prototype; Prototypes; Sorting; Stakeholders; Sustainable Education; Sustainable development; Virtual Reality},
  month = {Nov},
  pages = {1-6},
  title = {Sustainable Education: A Design Thinking Approach For Quality Education},
  year = {2024}
}

@inproceedings{merged287,
  abstract = {This full research-track paper demonstrates growth in computational thinking in a cohort of engineering students completing their first course in engineering at a large Southwestern university in the United States. Computational thinking has been acknowledged as a key aspect of engineering education and an intrinsic part of multiple ABET outcomes. However, computing is an area where some students have more privileges (e.g. access and exposure to meaningful use of computers) than others. Integrating computing into engineering, especially early in the curriculum, may exacerbate existing experiential disadvantages students from excluded social identities experience. Most introductory engineering programs have a component of programming and/or computational thinking. A comprehensive literature review showed that no existing computational thinking framework fully met the needs of students and professors in engineering and computer science. As a result, this team created the Engineering Computational Thinking Diagnostic (ECTD). This diagnostic was assessed and improved during the 2019-2020 academic year. Data was collected from a cohort in a first-year engineering course that included topics in mathematics, engineering problem solving, and computation. Pre- and post-test data analysis with 62 participants documents statistically significant student growth in computational thinking in this course. Significant differences were not found by gender or a limited racially-based analysis. This diagnostic is of interest and relevance to all institutions providing engineering and computing programs. The short-term impact of this research includes an innovative approach to gauge student abilities in computational thinking early in a course in order to add appropriate intervention activities into lesson plans. The long-term impact is the creation of a measurement of student learning of computational thinking in engineering for courses and programs that wish to develop this important skill in their students.},
  author = {Mendoza Diaz, Noemi V. and Meier, Russ and Trytten, Deborah A. and Yoon Yoon, So},
  booktitle = {2020 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE44824.2020.9274250},
  issn = {2377-634X},
  keywords = {Computational modeling; Engineering students; Organizations; Pattern matching; Programming profession; Task analysis; Tools; assessment metrics; computational thinking; first-year engineering education; learning and teaching effectiveness},
  month = {Oct},
  pages = {1-7},
  title = {Computational Thinking Growth During a First-Year Engineering Course},
  year = {2020}
}

@inproceedings{merged288,
  abstract = {Recent progress in AI has expanded the boundaries of the cognitive functions that can be simulated, but creativity remains a challenge. Neuroscience sheds light on its mechanisms and its tight relationship with episodic memory and cognitive control, while machine learning provides preliminary models of these mechanisms. We present these lines of research and explain how they can be exploited in the domain of computational creativity in order to further expand the capabilities of AI.},
  author = {Chateau-Laurent, Hugo and Alexandre, Frédéric},
  booktitle = {2021 IEEE 20th International Conference on Cognitive Informatics & Cognitive Computing (ICCI*CC)},
  doi = {10.1109/ICCICC53683.2021.9811309},
  keywords = {Cognitive neuroscience; Cognitive systems; Computational modeling; Creativity; Machine learning; artificial intelligence; cognitive control; computational cognitive neuroscience; creativity; episodic memory; explicit memory; imagination; prospective memory},
  month = {Oct},
  pages = {67-71},
  title = {Towards a Computational Cognitive Neuroscience Model of Creativity},
  year = {2021}
}

@article{merged289,
  abstract = {While computational thinking arises as an essential skill worldwide, formal primary and secondary education in Latin America rarely incorporates mechanisms to develop it in their curricula. The extent to which students in the region acquire computational thinking skills remains largely unknown. To start addressing this void, this article presents findings from a cross sectional study that characterizes the computational thinking abilities of incoming students at a Chilean university with a strong emphasis on STEM disciplines. Based on more than 500 responses, this study provides evidence of significant inequalities in computational thinking across gender, type of school (private or no), and prior programming knowledge. The discussion offers insights into how these disparities relate to contextual factors of the country, such as a highly socio-economically segregated educational system, public policies focused mainly on technology access, and heavy reliance on voluntary initiatives, to develop computational thinking. The findings can enlighten upcoming research endeavors and formulate strategies to create a more equitable field for students entering STEM degrees in nations facing similar circumstances.},
  author = {González-Pizarro, Felipe and López, Claudia and Vásquez, Andrea and Castro, Carlos},
  doi = {10.1109/TE.2023.3334193},
  issn = {1557-9638},
  journal = {IEEE Transactions on Education},
  keywords = {Codes; Computational thinking; Conferences; Education; Engineering students; Latin America; Programming profession; Public policy; Training; engineering education; gender; public/private schools},
  month = {April},
  number = {2},
  pages = {180-189},
  title = {Inequalities in Computational Thinking Among Incoming Students in an STEM Chilean University},
  volume = {67},
  year = {2024}
}

@inproceedings{merged290,
  abstract = {Computational Thinking (CT) is considered a necessary 21st-century competence that should be introduced to school education as a vital ingredient. However, the lack of a consensual definition of CT and the confusion with other similar terms made it a big challenge for researchers and practitioners to understand this concept. The purpose of this work-in-progress (WIP) is to identify and compare the existing definitions of CT proposed by various members of the education or research community, and ultimately to give educators and researchers suggestions on understanding this concept for particular purposes or situations. We conducted a systematic review of the definitions of CT from the source of academic articles and categorized the definitions based on their approaches, dimensions, and contexts. Forty-one unique and original concepts were extracted from the search. Results indicate that the existing definitions of CT were mostly formulated 1) with a prototype approach, 2) for the generic purpose of use, 3) in the context of K-12 education, 4) based on the subject of Computer Science. These results provide sufficient granularity to allow us to come up with suggestions on how to choose appropriate and pragmatic CT definitions.},
  author = {Xu, Fan and Zhang, Shuhan},
  booktitle = {2021 IEEE Integrated STEM Education Conference (ISEC)},
  doi = {10.1109/ISEC52395.2021.9764144},
  issn = {2330-331X},
  keywords = {Algorithmic Thinking; Computational Thinking; Computer science; Conferences; Education; Educational Curriculum; Operational Definition; Pragmatics; Prototypes; Systematic review; Systematics},
  month = {March},
  pages = {276-279},
  title = {Understanding the Source of Confusion with Computational Thinking: A Systematic Review of Definitions},
  year = {2021}
}

@inproceedings{merged291,
  abstract = {This Research to Practice Work-in-Progress paper discusses a next-generation learning system for K-12 students to educate them on scientific concepts surrounding the human body. Specifically, our gamified learning system is designed to make learning more fun, engaging, and effective through game and experiment elements that align with science and math learning standards. It will also increase systematic problem-solving and algorithmic reasoning for K-12 students. Since the human body can be thought of as a combination of interacting systems, the game also introduces students to computational thinking by introducing internal body functions. To achieve these goals, this project has two components. First, an educational virtual reality game will be built according to the natural human body structure. During the game process, students will experience the same as the human body functions, travel along the blood circulation, help with the heartbeat, and participate in oxygen exchange. While students are playing the game, our gamified adaptive learning system tracks and controls the student's learning progress. As the AI component collects student data and uses this information, our system adjusts game content and addresses possible learner issues to refine the learning curriculum for a faster and more effective learning experience. Second, a series of hands-on activities will be conducted based on the functions of the human body (e.g., developing an artificial heart and experiencing how the heart works). Through this project, an attractive and efficient next-generation learning system will be developed and used to expose K-12 students to this learning system. The education of students will be accomplished in different dimensions through games and hands-on practice, respectively. Additionally, compared to traditional learning methods, our learning system not only increases students' interest in learning but also makes it more personalized compared to the conventional learning process. Likewise, we will refer to the results of self-efficacy surveys administered to students and teachers separately to test their perceptions of their abilities and the new system.},
  author = {Zhu, Chengzhang and Ahn, Jeong Eun and Cui, Luobin and Hare, Ryan and Tang, Ying},
  booktitle = {2023 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE58773.2023.10342946},
  issn = {2377-634X},
  keywords = {Cognition; Computational Thinking; Educational Software; Games; Gamification; Heart; Learning Technology; Learning systems; Systematic Thinking; Systematics; Teamwork; Virtual reality},
  month = {Oct},
  pages = {1-5},
  title = {Engineering Human Body for Systematic and Computational Thinking},
  year = {2023}
}

@inproceedings{merged292,
  abstract = {With the continuous development of information technology, computational thinking as a new thinking ability into people's vision. After the release of Information Technology Curriculum Standards for Senior High Schools (2017 Edition), computational thinking has been widely concerned. In this paper, academic papers collected in CNKI (China National Knowledge Network) from 2016 to 2021 are studied by the bibliometerization method. From the aspects of quantity, source, author, research distribution, and research hotspots, this paper analyzes the current situation and trend of computational thinking training in primary school IT teaching, so as to provide useful reference for relevant researchers.},
  author = {Wang, Yichuan and Xu, Jihong and Pan, Jiaqi},
  booktitle = {2023 5th International Conference on Computer Science and Technologies in Education (CSTE)},
  doi = {10.1109/CSTE59648.2023.00052},
  keywords = {Computer science; Information age; Knowledge engineering; Market research; Standards; Training; bibliometric method; computational thinking; primary school information technology},
  month = {April},
  pages = {260-264},
  title = {Research on the Current Situation of Computational Thinking Training in Primary School Information Technology Teaching -- Based on the Literature Analysis of CNKI},
  year = {2023}
}

@inproceedings{merged293,
  abstract = {In 2018, the Ministry of Education released the Action Plan for Education Informatization 2.0, which puts forward new requirements for modern education and teaching. Under the influence of the computer Internet, modern teaching has not only changed the way of teaching and learning, but also promoted the improvement of educational concept. In the face of the current new trend, how to cultivate students' computer thinking ability in the teaching of computer courses has gradually become a hot topic in the field of computer education at home and abroad. This paper mainly describes the concept of computer thinking, characteristics and research status at home and abroad, at the same time, comprehensive description of the specific significance of the development of computer thinking, as well as how to cultivate students' computer thinking, finally do a whole summary of computer thinking, and add their own thinking. Under the new situation, we should advocate the development of computer thinking, keep up with the pace of The Times, and attach importance to the cultivation of students' computer thinking, so that students can better deal with the problems in life by the course learning.},
  author = {Du, Yirong and Yue, Shuyu and Zhang, Xiao},
  booktitle = {2020 International Symposium on Advances in Informatics, Electronics and Education (ISAIEE)},
  doi = {10.1109/ISAIEE51769.2020.00011},
  keywords = {Education; Faces; Informatics; Internet; Market research; computer thinking; education informatization},
  month = {Dec},
  pages = {19-22},
  title = {On the Development of Computer Thinking in the Process of Modern Teaching},
  year = {2020}
}

@inproceedings{merged294,
  abstract = {The following topics are dealt with: computer aided instruction; educational courses; educational institutions; teaching; further education; distance learning; computer science education; Internet; gender issues; biomedical education.},
  author = {Maiyuran, Jitesh and Bajwa, Ayesha and Bell, Ana and Hemberg, Erik and O’Reilly, Una-May},
  booktitle = {2019 IEEE Learning With MOOCS (LWMOOCS)},
  doi = {10.1109/LWMOOCS47620.2019.8939643},
  keywords = {Computational modeling; Computer aided instruction; Electronic learning; Encoding; Linear regression; Massive Open Online Courses (MOOCs); Programming; computational thinking; doer effect; learning by doing},
  month = {Oct},
  pages = {47-52},
  title = {How Student Background and Topic Impact the Doer Effect in Computational Thinking MOOCs},
  year = {2019}
}

@inproceedings{merged295,
  abstract = {CAM mechanism is widely used in engineering, it can realize the arbitrary and complex motion curve of the follower [1]. The typical design method of CAM pitch curve is based on the principle of inversion [2], [3]. In the process of designing CAM, the author uses creative thinking [4] to raise the question whether the design steps based on the inversion principle can be applied "in reverse". Based on this problem, the author takes the plate CAM mechanism with translating knife-edge follower as an example and verifies the design results of CAM pitch curve through two different motion curves. The results show that the inverse application on the principle of the inversion method does not change the CAM pitch curve.},
  author = {Song, Wenge and Zhang, Ganquan},
  booktitle = {2023 16th International Symposium on Computational Intelligence and Design (ISCID)},
  doi = {10.1109/ISCID59865.2023.00020},
  issn = {2473-3547},
  keywords = {CAM design; Computational intelligence; Design methodology; Employee welfare; Technological innovation; inverse thinking; motion curve},
  month = {Dec},
  pages = {51-53},
  title = {Creative Thinking Stimulates Innovation Design of CAM Mechanism},
  year = {2023}
}

@inproceedings{merged296,
  abstract = {Programming skills are very important nowadays, especially for students who are majoring in computer science. In order to have good knowledge, students should be able to learn independently. This study proposes Codify, a programming learning tool or e-learning platform for students where they are able to independently use several types of questions, including multiple choices, drop-down, drag-anddrop, and blank code. If students are not able to answer correctly, the system will recommend similar cases. For this study, the researchers applied the design thinking method to create a prototype of Codify to ensure that students who use it have a good user experience. Out of six scales in the user experience questionnaire (UEQ), five scales (Attractiveness, Efficiency, Dependability, Stimulation, and Novelty) are included in the Excellent category, while one scale (Perspicuity) is included in the Good category, meaning the Codify prototype has an excellent user experience with a slight improvement.},
  author = {Rijadi, Safara Cathasa Riverinda and Qhusna, Priya Mita Hartati and Thohiroh, Elvira Lailatuth and Damayanti, Vira and Kharian, Rafi Ahmad and Kusumasari, Tien Fabrianti},
  booktitle = {2024 IEEE 16th International Conference on Computational Intelligence and Communication Networks (CICN)},
  doi = {10.1109/CICN63059.2024.10847445},
  issn = {2472-7555},
  keywords = {Benchmark testing; Codes; Communication networks; Computational intelligence; Computer languages; Electronic learning; Programming; Prototypes; User experience; design thinking method; e-learning; programming learning tools; user experience questionnaire (UEQ)},
  month = {Dec},
  pages = {1058-1062},
  title = {Codify: A Programming Learning Tool Prototyping Using Design Thinking Method},
  year = {2024}
}

@inproceedings{merged297,
  abstract = {Improving the computational thinking ability of students is the focus of the program design course teaching purpose. In the program design, guide students to analyze things and be able to describe things in natural language processing, make students establish the concept of computational thinking, and then through the programming to solve the problem, is an effective way to cultivate students computational thinking and methods. In this paper, on the basis of combing calculation thinking development, in view of the C program design, collection, classification, and refine the calculation thinking part of the classic case of ascension. According to the calculation thinking training method, calculation thinking training support system for C program was designed and developed.},
  author = {Jingye Qu},
  booktitle = {2014 IEEE Workshop on Advanced Research and Technology in Industry Applications (WARTIA)},
  doi = {10.1109/WARTIA.2014.6976343},
  keywords = {B/S mode; Browsers; C program; Calculation thinking; Computer languages; Computers; Training; Web servers},
  month = {Sep.},
  pages = {641-643},
  title = {The calculation thinking training system research for C program based on B/S mode},
  year = {2014}
}

@inproceedings{merged298,
  abstract = {Physiological computing (PC) technology is becoming increasingly popular as wearable hardware improves. However, little is known regarding potential connections between hands-on experience with physiological computing technology and computation thinking perspectives. This is particularly true for black communities. Applications for physiological computing include systems such as wearable technology (e.g., Apple Watch) capable of mapping students' physiological activity to various outputs. The work discussed in this paper presents our initial steps toward filling these gaps. In particular, we share our observations of computational thinking perspectives that emerged while black high school students constructed simple programs driven by near real-time brain wave information. Our findings suggest interactive physiological data may lead to unique computational perspectives during learning activities.},
  author = {Lewis, Myles and Holloman, Amanda and Hernández Cuevas, Bryan Y. and Crawford, Chris},
  booktitle = {2024 Black Issues in Computing Education (BICE)},
  doi = {10.1109/BICE60192.2024.00013},
  keywords = {Computer science; Education; Filling; Hardware; Physiology; Real-time systems; Wearable devices; computer science education; data science; k-12; physiological computing},
  month = {Feb},
  pages = {27-32},
  title = {Exploring Computational Thinking Perspectives in Black Communities with Physiological Computing},
  year = {2024}
}

@inproceedings{merged299,
  abstract = {This Innovative Practice Full Paper presents a K-12 teacher training workshop for computational thinking instruction. Computational thinking refers to a set of skills that are necessary for success in engineering and science careers. Teaching computational thinking skills prior to university-level enrollment helps students be more successful in their degree programs. Our project serves as an attempt to innovate science education by designing and testing data-driven, scientific inquiry experiences that integrate teaching and learning of atmospheric science with computational thinking and practices in authentic, innovative, and effective ways. In this paper, we describe our design process for developing authentic computational thinking and spatial visualization modules for the two-week computational thinking professional development that uses 3D weather visualizations to train K-12 teachers in eleven computational thinking and spatial visualization skills.},
  author = {Mohammadi-Aragh, Mahnas Jean and Sun, Yan and Dyer, Jamie L. and Harris, Jonathan G. and Robinson, Chase A. and Bai, Mengni and Kavanagh, Jolie K. and Ball, Kimberly E.},
  booktitle = {2022 IEEE Frontiers in Education Conference (FIE)},
  doi = {10.1109/FIE56618.2022.9962465},
  issn = {2377-634X},
  keywords = {Conferences; Data analysis; Data visualization; Education; Engineering profession; K-12; Three-dimensional displays; Training; computational thinking; spatial visualization},
  month = {Oct},
  pages = {1-6},
  title = {Teaching Computational Thinking and Spatial Visualization in K-12 with 3D Weather Visualizations},
  year = {2022}
}

@inproceedings{merged300,
  abstract = {Computational Thinking is one of the fundamental skills of the 21st century and will be a necessary part of all future work, so it is essential that children learn it in school. One way to work on Computational Thinking is through data visualization. This paper presents the motivation, design and implementation of a platform called AlfaDatizando, through which it is possible to work with data visualization activities to promote the skill of Computational Thinking in Digital Humanities. AlfaDatizando allows the creation, resolution, and feedback of data visualization activities without the need to use another platform. It also allows sharing didactic sequences and data sources with the educational community registered in the platform. AlfaDatizando is still in an early stage of development.},
  author = {Beatriz, Lliteras Alejandra and Alejandro, Artopoulos and Alejandro, Fernández and Jimena, Huarte},
  booktitle = {2022 XVII Latin American Conference on Learning Technologies (LACLO)},
  doi = {10.1109/LACLO56648.2022.10013462},
  keywords = {Big Data; Blogs; Computational Thinking; Data Visualization; Data visualization; Digital Humanities; Educational Curriculum; Humanities; Silicon; Social networking (online); Visualization},
  month = {Oct},
  pages = {1-6},
  title = {AlfaDatizando: a Data Visualization Platform to work Computational Thinking in Digital Humanities},
  year = {2022}
}

@inproceedings{merged301,
  abstract = {In this theoretical paper, we compare computational thinking and self-regulated learning. Many studies use self-regulated learning to foster the acquisition of computational thinking competencies. Self-regulated learning skills are themselves beneficial for any learning process; here, we argue that the relationship between self-regulated learning and computational thinking is closer than the simple observation that self-regulated learning strategies support the acquisition of computational thinking competencies. We sustain that self-regulated learning and computational thinking competencies share many features (and have some differences), which would support synergistic effects so that not only can self-regulated learning be used to attain computational thinking competencies, but computational thinking activities can also be used to foster features of self-regulated learning competencies.},
  address = {New York, NY, USA},
  author = {Pasterk, Stefan and Benke, Gertraud},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653565},
  isbn = {9798400706004},
  keywords = {computational thinking; secondary school; self-regulated learning},
  location = {Milan, Italy},
  numpages = {6},
  pages = {640–645},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Computational Thinking for Self-Regulated Learning},
  url = {https://doi.org/10.1145/3649217.3653565},
  year = {2024}
}

@inproceedings{merged302,
  abstract = {Introductory computer science courses (CS1) often place significant importance on teaching the syntax of a specific programming language, potentially overshadowing the development of crucial computational thinking skills. This paper presents a novel pedagogy designed to enhance computational thinking by simultaneously introducing students to multiple programming languages and embedding game development throughout the curriculum. Our approach aims to reduce language dependency, promote abstract reasoning, and increase student engagement through practical, real-world examples. We conducted a quasi-experimental study over multiple semesters, comparing a trial group (using the new pedagogy) with a control group (using a traditional, single-language approach). This paper analyzes the impact of our new pedagogy on student attitudes, perceptions, and exam performance. The findings indicate that the multilingual, game-based approach not only improves students' interest and motivation but also enhances their computational thinking abilities, particularly in areas such as code comprehension, problem-solving, and applying concepts across different programming languages. As such, this study offers valuable insights and practical recommendations for educators seeking to foster deeper learning and engagement in introductory programming courses.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum and Tapia, Jonathan},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729066},
  isbn = {9798400715679},
  keywords = {computational thinking; cs1; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {424–430},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in CS1 through Multilingual Game Development},
  url = {https://doi.org/10.1145/3724363.3729066},
  year = {2025}
}

@inproceedings{merged303,
  abstract = {Introductory programming courses (CS0) are crucial for laying the foundation in computer science education, yet traditional approaches often emphasize language-specific syntax over abstract computational thinking. This paper introduces a novel pedagogy that teaches multiple programming languages (from high-level to low-level) simultaneously, using game development as a central context to foster computational thinking and reduce language dependency. Over five semesters, we implemented this pedagogy in multiple CS0 sections, comparing its effectiveness to a traditional, single-language approach. This paper presents a comparative analysis between a trial group, engaged in our innovative approach, and a control group, exposed to conventional teaching methods. Our results, drawn from survey responses and exam data, suggest that our pedagogy significantly enhances students' interest, engagement, and proficiency in problem-solving, particularly for female students.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729087},
  isbn = {9798400715679},
  keywords = {computational thinking; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {660–666},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Multilingual Game Programming to Enhance Computational Thinking in CS0},
  url = {https://doi.org/10.1145/3724363.3729087},
  year = {2025}
}

@inproceedings{merged304,
  abstract = {In today's society, computational thinking has become one of the important methods for people to understand and solve problems. Against the backdrop of rapid development and widespread application of artificial intelligence technology, computational thinking has become an essential literacy for everyone in the era of intelligence. Therefore, how to cultivate students' computational thinking has become an important issue. This article takes computational thinking and computer science courses as the carrier to carry out ability cultivation and quality education, thereby enhancing innovative thinking ability. It analyzes the basic teaching content of artificial intelligence and the relationship between computational thinking ability, and then provides methods for cultivating computational thinking ability under the background of artificial intelligence teaching, and summarizes them.},
  address = {New York, NY, USA},
  author = {Li, Ruizhu},
  booktitle = {Proceedings of the 2025 International Conference on Artificial Intelligence and Educational Systems},
  doi = {10.1145/3744367.3744424},
  isbn = {9798400715068},
  keywords = {Artificial intelligence; Computational thinking; Cultivation of thinking; Innovative thinking},
  numpages = {6},
  pages = {359–364},
  publisher = {Association for Computing Machinery},
  series = {ICAIES '25},
  title = {Cultivation of Computational Thinking in the Context of AI General Education},
  url = {https://doi.org/10.1145/3744367.3744424},
  year = {2025}
}

@inproceedings{merged305,
  abstract = {My area of research broadly focuses on the role that computational thinking and creative technologies play in early childhood education. I am specifically interested in the ways that these are used in mixed-ability classrooms in Puerto Rico. My research aims to result in the development of a series of best practices to support computational thinking and creative technologies in early childhood classrooms. These practices will ideally promote unplugged, culturally responsive activities co-designed with early childhood educators, which can be integrated into mixed-ability classrooms. In this paper, I discuss the study that I am currently undertaking, and plans for further studies.},
  address = {New York, NY, USA},
  author = {L\'{o}pez-Delgado, Mar\'{\i}a},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734747},
  isbn = {9798400706264},
  keywords = {accessible computing education; computational thinking; creative technology; early childhood education; inclusive computing education; maker education; makerspaces; preschool},
  location = {Newark, NJ, USA},
  numpages = {1},
  pages = {382},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Computational Thinking and Creative Technologies in Early Childhood Education in Puerto Rico},
  url = {https://doi.org/10.1145/3704637.3734747},
  year = {2025}
}

@article{merged306,
  abstract = {Computational thinking (CT) is a critical set of 21st century skills that young learners must develop to be successful in contemporary work and life. As more K-12 schools begin to integrate CT into the curriculum, elementary preservice teachers (EPSTs) must be prepared to teach CT to their future students. Therefore, elementary teacher preparation programs should explore ways to incorporate CT into their coursework, ensuring that EPSTs graduate with the necessary knowledge and skills to teach CT. This study investigates the impacts of a three-week CT module implemented in a technology integration course in an elementary teacher preparation program on EPSTs’ CT value beliefs, self-efficacy, and teaching efficacy. The purpose of the module was to introduce EPSTs to basic concepts and big ideas in CT, support their application of CT in block-based coding environments, and promote connection building between CT and authentic real-world scenarios that balance different types of CT activities. Guided by the Interconnected Model of Professional Growth (IMPG), this study examined EPSTs’ learning as a dynamic process of change across the personal and external domains. The module was located in the external domain as a stimulus for learning, while the Teacher Beliefs about Coding and Computational Thinking (TBaCCT) instrument was used to assess changes in value beliefs, self-efficacy, and teaching efficacy within the personal domain. A convergent parallel mixed-methods design was used to analyze pre- and post-surveys administered to 50 EPSTs and semi-structured interviews with four of the EPSTs. The results showed that the beliefs of the CT value of EPSTs evolved and their self-efficacy and teaching efficacy of CT significantly improved after participating in the module, suggesting that the interaction between external learning experiences and internal belief systems - facilitated by reflection and action - contributed to early professional growth. Notably, EPSTs also developed a more accurate understanding of CT, recognized the benefits of both plugged and unplugged CT activities, and expressed a desire for continued CT learning and professional development. Although EPSTs expressed concerns with the scarcity of physical computing toys in schools, they demonstrated a commitment to incorporating CT activities into their teaching and exploring alternative funding avenues to acquire such resources. Practical implications include potential approaches for elementary teacher preparation programs to embed CT into existing curricula.},
  address = {New York, NY, USA},
  author = {Ramirez-Salgado, Andrea and Wusylko, Christine and Weisberg, Lauren R. and Delgado, Johnny and Israel, Maya},
  doi = {10.1145/3744751},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; Elementary education; Preservice teachers; Self-efficacy; Teaching beliefs},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Preparing elementary preservice teachers to integrate computational thinking in the curriculum},
  url = {https://doi.org/10.1145/3744751},
  year = {2025}
}

@inproceedings{merged307,
  abstract = {A key challenge that is recognized globally in computing education is how to provide access to computer science (CS) and computational thinking (CT) education for all students. Despite the importance of CS/CT education, access to high-quality CS/CT education is often not equally distributed due to a number of factors. A promising approach to reaching all students, is to integrate CS/CT on a schoolwide basis across multiple subject areas and grade levels [1, 2, 3]. Achieving schoolwide integration requires an aligned effort and educators often are not provided with guidance about how to make this systemic change. To address this, researchers developed the CT Integration Framework (The Framework), a self-assessment and planning tool that helps educators identify the core elements that drive CT integration, determine their school's readiness, and set and monitor progress toward their goals. In this poster, we will present research on three case models highlighting The Framework and how it was used in guiding the implementation efforts for schools located in rural and urban districts in the United States of America. This poster will describe: 1. The methods and participant sample; 2. The Framework and how it was implemented; 3. the similarities and differences in the experiences of schools in different case models; and 4. the implications of our findings and recommendations for how schools can use The Framework for supporting integration efforts in the future.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Moeller, Babette and Fancsali, Cheri},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730779},
  isbn = {9798400715693},
  keywords = {case study; computational thinking; schoolwide integration},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {781},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Bringing Computational Thinking Schoolwide: A Framework for Supporting Cross-Curricular Integration},
  url = {https://doi.org/10.1145/3724389.3730779},
  year = {2025}
}

@inproceedings{merged308,
  abstract = {There is a growing body of literature on the relationship between spatial skills and computing success and evidence that developing spatial skills can improve computing outcomes, but almost all of this research has been conducted in higher education. To explore the link between spatial and computing skills in young people, we present the results of a spatial skills intervention deployed in maths lessons for 7--8-year-olds. Compared to a control group, pupils who received spatial instruction improved significantly more in tests of computational thinking despite not receiving deliberate computing instruction. We also explore some demographic factors relating to spatial skills and CT scores, finding previously observed demographic distinctions replicated in this population.},
  address = {New York, NY, USA},
  author = {Parkinson, Jack and Cutts, Quintin},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729075},
  isbn = {9798400715679},
  keywords = {computational thinking; intervention; k-12; primary school; spatial cognition; spatial reasoning; spatial skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {646–652},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Improving Primary School Pupils' Spatial Skills Leads to Computational Thinking Gains},
  url = {https://doi.org/10.1145/3724363.3729075},
  year = {2025}
}

@inproceedings{merged309,
  abstract = {CSforALL is an umbrella term for a movement that seeks to bring engaging, culturally-relevant, and meaningful computer science to all students. It includes many avenues for learning – after-school outreach activities, once-a-year ''Hour of Code'' activities as well as formalized instruction in classes, led by an inspiring and well-prepared teacher. There is a perennial need to support pre-service and in-service teachers with curricula and pedagogical content knowledge (PCK) so they can be successful in the classroom, but where to start?Jeannette Wing has long evangelized computational thinking (CT) as a skill ''for everyone, everywhere. Computational thinking will be a reality when it is so integral to human endeavors it disappears as an explicit philosophy''. [2] We have found that CT offers a remarkable foundation of engagement, intuition, and grounding upon which to build higher-level computer science fluency. This panel brings together four seasoned experts who have collectively provided computer science and CT professional development to a vast multitude of teachers and students to share their best practices.},
  address = {New York, NY, USA},
  author = {Garcia, Dan and Garcha, Sonia and Mukund, Madhavan and Shah, Vipul},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
  doi = {10.1145/3617650.3624926},
  isbn = {9798400703744},
  keywords = {CSforALL; K-12 professional development; computational thinking},
  location = {Hyderabad, India},
  numpages = {2},
  pages = {183–184},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Best Practices for Developing Computational Thinking},
  url = {https://doi.org/10.1145/3617650.3624926},
  year = {2023}
}

@inproceedings{merged310,
  abstract = {Computational thinking (CT) skills are essential for navigating daily life, but how best to teach these skills is still being explored. Educational programming games can provide engaging environments to develop CT, yet uncovering student struggles during gameplay remains challenging. This study analyzed 15 undergraduates with varying programming experience playing the CT game, Fox and Field, utilizing gameplay videos, heart rate data, and surveys. Results revealed common struggle points in understanding the character's perspective, degree angles, and debugging, with notable differences between novice and experienced players. Findings suggest support targeting abstraction, pattern recognition, and debugging skills to improve future game design and scaffolding.},
  address = {New York, NY, USA},
  author = {Veng, Sotheara and Zhang, Yifan and Bergwall, Ekaterina and Rutherford, Teomara},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705127},
  isbn = {9798400705328},
  keywords = {computational thinking; educational programming game},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1649–1650},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Analyzing Computational Thinking Gameplay: Identifying Struggles and the Role of Experience},
  url = {https://doi.org/10.1145/3641555.3705127},
  year = {2025}
}

@inproceedings{merged311,
  abstract = {This study examines barriers to inclusion for multilingual students in computer science, highlighting the role of Universal Design for Learning (UDL) strategies in an elementary computational thinking (CT) curriculum. Data from five classrooms including observations, field notes, pre-and-post-CT tests, and student artifacts were analyzed. Findings show that teachers employed various UDL strategies to teach CT, with their frequency positively correlated with higher CT scores. Additionally, this research extends existing UDL frameworks by integrating empirically observed strategies tailored for multilingual students. Ultimately, this study offers a universe of pedagogical strategies, rooted in UDL, aimed at enhancing multilingual student participation in computer science.},
  address = {New York, NY, USA},
  author = {Jacob, Sharin and Montoya, Jonathan and Prado, Yenda and Coenraad, Merijke and Burke, William and Warschauer, Mark},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734766},
  isbn = {9798400706264},
  keywords = {access; computational thinking; computer science; english learner; multilingual; universal design for learning},
  location = {Newark, NJ, USA},
  numpages = {8},
  pages = {309–316},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Designing for All: Universal Design for Learning Meets Computational Thinking for Multilingual Students},
  url = {https://doi.org/10.1145/3704637.3734766},
  year = {2025}
}

@inproceedings{merged312,
  abstract = {In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty.},
  address = {New York, NY, USA},
  articleno = {53},
  author = {Bellino, Alessio},
  booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
  doi = {10.1145/3605390.3610815},
  isbn = {9798400708060},
  keywords = {computational thinking; learning activities; learning platform},
  location = {Torino, Italy},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {CHItaly '23},
  title = {Demo: Teaching computational thinking with Protobject},
  url = {https://doi.org/10.1145/3605390.3610815},
  year = {2023}
}

@inproceedings{merged313,
  abstract = {Computational thinking (CT) skills allow us to achieve goals in a computation-driven world. Activities such as programming both benefit from and help improve CT skills, like abstraction and decomposition. Generative AI (GenAI) could be useful in developing CT skills. However, it could also change how we learn to program and which skills are more important. We aim to understand how GenAI can support the learning of CT skills in the context of computing education.},
  address = {New York, NY, USA},
  author = {Benedetti, Enrico},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3731294},
  isbn = {9798400715693},
  keywords = {bebras tasks; computational thinking; computing education; generative ai; problem-solving},
  location = {Nijmegen, Netherlands},
  numpages = {2},
  pages = {806–807},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Supporting Teaching and Learning Computational Thinking Skills with Generative AI in Computing Education},
  url = {https://doi.org/10.1145/3724389.3731294},
  year = {2025}
}

@inproceedings{merged314,
  abstract = {In this poster, we highlight computational thinking resources for schools from the PACT team at Maynooth University, Ireland. The resources are derived from tasks from the Bebras international computational thinking initiative. The different modalities work together throughout the school year to provide initial exposure to computational thinking, and include an obstacle course, seasonal tasks, and a workbook.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594203},
  isbn = {9798400701399},
  keywords = {Bebras tasks; K-12; computational thinking; unplugged},
  location = {Turku, Finland},
  numpages = {1},
  pages = {663},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Computational Thinking Resources Inspired by Bebras},
  url = {https://doi.org/10.1145/3587103.3594203},
  year = {2023}
}

@inproceedings{merged315,
  abstract = {Computer Programming (CP) is difficult to teach and learn. Many students who enroll in CP courses have difficulty learning to program, as they have deficits in problem-solving skills and are unable to understand abstract programming concepts. Some studies also state that teaching methods are often not the most appropriate as they are not personalized to each student’s needs and do not complement their learning styles. We believe that Computational Thinking (CT) can help alleviate the difficulties in learning to program, especially if it is developed from an early age. However, it is also crucial that teachers use effective methods to help their students develop CT skills. There are several Learning Resources (LR) (digital or paper format) to develop CT skills, however, we argue that Neuroeducation can contribute to improving the effectiveness of these LR in the teaching and learning process. The evidence about the brain’s learning process can be transformed into principles applicable in Education (Neuroeducation). To understand how we could train CT at various levels of education we built an ontology, OntoCnE, that describes the CT and CP domains. OntoCnE is composed of 3 layers that define: how to develop CT; which concepts should be taught at each level of education; and appropriate training materials. This paper aims to present a CT development approach based on this ontology together with Neuroeducation guidelines. The result of our research is the fourth layer for OntoCnE, which defines the Neuroeducation guidelines to characterize the materials. To illustrate our proposal, we will use LR PathIt as a case study. This approach can contribute to innovative and more efficient training of CT.},
  address = {New York, NY, USA},
  author = {Ara\'{u}jo, Cristiana and Henriques, Pedro Rangel and Cerqueira, Jo\~{a}o Jos\'{e}},
  booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
  doi = {10.1145/3702163.3702452},
  isbn = {9798400717819},
  keywords = {Computational Thinking; Computer Programming; Learning Resources; Neuroeducation; OntoCnE; Ontology},
  numpages = {7},
  pages = {435–441},
  publisher = {Association for Computing Machinery},
  series = {ICETC '24},
  title = {OntoCnE \&amp; Neuroeducation Guidelines: An approach to developing Computational Thinking},
  url = {https://doi.org/10.1145/3702163.3702452},
  year = {2025}
}

@inproceedings{merged316,
  abstract = {This study aims to investigate current trends and key elements of computational thinking in problem-solving within mathematics education. A systematic literature review was conducted using the 2013-2013 Scopus database, focusing on the keyword "computational thinking in mathematics education" for document collection. Data analysis was visualized using R-studio software. The thematic analysis revealed two major fields that extensively research computational thinking: education and engineering. Additionally, six research themes emerged from the analysis, including Mathematics, Computer Science, programming, STEM, robotics, and engineering. Key aspects for identifying computational thinking in solving mathematical problems encompass problem identification, decomposition, pattern recognition, abstraction, algorithms, and debugging.},
  address = {New York, NY, USA},
  author = {Susanti, Reni Dwi and Lukito, Agung and Ekawati, Rooselyna},
  booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3678726.3678748},
  isbn = {9798400717611},
  keywords = {aspect; computational thinking; mathematics problem-solving; trend},
  location = {Tokyo, Japan},
  numpages = {7},
  pages = {269–275},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '24},
  title = {Computational Thinking on Mathematical Problem-Solving: Bibliometric Theme and Aspect},
  url = {https://doi.org/10.1145/3678726.3678748},
  year = {2024}
}

@inproceedings{merged317,
  abstract = {Older adults are underrepresented in computing education; broadening participation in computing has remained predominantly at K-12 and college settings. Yet, the population of older adults is increasing across many regions. Strategies for broadening participation in computing education for adult learners have been under-explored. This poster reports our effort towards broadening participation in computing for adult learners by exploring how computational thinking problem-oriented unplugged activities might help to gently introduce older adults into computing education. Being an exploratory study, data was collected using a mixed method approach. This report presents preliminary findings that suggest the potential benefits of computing education for older adults, including social collaboration and demonstration of computational thinking practices that could help them to remain active while aging. Moreover, future research direction in this regard is also discussed.},
  address = {New York, NY, USA},
  author = {Agbo, Friday Joseph and Everetts, Connor},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691084},
  isbn = {9798400706042},
  keywords = {adults education; broadening participation; computational thinking; computing education; lifelong learning},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {295–296},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Towards Computing Education for Lifelong Learners: Exploring Computational Thinking Unplugged Approaches},
  url = {https://doi.org/10.1145/3649409.3691084},
  year = {2024}
}

@inproceedings{merged318,
  abstract = {Mathematics and computer science education have an intertwined history as proof undergirds both disciplines. This initial instrumental case study follows 16 different computational science students through a series of 8 linear algebra modules. Thematic analysis was used to highlight that when students learn mathematics through computation, opportunities for conjecture can be fostered alongside computational thinking.},
  address = {New York, NY, USA},
  author = {Castle, Sarah D.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635561},
  isbn = {9798400704246},
  keywords = {computational mathematics; computational thinking; conjecture; proof},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1594–1595},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Embracing Mathematical Conjecture Through Coding and Computational Thinking},
  url = {https://doi.org/10.1145/3626253.3635561},
  year = {2024}
}

@article{merged319,
  abstract = {In recent years, the intersection of music and coding has emerged as a cross-disciplinary approach to engage learners in both musical and computational expression. This article examines the motivations and framing of recent music and coding research through an analysis of 65 articles published between 2004 and 2024. We survey the key findings of this body of work, exploring the extent to which they generalize across diverse populations and educational contexts. We situate these findings within the broader aims of the field of computer science education, critiquing the use of music as a motivational tool in computing education rather than as a topic worthy of exploration in its own right. Methodological limitations are identified, with recommendations for future research to address these gaps. Drawing on theories of onto-epistemic heterogeneity, we call for a more inclusive approach to computing education that integrates sociocultural, historical, and critical perspectives to more effectively support learners from diverse linguistic, cultural, and economic backgrounds.},
  address = {New York, NY, USA},
  author = {Roberts, Cameron L. and Horn, Michael S.},
  doi = {10.1145/3749995},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {STEAM education; computer science education; creativity; music composition},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Epistemic Heterogeneity: A Critical Review of Music+Coding},
  url = {https://doi.org/10.1145/3749995},
  year = {2025}
}

@article{merged320,
  abstract = {This experience report describes the author's use of the classic man-cabbage-goat-wolf (MCGW) riddle to teach the main elements of computational thinking in CS1. Instead of teaching each computational thinking element individually, in the process of solving the MCGW problem the students are able to understand the process of abstracting a problem to a representation that can be understood by computer, finding a suitable algorithm to solve the abstracted problem, and decomposing the problem into different logical and more manageable parts. The survey responses from two recent classes clearly validate the effectiveness of this problem-driven approach even for a large class of very diverse backgrounds.},
  address = {Evansville, IN, USA},
  author = {Chang, Rocky K. C.},
  issn = {1937-4771},
  issue_date = {September 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {September},
  number = {4},
  numpages = {10},
  pages = {140–149},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Using Problem-Driven Learning to Teach Computational Thinking in CS1},
  volume = {40},
  year = {2024}
}

@inproceedings{merged321,
  abstract = {Teacher education programs face the challenge of integrating multiple standards into their licensure courses with limited instructional time. To address this, we need innovative approaches to effectively integrate topics like computational thinking (CT) and Artificial Intelligence (AI) literacy, which are increasingly included in teacher standards. We developed a core educational technology course for teachers from diverse fields-deaf education, math, music, early childhood, and more-to introduce these concepts. Using ''scaffolded critique rubrics,'' teachers evaluated tools and resources from platforms like Code.org or PBS Kids, assessing their suitability for their students. The rubrics helped teachers critique computing tools for accessibility issues, differentiate AI biases from automation ethics, and engage deeply with CT concepts. By connecting these topics to their student needs, teachers reflected on how to adapt resources for their classrooms. This report outlines the course development and its impact on teacher engagement},
  address = {New York, NY, USA},
  author = {Moudgalya, Sukanya Kannan and Allen, Taylor},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734778},
  isbn = {9798400706264},
  keywords = {AI literacy; accessibility; computational thinking; ethics; scaffolded critique; teacher education},
  location = {Newark, NJ, USA},
  numpages = {7},
  pages = {27–33},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Scaffolded Critique Rubrics: An Approach to Computational Thinking and AI Literacy in Teacher Education},
  url = {https://doi.org/10.1145/3704637.3734778},
  year = {2025}
}

@inproceedings{merged322,
  abstract = {This paper presents an operational skills framework specifically designed for high school computer science teachers. This highly detailed framework enables the differentiation of students' abilities in two key areas: computational thinking skills and Python programming concepts. It is structured along two dimensions: first, six core skills - evaluation, modeling, anticipation, decomposition, generalization, and abstraction - and second, programming concepts related to data and control structures, as utilized in a programming language like Python. We describe the abilities at the intersection of each of these skills and provide for each ability a task model and a set of associated elementary tasks. We demonstrate various applications of this framework for teachers, including articulating learning objectives, selecting and categorizing tasks for students, and evaluating their skills. Finally, we discuss ongoing development efforts and the potential for international adaptation of the framework.},
  address = {New York, NY, USA},
  author = {Hoarau, S\'{e}bastien and Declercq, Christophe and Chane-Lune, Sophie},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729025},
  isbn = {9798400715679},
  keywords = {computational thinking; python; skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {417–423},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {A Proposal for a Programming Skills Framework Integrating Computational Thinking and Python Programming Concepts},
  url = {https://doi.org/10.1145/3724363.3729025},
  year = {2025}
}

@inproceedings{merged323,
  abstract = {This study aims to propose a model for the automatic assessment of computational thinking based on the interactive Bebras tasks. The proposed model is based on the categorization of the interactive tasks and clustering of the behavioural data of the students' solution processes. In total 974864 solutions with behavioural data of 29 distinct interactive tasks used in Bebras Challenge were obtained. The interactive tasks were analysed and grouped according to several parameters. Based on this data, a model was proposed for how the solutions behavioural data could be processed and the task solutions could be automatically assessed based on the extracted task parameters and using machine learning techniques. The proposed assessment model analyzes solution patterns and is intended to address the limitations of the true/false assessments.},
  address = {New York, NY, USA},
  author = {Masiulionytundefined-Dagienundefined, Vaida and Jevsikova, Tatjana},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730795},
  isbn = {9798400715693},
  keywords = {behavioural data; computational thinking; ct assessment; interactive bebras tasks; machine learning; system modelling},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {791},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Behavioural Data-Driven Approach for Computational Thinking Automatic Assessment Using Interactive Bebras Challenge Tasks},
  url = {https://doi.org/10.1145/3724389.3730795},
  year = {2025}
}

@inproceedings{merged324,
  abstract = {Computational thinking (CT) is regarded as a fundamental twenty-first century skill and has been implemented in many early childhood education curriculum. Yet, the needs of neurodivergent children have remained largely overlooked in the extensive research and technologies built to foster CT among children. To address this, we investigated how to support neurodiverse (i.e., groups involving neurodivergent and neurotypical) preschoolers aged 3-5 in learning CT concepts. Grounded in interviews with six teachers, we deployed an age-appropriate, programmable robot called KIBO in two preschool classrooms involving 12 neurodivergent and 17 neurotypical children for eight weeks. Using interaction analysis, we illustrate how neurodivergent children found enjoyment in assembling KIBO and learned to code with it while engaging in cooperative and competitive play with neurotypical peers and the adults. Through this, we discuss accessible adaptations needed to enhance CT among neurodivergent preschoolers and ways to reimagine technology-mediated social play for them.},
  address = {New York, NY, USA},
  articleno = {557},
  author = {Das, Maitraye and Tran, Megan and Ong, Amanda Chih-han and Kientz, Julie A. and Feldner, Heather},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713851},
  isbn = {9798400713941},
  keywords = {Computational thinking; inclusive classroom; neurodiverse; preschool},
  numpages = {22},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {Cultivating Computational Thinking and Social Play among Neurodiverse Preschoolers in Inclusive Classrooms},
  url = {https://doi.org/10.1145/3706598.3713851},
  year = {2025}
}

@article{merged325,
  abstract = {This paper presents a systematic literature review of professional development programs in computational thinking (CT). CT has emerged as an essential set of skills that everyone should develop to participate in a global society. However, there were no pre-service or in-service teacher programs to integrate CT into the K–12 classrooms until very recently. Thus, it is important to identify how educators and researchers address the challenges to prepare the next generation of students and what gaps persist in the current literature. We review existing work in this field from two perspectives: First, we analyze the learning outcomes, assessment methods, pedagogical approaches, and pedagogical tools used in the professional development programs in CT. Second, we examine how these programs assess the teachers’ knowledge and skills as outcomes. We used the technological pedagogical and content knowledge (TPACK) framework to characterize existing literature and identify possible gaps in the preparation of pre-service and in-service teachers in CT. Our results suggest that (1) existing evidence is limited to developed countries; (2) many studies are only focusing on teachers understanding the concepts but do not explore how the participants evaluate or create learning activities; (3) no studies look into classroom observations as part of the program, which limits our understanding to how these programs work; and (4) most programs use block-based programming languages as the tool to develop student CT. While block-based programming languages are used for introductory training programs, students are often expected to transfer their learning to more professional programming languages.},
  address = {New York, NY, USA},
  articleno = {27},
  author = {Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
  doi = {10.1145/3648477},
  issue_date = {June 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; literature review; professional development},
  month = {May},
  number = {2},
  numpages = {24},
  publisher = {Association for Computing Machinery},
  title = {Professional Development in Computational Thinking: A Systematic Literature Review},
  url = {https://doi.org/10.1145/3648477},
  volume = {24},
  year = {2024}
}

@article{merged326,
  abstract = {This study presents the development of a student-centric framework for utilizing virtual reality (VR) technologies in education, specifically focusing on enhancing computational thinking skills. While numerous frameworks exist in this domain, they often lack consideration of student preferences, which are integral for fostering learner autonomy. Our proposed framework, with components developed from the constructivist learning theory, emphasises creating knowledge through interaction with the environment, focusing on autonomy, mastery and purpose as drivers of intrinsic outcomes. Through a survey administered to hundred and fifty-seven participants, we sought to identify student-preferred strategies for learning computational thinking skills via VR interventions. Results highlighted key challenges students face when working on computational tasks are related to algorithmic and abstraction thinking. To ease the aforementioned challenges, our findings suggest a preference among students for situated-based learning approaches within VR environments. Additionally, participants recognized the importance of motivational outcomes in improving autonomy and mastery within VR-based learning tasks. Students also preferred tasks that enhanced self-efficacy, contributing to a greater sense of purpose in their learning endeavours. Overall, this investigation sets a foundation for more student-centric, constructivist and intrinsically-based VR frameworks in education.},
  address = {New York, NY, USA},
  articleno = {8},
  author = {Wee, Chyanna and Wang, Lillian Yee Kiaw and Ong, Huey Fang},
  doi = {10.1145/3717838},
  issue_date = {March 2025},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Virtual Reality},
  month = {April},
  number = {1},
  numpages = {36},
  publisher = {Association for Computing Machinery},
  title = {TeachVR: An Immersive Virtual Reality Framework for Computational Thinking Based on Student Preferences},
  url = {https://doi.org/10.1145/3717838},
  volume = {25},
  year = {2025}
}

@inproceedings{merged327,
  abstract = {This doctoral research explores the link between computational thinking (CT) and mental models in talented children, addressing a gap in empirical studies on effects of computer science interventions. The research employs a mixed methods approach, utilizing randomized controlled field studies and interviews with primary school students attending computational thinking courses. Thus, two new computational thinking interventions have been developed and will be evaluated by a pilot, efficacy, and effectiveness study including either a wait-list or treated control group. The test instrument measuring mental models will first be employed in semi-structured interviews with talented children attending these computational thinking courses and then subsequently implemented in randomized controlled field trials to compare the effects of the courses on computational thinking abilities and the development of stable and viable mental models.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Kunz, Katrin},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699578},
  isbn = {9798400710384},
  keywords = {computational thinking; mental model; mixed methods; talent development},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {The Association between Computational Thinking and Mental Models in Talented Children (Doctoral Consortium)},
  url = {https://doi.org/10.1145/3699538.3699578},
  year = {2024}
}

@inproceedings{merged328,
  abstract = {Novice programmers often struggle to develop computational thinking (CT) skills in introductory programming courses. This study investigates the use of Large Language Models (LLMs) to provide scalable, strategy-driven feedback to teach CT. Through think-aloud interviews with 17 students solving code comprehension and writing tasks, we found that LLMs effectively guided decomposition and program development tool usage. Challenges included students seeking direct answers or pasting feedback without considering suggested strategies. We discuss how instructors should integrate LLMs into assessments to support students' learning of CT.},
  address = {New York, NY, USA},
  author = {Hassan, Mohammed and Chen, Yuxuan and Denny, Paul and Zilles, Craig},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701906},
  isbn = {9798400705311},
  keywords = {code comprehension; debuggers; execution; large language models},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {471–477},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {On Teaching Novices Computational Thinking by Utilizing Large Language Models Within Assessments},
  url = {https://doi.org/10.1145/3641554.3701906},
  year = {2025}
}

@inproceedings{merged329,
  abstract = {The Technovation Girls program (TG) is an after-school program, where teams of female school students follow a software ideation process to address one of the UN's Sustainable Development goals. Concretely, they prototype a mobile application which they later pitch to judges. The TG curriculum gives students the tools they need to carry out this challenge, with activities focusing on entrepreneurship, product ideation and pitching, as well as coding. Previous evaluations of this program have focused on student and mentor perceptions and attitudes, collected through surveys, observation, focus groups and interviews. In this paper, we evaluate the effect that the coding part of the TG curriculum has on students' computational thinking skills, specifically in Chile, where the TG curriculum was expanded to a year to account for differences in the school curriculum. Also, in this experience, the TG program was carried out during class hours, and at both single- and mixed-gender vocational high schools. We applied an existing computational thinking test to the 2020 cohort (approx. 1000 students), before and after participating in the program, analyzing the results by school, gender and age. We found a slight improvement in test scores, with a more positive effect in male students.},
  address = {New York, NY, USA},
  author = {Simmonds, Jocelyn and Diaz, Constanza and Estay, Carlos},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588818},
  isbn = {9798400701382},
  keywords = {computational thinking; gender; mobile apps; vocational schools},
  location = {Turku, Finland},
  numpages = {7},
  pages = {68–74},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Introducing Computational Thinking at Vocational High Schools},
  url = {https://doi.org/10.1145/3587102.3588818},
  year = {2023}
}

@inproceedings{merged330,
  abstract = {To engage diverse populations of students who may not self-select into computing courses, a curriculum for a middle school music technology + computer science course that addresses learning standards for both subjects was developed and deployed. Students who engage with the curriculum learn modern music production techniques and computational thinking concepts. This is through a mix of traditional approaches to music technology education (digital audio workstations) and computational approaches via a culturally relevant learning platform that introduces students to coding through music production and remixing. This poster reflects on the last two years of curriculum design and deployment, teacher training, and student and educator engagement and feedback to provide insight into the teaching (and learning) of computational thinking in the music technology classroom.},
  address = {New York, NY, USA},
  author = {McCall, Lauren and Allen, Brittney and Freeman, Jason and Garrett, Stephen and Grossman, Sabrina and Paz, Jed and Edwards, Doug and McKlin, Tom and Lee, Taneisha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635527},
  isbn = {9798400704246},
  keywords = {broadening participation; computing; interest formation; middle school; music; persistence},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1746–1747},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Developing Computational Thinking in Middle School Music Technology Classrooms},
  url = {https://doi.org/10.1145/3626253.3635527},
  year = {2024}
}

@inproceedings{merged331,
  abstract = {The adoption of Computational Thinking (CT) in the educational worldwide curricula is progressively gaining importance from various perspectives. One particular approach, known as unplugged, does not require electronic devices and offers notable benefits as it is replicable and adaptable. Moreover, it serves to dismantle the misconception that computer science is exclusively confined to the digital realm. While both plugged and unplugged methodologies are recognized, further exploration of the unplugged approach is required, especially in Upper Secondary Education, where there is less evidence of its effectiveness. This paper presents a summary of a quasi-experimental study conducted with 11th grade students (approximately 16 years old) in a Spanish public high school. 57 students participated: 28 in the control group and 29 in the experimental group. The conducted research, based on a quantitative and experimental design, aimed to investigate the effectiveness of unplugged activities to improve CT abilities in Upper Secondary Education. The results indicated improved skills in the experimental group, suggesting the potential efficacy of unplugged methods in fostering CT abilities.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Benavides-Escola, Christian Andr\'{e}s and Mart\'{\i}n-Barroso, Estefan\'{\i}a and Zapata-C\'{a}ceres, Mar\'{\i}a and Rom\'{a}n-Gonz\'{a}lez, Marcos},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678110},
  isbn = {9798400710056},
  keywords = {Computational Thinking; Computational Thinking Evaluation; Computer Science Education; Unplugged Activities; Upper Secondary Education},
  location = {Munich, Germany},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Improvement of Computational Thinking skills through unplugged activities in Upper Secondary Education},
  url = {https://doi.org/10.1145/3677619.3678110},
  year = {2024}
}

@article{merged332,
  abstract = {In learning to program and understanding how a programming language controls a computer, learners develop both insights and misconceptions whilst their mental models are gradually refined. It is important that the learner is able to distinguish the different elements and roles of a computer (compiler, interpreter, memory, etc.), which novice programmers may find difficult to comprehend. Forming accurate mental models is one of the potential sources of difficulty inextricably linked to mastering computing concepts and processes, and for learning computer programming.It is common to use some form of representation (e.g., an abstract machine or a Computational Agent (CA)) to support technical or pedagogic explanations. The Notional Machine (NM) is a pedagogical device that entails one or more computational concepts, originally described as an idealised computer operating with the constructs of a particular programming language. It can be used to support specific or general learning goals and will typically have some concrete representation that can be referred to. Computational Thinking (CT), which is defined as a way of thinking that is used for [computational] problem solving, is often presented as using a CA to carry out information processing presented by a solution.In CT, where the typical goal is to produce an algorithm or a computer program, the CA seemingly serves a purpose very similar to an NM. Although it changes through the different stages of development (of the learner and of the curriculum), the roles of CAs and NMs can be seen as versatile tools that connect a learner’s mental model with the conceptual model of a program. In this article, we look at this relationship between CAs and NMs, and indicate how they would look at different stages of learning. We traverse the range of definitions and usages of these concepts, and articulate models that clarify how these are viewed in the literature. This includes exploring the nature of machines and agents, and how historical views of these relate to modern pedagogy for computation. We argue that the CA can be seen as an abstract, simplified variant of an NM that provides a useful perspective to the learner to support them to form robust mental models of NMs more efficiently and effectively. We propose that teaching programming should make use of the idea of a CA at different stages of learning, as a link that connects a learner’s mental model to a full NM.},
  address = {New York, NY, USA},
  articleno = {44},
  author = {Munasinghe, Bhagya and Bell, Tim and Robins, Anthony},
  doi = {10.1145/3627829},
  issue_date = {December 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {CS Unplugged; Computational thinking; K-12 education; computational agent; notional machine},
  month = {December},
  number = {4},
  numpages = {27},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Notional Machines: The Missing Link},
  url = {https://doi.org/10.1145/3627829},
  volume = {23},
  year = {2023}
}

@inproceedings{merged333,
  abstract = {Cross-stitching, a traditional craft practiced across cultures, holds potential as an educational tool for developing computational thinking (CT) skills in children. While CT is increasingly recognized as essential in modern education, the role of unplugged activities like cross-stitching remains underexplored. This study examines cross-stitching through Kolb’s experiential learning theory and key CT categories, including abstraction, decomposition, algorithmic thinking, evaluation and generalization. Using a qualitative approach, data were collected through interviews with cross-stitch instructors, a preschool teacher, and parents of children engaged in cross-stitching. A priori content analysis identified key aspects: (1) numerical thinking and visual representation ; (2) task breakdown and progressive learning ; (3) sequencing and debugging ; (4) problem solving and learning by doing ; (5) persistence and pattern recognition. The study offers an exemplar for applying an analytical lens to understand the interplay between unplugged activities and computational thinking.},
  address = {New York, NY, USA},
  author = {undefinedlbay, Elif and Boga, Miray and Baykal, G\"{o}k\c{c}e Elif},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  doi = {10.1145/3713043.3731507},
  isbn = {9798400714733},
  keywords = {Kolb’s Experiential Learning Theory; computational thinking; cross-stitch; cultural heritage; unplugged learning},
  numpages = {4},
  pages = {923–926},
  publisher = {Association for Computing Machinery},
  series = {IDC '25},
  title = {Exploring the Role of Cross-stitch Craft in Development of Children’s Computational Thinking: An Unplugged Approach},
  url = {https://doi.org/10.1145/3713043.3731507},
  year = {2025}
}

@inproceedings{merged334,
  abstract = {Our research-practice partnership with two school districts in Eastern Kentucky has created a rurally sustaining computational thinking (CT) pathway. In this paper we share our project's operational understanding of the concept of rural sustainability in the context of CT pathways. We posit that an effective CT pathway for rural communities must be firmly rooted in their cultural wealth, funds of knowledge, and socioeconomic priorities. Moreover, it should empower students to draw upon their own innovation heritage, leveraging CT as a tool to identify and address community challenges. Emphasizing the necessity of incorporating rural contexts into discussions on equitable access to computing education, our conceptualization provides insights into how policy and research can contribute to this important goal.},
  address = {New York, NY, USA},
  author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656073},
  isbn = {9798400706264},
  keywords = {computational thinking; computer science; culturally sustaining computing; rural education},
  location = {Atlanta, GA, USA},
  numpages = {6},
  pages = {133–138},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Appalachian Ingenuity and the Need for Rurally Sustaining Computational Thinking Pathways},
  url = {https://doi.org/10.1145/3653666.3656073},
  year = {2024}
}

@inproceedings{merged335,
  abstract = {Within a two-year urban teacher residency program at [University], which focuses on training high school teachers to incorporate computational thinking (CT) into STEM education with an emphasis on equity, this study delves into how these preservice teaching residents (TRs) understood and applied CT in high school STEM settings. Based on our initial thematic content analysis of ten 30-minute artifact-based interviews, teachers' understanding and application of CT could be categorized in two ways: 1) One group of teachers showcased clear, explicit knowledge of CT and actively incorporated it into their instruction; 2) Another group, despite their evident understanding of CT, subtly and implicitly integrated CT into their teaching methods. Our findings suggest that while TRs may differ in whether they explicitly or implicitly integrated CT into their lesson plans, their comments suggest that they have foundational understandings and hold values that suggest they can build upon them. The TRs held definitional understandings of CT and had intentions to design and teach with CT integration, explicitly, or more commonly, implicitly. All of the TRs recognized opportunities in their lesson plans for teaching CT to students, which suggests the potential for more explicit integration in the future. These insights guide our subsequent efforts in teacher training, ensuring educators are equipped to weave CT into STEM lessons. Our findings contribute to a growing body of work that seeks to build strong preservice teaching practices, as they learn to translate CT knowledge into effective teaching practices while working towards higher levels of CT integration.},
  address = {New York, NY, USA},
  author = {Wei, Wei and Ha, Jesse and Gomez, Kimberley and Ghosh, Anuradha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635586},
  isbn = {9798400704246},
  keywords = {computational thinking; equity; preservice teachers; stem; teacher education},
  location = {Portland, OR, USA},
  numpages = {3},
  pages = {1848–1850},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Computational Thinking in STEM Teaching: Preservice Teachers' Conceptualizations and Practices},
  url = {https://doi.org/10.1145/3626253.3635586},
  year = {2024}
}

@inproceedings{merged336,
  abstract = {Computational thinking (CT) integration in elementary mathematics engages young learners in the decomposition of complex problems and the construction of iterative approaches to mathematical thinking. To effectively integrate MATH+CT, we need to build teachers' capacity in developing knowledge of CT concepts and creating Math+CT activities. This can positively influence students' mathematical outcomes and their readiness for computer science (CS) in middle and high school. Although various professional development programs aim to build teachers' CT knowledge, limited research exists on how teachers apply this knowledge to classroom-based Math+CT activities. Simultaneously, the rapid improvement of large Language Models (LLMs) creates a catalyst for building an innovative resource space to support elementary teachers' integration of MATH+CT in their existing school or district curriculum. In this poster, we present a tool that leverages LLMs to support teachers in creating Scratch programs designed to explore and deepen students' understanding of mathematical concepts.},
  address = {New York, NY, USA},
  author = {Ylagan, Emma S. and Parekh, Heena P. and Das, Malisha and Dahshan, Mai},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730802},
  isbn = {9798400715693},
  keywords = {computational thinking; curriculum development; early childhood education; large language models; mathematics education; pk-12 cs education; professional development},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {794},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in Elementary Mathematics Instruction and Learning with the Support of Large Language Models},
  url = {https://doi.org/10.1145/3724389.3730802},
  year = {2025}
}

@inproceedings{merged337,
  abstract = {Despite widespread recognition of the importance of computer science (CS) education and an increased focus on computational thinking (CT) instruction in the U.S., there remains a significant shortage of qualified K-12 CS teachers. Preparing preservice teachers to teach CS is essential for ensuring a sustainable future for CS education. This experience report presents a CT/CS module initiative designed to prepare secondary preservice science and math teachers to teach CT/CS through an instructional methods course that integrates instructional practice within an elementary after-school program. This initiative employs the preservice teacher preparation framework that includes the observe-practice-reflect cycle. Within this framework, the preservice teachers began with incorporating unplugged lessons and then transitioned to robotics to teach CT/CS concepts. In this experience report, we detail the design and implementation of this CT/CS module initiative and share findings that revealed the preservice teachers' increased confidence, adaptations in lesson planning, and the challenges faced in teaching CT/CS. These takeaways aim to inspire and inform other teacher educators and practitioners working to prepare the next generation of CS teachers.},
  address = {New York, NY, USA},
  author = {Guo, Meize and Yun, Minji and Israel, Maya},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701899},
  isbn = {9798400705311},
  keywords = {computer science education; integration; k-12; science and math; teacher education},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {416–422},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Introducing Computational Thinking and Computer Science Instruction to Preservice Science and Math Teachers},
  url = {https://doi.org/10.1145/3641554.3701899},
  year = {2025}
}

@inproceedings{merged338,
  abstract = {Maker-based learning and Computational Thinking (CT) have increased in popularity in formal educational settings over the past decade. Particularly, the combination of CT and making seem to hold promise for providing opportunities for students to learn and use computing concepts outside of computing courses. This paper presents findings from a two year study of the integration of computational making into 5th and 6th grade science classrooms. Students participated in computational making interventions in which they programmed Arduino microcontrollers to create scientific models of concepts that aimed to help them engage with the science content while learning CT and making skills. In this paper, we explore the differences between the desired computing learning progressions, students' performance on assessments, and perceptions of computer science to answer: To what extent are middle school students able to learn computing through computing integrated science curriculum? We observed that the programming concepts taught were largely dependent on the needs of the science and making project. Our findings suggest that while students had opportunities to learn and use programming concepts, their performance on assessments was between 15\% and 78\% correct for conceptual and applied questions and their programming self-efficacy and their perceptions of computer science were lower than desired. We discuss the implications of these findings and the factors that impact the integration of CT in core disciplines and the challenges this presents as we aim to use integration approaches to effectively teach computing outside of computing courses and to broaden participation in computing.},
  address = {New York, NY, USA},
  author = {Magda, David and Gardner-McCune, Christina and Jimenez, Yerika and Chu, Sharon and Kulkarni, Abhishek},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630948},
  isbn = {9798400704239},
  keywords = {computational thinking; k12 education; making},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {778–784},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {The Integration of Computational Thinking and Making in the Classroom},
  url = {https://doi.org/10.1145/3626252.3630948},
  year = {2024}
}

@inproceedings{merged339,
  abstract = {Many K-12 computer science (CS) education programs have started focusing on fostering Computational Thinking (CT) skills as early as kindergarten. While secondary-level CS education has been extensively studied, there is limited research on CT practices in early childhood education (ECE), particularly from the perspective of kindergarten teachers. Understanding how CT is taught by kindergarten teachers and how they rate the CT practices of students in preschool is essential for developing effective new curricula and professional development programs. Therefore, this study evaluates an eight-week CT intervention conducted by kindergarten teachers in naturalistic settings, addressing two critical research gaps: 1) the emphasis on CT practices rather than concepts, and 2) the perspectives of kindergarten teachers on CT activities. 109 preschool students (62 female, 43 male, 4 missing information) with the age of five or six years old from six kindergartens in Baden-W\"{u}rttemberg, Germany participated in the intervention. The overall evaluation using the TechCheck-K and the observation scale for CT unplugged activities (OSCTU) show significant improvements of students CT skills. I conclude by discussing the implications of these findings for the integration of CT in ECE. These insights contribute to bridging research and practice, offering a foundation for sustainable CT education initiatives for young learners.},
  address = {New York, NY, USA},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729057},
  isbn = {9798400715679},
  keywords = {computational thinking; early childhood education; kindergarten},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {653–659},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Evaluating Computational Thinking Practices in Early Childhood Education: Insights from an Intervention Bridging Research and Practice},
  url = {https://doi.org/10.1145/3724363.3729057},
  year = {2025}
}

@inproceedings{merged340,
  abstract = {We describe our experience introducing computational thinking skills at teacher colleges through project-based learning (PBL). We have designed projects that use technology to tackle driving questions derived from the national school curriculum, and at the same time are aligned with learning objectives from pre-service teacher training programs. We have carried out a preliminary validation of these projects with teacher educators, who are now incorporating these experiences into their courses with pre-service teachers.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Simmonds, Jocelyn and Hitschfeld-Kahler, Nancy and Scheihing, Eliana and Henriquez, Valeria and Munoz, Valentin and Casanova, Cecilia and Torrent, Catalina and Contreras, Paulo and Mercado, Karen and Estrada, Daniel and Marquez, Lucia},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678133},
  isbn = {9798400710056},
  keywords = {computational thinking; project-based learning; teacher training},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Designing Project-based learning experiences to integrate Computational Thinking skills at Teacher Colleges},
  url = {https://doi.org/10.1145/3677619.3678133},
  year = {2024}
}

@inproceedings{merged341,
  abstract = {Computational Thinking skills along with reading, writing, and calculating skills are basic skills for children’s future. Computational Thinking has much in common with problem-solving and creative thinking in general. With regard to Karl Popper "all life is problem-solving" [26], this contribution focuses on the common features of problem-solving and unplugged Computational Thinking, by using a special set of Computational Thinking tasks (INGA-Box). Choosing a mix of deductive and inductive approach, a classification scheme for observing the development of Computational Thinking in kindergarten was developed and evaluated with first datasets.},
  address = {New York, NY, USA},
  articleno = {15},
  author = {Meyer-Baron, Larissa and Stieger, Ramona and Waldvogel, Bettina and Schumann, Nicole and Ruedisueli, Cornelia and Mayr, Franziska},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556867},
  isbn = {9781450398534},
  keywords = {INGA-Box; computational thinking; escape box; kindergarten children; problem-solving; video analysis},
  location = {Morschach, Switzerland},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Observing Computational Thinking Skills of Kindergarten Children},
  url = {https://doi.org/10.1145/3556787.3556867},
  year = {2022}
}

@inproceedings{merged342,
  abstract = {Physical play has often been leveraged to provide children with active and engaging learning experiences. However, coding activities are predominantly sedentary in front of the screen, and the application of physical play in Computer Science education is less explored, e.g., how can we engage in computational thinking (CT) through physical play? In this design-based exploration, we conducted three design activities where young children, college students, and researchers were invited to create physical play projects using the BBC micro:bit and reflect on their experiences. By examining participants’ projects and creating processes, we provide empirical evidence that remixing physical play activities with coding can engage learners in various CT concepts and practices, reveal how CT concepts and practices can be represented in physical play, and highlight implications for designing physical play-mediated computational learning experiences. Ultimately, we encourage more learning experiences to incorporate physical play into computing education for children.},
  address = {New York, NY, USA},
  author = {Yu, Junnan and Hayden, Ronni and Roque, Ricarose},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589365},
  isbn = {9798400701313},
  keywords = {computational thinking; design; learning; physical play},
  location = {Chicago, IL, USA},
  numpages = {13},
  pages = {124–136},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Exploring Computational Thinking with Physical Play through Design},
  url = {https://doi.org/10.1145/3585088.3589365},
  year = {2023}
}

@inproceedings{merged343,
  abstract = {This paper presents a study about the mapping of the EUDability of End-User Development (EUD) tools with the Computational Thinking (CT) skills of users. This mapping provides an approach to evaluate the suitability of a EUD environment in supporting people performing their daily work while managing and exploiting EUD tools. EUDability is a construct encompassing different dimensions that need to be assessed through a careful scrutiny by human-computer interaction experts, while CT skills should mirror those dimensions from the point of view of assessing the level of ability of users in managing problems with a computational thinking attitude. Moving from the healthcare domain, we present two cases: a tool for geriatric professionals supporting them in the preparation of cognitive exercises for elderly patients; and a tool for pharmacists, which empowers them to create robot programs related to the preparation of personalized medications. These cases have been exploited to show how to unify the EUDability assessment with the CT skills assessment. In particular, the application of the EUDability evaluation method for each tool, as well as the administration of the Computational Thinking Scale to domain experts are shown. The results of the two assessments are reported and discussed, together with the limitations of the present study. The results show the goodness of fit of the proposed EUD tools in the healthcare domain.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {Barricelli, Barbara Rita and Fogli, Daniela and Gargioni, Luigi and Locoro, Angela and Valtolina, Stefano},
  booktitle = {Proceedings of the 2024 International Conference on Advanced Visual Interfaces},
  doi = {10.1145/3656650.3656671},
  isbn = {9798400717642},
  keywords = {Computational Thinking; End-User Development; Evaluation; Healthcare},
  location = {Arenzano, Genoa, Italy},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {AVI '24},
  title = {Towards the Unification of Computational Thinking and EUDability: Two Cases from Healthcare},
  url = {https://doi.org/10.1145/3656650.3656671},
  year = {2024}
}

@inproceedings{merged344,
  abstract = {The recent emphasis on computational thinking (CT) integration across disciplines in elementary education nationwide is important to ensure that students are well-equipped to meet the demands of the data-driven workforce. However, this requirement poses major challenges to early elementary teachers who are faced with little direction in terms of how best to implement and assess their young student's application of these new practices.This project engaged researchers, professional development (PD) providers, and K-2 teachers to develop and design a hybrid PD experience to support teachers in a process of learning about and identifying the use of CT skills and strategies in their students' work. The hybrid PD approach utilized a combination of instructional coaching, both face-to-face and through an online Community of Practice. Researchers used a mixed-methods design to measure teachers' change over time in their understanding of how to identify emergent computational thinking in their students' work process. Data collection methods included teacher focus groups and interviews, classroom observations, and teacher pre- and post-surveys.Preliminary findings showed an increase in teachers' understanding of CT and confidence in engaging their students in CT-integrated lessons. Teachers reported that the combination of in-person PD and online Community of Practice helped them prepare to bring CT into their classroom and cited placing more of a distinct focus on teaching students the process of CT rather than just using CT vocabulary. Teachers also referenced success in evaluating their students' application of CT skills and concepts by using informal and formative assessment strategies that focus on evidence of student understanding rather than assessing CT vocabulary.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Ferguson, Camille and Negron, Anthony and Ferrer, Ray and Labonte, Don},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635540},
  isbn = {9798400704246},
  keywords = {computational thinking; early elementary; integration},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1814–1815},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Supporting Teacher Understanding of Computational Thinking Integration into Early Elementary Curricula},
  url = {https://doi.org/10.1145/3626253.3635540},
  year = {2024}
}

@inproceedings{merged345,
  abstract = {Introductory computer science courses (CS1) often place significant importance on teaching the syntax of a specific programming language, potentially overshadowing the development of crucial computational thinking skills. This paper presents a novel pedagogy designed to enhance computational thinking by simultaneously introducing students to multiple programming languages and embedding game development throughout the curriculum. Our approach aims to reduce language dependency, promote abstract reasoning, and increase student engagement through practical, real-world examples. We conducted a quasi-experimental study over multiple semesters, comparing a trial group (using the new pedagogy) with a control group (using a traditional, single-language approach). This paper analyzes the impact of our new pedagogy on student attitudes, perceptions, and exam performance. The findings indicate that the multilingual, game-based approach not only improves students' interest and motivation but also enhances their computational thinking abilities, particularly in areas such as code comprehension, problem-solving, and applying concepts across different programming languages. As such, this study offers valuable insights and practical recommendations for educators seeking to foster deeper learning and engagement in introductory programming courses.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum and Tapia, Jonathan},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729066},
  isbn = {9798400715679},
  keywords = {computational thinking; cs1; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {424–430},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in CS1 through Multilingual Game Development},
  url = {https://doi.org/10.1145/3724363.3729066},
  year = {2025}
}

@inproceedings{merged346,
  abstract = {In this theoretical paper, we compare computational thinking and self-regulated learning. Many studies use self-regulated learning to foster the acquisition of computational thinking competencies. Self-regulated learning skills are themselves beneficial for any learning process; here, we argue that the relationship between self-regulated learning and computational thinking is closer than the simple observation that self-regulated learning strategies support the acquisition of computational thinking competencies. We sustain that self-regulated learning and computational thinking competencies share many features (and have some differences), which would support synergistic effects so that not only can self-regulated learning be used to attain computational thinking competencies, but computational thinking activities can also be used to foster features of self-regulated learning competencies.},
  address = {New York, NY, USA},
  author = {Pasterk, Stefan and Benke, Gertraud},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653565},
  isbn = {9798400706004},
  keywords = {computational thinking; secondary school; self-regulated learning},
  location = {Milan, Italy},
  numpages = {6},
  pages = {640–645},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Computational Thinking for Self-Regulated Learning},
  url = {https://doi.org/10.1145/3649217.3653565},
  year = {2024}
}

@inproceedings{merged347,
  abstract = {During the UnboxingCT project summer professional development, the Integrated CT Assessment was piloted with 72 elementary teachers. The assessment is based on computational thinking integration literature and asks teachers to identify different computational thinking concepts in content area scenarios. The assessment allowed us to identify which computational thinking concepts teachers were most familiar with prior to the professional development and assess changes in their understanding following the professional development. Our next step will be validation of the assessment with a larger group of teachers.},
  address = {New York, NY, USA},
  author = {Joshi, Deepti and Joswick, Candace and Albert, Jennifer and Jocius, Robin and Blanton, Melanie and Petrulis, Robert and Dawson, Trent},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705131},
  isbn = {9798400705328},
  keywords = {assessment; computational thinking; integrated assessment; teacher assessment; teacher professional development},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1501–1502},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Assessing Elementary Teachers' Knowledge of Integrated Computational Thinking},
  url = {https://doi.org/10.1145/3641555.3705131},
  year = {2025}
}

@inproceedings{merged348,
  abstract = {Introductory programming courses (CS0) are crucial for laying the foundation in computer science education, yet traditional approaches often emphasize language-specific syntax over abstract computational thinking. This paper introduces a novel pedagogy that teaches multiple programming languages (from high-level to low-level) simultaneously, using game development as a central context to foster computational thinking and reduce language dependency. Over five semesters, we implemented this pedagogy in multiple CS0 sections, comparing its effectiveness to a traditional, single-language approach. This paper presents a comparative analysis between a trial group, engaged in our innovative approach, and a control group, exposed to conventional teaching methods. Our results, drawn from survey responses and exam data, suggest that our pedagogy significantly enhances students' interest, engagement, and proficiency in problem-solving, particularly for female students.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729087},
  isbn = {9798400715679},
  keywords = {computational thinking; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {660–666},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Multilingual Game Programming to Enhance Computational Thinking in CS0},
  url = {https://doi.org/10.1145/3724363.3729087},
  year = {2025}
}

@inproceedings{merged349,
  abstract = {In today's society, computational thinking has become one of the important methods for people to understand and solve problems. Against the backdrop of rapid development and widespread application of artificial intelligence technology, computational thinking has become an essential literacy for everyone in the era of intelligence. Therefore, how to cultivate students' computational thinking has become an important issue. This article takes computational thinking and computer science courses as the carrier to carry out ability cultivation and quality education, thereby enhancing innovative thinking ability. It analyzes the basic teaching content of artificial intelligence and the relationship between computational thinking ability, and then provides methods for cultivating computational thinking ability under the background of artificial intelligence teaching, and summarizes them.},
  address = {New York, NY, USA},
  author = {Li, Ruizhu},
  booktitle = {Proceedings of the 2025 International Conference on Artificial Intelligence and Educational Systems},
  doi = {10.1145/3744367.3744424},
  isbn = {9798400715068},
  keywords = {Artificial intelligence; Computational thinking; Cultivation of thinking; Innovative thinking},
  numpages = {6},
  pages = {359–364},
  publisher = {Association for Computing Machinery},
  series = {ICAIES '25},
  title = {Cultivation of Computational Thinking in the Context of AI General Education},
  url = {https://doi.org/10.1145/3744367.3744424},
  year = {2025}
}

@inproceedings{merged350,
  abstract = {My area of research broadly focuses on the role that computational thinking and creative technologies play in early childhood education. I am specifically interested in the ways that these are used in mixed-ability classrooms in Puerto Rico. My research aims to result in the development of a series of best practices to support computational thinking and creative technologies in early childhood classrooms. These practices will ideally promote unplugged, culturally responsive activities co-designed with early childhood educators, which can be integrated into mixed-ability classrooms. In this paper, I discuss the study that I am currently undertaking, and plans for further studies.},
  address = {New York, NY, USA},
  author = {L\'{o}pez-Delgado, Mar\'{\i}a},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734747},
  isbn = {9798400706264},
  keywords = {accessible computing education; computational thinking; creative technology; early childhood education; inclusive computing education; maker education; makerspaces; preschool},
  location = {Newark, NJ, USA},
  numpages = {1},
  pages = {382},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Computational Thinking and Creative Technologies in Early Childhood Education in Puerto Rico},
  url = {https://doi.org/10.1145/3704637.3734747},
  year = {2025}
}

@article{merged351,
  abstract = {Computational thinking (CT) is a critical set of 21st century skills that young learners must develop to be successful in contemporary work and life. As more K-12 schools begin to integrate CT into the curriculum, elementary preservice teachers (EPSTs) must be prepared to teach CT to their future students. Therefore, elementary teacher preparation programs should explore ways to incorporate CT into their coursework, ensuring that EPSTs graduate with the necessary knowledge and skills to teach CT. This study investigates the impacts of a three-week CT module implemented in a technology integration course in an elementary teacher preparation program on EPSTs’ CT value beliefs, self-efficacy, and teaching efficacy. The purpose of the module was to introduce EPSTs to basic concepts and big ideas in CT, support their application of CT in block-based coding environments, and promote connection building between CT and authentic real-world scenarios that balance different types of CT activities. Guided by the Interconnected Model of Professional Growth (IMPG), this study examined EPSTs’ learning as a dynamic process of change across the personal and external domains. The module was located in the external domain as a stimulus for learning, while the Teacher Beliefs about Coding and Computational Thinking (TBaCCT) instrument was used to assess changes in value beliefs, self-efficacy, and teaching efficacy within the personal domain. A convergent parallel mixed-methods design was used to analyze pre- and post-surveys administered to 50 EPSTs and semi-structured interviews with four of the EPSTs. The results showed that the beliefs of the CT value of EPSTs evolved and their self-efficacy and teaching efficacy of CT significantly improved after participating in the module, suggesting that the interaction between external learning experiences and internal belief systems - facilitated by reflection and action - contributed to early professional growth. Notably, EPSTs also developed a more accurate understanding of CT, recognized the benefits of both plugged and unplugged CT activities, and expressed a desire for continued CT learning and professional development. Although EPSTs expressed concerns with the scarcity of physical computing toys in schools, they demonstrated a commitment to incorporating CT activities into their teaching and exploring alternative funding avenues to acquire such resources. Practical implications include potential approaches for elementary teacher preparation programs to embed CT into existing curricula.},
  address = {New York, NY, USA},
  author = {Ramirez-Salgado, Andrea and Wusylko, Christine and Weisberg, Lauren R. and Delgado, Johnny and Israel, Maya},
  doi = {10.1145/3744751},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; Elementary education; Preservice teachers; Self-efficacy; Teaching beliefs},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Preparing elementary preservice teachers to integrate computational thinking in the curriculum},
  url = {https://doi.org/10.1145/3744751},
  year = {2025}
}

@inproceedings{merged352,
  abstract = {In Computer Science Education, coding activities are extremely important to teach younger students the basics of programming and computational thinking. To provide an immersive experience, in this paper, we propose VRCoding, a Virtual Reality (VR)-based block coding system. VRCoding can teach computational thinking in an immersive Virtual Reality environment, exploiting passive haptics to improve interaction and give tactile feedback to the users. Passive haptics is obtained using simple physics placeholders, i.e., textured parallelepipeds, that are tracked in real-time, and aligned with the coding blocks in VR.   The system is tested on a group of secondary school users, performing simple coding exercises with a standard monitor-based block coding environment and with the proposed VRCoding block language. Results show positive feedback concerning the sense of presence and the user experience.},
  address = {New York, NY, USA},
  author = {Gerini, Lorenzo and Delzanno, Giorgio and Guerrini, Giovanna and Solari, Fabio and Chessa, Manuela},
  booktitle = {Proceedings of the 2nd International Workshop on Gamification in Software Development, Verification, and Validation},
  doi = {10.1145/3617553.3617886},
  isbn = {9798400703737},
  keywords = {coding; computational thinking; extended reality; gamification; passive haptics; virtual reality},
  location = {San Francisco, CA, USA},
  numpages = {9},
  pages = {13–21},
  publisher = {Association for Computing Machinery},
  series = {Gamify 2023},
  title = {Gamified Virtual Reality for Computational Thinking},
  url = {https://doi.org/10.1145/3617553.3617886},
  year = {2023}
}

@inproceedings{merged353,
  abstract = {There is a growing body of literature on the relationship between spatial skills and computing success and evidence that developing spatial skills can improve computing outcomes, but almost all of this research has been conducted in higher education. To explore the link between spatial and computing skills in young people, we present the results of a spatial skills intervention deployed in maths lessons for 7--8-year-olds. Compared to a control group, pupils who received spatial instruction improved significantly more in tests of computational thinking despite not receiving deliberate computing instruction. We also explore some demographic factors relating to spatial skills and CT scores, finding previously observed demographic distinctions replicated in this population.},
  address = {New York, NY, USA},
  author = {Parkinson, Jack and Cutts, Quintin},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729075},
  isbn = {9798400715679},
  keywords = {computational thinking; intervention; k-12; primary school; spatial cognition; spatial reasoning; spatial skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {646–652},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Improving Primary School Pupils' Spatial Skills Leads to Computational Thinking Gains},
  url = {https://doi.org/10.1145/3724363.3729075},
  year = {2025}
}

@inproceedings{merged354,
  abstract = {A key challenge that is recognized globally in computing education is how to provide access to computer science (CS) and computational thinking (CT) education for all students. Despite the importance of CS/CT education, access to high-quality CS/CT education is often not equally distributed due to a number of factors. A promising approach to reaching all students, is to integrate CS/CT on a schoolwide basis across multiple subject areas and grade levels [1, 2, 3]. Achieving schoolwide integration requires an aligned effort and educators often are not provided with guidance about how to make this systemic change. To address this, researchers developed the CT Integration Framework (The Framework), a self-assessment and planning tool that helps educators identify the core elements that drive CT integration, determine their school's readiness, and set and monitor progress toward their goals. In this poster, we will present research on three case models highlighting The Framework and how it was used in guiding the implementation efforts for schools located in rural and urban districts in the United States of America. This poster will describe: 1. The methods and participant sample; 2. The Framework and how it was implemented; 3. the similarities and differences in the experiences of schools in different case models; and 4. the implications of our findings and recommendations for how schools can use The Framework for supporting integration efforts in the future.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Moeller, Babette and Fancsali, Cheri},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730779},
  isbn = {9798400715693},
  keywords = {case study; computational thinking; schoolwide integration},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {781},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Bringing Computational Thinking Schoolwide: A Framework for Supporting Cross-Curricular Integration},
  url = {https://doi.org/10.1145/3724389.3730779},
  year = {2025}
}

@inproceedings{merged355,
  abstract = {CSforALL is an umbrella term for a movement that seeks to bring engaging, culturally-relevant, and meaningful computer science to all students. It includes many avenues for learning – after-school outreach activities, once-a-year ''Hour of Code'' activities as well as formalized instruction in classes, led by an inspiring and well-prepared teacher. There is a perennial need to support pre-service and in-service teachers with curricula and pedagogical content knowledge (PCK) so they can be successful in the classroom, but where to start?Jeannette Wing has long evangelized computational thinking (CT) as a skill ''for everyone, everywhere. Computational thinking will be a reality when it is so integral to human endeavors it disappears as an explicit philosophy''. [2] We have found that CT offers a remarkable foundation of engagement, intuition, and grounding upon which to build higher-level computer science fluency. This panel brings together four seasoned experts who have collectively provided computer science and CT professional development to a vast multitude of teachers and students to share their best practices.},
  address = {New York, NY, USA},
  author = {Garcia, Dan and Garcha, Sonia and Mukund, Madhavan and Shah, Vipul},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
  doi = {10.1145/3617650.3624926},
  isbn = {9798400703744},
  keywords = {CSforALL; K-12 professional development; computational thinking},
  location = {Hyderabad, India},
  numpages = {2},
  pages = {183–184},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Best Practices for Developing Computational Thinking},
  url = {https://doi.org/10.1145/3617650.3624926},
  year = {2023}
}

@inproceedings{merged356,
  abstract = {Computational thinking (CT) skills are essential for navigating daily life, but how best to teach these skills is still being explored. Educational programming games can provide engaging environments to develop CT, yet uncovering student struggles during gameplay remains challenging. This study analyzed 15 undergraduates with varying programming experience playing the CT game, Fox and Field, utilizing gameplay videos, heart rate data, and surveys. Results revealed common struggle points in understanding the character's perspective, degree angles, and debugging, with notable differences between novice and experienced players. Findings suggest support targeting abstraction, pattern recognition, and debugging skills to improve future game design and scaffolding.},
  address = {New York, NY, USA},
  author = {Veng, Sotheara and Zhang, Yifan and Bergwall, Ekaterina and Rutherford, Teomara},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705127},
  isbn = {9798400705328},
  keywords = {computational thinking; educational programming game},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1649–1650},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Analyzing Computational Thinking Gameplay: Identifying Struggles and the Role of Experience},
  url = {https://doi.org/10.1145/3641555.3705127},
  year = {2025}
}

@inproceedings{merged357,
  abstract = {This study examines barriers to inclusion for multilingual students in computer science, highlighting the role of Universal Design for Learning (UDL) strategies in an elementary computational thinking (CT) curriculum. Data from five classrooms including observations, field notes, pre-and-post-CT tests, and student artifacts were analyzed. Findings show that teachers employed various UDL strategies to teach CT, with their frequency positively correlated with higher CT scores. Additionally, this research extends existing UDL frameworks by integrating empirically observed strategies tailored for multilingual students. Ultimately, this study offers a universe of pedagogical strategies, rooted in UDL, aimed at enhancing multilingual student participation in computer science.},
  address = {New York, NY, USA},
  author = {Jacob, Sharin and Montoya, Jonathan and Prado, Yenda and Coenraad, Merijke and Burke, William and Warschauer, Mark},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734766},
  isbn = {9798400706264},
  keywords = {access; computational thinking; computer science; english learner; multilingual; universal design for learning},
  location = {Newark, NJ, USA},
  numpages = {8},
  pages = {309–316},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Designing for All: Universal Design for Learning Meets Computational Thinking for Multilingual Students},
  url = {https://doi.org/10.1145/3704637.3734766},
  year = {2025}
}

@inproceedings{merged358,
  abstract = {In this poster, we highlight computational thinking resources for schools from the PACT team at Maynooth University, Ireland. The resources are derived from tasks from the Bebras international computational thinking initiative. The different modalities work together throughout the school year to provide initial exposure to computational thinking, and include an obstacle course, seasonal tasks, and a workbook.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594203},
  isbn = {9798400701399},
  keywords = {Bebras tasks; K-12; computational thinking; unplugged},
  location = {Turku, Finland},
  numpages = {1},
  pages = {663},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Computational Thinking Resources Inspired by Bebras},
  url = {https://doi.org/10.1145/3587103.3594203},
  year = {2023}
}

@inproceedings{merged359,
  abstract = {In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty.},
  address = {New York, NY, USA},
  articleno = {53},
  author = {Bellino, Alessio},
  booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
  doi = {10.1145/3605390.3610815},
  isbn = {9798400708060},
  keywords = {computational thinking; learning activities; learning platform},
  location = {Torino, Italy},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {CHItaly '23},
  title = {Demo: Teaching computational thinking with Protobject},
  url = {https://doi.org/10.1145/3605390.3610815},
  year = {2023}
}

@inproceedings{merged360,
  abstract = {Computational Thinking (CT) is a key skill set for students in higher education to thrive and adapt to an increasingly technology-driven future and workplace. While research on CT education has gained remarkable momentum in K-12 over the past decade, it has remained under-explored in higher education, leaving higher education teachers with an insufficient overview, knowledge, and support regarding CT education. The proliferation and adoption of artificial intelligence (AI) by educational institutions have demonstrated promising potential to support instructional activities across many disciplines, including CT education. However, a comprehensive overview outlining the various aspects of integrating AI in CT education in higher education is lacking.To mitigate this gap, we conducted this systematic literature review study. The focus of our study is to identify initiatives applying AI in CT education within higher education and to explore various educational aspects of these initiatives, including the benefits and challenges of AI in CT education, instructional strategies employed, CT components covered, and AI techniques and models utilized.This study provides practical and scientific contributions to the CT education community, including an inventory of AI-based initiatives for CT education useful to educators, an overview of various aspects of integrating AI into CT education-such as its benefits and challenges (e.g., AI's potential to reshape CT education versus its potential to diminish students' creativity)-and insights into new and expanded perspectives on CT in light of AI (e.g., the 'decoding' approach alongside the 'coding' approach to CT).},
  address = {New York, NY, USA},
  author = {Rahimi, Ebrahim and Maathuis, Clara},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730775},
  isbn = {9798400715693},
  keywords = {ai; artificial intelligence; computational thinking; ct; higher education; systematic literature review},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {777},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {AI in Computational Thinking Education in Higher Education: A Systematic Literature Review},
  url = {https://doi.org/10.1145/3724389.3730775},
  year = {2025}
}

@inproceedings{merged361,
  abstract = {Computational thinking (CT) skills allow us to achieve goals in a computation-driven world. Activities such as programming both benefit from and help improve CT skills, like abstraction and decomposition. Generative AI (GenAI) could be useful in developing CT skills. However, it could also change how we learn to program and which skills are more important. We aim to understand how GenAI can support the learning of CT skills in the context of computing education.},
  address = {New York, NY, USA},
  author = {Benedetti, Enrico},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3731294},
  isbn = {9798400715693},
  keywords = {bebras tasks; computational thinking; computing education; generative ai; problem-solving},
  location = {Nijmegen, Netherlands},
  numpages = {2},
  pages = {806–807},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Supporting Teaching and Learning Computational Thinking Skills with Generative AI in Computing Education},
  url = {https://doi.org/10.1145/3724389.3731294},
  year = {2025}
}

@inproceedings{merged362,
  abstract = {Computer Programming (CP) is difficult to teach and learn. Many students who enroll in CP courses have difficulty learning to program, as they have deficits in problem-solving skills and are unable to understand abstract programming concepts. Some studies also state that teaching methods are often not the most appropriate as they are not personalized to each student’s needs and do not complement their learning styles. We believe that Computational Thinking (CT) can help alleviate the difficulties in learning to program, especially if it is developed from an early age. However, it is also crucial that teachers use effective methods to help their students develop CT skills. There are several Learning Resources (LR) (digital or paper format) to develop CT skills, however, we argue that Neuroeducation can contribute to improving the effectiveness of these LR in the teaching and learning process. The evidence about the brain’s learning process can be transformed into principles applicable in Education (Neuroeducation). To understand how we could train CT at various levels of education we built an ontology, OntoCnE, that describes the CT and CP domains. OntoCnE is composed of 3 layers that define: how to develop CT; which concepts should be taught at each level of education; and appropriate training materials. This paper aims to present a CT development approach based on this ontology together with Neuroeducation guidelines. The result of our research is the fourth layer for OntoCnE, which defines the Neuroeducation guidelines to characterize the materials. To illustrate our proposal, we will use LR PathIt as a case study. This approach can contribute to innovative and more efficient training of CT.},
  address = {New York, NY, USA},
  author = {Ara\'{u}jo, Cristiana and Henriques, Pedro Rangel and Cerqueira, Jo\~{a}o Jos\'{e}},
  booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
  doi = {10.1145/3702163.3702452},
  isbn = {9798400717819},
  keywords = {Computational Thinking; Computer Programming; Learning Resources; Neuroeducation; OntoCnE; Ontology},
  numpages = {7},
  pages = {435–441},
  publisher = {Association for Computing Machinery},
  series = {ICETC '24},
  title = {OntoCnE &amp; Neuroeducation Guidelines: An approach to developing Computational Thinking},
  url = {https://doi.org/10.1145/3702163.3702452},
  year = {2025}
}

@inproceedings{merged363,
  abstract = {Mathematics and computer science education have an intertwined history as proof undergirds both disciplines. This initial instrumental case study follows 16 different computational science students through a series of 8 linear algebra modules. Thematic analysis was used to highlight that when students learn mathematics through computation, opportunities for conjecture can be fostered alongside computational thinking.},
  address = {New York, NY, USA},
  author = {Castle, Sarah D.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635561},
  isbn = {9798400704246},
  keywords = {computational mathematics; computational thinking; conjecture; proof},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1594–1595},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Embracing Mathematical Conjecture Through Coding and Computational Thinking},
  url = {https://doi.org/10.1145/3626253.3635561},
  year = {2024}
}

@inproceedings{merged364,
  abstract = {Older adults are underrepresented in computing education; broadening participation in computing has remained predominantly at K-12 and college settings. Yet, the population of older adults is increasing across many regions. Strategies for broadening participation in computing education for adult learners have been under-explored. This poster reports our effort towards broadening participation in computing for adult learners by exploring how computational thinking problem-oriented unplugged activities might help to gently introduce older adults into computing education. Being an exploratory study, data was collected using a mixed method approach. This report presents preliminary findings that suggest the potential benefits of computing education for older adults, including social collaboration and demonstration of computational thinking practices that could help them to remain active while aging. Moreover, future research direction in this regard is also discussed.},
  address = {New York, NY, USA},
  author = {Agbo, Friday Joseph and Everetts, Connor},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691084},
  isbn = {9798400706042},
  keywords = {adults education; broadening participation; computational thinking; computing education; lifelong learning},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {295–296},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Towards Computing Education for Lifelong Learners: Exploring Computational Thinking Unplugged Approaches},
  url = {https://doi.org/10.1145/3649409.3691084},
  year = {2024}
}

@inproceedings{merged365,
  abstract = {This study aims to investigate current trends and key elements of computational thinking in problem-solving within mathematics education. A systematic literature review was conducted using the 2013-2013 Scopus database, focusing on the keyword "computational thinking in mathematics education" for document collection. Data analysis was visualized using R-studio software. The thematic analysis revealed two major fields that extensively research computational thinking: education and engineering. Additionally, six research themes emerged from the analysis, including Mathematics, Computer Science, programming, STEM, robotics, and engineering. Key aspects for identifying computational thinking in solving mathematical problems encompass problem identification, decomposition, pattern recognition, abstraction, algorithms, and debugging.},
  address = {New York, NY, USA},
  author = {Susanti, Reni Dwi and Lukito, Agung and Ekawati, Rooselyna},
  booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3678726.3678748},
  isbn = {9798400717611},
  keywords = {aspect; computational thinking; mathematics problem-solving; trend},
  location = {Tokyo, Japan},
  numpages = {7},
  pages = {269–275},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '24},
  title = {Computational Thinking on Mathematical Problem-Solving: Bibliometric Theme and Aspect},
  url = {https://doi.org/10.1145/3678726.3678748},
  year = {2024}
}

@article{merged366,
  abstract = {In recent years, the intersection of music and coding has emerged as a cross-disciplinary approach to engage learners in both musical and computational expression. This article examines the motivations and framing of recent music and coding research through an analysis of 65 articles published between 2004 and 2024. We survey the key findings of this body of work, exploring the extent to which they generalize across diverse populations and educational contexts. We situate these findings within the broader aims of the field of computer science education, critiquing the use of music as a motivational tool in computing education rather than as a topic worthy of exploration in its own right. Methodological limitations are identified, with recommendations for future research to address these gaps. Drawing on theories of onto-epistemic heterogeneity, we call for a more inclusive approach to computing education that integrates sociocultural, historical, and critical perspectives to more effectively support learners from diverse linguistic, cultural, and economic backgrounds.},
  address = {New York, NY, USA},
  author = {Roberts, Cameron L. and Horn, Michael S.},
  doi = {10.1145/3749995},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {STEAM education; computer science education; creativity; music composition},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Epistemic Heterogeneity: A Critical Review of Music+Coding},
  url = {https://doi.org/10.1145/3749995},
  year = {2025}
}

@inproceedings{merged367,
  abstract = {This paper presents an operational skills framework specifically designed for high school computer science teachers. This highly detailed framework enables the differentiation of students' abilities in two key areas: computational thinking skills and Python programming concepts. It is structured along two dimensions: first, six core skills - evaluation, modeling, anticipation, decomposition, generalization, and abstraction - and second, programming concepts related to data and control structures, as utilized in a programming language like Python. We describe the abilities at the intersection of each of these skills and provide for each ability a task model and a set of associated elementary tasks. We demonstrate various applications of this framework for teachers, including articulating learning objectives, selecting and categorizing tasks for students, and evaluating their skills. Finally, we discuss ongoing development efforts and the potential for international adaptation of the framework.},
  address = {New York, NY, USA},
  author = {Hoarau, S\'{e}bastien and Declercq, Christophe and Chane-Lune, Sophie},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729025},
  isbn = {9798400715679},
  keywords = {computational thinking; python; skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {417–423},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {A Proposal for a Programming Skills Framework Integrating Computational Thinking and Python Programming Concepts},
  url = {https://doi.org/10.1145/3724363.3729025},
  year = {2025}
}

@article{merged368,
  abstract = {This experience report describes the author's use of the classic man-cabbage-goat-wolf (MCGW) riddle to teach the main elements of computational thinking in CS1. Instead of teaching each computational thinking element individually, in the process of solving the MCGW problem the students are able to understand the process of abstracting a problem to a representation that can be understood by computer, finding a suitable algorithm to solve the abstracted problem, and decomposing the problem into different logical and more manageable parts. The survey responses from two recent classes clearly validate the effectiveness of this problem-driven approach even for a large class of very diverse backgrounds.},
  address = {Evansville, IN, USA},
  author = {Chang, Rocky K. C.},
  issn = {1937-4771},
  issue_date = {September 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {September},
  number = {4},
  numpages = {10},
  pages = {140–149},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Using Problem-Driven Learning to Teach Computational Thinking in CS1},
  volume = {40},
  year = {2024}
}

@inproceedings{merged369,
  abstract = {Teacher education programs face the challenge of integrating multiple standards into their licensure courses with limited instructional time. To address this, we need innovative approaches to effectively integrate topics like computational thinking (CT) and Artificial Intelligence (AI) literacy, which are increasingly included in teacher standards. We developed a core educational technology course for teachers from diverse fields-deaf education, math, music, early childhood, and more-to introduce these concepts. Using ''scaffolded critique rubrics,'' teachers evaluated tools and resources from platforms like Code.org or PBS Kids, assessing their suitability for their students. The rubrics helped teachers critique computing tools for accessibility issues, differentiate AI biases from automation ethics, and engage deeply with CT concepts. By connecting these topics to their student needs, teachers reflected on how to adapt resources for their classrooms. This report outlines the course development and its impact on teacher engagement},
  address = {New York, NY, USA},
  author = {Moudgalya, Sukanya Kannan and Allen, Taylor},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734778},
  isbn = {9798400706264},
  keywords = {AI literacy; accessibility; computational thinking; ethics; scaffolded critique; teacher education},
  location = {Newark, NJ, USA},
  numpages = {7},
  pages = {27–33},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Scaffolded Critique Rubrics: An Approach to Computational Thinking and AI Literacy in Teacher Education},
  url = {https://doi.org/10.1145/3704637.3734778},
  year = {2025}
}

@inproceedings{merged370,
  abstract = {This study aims to propose a model for the automatic assessment of computational thinking based on the interactive Bebras tasks. The proposed model is based on the categorization of the interactive tasks and clustering of the behavioural data of the students' solution processes. In total 974864 solutions with behavioural data of 29 distinct interactive tasks used in Bebras Challenge were obtained. The interactive tasks were analysed and grouped according to several parameters. Based on this data, a model was proposed for how the solutions behavioural data could be processed and the task solutions could be automatically assessed based on the extracted task parameters and using machine learning techniques. The proposed assessment model analyzes solution patterns and is intended to address the limitations of the true/false assessments.},
  address = {New York, NY, USA},
  author = {Masiulionytundefined-Dagienundefined, Vaida and Jevsikova, Tatjana},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730795},
  isbn = {9798400715693},
  keywords = {behavioural data; computational thinking; ct assessment; interactive bebras tasks; machine learning; system modelling},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {791},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Behavioural Data-Driven Approach for Computational Thinking Automatic Assessment Using Interactive Bebras Challenge Tasks},
  url = {https://doi.org/10.1145/3724389.3730795},
  year = {2025}
}

@inproceedings{merged371,
  abstract = {Computational thinking (CT) is regarded as a fundamental twenty-first century skill and has been implemented in many early childhood education curriculum. Yet, the needs of neurodivergent children have remained largely overlooked in the extensive research and technologies built to foster CT among children. To address this, we investigated how to support neurodiverse (i.e., groups involving neurodivergent and neurotypical) preschoolers aged 3-5 in learning CT concepts. Grounded in interviews with six teachers, we deployed an age-appropriate, programmable robot called KIBO in two preschool classrooms involving 12 neurodivergent and 17 neurotypical children for eight weeks. Using interaction analysis, we illustrate how neurodivergent children found enjoyment in assembling KIBO and learned to code with it while engaging in cooperative and competitive play with neurotypical peers and the adults. Through this, we discuss accessible adaptations needed to enhance CT among neurodivergent preschoolers and ways to reimagine technology-mediated social play for them.},
  address = {New York, NY, USA},
  articleno = {557},
  author = {Das, Maitraye and Tran, Megan and Ong, Amanda Chih-han and Kientz, Julie A. and Feldner, Heather},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713851},
  isbn = {9798400713941},
  keywords = {Computational thinking; inclusive classroom; neurodiverse; preschool},
  numpages = {22},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {Cultivating Computational Thinking and Social Play among Neurodiverse Preschoolers in Inclusive Classrooms},
  url = {https://doi.org/10.1145/3706598.3713851},
  year = {2025}
}

@article{merged372,
  abstract = {This paper presents a systematic literature review of professional development programs in computational thinking (CT). CT has emerged as an essential set of skills that everyone should develop to participate in a global society. However, there were no pre-service or in-service teacher programs to integrate CT into the K–12 classrooms until very recently. Thus, it is important to identify how educators and researchers address the challenges to prepare the next generation of students and what gaps persist in the current literature. We review existing work in this field from two perspectives: First, we analyze the learning outcomes, assessment methods, pedagogical approaches, and pedagogical tools used in the professional development programs in CT. Second, we examine how these programs assess the teachers’ knowledge and skills as outcomes. We used the technological pedagogical and content knowledge (TPACK) framework to characterize existing literature and identify possible gaps in the preparation of pre-service and in-service teachers in CT. Our results suggest that (1) existing evidence is limited to developed countries; (2) many studies are only focusing on teachers understanding the concepts but do not explore how the participants evaluate or create learning activities; (3) no studies look into classroom observations as part of the program, which limits our understanding to how these programs work; and (4) most programs use block-based programming languages as the tool to develop student CT. While block-based programming languages are used for introductory training programs, students are often expected to transfer their learning to more professional programming languages.},
  address = {New York, NY, USA},
  articleno = {27},
  author = {Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
  doi = {10.1145/3648477},
  issue_date = {June 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; literature review; professional development},
  month = {May},
  number = {2},
  numpages = {24},
  publisher = {Association for Computing Machinery},
  title = {Professional Development in Computational Thinking: A Systematic Literature Review},
  url = {https://doi.org/10.1145/3648477},
  volume = {24},
  year = {2024}
}

@article{merged373,
  abstract = {This study presents the development of a student-centric framework for utilizing virtual reality (VR) technologies in education, specifically focusing on enhancing computational thinking skills. While numerous frameworks exist in this domain, they often lack consideration of student preferences, which are integral for fostering learner autonomy. Our proposed framework, with components developed from the constructivist learning theory, emphasises creating knowledge through interaction with the environment, focusing on autonomy, mastery and purpose as drivers of intrinsic outcomes. Through a survey administered to hundred and fifty-seven participants, we sought to identify student-preferred strategies for learning computational thinking skills via VR interventions. Results highlighted key challenges students face when working on computational tasks are related to algorithmic and abstraction thinking. To ease the aforementioned challenges, our findings suggest a preference among students for situated-based learning approaches within VR environments. Additionally, participants recognized the importance of motivational outcomes in improving autonomy and mastery within VR-based learning tasks. Students also preferred tasks that enhanced self-efficacy, contributing to a greater sense of purpose in their learning endeavours. Overall, this investigation sets a foundation for more student-centric, constructivist and intrinsically-based VR frameworks in education.},
  address = {New York, NY, USA},
  articleno = {8},
  author = {Wee, Chyanna and Wang, Lillian Yee Kiaw and Ong, Huey Fang},
  doi = {10.1145/3717838},
  issue_date = {March 2025},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Virtual Reality},
  month = {April},
  number = {1},
  numpages = {36},
  publisher = {Association for Computing Machinery},
  title = {TeachVR: An Immersive Virtual Reality Framework for Computational Thinking Based on Student Preferences},
  url = {https://doi.org/10.1145/3717838},
  volume = {25},
  year = {2025}
}

@inproceedings{merged374,
  abstract = {This doctoral research explores the link between computational thinking (CT) and mental models in talented children, addressing a gap in empirical studies on effects of computer science interventions. The research employs a mixed methods approach, utilizing randomized controlled field studies and interviews with primary school students attending computational thinking courses. Thus, two new computational thinking interventions have been developed and will be evaluated by a pilot, efficacy, and effectiveness study including either a wait-list or treated control group. The test instrument measuring mental models will first be employed in semi-structured interviews with talented children attending these computational thinking courses and then subsequently implemented in randomized controlled field trials to compare the effects of the courses on computational thinking abilities and the development of stable and viable mental models.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Kunz, Katrin},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699578},
  isbn = {9798400710384},
  keywords = {computational thinking; mental model; mixed methods; talent development},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {The Association between Computational Thinking and Mental Models in Talented Children (Doctoral Consortium)},
  url = {https://doi.org/10.1145/3699538.3699578},
  year = {2024}
}

@inproceedings{merged375,
  abstract = {Novice programmers often struggle to develop computational thinking (CT) skills in introductory programming courses. This study investigates the use of Large Language Models (LLMs) to provide scalable, strategy-driven feedback to teach CT. Through think-aloud interviews with 17 students solving code comprehension and writing tasks, we found that LLMs effectively guided decomposition and program development tool usage. Challenges included students seeking direct answers or pasting feedback without considering suggested strategies. We discuss how instructors should integrate LLMs into assessments to support students' learning of CT.},
  address = {New York, NY, USA},
  author = {Hassan, Mohammed and Chen, Yuxuan and Denny, Paul and Zilles, Craig},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701906},
  isbn = {9798400705311},
  keywords = {code comprehension; debuggers; execution; large language models},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {471–477},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {On Teaching Novices Computational Thinking by Utilizing Large Language Models Within Assessments},
  url = {https://doi.org/10.1145/3641554.3701906},
  year = {2025}
}

@inproceedings{merged376,
  abstract = {The Technovation Girls program (TG) is an after-school program, where teams of female school students follow a software ideation process to address one of the UN's Sustainable Development goals. Concretely, they prototype a mobile application which they later pitch to judges. The TG curriculum gives students the tools they need to carry out this challenge, with activities focusing on entrepreneurship, product ideation and pitching, as well as coding. Previous evaluations of this program have focused on student and mentor perceptions and attitudes, collected through surveys, observation, focus groups and interviews. In this paper, we evaluate the effect that the coding part of the TG curriculum has on students' computational thinking skills, specifically in Chile, where the TG curriculum was expanded to a year to account for differences in the school curriculum. Also, in this experience, the TG program was carried out during class hours, and at both single- and mixed-gender vocational high schools. We applied an existing computational thinking test to the 2020 cohort (approx. 1000 students), before and after participating in the program, analyzing the results by school, gender and age. We found a slight improvement in test scores, with a more positive effect in male students.},
  address = {New York, NY, USA},
  author = {Simmonds, Jocelyn and Diaz, Constanza and Estay, Carlos},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588818},
  isbn = {9798400701382},
  keywords = {computational thinking; gender; mobile apps; vocational schools},
  location = {Turku, Finland},
  numpages = {7},
  pages = {68–74},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Introducing Computational Thinking at Vocational High Schools},
  url = {https://doi.org/10.1145/3587102.3588818},
  year = {2023}
}

@inproceedings{merged377,
  abstract = {To engage diverse populations of students who may not self-select into computing courses, a curriculum for a middle school music technology + computer science course that addresses learning standards for both subjects was developed and deployed. Students who engage with the curriculum learn modern music production techniques and computational thinking concepts. This is through a mix of traditional approaches to music technology education (digital audio workstations) and computational approaches via a culturally relevant learning platform that introduces students to coding through music production and remixing. This poster reflects on the last two years of curriculum design and deployment, teacher training, and student and educator engagement and feedback to provide insight into the teaching (and learning) of computational thinking in the music technology classroom.},
  address = {New York, NY, USA},
  author = {McCall, Lauren and Allen, Brittney and Freeman, Jason and Garrett, Stephen and Grossman, Sabrina and Paz, Jed and Edwards, Doug and McKlin, Tom and Lee, Taneisha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635527},
  isbn = {9798400704246},
  keywords = {broadening participation; computing; interest formation; middle school; music; persistence},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1746–1747},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Developing Computational Thinking in Middle School Music Technology Classrooms},
  url = {https://doi.org/10.1145/3626253.3635527},
  year = {2024}
}

@article{merged378,
  abstract = {Computational thinking (CT) stands as a universal problem-solving approach applicable across diverse disciplines, transcending the domain of computer science. It embodies the mental process of structuring a problem to enable a computational solution feasible for both humans and machines. This methodology involves dissecting problems into smaller parts that are easier to understand and solve. This study delineates a meticulously designed series of CT activities within an introductory computer science course and explores their profound impact on student engagement and problem-solving proficiency. Our findings underscore the pivotal role of hands-on CT practice in augmenting students' ability to decompose problems, recognize patterns, and abstract complexities, and employ algorithms effectively. Notably, this infusion of CT not only cultivates theoretical understanding but also bridges the gap between conceptual knowledge and real-world application through the use of computational tools like Python programming. As CT continues to emerge as a cornerstone skill in diverse domains, this research presents compelling evidence advocating for its integration into introductory courses, laying a robust foundation for students to navigate the evolving technological landscape with enhanced problem-solving capabilities.},
  address = {Evansville, IN, USA},
  author = {Benkarroum, Younes and Azhar, Mohammad Q.},
  issn = {1937-4771},
  issue_date = {April 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {8},
  numpages = {15},
  pages = {143–157},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Infusing Computational Thinking into a Computer Science Gateway Course},
  volume = {39},
  year = {2024}
}

@inproceedings{merged379,
  abstract = {The adoption of Computational Thinking (CT) in the educational worldwide curricula is progressively gaining importance from various perspectives. One particular approach, known as unplugged, does not require electronic devices and offers notable benefits as it is replicable and adaptable. Moreover, it serves to dismantle the misconception that computer science is exclusively confined to the digital realm. While both plugged and unplugged methodologies are recognized, further exploration of the unplugged approach is required, especially in Upper Secondary Education, where there is less evidence of its effectiveness. This paper presents a summary of a quasi-experimental study conducted with 11th grade students (approximately 16 years old) in a Spanish public high school. 57 students participated: 28 in the control group and 29 in the experimental group. The conducted research, based on a quantitative and experimental design, aimed to investigate the effectiveness of unplugged activities to improve CT abilities in Upper Secondary Education. The results indicated improved skills in the experimental group, suggesting the potential efficacy of unplugged methods in fostering CT abilities.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Benavides-Escola, Christian Andr\'{e}s and Mart\'{\i}n-Barroso, Estefan\'{\i}a and Zapata-C\'{a}ceres, Mar\'{\i}a and Rom\'{a}n-Gonz\'{a}lez, Marcos},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678110},
  isbn = {9798400710056},
  keywords = {Computational Thinking; Computational Thinking Evaluation; Computer Science Education; Unplugged Activities; Upper Secondary Education},
  location = {Munich, Germany},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Improvement of Computational Thinking skills through unplugged activities in Upper Secondary Education},
  url = {https://doi.org/10.1145/3677619.3678110},
  year = {2024}
}

@article{merged380,
  abstract = {In learning to program and understanding how a programming language controls a computer, learners develop both insights and misconceptions whilst their mental models are gradually refined. It is important that the learner is able to distinguish the different elements and roles of a computer (compiler, interpreter, memory, etc.), which novice programmers may find difficult to comprehend. Forming accurate mental models is one of the potential sources of difficulty inextricably linked to mastering computing concepts and processes, and for learning computer programming.It is common to use some form of representation (e.g., an abstract machine or a Computational Agent (CA)) to support technical or pedagogic explanations. The Notional Machine (NM) is a pedagogical device that entails one or more computational concepts, originally described as an idealised computer operating with the constructs of a particular programming language. It can be used to support specific or general learning goals and will typically have some concrete representation that can be referred to. Computational Thinking (CT), which is defined as a way of thinking that is used for [computational] problem solving, is often presented as using a CA to carry out information processing presented by a solution.In CT, where the typical goal is to produce an algorithm or a computer program, the CA seemingly serves a purpose very similar to an NM. Although it changes through the different stages of development (of the learner and of the curriculum), the roles of CAs and NMs can be seen as versatile tools that connect a learner’s mental model with the conceptual model of a program. In this article, we look at this relationship between CAs and NMs, and indicate how they would look at different stages of learning. We traverse the range of definitions and usages of these concepts, and articulate models that clarify how these are viewed in the literature. This includes exploring the nature of machines and agents, and how historical views of these relate to modern pedagogy for computation. We argue that the CA can be seen as an abstract, simplified variant of an NM that provides a useful perspective to the learner to support them to form robust mental models of NMs more efficiently and effectively. We propose that teaching programming should make use of the idea of a CA at different stages of learning, as a link that connects a learner’s mental model to a full NM.},
  address = {New York, NY, USA},
  articleno = {44},
  author = {Munasinghe, Bhagya and Bell, Tim and Robins, Anthony},
  doi = {10.1145/3627829},
  issue_date = {December 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {CS Unplugged; Computational thinking; K-12 education; computational agent; notional machine},
  month = {December},
  number = {4},
  numpages = {27},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Notional Machines: The Missing Link},
  url = {https://doi.org/10.1145/3627829},
  volume = {23},
  year = {2023}
}

@inproceedings{merged381,
  abstract = {Our research-practice partnership with two school districts in Eastern Kentucky has created a rurally sustaining computational thinking (CT) pathway. In this paper we share our project's operational understanding of the concept of rural sustainability in the context of CT pathways. We posit that an effective CT pathway for rural communities must be firmly rooted in their cultural wealth, funds of knowledge, and socioeconomic priorities. Moreover, it should empower students to draw upon their own innovation heritage, leveraging CT as a tool to identify and address community challenges. Emphasizing the necessity of incorporating rural contexts into discussions on equitable access to computing education, our conceptualization provides insights into how policy and research can contribute to this important goal.},
  address = {New York, NY, USA},
  author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656073},
  isbn = {9798400706264},
  keywords = {computational thinking; computer science; culturally sustaining computing; rural education},
  location = {Atlanta, GA, USA},
  numpages = {6},
  pages = {133–138},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Appalachian Ingenuity and the Need for Rurally Sustaining Computational Thinking Pathways},
  url = {https://doi.org/10.1145/3653666.3656073},
  year = {2024}
}

@inproceedings{merged382,
  abstract = {Cross-stitching, a traditional craft practiced across cultures, holds potential as an educational tool for developing computational thinking (CT) skills in children. While CT is increasingly recognized as essential in modern education, the role of unplugged activities like cross-stitching remains underexplored. This study examines cross-stitching through Kolb’s experiential learning theory and key CT categories, including abstraction, decomposition, algorithmic thinking, evaluation and generalization. Using a qualitative approach, data were collected through interviews with cross-stitch instructors, a preschool teacher, and parents of children engaged in cross-stitching. A priori content analysis identified key aspects: (1) numerical thinking and visual representation ; (2) task breakdown and progressive learning ; (3) sequencing and debugging ; (4) problem solving and learning by doing ; (5) persistence and pattern recognition. The study offers an exemplar for applying an analytical lens to understand the interplay between unplugged activities and computational thinking.},
  address = {New York, NY, USA},
  author = {undefinedlbay, Elif and Boga, Miray and Baykal, G\"{o}k\c{c}e Elif},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  doi = {10.1145/3713043.3731507},
  isbn = {9798400714733},
  keywords = {Kolb’s Experiential Learning Theory; computational thinking; cross-stitch; cultural heritage; unplugged learning},
  numpages = {4},
  pages = {923–926},
  publisher = {Association for Computing Machinery},
  series = {IDC '25},
  title = {Exploring the Role of Cross-stitch Craft in Development of Children’s Computational Thinking: An Unplugged Approach},
  url = {https://doi.org/10.1145/3713043.3731507},
  year = {2025}
}

@inproceedings{merged383,
  abstract = {Within a two-year urban teacher residency program at [University], which focuses on training high school teachers to incorporate computational thinking (CT) into STEM education with an emphasis on equity, this study delves into how these preservice teaching residents (TRs) understood and applied CT in high school STEM settings. Based on our initial thematic content analysis of ten 30-minute artifact-based interviews, teachers' understanding and application of CT could be categorized in two ways: 1) One group of teachers showcased clear, explicit knowledge of CT and actively incorporated it into their instruction; 2) Another group, despite their evident understanding of CT, subtly and implicitly integrated CT into their teaching methods. Our findings suggest that while TRs may differ in whether they explicitly or implicitly integrated CT into their lesson plans, their comments suggest that they have foundational understandings and hold values that suggest they can build upon them. The TRs held definitional understandings of CT and had intentions to design and teach with CT integration, explicitly, or more commonly, implicitly. All of the TRs recognized opportunities in their lesson plans for teaching CT to students, which suggests the potential for more explicit integration in the future. These insights guide our subsequent efforts in teacher training, ensuring educators are equipped to weave CT into STEM lessons. Our findings contribute to a growing body of work that seeks to build strong preservice teaching practices, as they learn to translate CT knowledge into effective teaching practices while working towards higher levels of CT integration.},
  address = {New York, NY, USA},
  author = {Wei, Wei and Ha, Jesse and Gomez, Kimberley and Ghosh, Anuradha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635586},
  isbn = {9798400704246},
  keywords = {computational thinking; equity; preservice teachers; stem; teacher education},
  location = {Portland, OR, USA},
  numpages = {3},
  pages = {1848–1850},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Computational Thinking in STEM Teaching: Preservice Teachers' Conceptualizations and Practices},
  url = {https://doi.org/10.1145/3626253.3635586},
  year = {2024}
}

@inproceedings{merged384,
  abstract = {We describe our experience introducing computational thinking skills at teacher colleges through project-based learning (PBL). We have designed projects that use technology to tackle driving questions derived from the national school curriculum, and at the same time are aligned with learning objectives from pre-service teacher training programs. We have carried out a preliminary validation of these projects with teacher educators, who are now incorporating these experiences into their courses with pre-service teachers.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Simmonds, Jocelyn and Hitschfeld-Kahler, Nancy and Scheihing, Eliana and Henriquez, Valeria and Munoz, Valentin and Casanova, Cecilia and Torrent, Catalina and Contreras, Paulo and Mercado, Karen and Estrada, Daniel and Marquez, Lucia},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678133},
  isbn = {9798400710056},
  keywords = {computational thinking; project-based learning; teacher training},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Designing Project-based learning experiences to integrate Computational Thinking skills at Teacher Colleges},
  url = {https://doi.org/10.1145/3677619.3678133},
  year = {2024}
}

@inproceedings{merged385,
  abstract = {Computational thinking (CT) integration in elementary mathematics engages young learners in the decomposition of complex problems and the construction of iterative approaches to mathematical thinking. To effectively integrate MATH+CT, we need to build teachers' capacity in developing knowledge of CT concepts and creating Math+CT activities. This can positively influence students' mathematical outcomes and their readiness for computer science (CS) in middle and high school. Although various professional development programs aim to build teachers' CT knowledge, limited research exists on how teachers apply this knowledge to classroom-based Math+CT activities. Simultaneously, the rapid improvement of large Language Models (LLMs) creates a catalyst for building an innovative resource space to support elementary teachers' integration of MATH+CT in their existing school or district curriculum. In this poster, we present a tool that leverages LLMs to support teachers in creating Scratch programs designed to explore and deepen students' understanding of mathematical concepts.},
  address = {New York, NY, USA},
  author = {Ylagan, Emma S. and Parekh, Heena P. and Das, Malisha and Dahshan, Mai},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730802},
  isbn = {9798400715693},
  keywords = {computational thinking; curriculum development; early childhood education; large language models; mathematics education; pk-12 cs education; professional development},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {794},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in Elementary Mathematics Instruction and Learning with the Support of Large Language Models},
  url = {https://doi.org/10.1145/3724389.3730802},
  year = {2025}
}

@inproceedings{merged386,
  abstract = {Despite widespread recognition of the importance of computer science (CS) education and an increased focus on computational thinking (CT) instruction in the U.S., there remains a significant shortage of qualified K-12 CS teachers. Preparing preservice teachers to teach CS is essential for ensuring a sustainable future for CS education. This experience report presents a CT/CS module initiative designed to prepare secondary preservice science and math teachers to teach CT/CS through an instructional methods course that integrates instructional practice within an elementary after-school program. This initiative employs the preservice teacher preparation framework that includes the observe-practice-reflect cycle. Within this framework, the preservice teachers began with incorporating unplugged lessons and then transitioned to robotics to teach CT/CS concepts. In this experience report, we detail the design and implementation of this CT/CS module initiative and share findings that revealed the preservice teachers' increased confidence, adaptations in lesson planning, and the challenges faced in teaching CT/CS. These takeaways aim to inspire and inform other teacher educators and practitioners working to prepare the next generation of CS teachers.},
  address = {New York, NY, USA},
  author = {Guo, Meize and Yun, Minji and Israel, Maya},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701899},
  isbn = {9798400705311},
  keywords = {computer science education; integration; k-12; science and math; teacher education},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {416–422},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Introducing Computational Thinking and Computer Science Instruction to Preservice Science and Math Teachers},
  url = {https://doi.org/10.1145/3641554.3701899},
  year = {2025}
}

@inproceedings{merged387,
  abstract = {Maker-based learning and Computational Thinking (CT) have increased in popularity in formal educational settings over the past decade. Particularly, the combination of CT and making seem to hold promise for providing opportunities for students to learn and use computing concepts outside of computing courses. This paper presents findings from a two year study of the integration of computational making into 5th and 6th grade science classrooms. Students participated in computational making interventions in which they programmed Arduino microcontrollers to create scientific models of concepts that aimed to help them engage with the science content while learning CT and making skills. In this paper, we explore the differences between the desired computing learning progressions, students' performance on assessments, and perceptions of computer science to answer: To what extent are middle school students able to learn computing through computing integrated science curriculum? We observed that the programming concepts taught were largely dependent on the needs of the science and making project. Our findings suggest that while students had opportunities to learn and use programming concepts, their performance on assessments was between 15% and 78% correct for conceptual and applied questions and their programming self-efficacy and their perceptions of computer science were lower than desired. We discuss the implications of these findings and the factors that impact the integration of CT in core disciplines and the challenges this presents as we aim to use integration approaches to effectively teach computing outside of computing courses and to broaden participation in computing.},
  address = {New York, NY, USA},
  author = {Magda, David and Gardner-McCune, Christina and Jimenez, Yerika and Chu, Sharon and Kulkarni, Abhishek},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630948},
  isbn = {9798400704239},
  keywords = {computational thinking; k12 education; making},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {778–784},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {The Integration of Computational Thinking and Making in the Classroom},
  url = {https://doi.org/10.1145/3626252.3630948},
  year = {2024}
}

@inproceedings{merged388,
  abstract = {This paper presents a study about the mapping of the EUDability of End-User Development (EUD) tools with the Computational Thinking (CT) skills of users. This mapping provides an approach to evaluate the suitability of a EUD environment in supporting people performing their daily work while managing and exploiting EUD tools. EUDability is a construct encompassing different dimensions that need to be assessed through a careful scrutiny by human-computer interaction experts, while CT skills should mirror those dimensions from the point of view of assessing the level of ability of users in managing problems with a computational thinking attitude. Moving from the healthcare domain, we present two cases: a tool for geriatric professionals supporting them in the preparation of cognitive exercises for elderly patients; and a tool for pharmacists, which empowers them to create robot programs related to the preparation of personalized medications. These cases have been exploited to show how to unify the EUDability assessment with the CT skills assessment. In particular, the application of the EUDability evaluation method for each tool, as well as the administration of the Computational Thinking Scale to domain experts are shown. The results of the two assessments are reported and discussed, together with the limitations of the present study. The results show the goodness of fit of the proposed EUD tools in the healthcare domain.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {Barricelli, Barbara Rita and Fogli, Daniela and Gargioni, Luigi and Locoro, Angela and Valtolina, Stefano},
  booktitle = {Proceedings of the 2024 International Conference on Advanced Visual Interfaces},
  doi = {10.1145/3656650.3656671},
  isbn = {9798400717642},
  keywords = {Computational Thinking; End-User Development; Evaluation; Healthcare},
  location = {Arenzano, Genoa, Italy},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {AVI '24},
  title = {Towards the Unification of Computational Thinking and EUDability: Two Cases from Healthcare},
  url = {https://doi.org/10.1145/3656650.3656671},
  year = {2024}
}

@inproceedings{merged389,
  abstract = {Many K-12 computer science (CS) education programs have started focusing on fostering Computational Thinking (CT) skills as early as kindergarten. While secondary-level CS education has been extensively studied, there is limited research on CT practices in early childhood education (ECE), particularly from the perspective of kindergarten teachers. Understanding how CT is taught by kindergarten teachers and how they rate the CT practices of students in preschool is essential for developing effective new curricula and professional development programs. Therefore, this study evaluates an eight-week CT intervention conducted by kindergarten teachers in naturalistic settings, addressing two critical research gaps: 1) the emphasis on CT practices rather than concepts, and 2) the perspectives of kindergarten teachers on CT activities. 109 preschool students (62 female, 43 male, 4 missing information) with the age of five or six years old from six kindergartens in Baden-W\"{u}rttemberg, Germany participated in the intervention. The overall evaluation using the TechCheck-K and the observation scale for CT unplugged activities (OSCTU) show significant improvements of students CT skills. I conclude by discussing the implications of these findings for the integration of CT in ECE. These insights contribute to bridging research and practice, offering a foundation for sustainable CT education initiatives for young learners.},
  address = {New York, NY, USA},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729057},
  isbn = {9798400715679},
  keywords = {computational thinking; early childhood education; kindergarten},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {653–659},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Evaluating Computational Thinking Practices in Early Childhood Education: Insights from an Intervention Bridging Research and Practice},
  url = {https://doi.org/10.1145/3724363.3729057},
  year = {2025}
}

@inproceedings{merged390,
  abstract = {Computational Thinking skills along with reading, writing, and calculating skills are basic skills for children’s future. Computational Thinking has much in common with problem-solving and creative thinking in general. With regard to Karl Popper "all life is problem-solving" [26], this contribution focuses on the common features of problem-solving and unplugged Computational Thinking, by using a special set of Computational Thinking tasks (INGA-Box). Choosing a mix of deductive and inductive approach, a classification scheme for observing the development of Computational Thinking in kindergarten was developed and evaluated with first datasets.},
  address = {New York, NY, USA},
  articleno = {15},
  author = {Meyer-Baron, Larissa and Stieger, Ramona and Waldvogel, Bettina and Schumann, Nicole and Ruedisueli, Cornelia and Mayr, Franziska},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556867},
  isbn = {9781450398534},
  keywords = {INGA-Box; computational thinking; escape box; kindergarten children; problem-solving; video analysis},
  location = {Morschach, Switzerland},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Observing Computational Thinking Skills of Kindergarten Children},
  url = {https://doi.org/10.1145/3556787.3556867},
  year = {2022}
}

@inproceedings{merged391,
  abstract = {Physical play has often been leveraged to provide children with active and engaging learning experiences. However, coding activities are predominantly sedentary in front of the screen, and the application of physical play in Computer Science education is less explored, e.g., how can we engage in computational thinking (CT) through physical play? In this design-based exploration, we conducted three design activities where young children, college students, and researchers were invited to create physical play projects using the BBC micro:bit and reflect on their experiences. By examining participants’ projects and creating processes, we provide empirical evidence that remixing physical play activities with coding can engage learners in various CT concepts and practices, reveal how CT concepts and practices can be represented in physical play, and highlight implications for designing physical play-mediated computational learning experiences. Ultimately, we encourage more learning experiences to incorporate physical play into computing education for children.},
  address = {New York, NY, USA},
  author = {Yu, Junnan and Hayden, Ronni and Roque, Ricarose},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589365},
  isbn = {9798400701313},
  keywords = {computational thinking; design; learning; physical play},
  location = {Chicago, IL, USA},
  numpages = {13},
  pages = {124–136},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Exploring Computational Thinking with Physical Play through Design},
  url = {https://doi.org/10.1145/3585088.3589365},
  year = {2023}
}

@inproceedings{merged392,
  abstract = {The recent emphasis on computational thinking (CT) integration across disciplines in elementary education nationwide is important to ensure that students are well-equipped to meet the demands of the data-driven workforce. However, this requirement poses major challenges to early elementary teachers who are faced with little direction in terms of how best to implement and assess their young student's application of these new practices.This project engaged researchers, professional development (PD) providers, and K-2 teachers to develop and design a hybrid PD experience to support teachers in a process of learning about and identifying the use of CT skills and strategies in their students' work. The hybrid PD approach utilized a combination of instructional coaching, both face-to-face and through an online Community of Practice. Researchers used a mixed-methods design to measure teachers' change over time in their understanding of how to identify emergent computational thinking in their students' work process. Data collection methods included teacher focus groups and interviews, classroom observations, and teacher pre- and post-surveys.Preliminary findings showed an increase in teachers' understanding of CT and confidence in engaging their students in CT-integrated lessons. Teachers reported that the combination of in-person PD and online Community of Practice helped them prepare to bring CT into their classroom and cited placing more of a distinct focus on teaching students the process of CT rather than just using CT vocabulary. Teachers also referenced success in evaluating their students' application of CT skills and concepts by using informal and formative assessment strategies that focus on evidence of student understanding rather than assessing CT vocabulary.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Ferguson, Camille and Negron, Anthony and Ferrer, Ray and Labonte, Don},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635540},
  isbn = {9798400704246},
  keywords = {computational thinking; early elementary; integration},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1814–1815},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Supporting Teacher Understanding of Computational Thinking Integration into Early Elementary Curricula},
  url = {https://doi.org/10.1145/3626253.3635540},
  year = {2024}
}

@inproceedings{merged393,
  abstract = {The aim of the doctoral thesis is to model an automated computational thinking (CT) assessment system based on solving processes of the interactive tasks. Currently, a literature review and analysis has been carried out, which has shown that among current CT assessment tools most popular ones still remain different types of tests. A study, comparing the two computational thinking assessment tests has been conducted and it has been observed that using only the tests causes data loss as tests do not collect information on the solution processes. An experiment was carried out to collect and analyze action information while solving the task and using this data to extract the possible different solution methods of an interactive task.},
  address = {New York, NY, USA},
  author = {Masiulionyte-Dagiene, Vaida},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594218},
  isbn = {9798400701399},
  keywords = {automatic assessment; computational thinking; computational thinking assessment; learning analytics},
  location = {Turku, Finland},
  numpages = {2},
  pages = {603–604},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Modeling of the System for Computational Thinking Automatic Assessment},
  url = {https://doi.org/10.1145/3587103.3594218},
  year = {2023}
}

@inproceedings{merged394,
  abstract = {In this study we examine the use of CT skills when solving Bebras tasks. Bebras tasks are logical puzzles created to introduce, practice and sometimes assess Computational Thinking (CT) skills. We use the think-aloud method to investigate the problem-solving process of participants with advanced CT skills. The contribution of this study is three-fold. First, the study examines how the use of CT skills manifests itself in the problem-solving process. By examining the thought process of participants, our study provides a detailed operationalization of CT skill definitions that could be used in subsequent studies to investigate the use of the skills. Secondly, the study provides a validation of the classification of a selection of Bebras tasks. Our results show that the skills assigned to these Bebras are indeed the skills most often used by the problem solvers while solving the tasks. Finally, even though the skills are used, the results also show that this does not always translate into answering these puzzles correctly. Based on the results we therefore conclude that, without looking at the problem-solving process, the tasks may not be suitable for the assessment of CT skills.},
  address = {New York, NY, USA},
  articleno = {18},
  author = {de Jong, Imke and Sichterman, Bo and Jeuring, Johan},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699543},
  isbn = {9798400710384},
  keywords = {Bebras tasks; Computational Thinking; think-aloud},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {Use of Computational Thinking Skills when solving Bebras Tasks: a Think-aloud Study},
  url = {https://doi.org/10.1145/3699538.3699543},
  year = {2024}
}

@article{merged395,
  abstract = {Professionals practice a form of computational thinking that is significantly more advanced than popular descriptions suggest.},
  address = {New York, NY, USA},
  author = {Denning, Peter J. and Tedre, Matti},
  doi = {10.1145/3491268},
  issn = {0001-0782},
  issue_date = {December 2021},
  journal = {Commun. ACM},
  month = {November},
  number = {12},
  numpages = {4},
  pages = {30–33},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking for professionals},
  url = {https://doi.org/10.1145/3491268},
  volume = {64},
  year = {2021}
}

@inproceedings{merged396,
  abstract = {CADRE (Catalyst for Actively Designing and Researching Equity) is a Researcher-Practitioner Partnership (RPP) that empowers in-service K-12 educators to learn and leverage Computational Thinking (CT) to design for equity in their classrooms, schools, and districts. We cast equity gaps as bugs in education and focus on helping educators debug the system with CT-based tools, methods, and strategies such as user-centered design, system abstraction, and iteration. In this paper, we first describe how educators were taught CT and provide an example of how they applied these skills in practice. We then highlight the results of the qualitative case study of 34 educators where we found that CT helped CADRE participants gain a better understanding of the equity gaps their students faced and improve their instructional practices within their locus of control. Implications for future research are also discussed.},
  address = {New York, NY, USA},
  author = {Yamaguchi, Ryoko and Eaton, Cyntrica},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630825},
  isbn = {9798400704239},
  keywords = {computational thinking; csforall; gender and diversity; high school teacher development; k-12 instruction; learning environment; professional practice},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {1463–1469},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Designing for Equity in Education Via Computational Thinking: A Case Study},
  url = {https://doi.org/10.1145/3626252.3630825},
  year = {2024}
}

@inproceedings{merged397,
  abstract = {The computer science education research community has thought deeply about how students learn computational thinking (CT) as it relates to other domains of computer science (CS; e.g. programming) and core content areas (STEM, humanities), but less work has examined the role of CT in pathways to computer science for K-5 teachers. This panel examines the experiences of practitioners - educators, administrators, and curriculum designers--who have both experienced and supported others in incorporating CT in elementary school settings as a pathway to or component of computer science education. All panelists have worked with teachers not previously trained to teach CS and have encountered the many opportunities and difficulties of bringing CS to in-service teachers. They will reflect on the multiple ways educators grapple with CT: as an entry point to computer science, as a way to enrich core disciplines, and as a way to support equitable practice - for example, several of the panelists have experiences leveraging CT and other domains of CS to support the expression and development of emergent bilingual students. The panel will explore ways in which CT and its associated language and strategies for problem solving may provide a particularly helpful onramp to CS generally, including integration with other disciplines and with language about academic skills more generally.},
  address = {New York, NY, USA},
  author = {Levitt, Diane and Garfus-Knowles, Dylana and Khuu, Wyman and Siddappa, Sara},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3631658},
  isbn = {9798400704246},
  keywords = {K-12 computational thinking; K-12 cs education; K-12 curriculum; K-12 teacher professional development},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1537–1538},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Using Computational Thinking to Demystify Computer Science for Elementary Teachers},
  url = {https://doi.org/10.1145/3626253.3631658},
  year = {2024}
}

@inproceedings{merged398,
  abstract = {We have developed a quantitative tool for assessing senior high school students' computational thinking skills and administered it in the Taipei metropolitan area of Taiwan. Our CT test is language/tool/knowledge-independent and focuses on four key CT concepts: decomposition, data representation, algorithms, and pattern generalization. Our paper outlines the development process of the CT test, including its constructs, reliability, and validity, and discusses its educational implications for computing courses. This CT test provides a valuable resource for computing teachers who wish to assess their students' CT abilities and tailor their teaching methods accordingly.},
  address = {New York, NY, USA},
  author = {Hu, Chiu-Fan and Wu, Cheng-Chih},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594151},
  isbn = {9798400701399},
  keywords = {assessment; computational thinking; measurement},
  location = {Turku, Finland},
  numpages = {2},
  pages = {587–588},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {A Computational Thinking Test for Senior High School Students},
  url = {https://doi.org/10.1145/3587103.3594151},
  year = {2023}
}

@inproceedings{merged399,
  abstract = {As states move to adopt computer science (CS) and computational thinking (CT) standards to prepare students for an increasingly technological world, school districts are integrating curriculum with CT skills and practices, building the capacity of their teachers and administrators through professional development, and increasing the knowledge infrastructure to support CT opportunities for students. One challenge that districts face when scaling new initiatives occurs when the work becomes siloed to one ''champion'' teacher or a singular motivated department. This poster presents Broward County Public Schools' use of an interactive infographic to build awareness of their CT initiative, including considerations for utilizing an infographic tool and the design decisions made to engage various stakeholders. The poster provides examples of methods to build knowledge of an emerging initiative and adds to the growing body of work in supporting districts as they scale their CS/CT initiatives.},
  address = {New York, NY, USA},
  author = {Rangel, Alessandra and Coenraad, Merijke and Ruiz, Pati and Dunbar, Kyle and Milenkovic, Lisa and Arriola, Sheryl and Marousky, Annmargareth},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635560},
  isbn = {9798400704246},
  keywords = {computational thinking; computer science; design; k-12 education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1788–1789},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Building Awareness of Computational Thinking Pathways across a Large School District},
  url = {https://doi.org/10.1145/3626253.3635560},
  year = {2024}
}

@inproceedings{merged400,
  abstract = {This article presents research conducted within the School of Computational Thinking and Artificial Intelligence (EPCIA in its original form in Spanish) project, an initiative developed by the Spanish Ministry of Education and Vocational Training during the 2020-21 academic year. The study investigated whether it is possible to contribute to the development of students’ computational thinking skills and artificial intelligence (AI) literacy through programming activities using the Scratch language and the Machine Learning for Kids platform. The study involved 133 teachers and more than 2,000 students, from 4th to 8th grade, with representation from 17 of the 19 Spanish regions. Students took a quantitative test on computational thinking and another on AI before and after the intervention, and teachers and students also took a questionnaire at the end of it. The results showed that: i) quantitative tests can be used to reliably measure, in terms of internal consistency, the level of development of computational thinking and AI literacy in the Spanish school population of these ages; ii) it is possible to develop students’ computational thinking skills and raise their level of AI literacy through programming activities; iii) the intervention contributed to demystifying the main prejudices regarding AI; iv) a gender gap was found in relation to previous knowledge and experiences with these topics. Overall, the study concluded that introducing the foundations of AI in primary and secondary education in Spain is appropriate, feasible, and relevant.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Moreno-Le\'{o}n, Jesus and Vasco-Gonz\'{a}lez, Margarita and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678111},
  isbn = {9798400710056},
  keywords = {K-12; artificial intelligence literacy; computational thinking},
  location = {Munich, Germany},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Investigating the Impact of Programming Activities on Computational Thinking and AI Literacy in Spanish Schools},
  url = {https://doi.org/10.1145/3677619.3678111},
  year = {2024}
}

@inbook{merged401,
  abstract = {This paper describes the development and implementation of a yearlong integrated English Language Arts (ELA) and computational thinking (CT) curriculum that has been adapted to meet the needs of multilingual students. The integration of computational thinking into K-12 literacy instruction has only been examined in a handful of studies, and little is known about how such integration supports the development of CT for multilingual students. We conducted a qualitative case study on curricular implementation in a general education classroom with large numbers of students designated as English learners. Results from detailed field notes revealed that the strategic application of instructional practices was implemented in the service of building on students' existing literacy skills to teach CT concepts and dispositions. The CT and literacy framework put forth in this study can be used as an analytic framework to highlight how instructional strategies mobilize the existing literacy and CT resources of linguistically diverse students. Based on our findings, we discuss recommendations for future integrated ELA-CT curricula.},
  address = {New York, NY, USA},
  author = {Jacob, Sharin Rawhiya and Parker, Miranda C. and Warschauer, Mark},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {9},
  pages = {55–63},
  publisher = {Association for Computing Machinery},
  title = {Integration of computational thinking into English language arts},
  url = {https://doi.org/10.1145/3507951.3519288},
  year = {2022}
}

@inproceedings{merged402,
  abstract = {Spatial skills frequently correlate with many measures of computing success, and indeed with wider STEM achievement. Spatial skills training has also been shown to improve computing outcomes at multiple institutions of higher education with first-year university students. However, there is a good chance that even though we can improve the spatial skills of undergraduate students to help them succeed at computing, many students will have already opted-out of computing learning pathways in school due to poor spatial skills. Using a spatialised maths curriculum, we intend to improve the spatial skills of primary school children aged 8–9 and investigate the effect on their computational thinking. With this poster, we would like to share our work so that others can consider deploying similar programmes, and to hear feedback from the CS education community on what other aspects and factors we should consider.},
  address = {New York, NY, USA},
  articleno = {33},
  author = {Parkinson, Jack},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609780},
  isbn = {9798400708510},
  keywords = {computational thinking; spatial skills},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Improving Computational Thinking with Spatial Skills Development in Primary School},
  url = {https://doi.org/10.1145/3605468.3609780},
  year = {2023}
}

@inproceedings{merged403,
  abstract = {Programming integration into K-12 curricula has become increasingly important in the rapidly evolving educational landscape. Recognizing the need to develop computational thinking among young learners, this study investigated the impact of the flipped classroom approach on computational thinking in K-12 programming courses in Macao, focusing on primary school students' experiences with block-based programmable hardware. Employing a mixed methods research design, it combined quantitative and qualitative analyses to examine how flipped classroom activities—centered around student engagement with material through e-books, videos, and interactive classroom tasks—affected students' understanding and application of computational concepts, practices, and perspectives. Quantitative data were collected using the Programming Computational Thinking Scale (PCTS), and qualitative insights were gathered through semi-structured interviews. The results indicated significant improvements in students' computational concepts and practices, attributed to the advantages of self-study and a stratified approach to task complexity. However, advancements in computational perspectives were less pronounced, highlighting the need for more opportunities for students to refine their presentation skills. The study concluded that the flipped classroom approach, especially with tools like mBlock and Codey-Rocky, effectively nurtured computational thinking in primary school programming courses. It underscored the importance of innovative teaching methods in enhancing students' ability to apply programming concepts in problem-solving and suggested areas for further improvement in educational practices.},
  address = {New York, NY, USA},
  author = {Choi, Wan Chong and Chang, Chi In},
  booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3678726.3678729},
  isbn = {9798400717611},
  keywords = {Codey-Rocky; Computational Thinking; Flipped Classroom; K-12 Block-based Programming Course; Primary School Programming Education},
  location = {Tokyo, Japan},
  numpages = {8},
  pages = {106–113},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '24},
  title = {The Students' Perspective on Computational Thinking through Flipped Classroom in K-12 Programming Course},
  url = {https://doi.org/10.1145/3678726.3678729},
  year = {2024}
}

@inproceedings{merged404,
  abstract = {Computational thinking (CT) is increasingly recognized as a foundational skill for all learners, yet in many cases, such as in non-computer science (non-CS) classrooms, teachers struggle in meaningful integration of CT. Literature suggests that targeted professional development helps teachers embed CT in their classrooms and efforts such as co-design support transformative integration of teachers’ pedagogical skills. However, these efforts are often isolated. This research proposes an integrated design thinking-based approach that centers student needs and leverages teachers’ pedagogical expertise. Using a design-based research and mixed methods, I investigate how teachers identify student challenges, co-develop CT pedagogies and scaffolds, and evaluate the effectiveness through classroom implementation.},
  address = {New York, NY, USA},
  author = {Sabanwar, Vivek},
  booktitle = {Proceedings of the 2025 ACM Conference on International Computing Education Research V.2},
  doi = {10.1145/3702653.3744310},
  isbn = {9798400713415},
  keywords = {Codesign; Design Thinking; K-12; Teacher Professional Development},
  numpages = {2},
  pages = {38–39},
  publisher = {Association for Computing Machinery},
  series = {ICER '25},
  title = {Co-Designing With Teachers: A Student-Centered Approach to Integrating Computational Thinking in Non-CS K–12 Classrooms},
  url = {https://doi.org/10.1145/3702653.3744310},
  year = {2025}
}

@article{merged405,
  abstract = {To provide practice and assessment of computational thinking, we need specific problems students can solve. There are many such problems, but they are hard to find. Learning environments and assessments often use only specific types of problems and thus do not cover computational thinking in its whole scope. We provide an extensive catalog of well-structured computational thinking problem sets together with a systematic encoding of their features. Based on this encoding, we propose a four-level taxonomy that provides an organization of a wide variety of problems. The catalog, taxonomy, and problem features are useful for content authors, designers of learning environments, and researchers studying computational thinking.},
  address = {New York, NY, USA},
  articleno = {22},
  author = {Pel\'{a}nek, Radek and Effenberger, Tom\'{a}\v{s}},
  doi = {10.1145/3578269},
  issue_date = {June 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Skills; taxonomy; well-structured problems},
  month = {March},
  number = {2},
  numpages = {29},
  publisher = {Association for Computing Machinery},
  title = {The Landscape of Computational Thinking Problems for Practice and Assessment},
  url = {https://doi.org/10.1145/3578269},
  volume = {23},
  year = {2023}
}

@inproceedings{merged406,
  abstract = {In an age of rapid technological development, primary schools now teach programming to young students, focusing on developing their computational thinking, problem-solving, and ability to use computers to create solutions. However, fostering computational thinking skills in younger students was a challenging task. The serious game CodeCombat has become a potential resource for instructing young students in primary schools on basic programming principles using Python.This study delved into the role of the serious game CodeCombat in advancing computational thinking competencies among primary school students undertaking Python in Macao. Using a quasi-experimental pretest-posttest approach, we examined 49 grade-one students over a two-week Python programming course facilitated by CodeCombat. The Computational Thinking Scale (CTS), encompassing Creativity, Cooperativity, Algorithmic Thinking, Problem Solving, and Critical Thinking, was employed to measure shifts in computational thinking before and after the teaching experiment.Data analysis through paired-sample t-test highlighted notable progress in computational thinking skills, with marked improvements specifically in Creativity, Critical Thinking, Algorithmic Thinking, and Problem Solving. However, Cooperativity did not exhibit the same upward trend, implying that CodeCombat's impact was more pronounced on solitary cognitive capabilities than collaborative skills. Moreover, the correlation between different dimensions indicated that these computational thinking skills were mutually reinforcing, suggesting that enhancing one might contribute to the development of others. The findings endorsed that game-based learning is effective in programming education and recommended integrating CodeCombat to improve computational thinking in learning Python programming in primary school.},
  address = {New York, NY, USA},
  author = {Choi, Wan Chong and Choi, Iek Chong},
  booktitle = {Proceedings of the 2024 5th International Conference on Education Development and Studies},
  doi = {10.1145/3669947.3669951},
  isbn = {9798400718083},
  keywords = {CodeCombat; Computational thinking; Gamification of learning; K-12 Programming education; Python programming; Serious game},
  location = {Cambridge, United Kingdom},
  numpages = {7},
  pages = {26–32},
  publisher = {Association for Computing Machinery},
  series = {ICEDS '24},
  title = {The Influence of CodeCombat on Computational Thinking in Python Programming Learning at Primary School},
  url = {https://doi.org/10.1145/3669947.3669951},
  year = {2024}
}

@inproceedings{merged407,
  abstract = {Computational thinking (CT) provides opportunities for students to build the skills they need for everyday life, future academic success, and careers. Increasingly, districts are integrating CT into K-12 disciplinary subjects and a growing number of teachers need the knowledge to lead CT learning opportunities. CT is still nascent in teacher education, however, and not all teachers are receiving professional learning on the job. Teachers need effective methods of support to ensure they are providing students with high quality CT learning opportunities. We present methods of support for integrating CT into schools. The poster highlights four methods to support teacher professional learning: allowing ample time for collaboration, a school-based advocate championing CT integration, posting and promoting curated resources, and a foundational person anchoring the work as the initiative expands. In doing so, this poster provides interrelated examples of teacher support and highlights methods of continuous support for teachers integrating CT across content areas.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Rangel, Alessandra and Burke, Quinn and Mills, Kelly and Ruiz, Pati and Dunbar, Kyle},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635498},
  isbn = {9798400704246},
  keywords = {computational thinking; k-12; professional learning; teacher support},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1608–1609},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Champion, Collaborator, Curator, Anchor: Supporting K-12 Teachers to Integrate Computational Thinking},
  url = {https://doi.org/10.1145/3626253.3635498},
  year = {2024}
}

@inproceedings{merged408,
  abstract = {In recent years, there has been a growing awareness of the need for computer science education opportunities and particularly for engaging students in computational thinking ideas and practices to help them understand how computing influences our world. At its core, computational thinking (CT) is seen as understanding how computational practices (such as, abstraction) and tools (such as modeling software) can be used to explore phenomena, solve problems, and influence our lives and society. The push for CT integration has called for preparing future educators to learn CT practices and tools through stand-alone courses and within the context of disciplinary pedagogy/methods courses. However, there are few instruments that measure pre-service teachers' attitudes towards computational thinking and its role in formal schooling. In this study, we developed and validated an instrument to measure pre-service teachers' attitudes towards CT, its role in students' lives, and their own self-efficacy to incorporate CT into their teaching. We report results from a principal components factor analysis on survey responses from 260 pre-service teachers to identify patterns and reduce the number of dimensions of comparison in the analysis. We discuss how pre-service teacher conceptions have implications for preparing future teachers to integrate computational thinking into their instruction.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Caeli, Elisa Nadire and Ocak, Ceren and Macann, Victoria},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524783},
  isbn = {9781450392013},
  keywords = {computational thinking; pre-service teachers; teacher education},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {547–553},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Teacher Education and Computational Thinking: Measuring Pre-service Teacher Conceptions and Attitudes},
  url = {https://doi.org/10.1145/3502718.3524783},
  year = {2022}
}

@inproceedings{merged409,
  abstract = {Based on work in an ongoing research-practice partnership, we share teacher-designed project-based learning (PBL) units that sought to integrate Appalachian heritage and CT. We offer reflections on the lessons learned in the design and implementation of PBL units in addition to making recommendations for future PBL units that integrate CT and cultural heritage. This work has implications for improving computing education in rural contexts and in PBL settings.},
  address = {New York, NY, USA},
  author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705203},
  isbn = {9798400705328},
  keywords = {computational thinking; culturally sustaining; k-12; project-based learning; rural},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1443–1444},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Integrating Computational Thinking, Project-Based Learning, and Cultural Heritage for Rural Middle School Students},
  url = {https://doi.org/10.1145/3641555.3705203},
  year = {2025}
}

@inproceedings{merged410,
  abstract = {Computational thinking has become one of the key literacies necessary for talents in the digital and intelligent era of the 21st century. In the current educational environment, the content of the curriculum that is detached from reality and the fragmented knowledge have brought great difficulties to the cultivation of students' computational thinking ability. Contextual teaching can connect knowledge with reality. Through the e-learning platform combined with real-life scenarios to build a specific real situation, which can drive students to carry out rich thinking activities. Therefore, this study designed a blended contextual teaching model for the development of computational thinking based on contextual learning theory and constructivist learning theory. It was applied to the teaching of high school information technology courses, and the effectiveness of the model was verified by investigating and analyzing whether there were changes in students' academic performance and computational thinking ability under the blended contextual teaching model through the questionnaire survey method and the experimental research method. The results of the study show that the application of the model can effectively improve students' academic performance and computational thinking ability, which provides an effective reference and reference for future educational teaching practice.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Shao, Yanru and Liu, Yuqi and Dong, Jiamin and Li, Qiuhong and Chen, Yipan},
  booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3670013.3670027},
  isbn = {9798400717062},
  keywords = {Blended learning; Computational thinking; Information technology; Situated teaching model},
  location = {Fukuoka-shi, Japan},
  numpages = {8},
  pages = {99–106},
  publisher = {Association for Computing Machinery},
  series = {IC4E '24},
  title = {The Construction and Application of A Blended Contextual Teaching Model for Computational Thinking Development},
  url = {https://doi.org/10.1145/3670013.3670027},
  year = {2024}
}

@inproceedings{merged411,
  abstract = {Computational thinking (CT) is essential for the 21st century learner. Yet, assessing CT remains challenging. This is particularly challenging in constructionist learning, where individual idiosyncrasies may clash with one-size-fits-all assessments. Tools like Dr. Scratch offer CT metrics that show promise for effective and scalable CT assessments, particularly in constructionist game-based learning (GBL). Prior work has advanced the design of automated CT metrics but hardly included teachers in the process. We extend Dr. Scratch to improve automated CT assessments for GBL and put teachers in the loop to assess its novel features. Specifically, we interviewed seven middle school teachers employing GBL in STEM curricula and asked them to provide feedback on the newly designed CT metrics. Teachers view the new CT metrics positively, underscoring their potential for adaptive CT assessments despite hindrances. We advance automated CT assessments via teacher evaluation toward design-sensitive CT metrics and CT for all.},
  address = {New York, NY, USA},
  articleno = {124},
  author = {Troiano, Giovanni M and Cassidy, Michael and Morales, Daniel Escobar and Pons, Guillermo and Abdollahi, Amir and Robles, Gregorio and Puttick, Gillian and Harteveld, Casper},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713368},
  isbn = {9798400713941},
  keywords = {Computational thinking; STEM; assessment; automated metrics; computer science education},
  numpages = {23},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {CT4ALL: Towards Putting Teachers in the Loop to Advance Automated Computational Thinking Metric Assessments in Game-Based Learning},
  url = {https://doi.org/10.1145/3706598.3713368},
  year = {2025}
}

@inbook{merged412,
  abstract = {The transformation of urban environments and the rising presence of technology in daily life has shed some light over the importance of integrating computational thinking (CT) into early childhood education. This research explores the use of a tangible technology toolkit (TTT) to introduce CT in children aged 4 to 9. The project has been developed following a child-centered approach, thus putting at the heart of it principles of active learning and playfulness. A pilot study was conducted, comparing traditional methods and the use of the TTT to approach the theme of intelligent cities, which revealed improvements of CT skills within groups but no significant differences when comparing both methods. The TTT addresses concerns of accessibility, cost and the need for teacher training that were highlighted in previous studies. Future work will include an increase in the number of participants, a refinement of methodologies and improvement of the TTT.},
  address = {New York, NY, USA},
  author = {Abreu, Sara Patr\'{\i}cia},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  isbn = {9798400714733},
  numpages = {5},
  pages = {1010–1014},
  publisher = {Association for Computing Machinery},
  title = {Empowering children for the cities of the future: integrating computational thinking in early childhood education through tangible technology toolkits},
  url = {https://doi.org/10.1145/3713043.3731523},
  year = {2025}
}

@inproceedings{merged413,
  address = {New York, NY, USA},
  articleno = {33},
  author = {Paludo, Giulia and Montresor, Alberto},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678129},
  isbn = {9798400710056},
  keywords = {Computational Thinking Education},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Collaborative Approaches for Effective and Sustainable Integration of Computational Thinking Educational Strategies},
  url = {https://doi.org/10.1145/3677619.3678129},
  year = {2024}
}

@inproceedings{merged414,
  abstract = {This study investigates the Computational Thinking skill differences among novice programmers in relation to gender. Block-based visual programming languages such as Scratch particularly benefit K-12 programmers because they learn how to code intuitively. Our study analyzed 124 (62 males, 62 females) Scratch projects on the Scratch website, categorized projects on the basis of each user's gender and project type, and compared their Computational Thinking scores. The results of this study suggest that project types preferred by males require more programming construct reflected in the Computational Thinking score than that of females. Because gender differences appear by project type, project type presumably influences the gender gap in scores.},
  address = {New York, NY, USA},
  author = {Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576290},
  isbn = {9781450394338},
  keywords = {computational thinking; gender; k-12 education; scratch},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1344},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Gender Characteristics and Computational Thinking in Scratch},
  url = {https://doi.org/10.1145/3545947.3576290},
  year = {2023}
}

@article{merged415,
  address = {New York, NY, USA},
  author = {Pires, Ana Cristina and Rocha, Filipa and Guerreiro, Tiago and Nicolau, Hugo},
  doi = {10.1145/3665992},
  issn = {1072-5520},
  issue_date = {July - August 2024},
  journal = {Interactions},
  month = {June},
  number = {4},
  numpages = {6},
  pages = {32–37},
  publisher = {Association for Computing Machinery},
  title = {Inclusive Computational Thinking in Public Schools: A Case Study from Lisbon},
  url = {https://doi.org/10.1145/3665992},
  volume = {31},
  year = {2024}
}

@inproceedings{merged416,
  abstract = {We propose a motor control-based characterization of how computational thinking (CT) can emerge from embodied performance. The account is based on children's activity during a tangible coding task, and a mechanism proposed by cognitive and motor neuroscience studies. For the task, the child used navigational symbols (forward, backward, rotate right, rotate left) to program the movements of a tangible robot on a 2-D grid. We propose that the development of CT through this task can be understood in terms of “tool incorporation into the body schema.” To illustrate the proposed mechanism, we use video data from one of three teaching sessions, where a group of four kindergartners learned to code using Cubetto (a tactile screen-free grid-based robotic toy). We argue that learning the task (i.e. being able to control Cubetto to perform goal-oriented movements) is challenging because the CT task requires learners to bridge three distinct discontinuities (spatial, temporal, and representational), to achieve control over the robot. We hypothesize that learners and facilitators are likely to engage in moves (both epistemic and pedagogical) that help bridge these gaps, and thus support the incorporation of the robot and its controller into the body schema. We characterize two such moves and explicate how they might support the incorporation process. The study is part of a larger program of design-based research aimed at helping young children develop CT.},
  address = {New York, NY, USA},
  author = {Sinha, Ravi and Swanson, Hillary and Clarke-Midura, Jody and Shumway, Jessica F. and Lee, Victor R. and Chandrasekharan, Sanjay},
  booktitle = {Proceedings of the 2023 Symposium on Learning, Design and Technology},
  doi = {10.1145/3594781.3594794},
  isbn = {9798400707360},
  keywords = {Computational thinking; Early childhood education; Embodied learning; Tool incorporation},
  location = {Evanston, IL, USA},
  numpages = {10},
  pages = {1–10},
  publisher = {Association for Computing Machinery},
  series = {LDT '23},
  title = {From Embodied Doing to Computational Thinking in Kindergarten: A Punctuated Motor Control Model},
  url = {https://doi.org/10.1145/3594781.3594794},
  year = {2023}
}

@inproceedings{merged417,
  abstract = {This paper investigates whether aspects of structured dance and choreography may improve cognitive skills related to computational thinking. It also explores the relationship between performance on computational thinking tasks and motivation. Twenty participants,aged between 7 and 9 years old, undertook the Beginners Computational Thinking Test (BCTt) as a pre-test, took part in three dance related workshops then completed the BCTt as post-test and responded to an adapted version of the Intrinsic Motivation Inventory (IMI). Student performance on the BCTt improved significantly from pre-test to post-test for both boys and girls and seems generalised across the computational categories measured by BCTt. The study did not show a correlation between performance and motivation in girls but suggests that there may be some correlation between improvement in score and reported enjoyment in boys.},
  address = {New York, NY, USA},
  articleno = {40},
  author = {Fairlie, Fiona},
  booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3631802.3631811},
  isbn = {9798400716539},
  keywords = {computational thinking; computer education; dance},
  location = {Koli, Finland},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '23},
  title = {Encouraging the Development of Computational Thinking Skills through Structured Dance Activities (Discussion Paper)},
  url = {https://doi.org/10.1145/3631802.3631811},
  year = {2024}
}

@inproceedings{merged418,
  abstract = {Using a design thinking approach, we surveyed and interviewed grade 6-9 teachers on their experience with Scratch and Parsons Programming Puzzles (PPP). The results lead us to extend Scratch with gameful PPP functionality focused on individual computational thinking (CT) concepts. In this paper, we vary elements of PPPs presented to 624 adult learners to identify those yielding manageable cognitive load (CL), and maximum CT motivation and learning efficiency, for a general populace. Findings indicate PPPs with feedback and without distractors limit CL, those with feedback produce highest CT motivation, and those with an isolated block palette and without distractors produce highest CT learning efficiency. We analyze study data across nine conditions to offer insight to those developing PPP systems with the aim to advance equitable CT education for all.},
  address = {New York, NY, USA},
  author = {Bender, Jeff and Zhao, Bingpu and Dziena, Alex and Kaiser, Gail},
  booktitle = {Proceedings of the 24th Australasian Computing Education Conference},
  doi = {10.1145/3511861.3511869},
  isbn = {9781450396431},
  keywords = {Cognitive Load; Computational Thinking; Learning Efficiency; Motivation; Parsons Programming Puzzles; Scratch},
  location = {Virtual Event, Australia},
  numpages = {10},
  pages = {66–75},
  publisher = {Association for Computing Machinery},
  series = {ACE '22},
  title = {Learning Computational Thinking Efficiently: How Parsons Programming Puzzles within Scratch Might Help},
  url = {https://doi.org/10.1145/3511861.3511869},
  year = {2022}
}

@inproceedings{merged419,
  abstract = {Cultivating students' computational thinking skills is one of the important teaching goals of college computer courses, and constructing a scientific and effective structural framework for computational thinking is the basis for implementing computational thinking training. To this end, based on Sternberg's intelligence education theory, combined with software development and programming knowledge, a structural framework of computational thinking was constructed. Subsequently, a project-based teaching activity based on this framework to cultivate students' computational thinking skills was carried out in the college computer programming course "Software Development Technology". By measuring students' computational thinking skills before and after the activity, it was verified that the project-based teaching model based on the proposed framework had a significant effect on improving students' computational thinking skills. By constructing a structural framework of computational thinking that integrates the characteristics of disciplines, and taking programming teaching as a carrier to implement the cultivation of computational thinking skills, it can provide a new way for computer educators to cultivate students' computational thinking skills.},
  address = {New York, NY, USA},
  author = {Zhang, Wei and Song, Lingling and Huang, Xujun and Wang, Yi},
  booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
  doi = {10.1145/3629296.3629361},
  isbn = {9798400709111},
  keywords = {computational thinking; intelligence theories; project-based teaching; software development technology},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {404–408},
  publisher = {Association for Computing Machinery},
  series = {ICETC '23},
  title = {Construction and Practice of Computational Thinking Structural Framework with Sternberg's Intellectual Education Theory},
  url = {https://doi.org/10.1145/3629296.3629361},
  year = {2024}
}

@inproceedings{merged420,
  abstract = {Pair programming is a collaborative activity that enhances students’ computational thinking (CT) skills. Analyzing students’ interactions during pair programming provides valuable insights into effective learning. However, interpreting classroom dialogues is a challenging and complex task. Due to the simultaneous interaction between interlocutors and other ambient noise in collaborative learning contexts, previous work heavily relied on manual transcription and coding, which is labor-intensive and time-consuming. Recent advancements in speech and language processing offer promising opportunities to automate and scale up dialogue analysis. Besides, previous work mainly focused on task-related interactions, with little attention to social interactions. To address these gaps, we conducted a four-week CT course with 26 fifth-grade primary school students. We recorded their discussions, transcribed them with speech processing models, and developed a coding scheme and applied LLMs for annotation. Our AI-driven pipeline effectively analyzed classroom recordings with high accuracy and efficiency. After identifying the dialogue patterns, we investigated the relationships between these patterns and CT performance. Four clusters of dialogue patterns have been identified: Inquiry, Constructive Collaboration, Disengagement, and Disputation. We observed that Inquiry and Constructive Collaboration patterns were positively related to students’ CT skills, while Disengagement and Disputation patterns were associated with lower CT performance. This study contributes to the understanding of how dialogue patterns relate to CT performance and provides implications for both research and educational practice in CT learning.},
  address = {New York, NY, USA},
  author = {Yin, Stella Xin and Liu, Zhengyuan and Goh, Dion Hoe-Lian and Quek, Choon Lang and Chen, Nancy F.},
  booktitle = {Proceedings of the 15th International Learning Analytics and Knowledge Conference},
  doi = {10.1145/3706468.3706474},
  isbn = {9798400707018},
  keywords = {Collaborative learning; Computational thinking; Dialogue analysis; Large language models; Pair programming; Speech and language processing},
  numpages = {11},
  pages = {47–57},
  publisher = {Association for Computing Machinery},
  series = {LAK '25},
  title = {Scaling Up Collaborative Dialogue Analysis: An AI-driven Approach to Understanding Dialogue Patterns in Computational Thinking Education},
  url = {https://doi.org/10.1145/3706468.3706474},
  year = {2025}
}

@inproceedings{merged421,
  abstract = {Providing high-quality computing education to all students in primary school is essential for reducing computing disparities, by preparing students for success in secondary education. To impact the quality of computing education experiences for large numbers of diverse primary schools and students, a teacher professional development model must be designed for scalability from the outset. As many countries work to expand national access to computing education at the primary level and reach hundreds or thousands of teachers in the process, there is a need to understand effective systems-based strategies for scaling teacher professional learning across diverse schools and communities. This experience report will share lessons learned from the implementation of an initiative to prepare thousands of primary school (K-5) teachers to integrate computational thinking into their instruction.Initial findings showed that the intervention was able to reach schools in diverse communities. Nearly all teachers completing the program indicated that they planned to use the training materials, they had the knowledge and skills to integrate computational thinking into their classes, and the training would benefit their students. Teachers reported that the most useful aspects of the program included hands-on training and materials for integrating lessons into their instruction. They shared suggestions for improving the program, such as offering more training time, refining asynchronous training, and providing more resources for implementation in specific teacher contexts. Findings highlighted the importance of designing and testing scalable computing interventions with a broad range of educators and schools.},
  address = {New York, NY, USA},
  author = {Jacobson, Miriam R. and Wang, Zhuoying and Fletcher, Carol L. and Carrell, Amy L.},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729038},
  isbn = {9798400715679},
  keywords = {computational thinking education; computing education; primary education teachers},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {541–547},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Building Teacher Capacity to Integrate Computational Thinking into Primary School Instruction: Strategies for Designing High-Quality and Scalable Interventions},
  url = {https://doi.org/10.1145/3724363.3729038},
  year = {2025}
}

@inproceedings{merged422,
  abstract = {Computational thinking has been identified as an important skill for children to learn in the 21st century, and many innovative kits and tools have been developed to integrate it into children’s learning. Yet, most solutions require the use of devices like computers or other expensive hardware, thus being inaccessible to low-income schools and communities. We present Cartoonimator, a low-cost, paper-based computational kit for children to create animations and engage with computational thinking. Cartoonimator requires only paper and a smartphone to use, offering an affordable learning experience. Children can draw the scenes and characters for their animation on the paper, which is printed with computer vision markers. We developed the mobile web app to provide an interface to capture keyframes and compile them into animations. In this paper, we describe the implementation and workflow of Cartoonimator, its deployment with children at a local STEAM event, and a planned evaluation for the kit.},
  address = {New York, NY, USA},
  author = {Ranjan, Krithik and Gyory, Peter and Rivera, Michael L and Do, Ellen Yi-Luen},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3593886},
  isbn = {9798400701313},
  keywords = {animation; computational thinking; paper computing; tangible programming},
  location = {Chicago, IL, USA},
  numpages = {5},
  pages = {517–521},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Cartoonimator: A Low-cost, Paper-based Animation Kit for Computational Thinking},
  url = {https://doi.org/10.1145/3585088.3593886},
  year = {2023}
}

@book{merged423,
  address = {New York, NY, USA},
  editor = {Ottenbreit-Leftwich, Anne and Yadav, Aman},
  isbn = {9781450396158},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  year = {2022}
}

@inproceedings{merged424,
  abstract = {Computational thinking (CT) and problem-solving skills are increasingly integrated into K-8 school curricula worldwide. Consequently, there is a growing need to develop reliable assessments for measuring students' proficiency in these skills. Recent works have proposed tests for assessing these skills across various CT concepts and practices, in particular, based on multi-choice items enabling psychometric validation and usage in large-scale studies. Despite their practical relevance, these tests are limited in how they measure students' computational creativity, a crucial ability when applying CT and problem solving in real-world settings. In our work, we have developed ACE, a novel test focusing on the three higher cognitive levels in Bloom's Taxonomy, i.e., Analyze, Evaluate, and Create. ACE comprises a diverse set of 7x3 multi-choice items spanning these three levels, grounded in elementary block-based visual programming. We evaluate the psychometric properties of ACE through a study conducted with 371 students in grades 3-7 from 10 schools. Based on several psychometric analysis frameworks, our results confirm the reliability and validity of ACE. Our study also shows a positive correlation between students' performance on ACE and performance on Hour of Code: Maze Challenge by Code.org.},
  address = {New York, NY, USA},
  author = {Ghosh, Ahana and Malva, Liina and Singla, Adish},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630778},
  isbn = {9798400704239},
  keywords = {assessment tools; bloom's taxonomy; computational thinking},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {387–393},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Analyzing-Evaluating-Creating: Assessing Computational Thinking and Problem Solving in Visual Programming Domains},
  url = {https://doi.org/10.1145/3626252.3630778},
  year = {2024}
}

@inbook{merged425,
  abstract = {Due to the increasingly computational nature of professions, computational thinking (CT) is of growing importance to authentic science learning and the education of future scientists. To meet this need, CT integration is expanding within classrooms. We provided professional development (PD) for pre-service and in-service teachers focused on integrating CT into elementary science. At the PD culmination, 36 teachers wrote and enacted 22 unique CT-integrated science lessons, individually or with teaching partners. Waterman et al. (2020) suggested three levels of integrating CT within lesson plans: exist, labeling already present CT; enhance, adding CT components; and extend, adding activities supporting science learning with CT. Using this framework, we examined these lesson plans, their alignment to CT practices, and the level of CT integration. Our results indicated 83.3% of teachers successfully integrated CT within their lessons, focusing on Using Data, Computational Simulations, and Programming practices. Further, we found the level of integration differed by CT practice. Data practices generally led to exist level integration, Computational Simulation practices to enhance level integration, and Programming practices tended to extend science lessons or exhibit the science topic with Programming. Our data demonstrated teachers can write CT-integrated lesson plans, but all levels of integration are not equal opportunities for authentic scientific learning. As the field seeks to offer equitable and quality CT experiences for all students integrated within disciplinary subjects, we must understand the level of CT integration and consider how different levels of integration could affect opportunities for students.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Cabrera, Lautaro and Killen, Heather and Plane, Jan and Ketelhut, Diane Jass},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {11–18},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking integration in elementary teachers' science lesson plans},
  url = {https://doi.org/10.1145/3507951.3519283},
  year = {2022}
}

@inproceedings{merged426,
  abstract = {In the educational setting, consolidating computational thinking (CT) and digital literacy (DL) as two important skills for 21st- century professionals have become more important than ever. Nonetheless, scientific literature on both topics has rarely focused on developing frames of reference that offer incorporation of the interweaving of these skills. The objective of this document is to analyze and discuss the relationship between CT and DL in a framework where technology is used for education, with the end goal of designing a conceptual proposal that shows its common elements. The result is an initial proposal of interweaving that addresses skills such as abstraction (critical/cognitive-informational-communication), algorithm design (critical/cognitive-informational), and communication as common components, among others. We concluded that this proposal must be discussed, broadened, and considered as an initial reference framework for further analyses and delving into the topic.},
  address = {New York, NY, USA},
  author = {George-Reyes, Carlos Enrique and Rocha Estrada, Francisco Javier and Glasserman-Morales, Leonardo David},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486412},
  isbn = {9781450390668},
  keywords = {Computational thinking; computer literacy; educational innovation; higher education; interweaving},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {13–17},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Interweaving Digital Literacy with Computational Thinking},
  url = {https://doi.org/10.1145/3486011.3486412},
  year = {2021}
}

@inbook{merged427,
  address = {New York, NY, USA},
  author = {Ottenbreit-Leftwich, Anne and Yadav, Aman},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  pages = {iii–vi},
  publisher = {Association for Computing Machinery},
  title = {Introduction: Computational thinking in preK-5: empirical evidence for integration and future directions},
  url = {https://doi.org/10.1145/3507951.3519281},
  year = {2022}
}

@inproceedings{merged428,
  abstract = {This paper describes a research-practice partnership (RPP) in western South Dakota involving twenty 4th and 5th grade teachers and a support team of university researchers and K-12 learning specialists. For three years, the RPP has been exploring ways to strengthen computational thinking within elementary math and science instruction, attending to policy considerations and the local education landscape. The RPP is motivated in part by the hypothesis that a larger, more diverse group of students will choose to enroll in computer science courses in high school if they gain familiarity and confidence related to computational concepts at earlier grades. Feedback from participating teachers along with student attitude and problem-solving data suggest this is a promising approach.},
  address = {New York, NY, USA},
  author = {Sayler, Ben and Anderson, Ann and Caffee, Hannah and Carroll, Becky and Hammel, Koreen and Her Many Horses, Ian and Kertzman, Deann and Lange, Pamela and Myers, Rebecca and Reiner, Nicol and Uhre-Balk, Nicole and Webber, Kimberly},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656103},
  isbn = {9798400706264},
  keywords = {broadening participation; computational thinking; elementary computer science; equity; research-practice partnership},
  location = {Atlanta, GA, USA},
  numpages = {5},
  pages = {30–34},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Strengthening Computational Thinking within Upper Elementary Classrooms: A Strategy for Broadening Participation in Computer Science},
  url = {https://doi.org/10.1145/3653666.3656103},
  year = {2024}
}

@inproceedings{merged429,
  abstract = {Virtual reality (VR) technology has been widely used in many industries. Therefore, the cultivation of virtual reality technology talents is imminent. However, there are relatively few universities that carry out virtual reality courses. At the same time, the virtual reality course is a good carrier to cultivate computational thinking. It can improve students ' problem-solving ability, creativity and teamwork ability, which are also necessary to cultivate computational thinking. Computational thinking, as a necessary basic skill for talents in the 21 st century, needs to be improved in the training approach of college teaching. However, there are relatively few teaching approachs to cultivate computational thinking through virtual reality (VR) courses. Based on this, this study constructs a design-based STEM+VR teaching approach, which combines the interdisciplinary knowledge of STEM education with VR subject knowledge, aiming to cultivate college students ' computational thinking through virtual reality courses. In this study, a single group of pre-test and post-test experiments were conducted to investigate the complex ability of computational thinking of a college student in Wuhan, including five sub-dimensions:creativity,algorithmic hinking, collaborative ability, critical thinking and dimensional problem solving.The research shows that after the design-based STEM + VR teaching, the abilities in the sub-dimension of computational thinking are significantly improved. The design-based STEM + VR teaching case provided in this study is expected to provide some reference for the use of virtual reality courses to cultivate computational thinking in college education.},
  address = {New York, NY, USA},
  author = {Li, Xing and Zhao, MingYue and Ai, Di and Zhou, XiaoChun and Xiang, Hui},
  booktitle = {Proceedings of the 2024 9th International Conference on Distance Education and Learning},
  doi = {10.1145/3675812.3675867},
  isbn = {9798400716805},
  keywords = {STEM+VR; Virtual Reality ( VR ); computational thinking; teaching approach},
  location = {Guangzhou, China},
  numpages = {6},
  pages = {217–222},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '24},
  title = {An empirical study on the design-based STEM + VR teaching approach to cultivate college students' computational thinking},
  url = {https://doi.org/10.1145/3675812.3675867},
  year = {2024}
}

@inproceedings{merged430,
  abstract = {Nature connection fosters children's healthy development, and long-term sustainable behaviours. Most research into children-nature connection has focused on positive experiences. However, theories of constructive hope suggest that as well as imbuing a love of nature we should also help children understand environmental challenges. Computational thinking is a skillset that might help young children frame and address complex problems. This skillset is currently exclusively developed indoors using technological devices and indoor activities. Our research explored an opportunity to develop young children's computational thinking skills through nature play. An observation and contextual inquiry study was conducted with young children in an Early Childhood Education Centre. We found that computational thinking is evident in children's outdoor nature play and that HCI research could undertake design to further enhance their computational thinking skills outdoors. This can add value to their learning by harnessing their interest, understanding and connection, and by introducing children to environmental problem-solving.},
  address = {New York, NY, USA},
  author = {Om, Chimi and Brereton, Margot and Vella, Kellie and Ploderer, Bernd and Dema, Tshering and Dobson, Madeleine Rose and Murcia, Karen},
  booktitle = {Proceedings of the 35th Australian Computer-Human Interaction Conference},
  doi = {10.1145/3638380.3638447},
  isbn = {9798400717079},
  location = {Wellington, New Zealand},
  numpages = {14},
  pages = {536–549},
  publisher = {Association for Computing Machinery},
  series = {OzCHI '23},
  title = {Rethinking the Development of Computational Thinking Skills in Young Children through Nature Play},
  url = {https://doi.org/10.1145/3638380.3638447},
  year = {2024}
}

@inproceedings{merged431,
  abstract = {In this poster, we will present approaches and associated design principles for integrating computational thinking (CT) into middle school Social Studies, Arts, and Language Arts instruction to enhance disciplinary learning. We used four steps to identify these approaches and design principles: (1) co-design with teachers and experts in computer science and CT education to ideate CT-integrated lessons; (2) identifying initial design principles based on the ideated lessons; (3) consultation with subject matter experts; and (4) conducting a Delphi study with pedagogical experts (e.g., teachers, curriculum writers, teacher educators) to examine the clarity, feasibility and potential impact of the design principles. The process led to three broad approaches to integrate CT into Social Studies instruction that included 14 design principles, three for Arts with 16 design principles, and four for Language Arts with 12 design principles.},
  address = {New York, NY, USA},
  author = {Caskurlu, Secil and Hu, Anne Drew and Yadav, Aman and Santo, Rafi},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499071},
  isbn = {9781450390712},
  keywords = {arts; computational thinking; design principles; k-12; language arts; social studies},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1120},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Computational Thinking Integration Design Principles in Humanities},
  url = {https://doi.org/10.1145/3478432.3499071},
  year = {2022}
}

@inproceedings{merged432,
  abstract = {Students who receive special services in mathematics or neurodiverse learners (NDLs) deserve to learn mathematics at a rigorous and equitable level as their peers. Yet, many of these students are not reaching proficiency. Computational thinking (CT) may function as a bridge between students' mathematical learning and their everyday lives. We argue that computational thinking is a pathway for NDLs to follow that will bridge the connections between math instruction and the real-life problems with which NDLs are eager to engage. We identified the critical elements needed to support rural special educators' integration of CT into math instruction by identifying intersections between CT, Math, and the assets of NDLs, as well as barriers to implementation. By leveraging connections from an existing RPP (Research-Practice Partnership), which focuses on CS education and Business intersection in rural Maine schools, we created an opportunity for participatory research for special educators and paraprofessionals often overlooked in these processes. We employed a multi-method, design-based research (DBR) approach. Through observational, survey, and interview data, we found that 1) educators are not currently receiving support for integrating CT in special education classrooms, 2) activities piloted by our educators were well received by students, 3) current standards and Individualized Educational Plan (IEP) requirements for NDLs are a significant barrier to implementation. The need for expanded, regular PD for special educators is evident, as is the potential for CT as a bridge for mathematical understanding for NDLs.},
  address = {New York, NY, USA},
  author = {Kastelein, Kate and Dawson, Kelsie and Tate, Rhonda},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635476},
  isbn = {9798400704246},
  keywords = {asset-based; computational thinking; ct; math practices; neurodiversity},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1698–1699},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Bridging the Gap: Computational Thinking as a Pathway to Equitable Math Education for Neurodiverse Learners},
  url = {https://doi.org/10.1145/3626253.3635476},
  year = {2024}
}

@inproceedings{merged433,
  abstract = {In recent years, computational thinking (CT) has focused on how children and citizens develop basic computing skills which empower them to participate in a digitised society and broaden participation and engagement with CT. We present the exploration of a craftsmanship-driven approach to engage people in CT. To explore this approach a team of knitters, a computer scientist and a computing education expert iteratively designed the KnitxCode workshop. KnitxCode utilises knitting in combination with CT concepts as the foundation for the activities. The workshop was evaluated by 12 participants with no programming experience and with knitting experience ranging from 2-25 years (M = 6). From the evaluation we found that the craftsmanship-driven approach seemed to provide the participants with confidence to learning CT, as shared concepts and practices between knitting and computing supported transitioning from knitting craftsmanship to computing and in this way served to demystify computing.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {S\o{}rensen, Marie-Louise Stisen Kjerstein and Fog, Bjarke Vognstrup and Musaeus, Line Have and Petersen, Marianne Graves},
  booktitle = {Adjunct Proceedings of the 2022 Nordic Human-Computer Interaction Conference},
  doi = {10.1145/3547522.3547680},
  isbn = {9781450394482},
  keywords = {computational thinking; craftsmanship; knitting; novice programming},
  location = {Aarhus, Denmark},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {NordiCHI '22 Adjunct},
  title = {KnitxCode: Exploring a Craftsmanship-driven Approach to Computational Thinking},
  url = {https://doi.org/10.1145/3547522.3547680},
  year = {2022}
}

@inproceedings{merged434,
  abstract = {With the development of the digital age, online teaching and learning is becoming more widespread in schools around the world. In the online teaching environment, the teaching mode of the course is an important element that receives attention in education and teaching. The online teaching mode based on the cultivation of computational thinking can improve students' learning interest and cultivate their innovative thinking ability. However, the author found through educational internship that there are problems such as single teaching activities, lack of teacher-student interaction, poor cooperative learning, and short independent learning time in high school information technology classrooms, which lead to low computational thinking ability and are not conducive to the development of students' innovative ability. The development of students' computational thinking ability is a requirement put forward by the high school information technology curriculum to secondary school students, and the improvement of computational thinking can help students adapt to the future society and meet the demand of future innovative talents. Therefore, this study takes high school students as the research object, under the guidance of constructivism and cognitivism theories, adopts survey research, experimental research and other research methods to construct and verify the online teaching mode based on the cultivation of computational thinking in high school information technology courses. The results of the study show that the online teaching mode based on the development of computational thinking can effectively improve students' algorithmic, evaluation, decomposition, abstraction and generalization thinking abilities, and thus enhance the online learning effect.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Liang, Zhou and Ma, Mingyue and Zhang, Xiaoyu and Fu, Yan and Zhang, Yongmei},
  booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3670013.3670033},
  isbn = {9798400717062},
  keywords = {Information technology courses; computational thinking; online teaching; teaching mode},
  location = {Fukuoka-shi, Japan},
  numpages = {8},
  pages = {228–235},
  publisher = {Association for Computing Machinery},
  series = {IC4E '24},
  title = {Study on Mode of Cultivating Computational Thinking in Online Teaching of Information Technology:A Quasi-Experimental Study},
  url = {https://doi.org/10.1145/3670013.3670033},
  year = {2024}
}

@inproceedings{merged435,
  abstract = {Recognizing effective approaches to communicate computational thinking (CT) ideas to K-12 learners is necessary. Co-design approach has been identified as an effective pedagogy for communicating CT ideas. However, there is a dearth of studies on co-design pedagogical scenarios. Hence, this study aimed at developing a CT learning co-design scenario, translate into artifact, and implement with Nigerian secondary school students.},
  address = {New York, NY, USA},
  author = {Sunday, Amos Oyelere},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594139},
  isbn = {9798400701399},
  keywords = {K-12; co-design; computational thinking; pedagogy; scenarios},
  location = {Turku, Finland},
  numpages = {2},
  pages = {609–610},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Design and Implementation of Co-design Pedagogical Scenarios for Learning Computational Thinking},
  url = {https://doi.org/10.1145/3587103.3594139},
  year = {2023}
}

@inproceedings{merged436,
  abstract = {Computational Thinking (CT) is a highly contentious subject with many diverging meanings and definitions. This study presents a preliminary literature review of 71 peer-reviewed articles on CT. The papers indicate the existence of five main aspects that have historically been used in association with its definition: Algorithm, Abstraction, Modelling, Simulation, and Implementation. Based on this preliminary literature study, semi-structured interviews with eight CT scholars are conducted, in order to evaluate these aspects and to identify qualitatively different perspectives on CT, which integrate the mentioned aspects in different ways. From the interviews, three different perspectives emerged, focusing on: Reasoning, Simplification, and Automation. Furthermore, the goal of having computationally educated citizens is extrapolated from the interviews, indicating an additional perspective (+1) titled Empowerment, which appears as embedded within all the previous three perspectives. This paper proposes to put these three (+1) perspectives in dialogue, in an effort to support researchers and practitioners working with CT across different fields.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Nicolajsen, Sebastian Mateos and Pischetola, Magda and Grabarczyk, Pawel and Brabrand, Claus},
  booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3488042.3490024},
  isbn = {9781450384889},
  location = {Joensuu, Finland},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '21},
  title = {Three +1 Perspectives on Computational Thinking},
  url = {https://doi.org/10.1145/3488042.3490024},
  year = {2021}
}

@inproceedings{merged437,
  abstract = {Self-efficacy is an important construct in education, as it can influence (among other aspects) perseverance, engagement and success on educational tasks. As such, a student’s Computational Thinking (CT) self-efficacy can have an important influence on, and may be a predictor for, the development and use of CT skills. This poster abstract provides the details of an in-progress study in which we develop a scale to measure CT self-efficacy in different contexts.},
  address = {New York, NY, USA},
  articleno = {28},
  author = {De Jong, Imke and Jeuring, Johan},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565954},
  isbn = {9781450396165},
  keywords = {computational thinking; scale development; self-efficacy},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Developing a Self-efficacy Scale for Computational Thinking (CT-SES)},
  url = {https://doi.org/10.1145/3564721.3565954},
  year = {2022}
}

@inproceedings{merged438,
  abstract = {In the context of educational equity and social participation in the modern technological world, future skills, including problem-solving, are increasingly important for children. Consequently, various projects have developed learning opportunities in Making and Computational Thinking to foster these skills in early childhood education (ECE). However, several literature reviews highlight a research gap concerning students' process-related competencies and the actual implementation of these learning opportunities by educators in kindergarten. In this context, an intervention that will be taught by kindergarten teachers was designed. This article reports on the design of an intervention incorporating Making and Computational Thinking for students aged 5 and 6, developed during a workshop with 12 experts in ECE, Making, and Computing Education.},
  address = {New York, NY, USA},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691081},
  isbn = {9798400706042},
  keywords = {K-12; computational thinking; computer science education; early childhood education; kindergarten; making},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {297–298},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Integrating Making and Computational Thinking in Early Childhood Education: Preliminary Outcomes from a Teacher Trainer Workshop on Designing an Intervention},
  url = {https://doi.org/10.1145/3649409.3691081},
  year = {2024}
}

@inproceedings{merged439,
  abstract = {Printing 3D objects is exciting and engaging for young learners. However, how can this emerging technology benefit the development of skills, such as Computational Thinking (CT) and Design Thinking (DT), through a meaningful process of imagining, designing and tinkering with objects that could be used in real-world problems? Our knowledge is still limited, due to the complexity of designing 3D printable models from scratch with the existing digital tools. This paper discusses a web-based tool that enables learners to create and dynamically manipulate the behavior and properties of 3D printable models with high-level programming. This design aims to foster computational thinking, creativity, and design thinking skills as it focuses on the design process of the model, its behavior and its usage after printing. It also presents the results of a pilot study in which secondary school students engaged in a Design Thinking project for designing and printing sustainable everyday objects using this design. The study revealed new kinds of educational potential of 3D printing including the understanding of complex mathematical and CT ideas that were too complicated before, and the connection of CT practices with real-world problems through the implementation of a Design Thinking project with digital media.},
  address = {New York, NY, USA},
  author = {Grizioti, Marianthi and Kynigos, Chronis and Nikolaou, Maria-Stella},
  booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3628516.3655810},
  isbn = {9798400704420},
  keywords = {3D printing; Computational Thinking; Design Thinking; Emerging Technologies; Logo-based programming},
  location = {Delft, Netherlands},
  numpages = {9},
  pages = {133–141},
  publisher = {Association for Computing Machinery},
  series = {IDC '24},
  title = {Enhancing Computational Thinking with 3D printing: Imagining, designing, and printing 3D objects to solve real-world problems.},
  url = {https://doi.org/10.1145/3628516.3655810},
  year = {2024}
}

@inproceedings{merged440,
  abstract = {Computational thinking is a key competence for children to learn in today’s digitized world. In order to effectively teach computational thinking, elementary science teachers need to have appropriate professional knowledge, consisting of content as well as pedagogical content knowledge and pedagogical knowledge [15]. This research project will adapt the Computational Thinking Test (CTt) to assess German pre-service teachers’ content knowledge in the area of computational thinking, and develop corresponding items based on case vignettes to assess pedagogical content knowledge.},
  address = {New York, NY, USA},
  articleno = {32},
  author = {Arndt, Nicolas and Br\"{u}ckmann, Maja},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609779},
  isbn = {9798400708510},
  keywords = {case vignettes; computational thinking; content knowledge (CK); elementary science education; pedagogical content knowledge (PCK); pre-service teachers},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Assessing Pre-Service Elementary Science Education Teachers’ Professional Knowledge in the Field of Computational Thinking},
  url = {https://doi.org/10.1145/3605468.3609779},
  year = {2023}
}

@inproceedings{merged441,
  abstract = {As computational thinking (CT) becomes increasingly acknowledged as an important skill in education, self-directed learning (SDL) emerges as a key strategy for developing this capability. The advent of generative AI (GenAI) conversational agents has disrupted the landscape of SDL. However, many questions still arise about several user experience aspects of these agents. This paper focuses on two of these questions: personalization and long-term support. As such, the first part of this study explores the effectiveness of personalizing GenAI through prompt-tuning using a CT-based prompt for solving programming challenges. The second part focuses on identifying the strengths and weaknesses of a GenAI model in a semester-long programming project. Our findings indicate that while prompt-tuning could hinder ease of use and perceived learning assistance, it might lead to higher learning outcomes. Results from a thematic analysis also indicate that GenAI is useful for programming and debugging, but it presents challenges such as over-reliance and diminishing utility over time.},
  address = {New York, NY, USA},
  articleno = {13},
  author = {Ouaazki, Abdessalam and Bergram, Kristoffer and Farah, Juan Carlos and Gillet, Denis and Holzer, Adrian},
  booktitle = {Proceedings of the 6th ACM Conference on Conversational User Interfaces},
  doi = {10.1145/3640794.3665542},
  isbn = {9798400705113},
  keywords = {ChatGPT; Chatbots; Education; Generative AI; Programming; Student Perceptions},
  location = {Luxembourg, Luxembourg},
  numpages = {12},
  publisher = {Association for Computing Machinery},
  series = {CUI '24},
  title = {Generative AI-Enabled Conversational Interaction to Support Self-Directed Learning Experiences in Transversal Computational Thinking},
  url = {https://doi.org/10.1145/3640794.3665542},
  year = {2024}
}

@inproceedings{merged442,
  abstract = {This study analyzed the relationship between computational thinking (CT) and coding attitudes of upper elementary students after exposure to a year-long CT curriculum. Using ordinary least squares regression and controlling for student demographics (i.e., gender and English Learner (EL) status), we found that CT skills were a significant factor in modeling coding attitudes, regardless of demographic controls. Interviews of the students unveiled an interaction between coding interest and social values in a debugging process.},
  address = {New York, NY, USA},
  author = {Ojeda-Ramirez, Santiago and Parker, Miranda C. and Garcia, Leiny and Tate, Tamara and Villa, Jillian Rae and Warschauer, Mark},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576256},
  isbn = {9781450394338},
  keywords = {computational thinking; early coding attitudes; elementary school},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1308},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Computational Thinking and Attitudes Towards Computing: An Emerging Relationship in Elementary Students},
  url = {https://doi.org/10.1145/3545947.3576256},
  year = {2023}
}

@inproceedings{merged443,
  abstract = {Computational thinking (CT) is a foundational skill of computer science that all elementary students should have equitable access to for learning and engaging in throughout their day. For the integration of CT into science instruction to be successful, teachers need to be able to communicate clearly what CT is and how it is defined through precise language. The intention of this poster is to explore the meaning of CT at the elementary level through a critical review of literature, analysis of standards, value-mapping across multiple stakeholders, analysis of written responses from elementary teachers on a CT survey, and deep discussions of a Design-Based Implementation Research Team (DBIR). The data collected and analyzed from these sources was combined to develop a definition of CT that would support implementation of CT for elementary teachers.},
  address = {New York, NY, USA},
  author = {Pietros, Jennifer and Sweetman, Sara and Shim, Minsuk},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499120},
  isbn = {9781450390712},
  keywords = {computational thinking; definition; elementary science},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1112},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {How is Computational Thinking Defined in Elementary Science?},
  url = {https://doi.org/10.1145/3478432.3499120},
  year = {2022}
}

@inproceedings{merged444,
  abstract = {Computational thinking can be deemed as thinking in algorithmic way, with which one can transpose given problems into computer algorithms. Since computational thinking requires abstract reasoning, it should not depend on particular programming languages. Unfortunately, introductory programming courses (CS1) often give students false impression that their goals are to teach a particular programming language. This study shares the design of new pedagogy for CS1 that removes dependency on a particular language and promotes computational thinking by teaching multiple programming languages simultaneously. Specifically, chosen programming languages range from low-level to high-level to expose students to different levels of abstraction from the details of computer architecture. Initial student survey responses from both trial and control groups show that there are significant improvements for the trial groups.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and Hu, Kaoning and El Ariss, Omar and Kwon, Kibum},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576322},
  isbn = {9781450394338},
  keywords = {computational thinking; cs1; multiple programming languages; programming courses},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1377},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Multiple Programming Languages for Improving Computational Thinking in CS1},
  url = {https://doi.org/10.1145/3545947.3576322},
  year = {2023}
}

@inproceedings{merged445,
  abstract = {Adaptive support can help learners in Open-Ended Learning Environments (OELEs), where the free-form nature of the interaction can be confusing to students. In this paper, we design and evaluate an Intelligent Pedagogical Agent (IPA) for an OELE designed to foster Computational Thinking (CT). Specifically, we design help interventions for an in-the-wild scenario where students interact with the OELE in an unmonitored, self-directed manner. We build a student model by extracting meaningful student behaviors on real-world interaction data obtained during interaction in online classrooms and including expert insights. We show that these student models perform better than a baseline and have the potential for adaptive support in self-directed interaction with the OELE. We design an IPA with the help of teachers, leveraging the student behaviors extracted from data. Lastly, we get insights into the value of these help interventions by empirically evaluating the IPA in a formal user study.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Murali, Rohit and Lall\'{e}, S\'{e}bastien and Conati, Cristina},
  booktitle = {Proceedings of the 24th ACM International Conference on Intelligent Virtual Agents},
  doi = {10.1145/3652988.3673948},
  isbn = {9798400706257},
  keywords = {Adaptive hints; Computational thinking; In-the-wild user study; Intelligent pedagogical agent},
  location = {GLASGOW, United Kingdom},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {IVA '24},
  title = {An Intelligent Pedagogical Agent for In-The-Wild Interaction in an Open-Ended Learning Environment for Computational Thinking},
  url = {https://doi.org/10.1145/3652988.3673948},
  year = {2024}
}

@article{merged446,
  abstract = {Computational thinking (CT) is playing an increasingly relevant role within disciplinary teaching in elementary school, particularly in science. However, many teachers are unfamiliar with CT, either because their education occurred before the popularization of CT or because CT instruction was not included in their pre-service coursework. For these teachers, CT professional development (PD) becomes a primary mechanism to close their CT knowledge gap. While CT PD has demonstrated success at increasing teacher's CT understanding, researchers have reported varied outcomes in supporting teachers to write CT-integrated lesson plans. To explore how we might support teachers to integrate CT into elementary science, we employed design-based research (DBR) in a dual-track design of in-class CT instruction for pre-service undergraduates within an elementary science methods class paired with a collaborative, multi-month PD opportunity for pre- and in-service teachers. In this article, we reflect on our 5-year period of DBR and present our design insights and implications for CT instruction and curriculum design from each iteration. Our findings on best practices will inform both teacher educators and PD providers within CT education. Our work will also be of interest to researchers considering DBR for technology-based educational projects.},
  address = {New York, NY, USA},
  articleno = {41},
  author = {Killen, Heather and Coenraad, Merijke and Byrne, Virginia and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jandelyn D.},
  doi = {10.1145/3618115},
  issue_date = {December 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Teacher education; computational thinking; culturally responsive teaching; design-based research; professional development},
  month = {November},
  number = {4},
  numpages = {36},
  publisher = {Association for Computing Machinery},
  title = {Teacher Education to Integrate Computational Thinking into Elementary Science: A Design-Based Research Study},
  url = {https://doi.org/10.1145/3618115},
  volume = {23},
  year = {2023}
}

@inproceedings{merged447,
  abstract = {The research aims to analyze the impact of games on the development of computational thinking in students, specifically the digital card game called Moon (a card game where the computer of the Eagle lunar module is controlled during the first moon landing). The methodology applied is experimental where a series of learning sessions applying the virtual game Moon is applied to a sample of 25 students selected through a simple random sampling of a population of 100 students, we proceed to evaluate the students through a pre-test and post-test. The results show that the application of the virtual game Moon significantly influences the increase of Computational Thinking in students, which was demonstrated by applying the evaluation and observing how they overcame the different challenges proposed through the different difficulties of the virtual game Moon, this developed in the competence of "Design and build technological solutions to solve problems in their environment".},
  address = {New York, NY, USA},
  author = {Maraza Quispe, Benjamin and Alejandro Oviedo, Olga Melina and Choquehuanca Quispe, Walter and Quispe Flores, Lita Marianela and Caytuiro Silva, Nicolas Esleyder and Choquehuayta Palomino, Sim\'{o}n Angel},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572552},
  isbn = {9781450397766},
  keywords = {Video; behavior; computational; game; thinking},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {12–18},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {Towards the development of computational thinking in students through games},
  url = {https://doi.org/10.1145/3572549.3572552},
  year = {2023}
}

@article{merged448,
  abstract = {Background and Objective. Teacher assessment research suggests that teachers have good conceptual understanding of CT. However, to model CT-based problem-solving in their classrooms, teachers need to develop the ability to recognize when and how to apply CT skills. Does existing professional development (PD) equip teachers to know when and how to apply CT skills? What factors should PD providers consider while developing trainings for CT application skills?Method. This retrospective observational study used a binomial regression model to determine what factors predict teachers’ probability of performing well on a CT application skills test.Participants. Participants of this study were 129 in-service K-12 teachers from a community of practice in India.Findings. Results show that teachers who have received at least one CT training, who have a higher teaching experience, and are currently teaching CT will have a higher probability of applying CT skills correctly to problems irrespective of the subject they teach and their educational backgrounds. However, receiving a higher number of CT PD trainings was a negative predictor of teachers’ performance.Implications. Implications for school administrators, professional development providers, and researchers are discussed. Teachers need ample opportunity to teach CT in their teaching schedules. Continuous professional development does not necessarily result in improved CT application skills unless careful consideration is given to the pedagogies used and to the resolution of misconceptions that teachers may have developed in prior training. Mixing plugged and unplugged pedagogical approaches may be beneficial to encourage transfer of CT application skills across different types of problems. Last, there is a need to develop valid and reliable instruments that measure CT application skills of teachers.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Tagare, Deepti},
  doi = {10.1145/3633205},
  issue_date = {March 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {21st century abilities; Computational thinking skills; pedagogical content knowledge; teacher professional development},
  month = {January},
  number = {1},
  numpages = {26},
  publisher = {Association for Computing Machinery},
  title = {Factors That Predict K-12 Teachers' Ability to Apply Computational Thinking Skills},
  url = {https://doi.org/10.1145/3633205},
  volume = {24},
  year = {2024}
}

@inproceedings{merged449,
  abstract = {The concept of computational thinking originated in the computer science community and has therefore focused on concepts and terminology drawn from that discipline. However, to make computational thinking an integrated, accessible concept within other parts of the K-12 curriculum, the concepts and terminology must be adapted to fit the new curricular context. We focus on elementary social studies, specifically a third grade geography lesson on absolute location using a teaching strategy of a scaffolded geocache. We present a selection of computational thinking elements, adapt them to social studies, and then organize them into a four-part heuristic: Data, Patterns, Rules, and Questions. Through this selection, adaptation, and sequencing, computational thinking can become a relevant and accessible integrated concept within the elementary social studies curriculum.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Hammond, Thomas C. and Oltman, Julia and Manfra, Meghan M.},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365369},
  isbn = {9781450369527},
  keywords = {Computational thinking; Elementary education; Geography; Scaffolded geocache; Social studies},
  location = {Chicago, IL, USA},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {Geo-Computational Thinking in the Third Grade: Making Computational Thinking Truly "For Everyone, Everywhere"},
  url = {https://doi.org/10.1145/3356393.3365369},
  year = {2019}
}

@inproceedings{merged450,
  abstract = {The Make-To-Learn Lab at the University of Virginia developed TuneScope, a tool to facilitate computational thinking (CT) through music, to help democratize computer science education. Built upon the existing framework of Snap! (University of California, Berkeley), TuneScope leverages sound analysis, design, and music composition to engage novices with CT fundamentals. Existing research shows the benefits of using familiar contexts to teach CT, and TuneScope builds upon this with musical contexts. We have designed a course centered around the use of TuneScope to teach fundamentals of CT through music. In this paper, we investigate how students use TuneScope to develop sequential melodies, build chords, and sample recorded sounds while simultaneously learning fundamental programming principles such as algorithm design and abstraction. Using sentiment analysis, we demonstrate that students have had a largely positive experience in learning and grasping CT fundamentals throughout a diverse curriculum. As of today, the total enrollment of the course consists of over 45% female students with a 100% retention rate. TuneScope has also been accepted as an official Snap! library to be used by thousands of Snap! users worldwide.},
  address = {New York, NY, USA},
  author = {Padhye, Harsh and Gibson, Rachel and Bull, Glen and Nguyen, N. Rich},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3573279},
  isbn = {9781450394338},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1231},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Does Musical Context Improve Computational Thinking Skills?},
  url = {https://doi.org/10.1145/3545947.3573279},
  year = {2023}
}

@article{merged451,
  abstract = {Computational thinking (CT) is a necessary skill that must be learned in today's tech-focused world, especially within K-12 education, where early learning of problem-solving skills and algorithmic thinking is beneficial in everyday life. Various ways have been used to cultivate this skill in these early education phases [6]. Our approach was to use an unplugged gamified coding activity that involved creating a learning environment that required hands-on participation and critical computational thinking. This study examines the impact of a gamified coding activity on computational thinking (CT) skills of K-12 students in a public stem event setting where each student has around 30 minutes of solving time. This study also observes the influence of the short-term intervention on algorithmic thinking and problem solving abilities by incorporating a before-and-after survey, in which students were asked to write down the steps to brush their teeth before and after the activity. This data was used to evaluate improvements in student procedural thinking and logical structure. The findings suggest that gamification enhances engagement and helps students develop clearer and more structured algorithms. These results contribute to research on effective teaching strategies for CT in K-12 education and to improving the learning environment.},
  address = {Evansville, IN, USA},
  author = {Cho, Seong Yeon and Lee, Jae Geun and Kim, Paul},
  issn = {1937-4771},
  issue_date = {April 2025},
  journal = {J. Comput. Sci. Coll.},
  month = {July},
  number = {10},
  numpages = {11},
  pages = {171–181},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Gamification in Public Event Night: Evaluating the Impact of Unplugged Activity on K-12 Students' Computational Thinking in a Short Time Frame},
  volume = {40},
  year = {2025}
}

@inproceedings{merged452,
  abstract = {Schools throughout the United States are engaging in efforts to integrate computational thinking (CT) across various elementary curricula. However, there is very little guidance for effective approaches to integrating CT consistently and cohesively school wide. CT Readiness for All is a two-year research project that is investigating a CT framework and self-assessment tool developed to articulate indicators associated with successful school-wide integration across elementary curricula. Data sources include focus group interviews and surveys with teachers. Although the project is still in progress, early analysis have resulted in three key findings: (a) students were able to make cross-curricular connections using CT as a problem-solving process; (b) finding time within the school day to focus on CT is challenging; and (c) administrators need to take an active role in setting the vision and definition of CT to support school-wide CT efforts.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Moeller, Babette and Fancsali, Cheri},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635533},
  isbn = {9798400704246},
  keywords = {computational thinking; elementary education; framework},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1816–1817},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {CT Readiness for All: Studying a Framework for Supporting Schoolwide Computational Thinking Integration Across Elementary Curricula},
  url = {https://doi.org/10.1145/3626253.3635533},
  year = {2024}
}

@inproceedings{merged453,
  abstract = {Curriculum guidelines for Computer Science undergraduate courses from different institutions recognize computational thinking as a fundamental skill that all students must exercise in Computer Science courses. Unfortunately, the guidelines do not make it clear when and how these skills should be exercised. The literature recognizes the importance and relevance of computational thinking. However, there is still little evidence around which aspects should be considered to design activities to support the development of computational thinking. To address this problem, my research aims to investigate how to design and conduct activities to promote computational thinking in Computer Science courses. The expected result is to produce an approach to assist the design and conduct of computational thinking learning activities in Computer Science courses.},
  address = {New York, NY, USA},
  author = {Moreira Oliveira, Carolina},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499217},
  isbn = {9781450390712},
  keywords = {computational thinking; computer science education; pedagogical issue},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1172},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {The Development of Computational Thinking in Computing Higher Education},
  url = {https://doi.org/10.1145/3478432.3499217},
  year = {2022}
}

@inproceedings{merged454,
  abstract = {Computational thinking (CT) is a unique skill set that can provide advantages not only in the field of computer science (CS) but also in other disciplines. There is potential benefit in incorporating CT practices in other subjects so students from interdisciplinary backgrounds can also gain CT skills and apply them in their respective disciplines. This study takes a look at how students from interdisciplinary backgrounds interact using gestures and use CT to understand matrix math concepts in a group setting. A mixed-methods analysis is used to gain insight into how students’ practice CT. Data collected from pre- and post- assessments measures students’ mastery level in matrix math concepts. Video data collected during the group activity shows students’ learning process. The results of this study provide a better perspective on how other disciplines are able to utilize CT and how CT learning can be implicitly taught in subjects other than CS.},
  address = {New York, NY, USA},
  articleno = {567},
  author = {Zaman, Ulia},
  booktitle = {Extended Abstracts of the 2023 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3544549.3583944},
  isbn = {9781450394222},
  keywords = {computational thinking; gestures; interaction; mathematics},
  location = {Hamburg, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '23},
  title = {Exploring Computational Thinking Practices and Gestures in the Context of Matrix Math},
  url = {https://doi.org/10.1145/3544549.3583944},
  year = {2023}
}

@inproceedings{merged455,
  abstract = {Computational thinking (CT) is considered an essential problem-solving skill in the 21st century, and is receiving attention on different educational levels. To promote and assess students’ CT skills, so-called ’Bebras tasks’ (i.e. small tasks for problem solving in informatics) are created by experts in the field of CT. There has not been empirical research to determine to what extent and how CT skills are used while solving these tasks, however. This qualitative study bridges this gap by using the think-aloud method to examine the use of CT skills when solving Bebras. The results of this study can serve as a validation for the use of CT skills in solving Bebras tasks. This poster abstract introduces the background and setup of the study.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {De Jong, Imke and Sichterman, Bo and Jeuring, Johan},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565957},
  isbn = {9781450396165},
  keywords = {Bebras; computational thinking; think-aloud},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Examining the Use of Computational Thinking Skills When Solving Bebras Tasks},
  url = {https://doi.org/10.1145/3564721.3565957},
  year = {2022}
}

@inproceedings{merged456,
  abstract = {One of the most efficient ways for elementary school students to gain exposure to computational thinking is when it is integrated into other disciplinary areas; however, elementary school teachers often lack the necessary resources to do this effectively. By leveraging the motivation force of narrative to engage students and the scaffolding affordances of block-based programming to support students, computationally-rich narrative-centered learning offers promise to address this need. In this work, we review design principles from prior work for engaging elementary students in computational thinking as well as results from initial pilot studies to investigate how computationally-rich narrative-centered learning in the context of science problem solving can support the integration of computational thinking into other disciplinary areas.},
  address = {New York, NY, USA},
  author = {Boulden, Danielle and Smith, Andy and Cully, Kimkinyona and Houchins, Jennifer and Elsayed, Rasha and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy and Mott, Bradford},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460068},
  isbn = {9781450383974},
  keywords = {computational thinking; k-12 education},
  location = {Virtual Event, Germany},
  numpages = {1},
  pages = {655},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Promoting Computational Thinking in Elementary School: A Narrative-Centered Learning Approach},
  url = {https://doi.org/10.1145/3456565.3460068},
  year = {2021}
}

@inproceedings{merged457,
  abstract = {The impact of the COVID-19 crisis on education has opened new doors and accelerated change, and a learning opportunity has emerged towards the digital transformation of teaching models. Computing acquires a new relevance and fits into the plan to strengthen digital skills as a driver of digital knowledge, particularly relevant for children and young people. In parallel, both the close contact with computers allows the development of skills such as logical reasoning, critical thinking, creativity, communication and teamwork, and the very coexistence of citizens with digital technologies requires the prior acquisition of this knowledge, in order to be prepared to meet the new demands of modern society. Thus, the purpose of this paper is to introduce an ongoing research project that aims at developing young children's expression through embodied computing in order to enhance their digital knowledge, by adapting the digital manipulative (DM) Mobeybou for storytelling and narrative creation as a tool for promoting computational thinking (CT) and inherent competences through a bodily expression experience. The educational toolkit and base literature review are discussed, and the early prototypes of the programming language proposed are presented, as well as the ongoing and future work. With this initial work it was possible to conclude that computer programming has many benefits in fostering CT in children, alongside other cognitive skills, as well as the importance of stimulating children's expression and communication that are transversal to all areas of life. Therefore, computer programming will be used and incorporated in Mobeybou in order to achieve the research aims proposed in this paper and promote children's expression through CT development.},
  address = {New York, NY, USA},
  author = {Saraiva, In\^{e}s and Martins, Nuno and Sylla, Cristina Maria},
  booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
  doi = {10.1145/3568739.3568766},
  isbn = {9781450398091},
  keywords = {Cognitive skills; Computational thinking; Computer programming; Embodied interfaces; Interactive environments; Interface design for education},
  location = {Hangzhou, China},
  numpages = {7},
  pages = {153–159},
  publisher = {Association for Computing Machinery},
  series = {ICDTE '22},
  title = {Mobeybou for Computational Thinking: Fostering Expression Through Embodied Computing Interactions},
  url = {https://doi.org/10.1145/3568739.3568766},
  year = {2023}
}

@inproceedings{merged458,
  abstract = {Due to the proliferation of technology in daily life and the growing number of ways in which humans and machines interact, the process of designing interactive elements has become critical. Nevertheless, design students are seldom able to design and implement interactive elements because of their limited programming skills. Although there have been some approaches to teach computational thinking using physical computing and focusing on solving real-world problems (e.g., electronic devices such as Arduino, using sensors and actuators), they often entail monetary expenses and require knowledgeable instructors, and are not catered to students without prior programming or electronics knowledge. Hence, we propose the use of Protobject, a low-cost tool that focuses on real-world applications that could be used to teach programming to design students. This study aims to evaluate students’ perceptions regarding the usability of Protobject as a tool for learning computational thinking, as well as the clarity of the learning activities designed to teach computational thinking concepts by using Protobject.},
  address = {New York, NY, USA},
  articleno = {23},
  author = {Bellino, Alessio and Herskovic, Valeria},
  booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
  doi = {10.1145/3605390.3605401},
  isbn = {9798400708060},
  keywords = {learning platform; usability; user study},
  location = {Torino, Italy},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {CHItaly '23},
  title = {Protobject as a tool for teaching computational thinking to designers: student perceptions on usability},
  url = {https://doi.org/10.1145/3605390.3605401},
  year = {2023}
}

@inproceedings{merged459,
  abstract = {This meta-analysis examined research on the effects of different teaching approaches on students’ computational thinking (CT) from 2010 to 2022. A total of 35 articles met inclusion criteria and were included in the final analysis with a total of 49 independent effect sizes. The meta-analysis results showed that the current K-12 teaching has a moderate positive impact on the development of students' computational thinking (g=0.548). Pair programming, unplugged activities, and project-based learning have the most significant effects, which are more helpful in cultivating students’ computational thinking. Moreover, we analyzed the impact of moderator variables on the relationship between K-12 teaching and computational thinking. Findings revealed that the effects of CT education were more substantial (a) for middle school students than for primary school students, (b) in interdisciplinary courses than in computer science courses, (c) with collaborative learning activities than with individual learning activities. Based on this, we suggest that paired programming, unplugged activities, and project-based learning, which are based on collaborative learning, should be used more for CT education. In addition, schools should develop interdisciplinary courses to promote computational thinking migration in different disciplines.},
  address = {New York, NY, USA},
  author = {Chen, Yunshan and Wang, Yining and Li, Yanyan},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572611},
  isbn = {9781450397766},
  keywords = {computational thinking; meta-analysis; teaching approach},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {386–392},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {The Effectiveness of Teaching Approaches in Computational Thinking Education: A Meta-Analysis},
  url = {https://doi.org/10.1145/3572549.3572611},
  year = {2023}
}

@inproceedings{merged460,
  abstract = {In our modern society, technology has profoundly reshaped various aspects of our lives, influencing the way we work, communicate, and interact. This raises a fundamental question: Is the current K-12 education system adequately preparing students for success in this technology-driven era, where innovation and problem-solving skills are essential? A recent study investigated this inquiry. The goal was to integrate Computational Thinking (CT) into the domains of Creative Writing and Creative Media and measure its impacts. This poster describes the design and refinement of summer camp experiences in which predominantly Hispanic female students participated in hands-on CT-based learning to create their own creative stories and films. Educational outcomes were evident through increased student engagement, enhanced collaboration, and improved problem-solving skills, underscoring the intervention's advantages. Furthermore, the researchers gained transforming insights, recognizing the versatility of CT across domains. Camp participants experienced a shift in perspective, with a greater interest in vocations and domains connected to computing. We share lessons learned from these summer camps in the hopes that they will inform other researchers and practitioners who are interested in designing and deploying similar experiences. In summary, the study outlines a trajectory where students and educators skillfully navigate the complexities of contemporary paradigms},
  address = {New York, NY, USA},
  author = {Torres Castillo, Ruth and Valdez, Tomas and Pontelli, Enrico and Gonzalez, Horacio and Nevarez, Erick and Cota, Raena},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635619},
  isbn = {9798400704246},
  keywords = {computational thinking; computer science education; creative writing; creativity; cs+x; performance arts},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1840–1841},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Using Computational Thinking to Learn Creative Writing and Performance Arts: Summer Experiences of Story Creation Projects},
  url = {https://doi.org/10.1145/3626253.3635619},
  year = {2024}
}

@inproceedings{merged461,
  abstract = {INFACT aims to provide differentiable teaching and learning activities in Computational Thinking (CT) that are inclusive for neurodiverse learners in grades 3-8. Neurodiversity refers to learners with autism, ADHD, dyslexia, and other related cognitive differences. Underlying many neurodiverse conditions is differences with executive function (EF). In previous research on game-based learning, neurodiverse students became class leaders in CT activities [1]. Special education teachers noted that CT practices align with strategies they use to support problem-solving practices. Leveraging these affordances of CT, INFACT activities are designed with embedded EF scaffolds to support neurodiverse learners.},
  address = {New York, NY, USA},
  author = {Asbell-Clarke, Jodi and Robillard, Tara and Edwards, Teon and Bardar, Erin and Weintrop, David and Grover, Shuchi and Israel, Maya},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499044},
  isbn = {9781450390712},
  keywords = {computational thinking; executive function; neurodiversity},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1076},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Including Neurodiversity in Foundational and Applied Computational Thinking (INFACT)},
  url = {https://doi.org/10.1145/3478432.3499044},
  year = {2022}
}

@inproceedings{merged462,
  abstract = {Teaching computational thinking for children has reached ample dimensions along the last decade, and has culminated in the creation of various products, programs and projects that aim to democratize the access to this body of knowledge. However, cognitive, motor and affective factors have appeared as particular challenges when we are teaching computational thinking to children in the literacy phase, where the stories are a particularly relevant part of the learning process and children's development. Thus this study has aimed to articulate the inclusion of storytelling in experiences of teaching computational thinking to young children, analyzing this possibility considering the proposition of an artifact based on transmedia storytelling for teaching computational thinking and seeks to understand what are the implications of child-computer interaction in this artifact.},
  address = {New York, NY, USA},
  author = {Sim\~{o}es Gomes, Tanci and Pontual Falc\~{a}o, Taciana and Tedesco, Patricia},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3538821},
  isbn = {9781450391979},
  keywords = {Child-computer interaction; Computational thinking; Educational artifacts; Transmedia storytelling},
  location = {Braga, Portugal},
  numpages = {3},
  pages = {690–692},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {An educational transmedia storytelling proposal to teach computational thinking for children},
  url = {https://doi.org/10.1145/3501712.3538821},
  year = {2022}
}

@inproceedings{merged463,
  abstract = {Computational Thinking is seen as a crucial skill in an increasingly digital society. Researchers and educators in higher education therefore aim to improve the Computational Thinking (CT) skills of students using appropriate interventions. However, there is currently no overview of interventions used to teach CT and how effective they are. With this scoping literature review, we provide such an overview by identifying articles that discuss interventions used to teach CT in higher education. We identify the teaching approaches used in these interventions, and discuss their effectiveness and how this is assessed. Furthermore, we look at the use of adaptive interventions. Our search of three academic databases (Scopus, ACM and ERIC) resulted in 1839 articles. After screening, 49 articles remained. A detailed examination of the interventions discussed in these articles showed that CT is still often taught through programming assignments. The interventions are evaluated in a myriad of ways, making it difficult to compare the effectiveness of interventions. We therefore suggest making use of more standardized instruments to evaluate the effectiveness. Finally, although scaffolding is applied, interventions are not often adapted to the actual proficiency level of a student.},
  address = {New York, NY, USA},
  articleno = {35},
  author = {de Jong, Imke and Jeuring, Johan},
  booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3428029.3428055},
  isbn = {9781450389211},
  keywords = {Computational thinking; effectiveness; higher education; interventions},
  location = {Koli, Finland},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '20},
  title = {Computational Thinking Interventions in Higher Education: A Scoping Literature Review of Interventions Used to Teach Computational Thinking},
  url = {https://doi.org/10.1145/3428029.3428055},
  year = {2020}
}

@inproceedings{merged464,
  abstract = {This paper describes an unplugged computational thinking (CT) resource for primary and secondary schools developed from Bebras tasks. In Ireland, CT is not part of the primary school curriculum or mandatory in secondary schools. However, the National Council for Curriculum and Assessment is in the process of revising the primary school curriculum to include aspects of CT. Our aim for creating this CT Obstacle Course is to introduce teachers (and pupils) without formal computer science training to the subject of CT. This is done in a manner that informs and motivates, and gives them the confidence to deliver CT materials in the classroom. We also want to find out from teachers how useful and important this type of resource is for developing problem-solving skills, and if our unplugged activity can support learning at various skill levels. Our CT Obstacle Course includes 14 Bebras tasks for primary schools and an additional 6 Bebras tasks for secondary schools. The activity is suitable for indoors and outdoors and is completed in groups, promoting teamwork and communication. We have delivered it to 146 primary school classes during 38 school visits between May 2021 and June 2022. It has been undertaken by 3,445 pupils and 195 teachers and other school staff. This paper describes our CT resource in detail, and reports teacher feedback from primary schools.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588775},
  isbn = {9798400701382},
  keywords = {Bebras tasks; K-12; computational thinking; unplugged},
  location = {Turku, Finland},
  numpages = {7},
  pages = {478–484},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {A Computational Thinking Obstacle Course Based on Bebras Tasks for K-12 Schools},
  url = {https://doi.org/10.1145/3587102.3588775},
  year = {2023}
}

@inproceedings{merged465,
  abstract = {There is growing attention for integrating Computational Thinking (CT) into various subjects across the K-12 curriculum with a concomitant increase of interest in investigating teachers’ pedagogical content knowledge (PCK) regarding CT. This study is part of a bigger project focusing on defining the learning trajectories for CT integration into the K-12 curriculum. In particular, the present study focused on eliciting the pedagogical content knowledge and attitude of teachers with respect to the integration of CT in various disciplines. To this end, we implemented six different case studies by integrating CT into six different subjects: science, traffic, language, biology, geography, and physics. Two primary and four secondary school teachers were involved in the study. After the lesson series was completed in schools, we conducted interviews with teachers to understand their PCK on CT integration, attitudes toward CT integrated lessons, and the barriers teachers faced during CT integrated lessons. Our results indicate that compared to standard instructional activities, students can go deeper and understand the subject content better in CT integrated lessons, also students can use the power of digital technologies to solve subject-related problems. On the other hand, teachers pointed out that students and teachers need to be more capable of technical knowledge and skills to accomplish tasks.},
  address = {New York, NY, USA},
  articleno = {20},
  author = {Yeni, Sabiha and Grgurina, Natasa and Hermans, Felienne and Tolboom, Jos and Barendsen, Erik},
  booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3481312.3481320},
  isbn = {9781450385718},
  keywords = {Computational thinking; K-12; curriculum; integration; pedagogical content knowledge; teacher},
  location = {Virtual Event, Germany},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '21},
  title = {Exploring Teachers’ PCK for Computational Thinking in Context},
  url = {https://doi.org/10.1145/3481312.3481320},
  year = {2021}
}

@inproceedings{merged466,
  abstract = {Computational Thinking (CT) has become increasingly essential in the current era of rapid digital advancement. Despite the availability of various tools to assess CT, there is a notable scarcity of tools designed for evaluating CT practices in lower elementary students. To address this gap, this study develops a digital game titled "Magical Adventure" based on the Evidence-Centered Game Design (ECGD) framework, which aimed at assessing the CT practices of young children. The game comprises five scenarios, targeting five CT practices respectively, including pattern recognition, abstraction, problem decomposition, algorithmic thinking, and debugging. Scoring criteria were designed to evaluate students' CT abilities based on the anticipated gameplay process data. This study describes the design and development process of the game. Future steps will include validation of its effectiveness through expert reviews and cognitive interviews, followed by empirical research to optimize and refine the game, enhancing its accuracy in reflecting students' CT practices.},
  address = {New York, NY, USA},
  author = {Luo, Qi and Zhang, Shuhan},
  booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
  doi = {10.1145/3702163.3702417},
  isbn = {9798400717819},
  keywords = {Computational thinking practices; Evidence-Centered Game Design; Game-based assessment; Primary education},
  numpages = {7},
  pages = {219–225},
  publisher = {Association for Computing Machinery},
  series = {ICETC '24},
  title = {Developing a Digital Game to Assess Lower Primary Students' Computational Thinking Practices based on Evidence-Centered Game Design},
  url = {https://doi.org/10.1145/3702163.3702417},
  year = {2025}
}

@inproceedings{merged467,
  abstract = {In the rapidly evolving field of computer science education, the integration of computational thinking (CT) with artificial intelligence (AI) has become a focus of attention as it may have the potential to technologically facilitate and equip students with required future skills. This research emphasizes the value of the harmonies in between CT and AI within the Science, Technology, Engineering, and Mathematics (STEM) structure. Key findings consist of: (a) CT comprises aspects such as abstraction, algorithms, trouble disintegration, pattern recognition, debugging, and AI, which should operate cohesively to deal with complex obstacles properly; (b) Many initiatives have incorporated CT into STEM education and learning via techniques like gamification, high-order thinking questions (HOTS), and peer evaluation. Consequently, it is essential to integrate computational thinking with artificial intelligence in order to improve students' cognitive development and skill acquisition.},
  address = {New York, NY, USA},
  author = {Tian, Shenmeihao},
  booktitle = {Proceedings of the 2024 International Symposium on Artificial Intelligence for Education},
  doi = {10.1145/3700297.3700394},
  isbn = {9798400707100},
  keywords = {Abstraction; Algorithms; Artificial Intelligence (AI); Computational Thinking (CT); Debugging; Pattern recognition; Problem decomposition; STEM education},
  numpages = {4},
  pages = {564–567},
  publisher = {Association for Computing Machinery},
  series = {ISAIE '24},
  title = {The Integration of Computational Thinking and Artificial Intelligence Serves to Enhance The Cognitive Processes and Skill Acquisition of Students},
  url = {https://doi.org/10.1145/3700297.3700394},
  year = {2024}
}

@inproceedings{merged468,
  abstract = {Computational thinking (CT) has become a recent policy agenda in order for students to develop interest and foundational understanding in computing and preparation for an increasingly technological workforce. In order to integrate CT into K-12 education, teachers need professional support. The field has faced common challenges developing professional learning experiences and resources that facilitate the integration of computational thinking in authentic, equitable and sustainable ways. We have worked with a cohort of over eighty teachers from around the United States to co-design and pilot pedagogical resources for computational thinking. In this poster, we summarize our co-design process with teachers and share the resources we developed for computational thinking integration.},
  address = {New York, NY, USA},
  author = {Mills, Kelly and Angevine, Colin and Weisgrau, Josh},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372629},
  isbn = {9781450367936},
  keywords = {computational thinking; k-12 education; professional development},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1343},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Resources for Computational Thinking: Co-designing with Teachers},
  url = {https://doi.org/10.1145/3328778.3372629},
  year = {2020}
}

@inproceedings{merged469,
  abstract = {This article provides a summary of a research plan as part of the "educational robotics" line of research of the doctoral plan for training in the Knowledge Society. The main objective of the research plan is to propose a curricular approach of Computational Thinking (CT) competences through active methodologies in Primary Education classrooms. It is a study with a mixed methodology to obtain more detailed results; the quantitative phase consists of the development of a MOOC for teacher training in CT, evaluated through questionnaires, and the qualitative phase, a didactic proposal in which these competencies are developed, evaluated through interviews, or focus groups. Thus, we start from a state of the art where it is reflected, on the one hand, that teacher training in CT competences causes positive feedback in Primary Education classrooms and, on the other hand, the need to carry out this training and include CT, programming, and robotics in educational curricula.},
  address = {New York, NY, USA},
  author = {Collado-S\'{a}nchez, Mar\'{\i}a and Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e} and Pinto-Llorente, Ana Mar\'{\i}a},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486544},
  isbn = {9781450390668},
  keywords = {Computational thinking; primary education; programming; robotics; teacher training; teachers},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {758–762},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Computational thinking competences training for primary education teachers},
  url = {https://doi.org/10.1145/3486011.3486544},
  year = {2021}
}

@inproceedings{merged470,
  abstract = {This paper focuses on a participatory activity that is part of an ongoing partnership formed six years ago between teachers and academics to study creative technology approaches to youth participation. By focusing on a food-based activity in an after-school maker space, we reflect on the pedagogical and methodological innovations, and the ethical and aesthetic qualities of food-based activities for participatory design. The session brought together students and teachers to form a generative dialogue around computation and automation while preparing and sharing food. The results suggest opportunities to rethink current curricular, pedagogical, and education policy strategies. Recommendations for organizers to prepare generative activities where food is used as a design material close the paper.},
  address = {New York, NY, USA},
  author = {Sosa, Ricardo and Gibbons, Andrew and O'Riordan, Emma and Iorangi, Keu and Crowe, Andy and Gibson, Leanne and Harris, Sam and Badenhorst, Daniel},
  booktitle = {Proceedings of the Participatory Design Conference 2022 - Volume 1},
  doi = {10.1145/3536169.3537785},
  isbn = {9781450393881},
  location = {Newcastle upon Tyne, United Kingdom},
  numpages = {11},
  pages = {109–119},
  publisher = {Association for Computing Machinery},
  series = {PDC '22},
  title = {Food for Advanced Computational Thinking: Critical and Creative Approaches to Technology at Te Kura Taurua Manurewa},
  url = {https://doi.org/10.1145/3536169.3537785},
  year = {2022}
}

@inproceedings{merged471,
  abstract = {Computational thinking-related issues have had a specific track on TEEM Conference since 2016. This is the sixth edition of this track within the 2021 TEEM Conference edition. This year the papers are centered on programming and robotics, but the artificial intelligence topics increase their presence in the track.},
  address = {New York, NY, USA},
  author = {Jos\'{e} Garc\'{\i}a-Pe\~{n}alvo, Francisco and Conde, Miguel \'{A}ngel and Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e}},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486411},
  isbn = {9781450390668},
  keywords = {Computational thinking; STEAM; STEM; coding in schools; computational thinking skills and curriculum; computer science in K-12; programming; robots},
  location = {Barcelona, Spain},
  numpages = {4},
  pages = {9–12},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Current trends in robotics in education and computational thinking},
  url = {https://doi.org/10.1145/3486011.3486411},
  year = {2021}
}

@inproceedings{merged472,
  abstract = {Culturally Responsive Teaching (CRT) is a pedagogical strategy that aims to engage culturally and linguistically diverse students in the classroom, to validate and to empower them (Scott, Sheridan, &amp; Clark, 2014; Gay, 2010). Five commonly described aspects of culturally responsive instruction include: (1) helping students to value the perspectives of others, (2) affirming a sense of belonging, (3) validating students' cultural identities, (4) educating students about the diversity of the world around them,&nbsp; (5) supporting students to develop an awareness the impactful social structures.&nbsp; Research has shown repeatedly that CRT increases the academic success of ethnically diverse communities&nbsp; (Gay, 2018; Ladson-Billings, 1995). This talk will provide examples of how CRT has been incorporated into a Scratch-based, upper-elementary computational thinking curriculum that was developed specifically for English language learners. Learning activities include cultural content, diverse role models in the computer science field, and student reflection.},
  address = {New York, NY, USA},
  author = {Saito-Stehberger, Dana},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499247},
  isbn = {9781450390712},
  keywords = {computational thinking; culturally responsive teaching; k-12 education},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1055},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Examples of Culturally Responsive Teaching in Computational Thinking Curriculum},
  url = {https://doi.org/10.1145/3478432.3499247},
  year = {2022}
}

@inproceedings{merged473,
  abstract = {This report summarizes the information related to a PhD project that aims to develop an Open-Source Emotion-Based Adaptive Learning Support System through Computational Thinking activities. This paper outlines the proposed objectives and provides an update on the progress made in research to date.},
  address = {New York, NY, USA},
  author = {Herrero-\'{A}lvarez, Rafael},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594141},
  isbn = {9798400701399},
  keywords = {adaptative learning; computational thinking; emotions; machine learning},
  location = {Turku, Finland},
  numpages = {2},
  pages = {601–602},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Development of an Open-Source Emotion-Based Adaptive Learning Support System using Computational Thinking Activities},
  url = {https://doi.org/10.1145/3587103.3594141},
  year = {2023}
}

@inbook{merged474,
  abstract = {This mixed methods study examined barriers faced by three elementary schools in their approaches to integrating computational thinking (CT) into classroom instruction. Because CT is a relatively new instructional area, limited research guides CT integration, especially in bringing CT to academically, linguistically, and culturally diverse instruction. This study, therefore, examined challenges faced by teachers in bringing CT into their instructional practice. Data included interviews with 11 teachers and surveys of 46 teachers in a large, urban school district. The three schools in the district were part of a CS for All initiative in their school district. Data revealed common challenges: a) Limited CT teaching expertise; b) Limited time for CT integration; c) Lack of CT-specific assessment knowledge and tools; d) Limited pedagogical understanding for meeting students' diverse instructional needs; and e) Low teacher-buy-in for teaching CT. Our data also showed differences across schools in access to classroom implementation infrastructure such as technology and curricular resources, competing administrative priorities, and types of professional development opportunities. This study points to practical implications for supporting integration of CT in elementary contexts. Most notably, it is critical to proactively address these barriers in preservice and in-service teacher preparation as well as in school-wide infrastructure in order to have a sustained CT integration effort.},
  address = {New York, NY, USA},
  author = {Israel, Maya and Liu, Ruohan and Yan, Wei and Sherwood, Heather and Martin, Wendy and Fancsali, Cheri and Rivera-Cash, Edgar and Adair, Alexandra},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {64–71},
  publisher = {Association for Computing Machinery},
  title = {Understanding barriers to school-wide computational thinking integration at the elementary grades: lessons from three schools},
  url = {https://doi.org/10.1145/3507951.3519289},
  year = {2022}
}

@inproceedings{merged475,
  abstract = {The cultivation of computing thinking in primary school has attracted the attention of all countries in the world. Based on the fifth grade information technology curriculum of primary school, this paper constructs a practice link based on problem solving, namely, five main links: observe, write, paste or draw, attempt or create,share. It also verifies whether the practice link is conducive to promoting the development of students' computing thinking. The results show that, the practice link based on problem solving can not only promote the improvement of algorithm expression ability and programming ability of primary school students, but also exercise their ability to solve problems, establish and develop computing thinking. This practice link can provide feasible strategies for information technology courses in primary schools, and provide reference for the research and practice of computing thinking cultivation of primary school students in China.},
  address = {New York, NY, USA},
  author = {Liu, Xiaoying and Cong, Longjie and Xu, Jihong},
  booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
  doi = {10.1145/3582580.3582632},
  isbn = {9781450398015},
  keywords = {Computational thinking; Practice link; Problem solving; Pupil},
  location = {Lincoln, United Kingdom},
  numpages = {7},
  pages = {298–304},
  publisher = {Association for Computing Machinery},
  series = {ICETM '22},
  title = {The Influence of Problem Solving Based Practice on Pupils' Computational Thinking},
  url = {https://doi.org/10.1145/3582580.3582632},
  year = {2023}
}

@inproceedings{merged476,
  abstract = {In response to the persistent diversity gap that exists in the computing field, we implemented a five-day professional development (PD) workshop for elementary teachers on integrating computational thinking (CT) and culturally responsive teaching (CRT) practices into their existing science instruction. An explicit focus of this PD was to engage teachers in analyzing CT- and CRT-integrated science classroom scenarios (i.e., vignettes). Our analyses of video and written data of teachers' vignette responses indicate that while their understanding of CT increased as a result of the PD, the teachers need additional support around CRT. We suggest that future studies explore how teachers define and enact CRT, especially within their unique contexts.},
  address = {New York, NY, USA},
  author = {Xin, Yue and Kramarczuk, Kristina Anna and Mak, Janice and Terrell Shockley, Ebony and Ketelhut, Diane Jass},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576255},
  isbn = {9781450394338},
  keywords = {computational thinking; culturally responsive teaching; elementary school; science education},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1309},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Computational Thinking-Integrated Elementary Science with Culturally Responsive Teaching: A Vignette Study},
  url = {https://doi.org/10.1145/3545947.3576255},
  year = {2023}
}

@inproceedings{merged477,
  abstract = {The purpose of this study is to design and developed a blended board game system with robotic arm for training students' computational thinking, and examine its effect in an elementary school's information technology course. A board game virtual interface was developed based on Unity-3D, and the corresponding device with a robotic arm was set up based on ESP32-CAM development board. The learning system enables a dual interaction mechanism by learning through Human-Machine Competition virtually or physically. By participating in the game, students faced challenges such as board game step reasoning, model abstract, decision-making, and strategic planning, thereby enhancing their computational thinking and problem-solving skills. Results indicated that the blended board game improve students’ overall computational thinking skills, especially reasoning, decision-making and strategic planning. This research provides an innovative approach to develop virtual-physical integrated game-based learning system for promoting students' computational thinking through human-machine competition.},
  address = {New York, NY, USA},
  author = {Yong, Lin and Zhan, Zehui and Zou, Xuanxuan and Chen, Li and Lin, Zhihang and Zhan, Weiyu},
  booktitle = {Proceedings of the 7th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3625704.3625766},
  isbn = {9798400709142},
  keywords = {Computational thinking; abstraction; blended board game system; human-machine competition; robotic arm},
  location = {Tokyo, Japan},
  numpages = {8},
  pages = {74–81},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '23},
  title = {Applying a Blended Board Game System with Robotic Arm for Training Computational Thinking: Learning through Human-Machine Competition},
  url = {https://doi.org/10.1145/3625704.3625766},
  year = {2023}
}

@inbook{merged478,
  abstract = {In this chapter, we describe a pedagogical approach aimed at preparing pre-service teachers to integrate (CT) into K-8 contexts. Specifically, we present a standalone educational technology course with explicit attention on connecting CT to disciplinary content and pedagogy while introducing a range of digital tools. Data were collected from 34 pre-service teachers over the period of one semester. Specifically, a total of 68 lesson plans developed by pre-service teachers through two distinct lesson planning tasks using concept mapping and programming tools were collected and analyzed using both quantitative and qualitative techniques. The analysis utilized a coding scheme that focused on identifying specific CT practices illustrated in each lesson. It also examined differences in the CT practices exhibited in each lesson planning task. Findings indicated that the CT practice of data was most prevalent in pre-service teachers' lesson plans. Outside of data, however, there was greater variation in the CT practices represented in programming lesson plans compared to the concept mapping lesson plans. Implications for teacher educators are discussed based on the findings.},
  address = {New York, NY, USA},
  author = {Sheridan, Scott and Alkhateeb, Bataul and Mouza, Chrystalla and Yang, Hui},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {10},
  pages = {1–10},
  publisher = {Association for Computing Machinery},
  title = {Investigating pre-service teachers' computational thinking through lesson design using digital technologies},
  url = {https://doi.org/10.1145/3507951.3519282},
  year = {2022}
}

@inproceedings{merged479,
  abstract = {Computational Thinking (CT) is a fundamental and important skill set in our world and should therefore be taught and practiced in school. In this poster abstract, we present our ongoing initiative on establishing CT as a fundamental and interdisciplinary contribution of Computer Science as a necessary component of general education and describe our aim to enhance the knowledge about it in Switzerland’s teacher communities. We give an outline of our planned activities and present first results from a field test in a Swiss high school with an original example of CT-tailored teaching material for the subject of logic.},
  address = {New York, NY, USA},
  articleno = {24},
  author = {Arnold, Ruedi and Amstalden, Barbara and Bader, J\"{o}rg},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556874},
  isbn = {9781450398534},
  keywords = {computational thinking; primary and secondary education; teacher education},
  location = {Morschach, Switzerland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Enhancing the Role of Computational Thinking in Primary and Secondary Education in Switzerland},
  url = {https://doi.org/10.1145/3556787.3556874},
  year = {2022}
}

@inproceedings{merged480,
  abstract = {This poster outlines the design and results of a course entitled "Computational Thinking in Music." The course teaches computational thinking principles as a general education objective to undergraduate students, using data-driven investigation to inform musical composition. Students compose a song to imitate an artist of their choice by analyzing data extracted from a corpus of crowd-sourced pop song transcriptions. Students learn principles of abstraction, decomposition, and algorithmic thinking; no coding experience is required. Quantitative and qualitative results indicate that students are learning and applying computational thinking principles. Since the course is designed and taught by a musician and is run in the music department, students also learn a significant amount of music theory and composition, including harmonic structures and harmonization principles, melodic organization, consonance and dissonance, aural analysis of formal structures and meter, and influence of rhythm and timbre to create desired sounds.},
  address = {New York, NY, USA},
  author = {Shafer, Jennifer and Skripchuk, James},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372597},
  isbn = {9781450367936},
  keywords = {computational thinking; curriculum design; data; music; steam},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1312},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Computational Thinking in Music: A Data-Driven General Education STEAM Course},
  url = {https://doi.org/10.1145/3328778.3372597},
  year = {2020}
}

@inproceedings{merged481,
  abstract = {Through an exploratory study of a 6-year-old child and his parents, we explored the complexities of children's affective learning experience with tangible programming games, specifically focusing on the impact of scaffolding dialogues and social-emotional support. The social dialogues from this exploratory study demonstrate the interactive reasoning process in computational thinking (CT) education and reveal that dialogic learning has the potential to promote learning emotions and CT skills development in CT education. This study thus points to the future Child-Computer Interaction (CCI) research agenda that considers social dialogues in CT education with tangible play. A new understanding of social dialogues in CT toys and CT education can provide educators and CCI researchers with socio-technical insights into the future educational practices and design of CT games and technology for young children.},
  address = {New York, NY, USA},
  author = {Liu, Yu-Yu and Iversen, Ole Sejer},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3535288},
  isbn = {9781450391979},
  keywords = {affective learning; computational thinking education; dialogic learning; tangible play},
  location = {Braga, Portugal},
  numpages = {8},
  pages = {596–603},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {Computational Thinking through Tangible Play: Understanding Social Dialogues in Children's Learning},
  url = {https://doi.org/10.1145/3501712.3535288},
  year = {2022}
}

@inproceedings{merged482,
  abstract = {For more than a decade, there has been debate about how to describe the concept of computational thinking (CT), focusing on the skills of decomposition, abstraction, pattern recognition, and algorithmic thinking. As CT can also be seen as a problem-solving process, not only the skills and strategies are an important part of CT, but also the attitudes of the problem solvers. These have already been described as persistence, dealing with complexity, ambiguity, and confidence. An important competence for future computer science teachers is to confidently guide students’ problem-solving process. This work presents preliminary results on the relationship between pre-service computer science teachers’ CT attitudes and their performance on Python tasks. Therefore, N=19 pre-service computer science teachers solved three tasks in Python and rated their attitudes towards solving the tasks. However, the preliminary results only allow to draw tentative and interpretative conclusions.},
  address = {New York, NY, USA},
  articleno = {37},
  author = {Standl, Bernhard},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565963},
  isbn = {9781450396165},
  keywords = {coding; computational thinking; students’ attitudes},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Pre-Service Computer Science Teachers’ Computational Thinking Attitudes and Performance on Python Tasks},
  url = {https://doi.org/10.1145/3564721.3565963},
  year = {2022}
}

@inproceedings{merged483,
  abstract = {The authors of the article focus on Computation thinking. The aim of the article is any motivate the student primary and secondary (high) schools using robotic toys: Ozobot EVO. The theoretical part of the thesis consists of a description of the motivation and a description of Computational thinking. The practical part shows the topics on how to work with Ozobots and how to involve them in teaching. The level of thinking of young people is very low, for this reason, we have set ourselves the goal of developing thinking using algorithms.},
  address = {New York, NY, USA},
  author = {\v{Z}\'{a}\v{c}ek, Martin and Smolka, Pavel},
  booktitle = {Proceedings of the 2019 3rd International Conference on Education and E-Learning},
  doi = {10.1145/3371647.3371654},
  isbn = {9781450372251},
  keywords = {Computational thinking; Ozobot; motivation; robotic; student},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {36–40},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '19},
  title = {Development of Computational Thinking: Student Motivation Using Ozobot},
  url = {https://doi.org/10.1145/3371647.3371654},
  year = {2020}
}

@inproceedings{merged484,
  abstract = {Abstractions and algorithms are at the heart of computational thinking. In this talk I will discuss the evolution of the theory and practice of programming language and compiler design through the lens of computational thinking. Many of the key concepts in this area were introduced at the ACM Symposium on the Theory of Computing.},
  address = {New York, NY, USA},
  author = {Aho, Alfred V.},
  booktitle = {Proceedings of the 53rd Annual ACM SIGACT Symposium on Theory of Computing},
  doi = {10.1145/3406325.3465350},
  isbn = {9781450380539},
  location = {Virtual, Italy},
  numpages = {1},
  pages = {1},
  publisher = {Association for Computing Machinery},
  series = {STOC 2021},
  title = {Computational thinking in programming language and compiler design (keynote)},
  url = {https://doi.org/10.1145/3406325.3465350},
  year = {2021}
}

@inproceedings{merged485,
  abstract = {Computational Thinking Bins are stand alone, individual boxes, each containing an activity for groups of students that teaches a computing concept.We have a devised a system that has allowed us to create an initial set, test the set, continually improve and add to our set. We currently use these bins in outreach events for middle and high school students. As we have shared this resource with K-12 teachers, many have expressed an interest in acquiring their own set. In this paper we will share our experience throughout the process, introduce the bins, and explain how you can create your own set.},
  address = {New York, NY, USA},
  author = {Morrison, Briana B. and Dorn, Brian and Friend, Michelle},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287497},
  isbn = {9781450358903},
  keywords = {computational thinking; outreach; unplugged},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {1018–1024},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Computational Thinking Bins: Outreach and More},
  url = {https://doi.org/10.1145/3287324.3287497},
  year = {2019}
}

@article{merged486,
  abstract = {In 2018 I received a SIGCSE Special Projects award to fund creation of computational thinking and artificial intelligence curriculum materials for students in grades 3-5 using my Calypso for Cozmo robot programming framework (https://Calypso.software) and the Cozmo robot from Anki. The work was done in collaboration with the New Brighton Area School District in New Brighton, Pennsylvania. The project succeeded, then failed, and may now be reborn again.},
  address = {New York, NY, USA},
  author = {Touretzky, David S.},
  doi = {10.1145/3607479.3607485},
  issn = {0097-8418},
  issue_date = {April 2023},
  journal = {SIGCSE Bull.},
  month = {July},
  number = {2},
  numpages = {3},
  pages = {8–10},
  publisher = {Association for Computing Machinery},
  title = {Using an Intelligent Robot to Introduce Elementary School Students to Computational Thinking and Artificial Intelligence},
  url = {https://doi.org/10.1145/3607479.3607485},
  volume = {55},
  year = {2023}
}

@inproceedings{merged487,
  abstract = {Linking sustainable development with computational thinking promotes high-impact problem solving, integrating fundamental concepts of computer programming. This study analyzed the relationship between computational thinking and the Sustainable Development Goals (SDGs) using text mining and data visualization techniques. A text mining method was employed to analyze computational thinking and its sub-competencies (decomposition, pattern recognition, abstraction and algorithm) appearances in the OSDG Community dataset, consisting of 32,120 text fragments labeled with the associated SDG. Results revealed that computational thinking and its subcompetencies: decomposition, pattern recognition, abstraction, and algorithm, were frequently linked to SDGs 4 (quality education), SDG 5 (gender equality), SDG 6 (clean water and sanitation), and SDG 11 (sustainable cities and communities). The findings demonstrate the potential of computational thinking to provide innovative solutions to global problems and support the achievement of the SDGs. The study can be of value to stakeholders in the social, governmental, academic and business sectors interested in sustainable development and educational innovation in the application of computational thinking.},
  address = {New York, NY, USA},
  author = {Ram\'{\i}rez-Montoya, Mar\'{\i}a Soledad and Buenestado-Fern\'{a}ndez, Mariana and Ibarra-Vazquez, Gerardo},
  booktitle = {Proceedings of the 2023 8th International Conference on Information and Education Innovations},
  doi = {10.1145/3594441.3594449},
  isbn = {9798400700613},
  keywords = {Computational thinking; Data visualization; Educational innovation; Text mining},
  location = {Manchester, United Kingdom},
  numpages = {7},
  pages = {41–47},
  publisher = {Association for Computing Machinery},
  series = {ICIEI '23},
  title = {Unlocking Sustainable Development Goals through Computational Thinking: A Search to Inform Computers Education from Citizen Science Dataset},
  url = {https://doi.org/10.1145/3594441.3594449},
  year = {2023}
}

@inproceedings{merged488,
  abstract = {The fundamental rights of hospitalized minors include receiving educational and emotional attention during the illness situation. Currently the teaching of computational thinking and programming constitute a new literacy that must be carried to all classrooms, including hospital classrooms. This paper presents an exploratory case study on an educational intervention that is inclusive and adaptable to the characteristics of hospital classrooms for the teaching of computational thinking in a transversal way and programming without screens and robots, including working with emotions. In this study, 22 minors participated in five sessions developed in a hospital classroom. The results indicate that the intervention has improved the emotional state of the children, as well as their knowledge regarding computational thinking.},
  address = {New York, NY, USA},
  author = {Gonz\'{a}lez-Gonz\'{a}lez, Carina S. and C\'{a}ceres-Garc\'{\i}a, Lorena and Violant-Holz, Ver\'{o}nica},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362908},
  isbn = {9781450371919},
  keywords = {Computational Thinking; Diversity; Equity; Hospital Classrooms},
  location = {Le\'{o}n, Spain},
  numpages = {5},
  pages = {31–35},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Bringing Computational Thinking to Hospital Classrooms},
  url = {https://doi.org/10.1145/3362789.3362908},
  year = {2019}
}

@inproceedings{merged489,
  abstract = {With the continuous development of information technology, computational thinking has become a necessary quality for students to adapt to the era of artificial intelligence in the 21st century. After the release of the Information Technology Curriculum Standards for Compulsory Education (2022 edition), computational thinking has rapidly attracted wide attention. This paper adopts the bibliometrics method to study the core journals and dissertations on the training of primary school students' computational thinking collected by CNKI (China National Knowledge Network) from 2012 to 2023, and analyzes the current situation and trend of the training of primary school students' computational thinking from the aspects of the number of literatures, sources, research hotspots and frontiers, combined with Citespace software. It provides useful reference for related researchers.},
  address = {New York, NY, USA},
  author = {Chen, MingQi and Xu, JiHong and Wang, YiChuan},
  booktitle = {Proceedings of the 2024 9th International Conference on Distance Education and Learning},
  doi = {10.1145/3675812.3675864},
  isbn = {9798400716805},
  keywords = {Bibliometric method; Citespace software; Primary school student; computational thinking},
  location = {Guangzhou, China},
  numpages = {7},
  pages = {301–307},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '24},
  title = {Current Situation and Trend of Computational Thinking Research of Primary School Students in Recent Ten Years in China: An Analysis Based on Visualization Software},
  url = {https://doi.org/10.1145/3675812.3675864},
  year = {2024}
}

@inproceedings{merged490,
  abstract = {Boardgames exist that explicitly address Computational Thinking (CT for short) concepts and practices. Some are actual games, while others are more akin to gamified learning activities. And since CT has been formalized only recently, many existing boardgames unknowingly might support aspects of CT. To help educators and game practitioners navigate this complex landscape, we analyze a selected sample of analog games, and propose to categorize their features with respect to CT concepts and practices. The main contribution of this paper is a novel way to identify potential CT-relevant games, that leverages on the authors’ experience with digital and analog games, playful and game-based learning. Although limited, this approach appears promising and practical for CT teachers and game designers interested in adapting existing games to the classroom or developing better CT-supporting boardgames.},
  address = {New York, NY, USA},
  articleno = {114},
  author = {Scirea, Marco and Valente, Andrea},
  booktitle = {Proceedings of the 15th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3402942.3409616},
  isbn = {9781450388078},
  keywords = {Boardgames; Computational Thinking; classification; education; guidelines},
  location = {Bugibba, Malta},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {FDG '20},
  title = {Boardgames and Computational Thinking: how to identify games with potential to support CT in the classroom},
  url = {https://doi.org/10.1145/3402942.3409616},
  year = {2020}
}

@inproceedings{merged491,
  address = {New York, NY, USA},
  author = {Zakwandi, Rizki and Istiyono, Edi},
  booktitle = {Proceedings of the 2022 13th International Conference on E-Education, E-Business, E-Management, and E-Learning},
  doi = {10.1145/3514262.3514267},
  isbn = {9781450387187},
  keywords = {Computational Thinking; Problem-Solving Laboratory; Smartphone Experiments; Worksheet},
  location = {Tokyo, Japan},
  numpages = {6},
  pages = {104–109},
  publisher = {Association for Computing Machinery},
  series = {IC4E '22},
  title = {Evaluating Student Computational Thinking Skills in Physics Experimental Class},
  url = {https://doi.org/10.1145/3514262.3514267},
  year = {2022}
}

@inproceedings{merged492,
  abstract = {Computational thinking has become the main way of thinking in the era of information 2.0. The cultivation of computational thinking has become the teaching focus of the reform of computer courses in Chinese universities, and also one of the core elements of the information technology standard for senior high school. With the popularization of the internet, various knowledge videos are emerging, while the micro-lecture of computational thinking is rare. In order to explore the design of micro-lecture which is based on computational thinking, this study analyzes literatures and cases. On the basis of combing the elements of computational thinking, it analyzes the embodiment of computational thinking in excellent micro-lecture cases, and discusses how to use micro-lecture to promote the development of learners' computational thinking. On this basis, it shows the design model of micro-lecture basing on the computational thinking development.},
  address = {New York, NY, USA},
  author = {Wang, Wenxue},
  booktitle = {Proceedings of the 2021 4th International Conference on Education Technology Management},
  doi = {10.1145/3510309.3510328},
  isbn = {9781450385800},
  keywords = {Computational thinking; Micro-lecture design; Thinking training},
  location = {Tokyo, Japan},
  numpages = {7},
  pages = {118–124},
  publisher = {Association for Computing Machinery},
  series = {ICETM '21},
  title = {Research on Micro-lecture Designing Based on The Development of Computational Thinking},
  url = {https://doi.org/10.1145/3510309.3510328},
  year = {2022}
}

@article{merged493,
  abstract = {Computational Thinking (CT), entailing both domain-general and domain-specific skills, is a competency fundamental to computing education and beyond. However, as a cross-domain competency, appropriate assessment design and method remain equivocal. Indeed, the majority of the existing assessments have a predominant focus on measuring programming proficiency and neglecting other contexts in which CT can also be manifested. To broaden the promotion and practice of CT, it is necessary to integrate diverse problem types and item formats using a competency-based assessment method to measure CT. Taking a psychometric approach, this article evaluates a novel computer-based assessment of CT competency, Computational Thinking Challenge. The assessment was administered to 119 British upper secondary school students (M = 16.11; SD = 1.19) with a range of prior programming experiences. Results from several reliability analyses, a convergent validity analysis, and a Rasch analysis, provided evidence to support the quality of the assessment. Taken together, the study demonstrated the feasibility to expand from traditional assessment methods to integrating multiple contexts, problem types, and item formats in measuring CT competency in a comprehensive manner.},
  address = {New York, NY, USA},
  articleno = {14},
  author = {Lai, Rina P. Y.},
  doi = {10.1145/3486598},
  issue_date = {June 2022},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking competency; computer-based assessment; computing education; problem-solving},
  month = {November},
  number = {2},
  numpages = {27},
  publisher = {Association for Computing Machinery},
  title = {Beyond Programming: A Computer-Based Assessment of Computational Thinking Competency},
  url = {https://doi.org/10.1145/3486598},
  volume = {22},
  year = {2021}
}

@inproceedings{merged494,
  abstract = {Prior research has explored potential applications of video games in programming education to elicit computational thinking skills. However, existing approaches are often either too general, not taking into account the diversity of genres and mechanisms between video games, or too narrow, selecting tools that were specifically designed for educational purposes. In this paper we propose a more fundamental approach, defining beneficial connections between individual design patterns present in video games and computational thinking skills. We argue that video games have the capacity to elicit these skills and even to potentially train them. This could be an effective method to solidify a conceptual base which would make programming education more effective.},
  address = {New York, NY, USA},
  articleno = {111},
  author = {Barbero, Giulio and G\'{o}mez-Maureira, Marcello A. and Hermans, Felienne F.J.},
  booktitle = {Proceedings of the 15th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3402942.3409622},
  isbn = {9781450388078},
  keywords = {computational thinking; design patterns; video games},
  location = {Bugibba, Malta},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {FDG '20},
  title = {Computational Thinking through Design Patterns in Video Games},
  url = {https://doi.org/10.1145/3402942.3409622},
  year = {2020}
}

@inproceedings{merged495,
  abstract = {Current advances emphasize that young learners benefit from developing and applying computational thinking (CT) skills to solve problems in a variety of subjects, not limited to mathematics and science. Under this scenario, the inclusion of CT in primary and secondary education will not scale up if pre-service teachers do not actively acquire these skills during their formation. However, how this should be done is not clear. We propose an integration model to infuse CT skills at teacher colleges in Chile, which takes into account our previous work on the topic, as well as current standards, interests, and educational policies in Chile.},
  address = {New York, NY, USA},
  articleno = {17},
  author = {Simmonds, Jocelyn and Gutierrez, Francisco J. and Hitschfeld, Nancy and Torrent, Catalina and Casanova, Cecilia and Toro-Guajardo, Sebasti\'{a}n and Mu\~{n}oz, Valent\'{\i}n},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556869},
  isbn = {9781450398534},
  keywords = {computational thinking; pedagogy programs; pre-service teachers},
  location = {Morschach, Switzerland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {A Model for Infusing Computational Thinking Skills at Teacher Colleges in a Developing Country},
  url = {https://doi.org/10.1145/3556787.3556869},
  year = {2022}
}

@inproceedings{merged496,
  abstract = {The Louisiana Department of Education partnered with the Gordon A. Cain Center at LSU to pilot a Computing High School Graduation Pathway. The first course in the pathway, Introduction to Computational Thinking (ICT), is designed to teach programming and reinforce mathematical practice skills of nine-grade students, with an emphasis on promoting higher order thinking. In 2017-18, about 200 students and five teachers participated in the pilot, in 2018-2019 the participation increased to 400 students, and in the current 2019-2020 year about 800 students in 11 schools are involved. After describing the course content and the teacher training, we briefly discuss the data we have collected in the last two years. The overall student reception of the course has been positive, but the course was categorized by most students as hard. The pre-post test content assessments show that students have learned not only the language, but also general principles of programming. Lessons learned during the pilot phase have motivated changes, such as emphasizing during Professional Development the need to provide timely feedback to students, provide detailed rubrics for the projects and reorganize the lessons to increase the initial engagement with the material. After two years of running pilots, the course is becoming student-centered, where most of the code and image samples provided in the lessons are based on code created by previous students.},
  address = {New York, NY, USA},
  author = {Alegre, Fernando and Underwoood, John and Moreno, Juana and Alegre, Mario},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366960},
  isbn = {9781450367936},
  keywords = {codeworld; computational thinking; computer science education; course; functional language; haskell; high school; introductory programming; k-12; professional development; teacher training},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {992–998},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Introduction to Computational Thinking: A New High School Curriculum using CodeWorld},
  url = {https://doi.org/10.1145/3328778.3366960},
  year = {2020}
}

@inproceedings{merged497,
  abstract = {This is the second occasion that Computational Thinking track is presented in TEEM Conference. Our Society is claiming for more technical professionals and future job will need workers know the computational principles to be applied in their daily tasks, independently they will be technicians. The computer science and programming skills need to be introduced since early beginning in the children education, but these are not enough, a new way of thinking and solving problems is needed, this is the computational thinking goal.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145349},
  isbn = {9781450353861},
  keywords = {Coding in schools; Coding skills throughout games; Computational Thinking; Computational thinking skills and curriculum; Controlling things; Programming robots; TACCLE 3; Using logic},
  location = {C\'{a}diz, Spain},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Computational thinking issues},
  url = {https://doi.org/10.1145/3144826.3145349},
  year = {2017}
}

@inproceedings{merged498,
  abstract = {Students of Computer Science often struggle with the abstract nature of the content of their studies, especially in the student entry phase. This is partly due to the fact that on the one hand, many first year students possess only moderate abstract thinking skills, while on the other hand, Computer Science lecturers often take the existence of abstract thinking skills for granted, as they themselves are well versed in this area. To bridge this gap and foster the students’ abstract thinking skills, we employ haptic material to make abstract tasks and the corresponding solution processes more tangible. This supports the development of abstract thinking skills, and at the same time helps to actively engage students in our classes on software development. In this paper we describe our experiences with active classroom learning units based on haptic materials, as part of our inverted classroom teaching.},
  address = {New York, NY, USA},
  author = {B\"{o}ttcher, Axel and Thurner, Veronika},
  booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
  doi = {10.1145/3593663.3593693},
  isbn = {9781450399562},
  keywords = {CS education; computational thinking; haptic learning material; programming education; student entry phase},
  location = {Seeon/Bavaria, Germany},
  numpages = {8},
  pages = {102–109},
  publisher = {Association for Computing Machinery},
  series = {ECSEE '23},
  title = {Combining Abstract Tasks and Haptic Material to Foster Computational Thinking in Computer Science Students},
  url = {https://doi.org/10.1145/3593663.3593693},
  year = {2023}
}

@article{merged499,
  abstract = {There is little empirical research related to how elementary students develop computational thinking (CT) and how they apply CT in problem-solving. To address this gap in knowledge, this study made use of learning trajectories (LTs; hypothesized learning goals, progressions, and activities) in CT concept areas such as sequence, repetition, conditionals, and decomposition to better understand students’ CT. This study implemented eight math-CT integrated lessons aligned to U.S. national mathematics education standards and the LTs with third- and fourth-grade students. This basic interpretive qualitative study aimed at gaining a deeper understanding of elementary students’ CT by having students express and articulate their CT in cognitive interviews. Participants’ (n = 22) CT articulation was examined using a priori codes translated verbatim from the learning goals in the LTs and was mapped to the learning goals in the LTs. Results revealed a range of students’ CT in problem-solving, such as using precise and complete problem-solving instructions, recognizing repeating patterns, and decomposing arithmetic problems. By collecting empirical data on how students expressed and articulated their CT, this study makes theoretical contributions by generating initial empirical evidence to support the hypothesized learning goals and progressions in the LTs. This article also discusses the implications for integrated CT instruction and assessments at the elementary level.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Luo, Feiya and Israel, Maya and Gane, Brian},
  doi = {10.1145/3494579},
  issue_date = {June 2022},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking instruction; assessment; elementary education; learning trajectory},
  month = {February},
  number = {2},
  numpages = {26},
  publisher = {Association for Computing Machinery},
  title = {Elementary Computational Thinking Instruction and Assessment: A Learning Trajectory Perspective},
  url = {https://doi.org/10.1145/3494579},
  volume = {22},
  year = {2022}
}

@article{merged500,
  abstract = {The momentum around computational thinking (CT) has kindled a rising wave of research initiatives and scholarly contributions seeking to capitalize on the opportunities that CT could bring. A number of literature reviews have showed a vibrant community of practitioners and a growing number of publications. However, the history and evolution of the emerging research topic, the milestone publications that have shaped its directions, and the timeline of the important developments may be better told through a quantitative, scientometric narrative. This article presents a bibliometric analysis of the drivers of the CT topic, as well as its main themes of research, international collaborations, influential authors, and seminal publications, and how authors and publications have influenced one another. The metadata of 1,874 documents were retrieved from the Scopus database using the keyword “computational thinking.” The results show that CT research has been US-centric from the start, and continues to be dominated by US researchers both in volume and impact. International collaboration is relatively low, but clusters of joint research are found between, for example, a number of Nordic countries, lusophone- and hispanophone countries, and central European countries. The results show that CT features the computing’s traditional tripartite disciplinary structure (design, modeling, and theory), a distinct emphasis on programming, and a strong pedagogical and educational backdrop including constructionism, self-efficacy, motivation, and teacher training.},
  address = {New York, NY, USA},
  articleno = {20},
  author = {Saqr, Mohammed and Ng, Kwok and Oyelere, Solomon sunday and Tedre, Matti},
  doi = {10.1145/3445984},
  issue_date = {September 2021},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; bibliometric research; computer science education; computing education research; history; literature review; scientometrics},
  month = {March},
  number = {3},
  numpages = {17},
  publisher = {Association for Computing Machinery},
  title = {People, Ideas, Milestones: A Scientometric Study of Computational Thinking},
  url = {https://doi.org/10.1145/3445984},
  volume = {21},
  year = {2021}
}

@inproceedings{merged501,
  abstract = {In the information age, online teaching will gradually become an inevitable trend in the era of modern education informatization. Online teaching has the advantages of easy operation and abundant resources, but it has higher requirements for the design of teaching mode and teaching content. Computational thinking, as the core idea of IT teaching, emphasizes the long-term development and deep development of IT learning, which has great practical significance for students to improve themselves and cultivate their ability development. So in the online teaching of high school IT courses, how to build an online teaching mode suitable for students' development and achieve the purpose of effectively cultivating students' computational thinking? This study combines specific teaching, guided by constructivist theory, nearest developmental zone theory, situational cognition and other theories, and uses literature research method, questionnaire survey method, quasi-experimental research method and other research methods to conduct a study on the construction and validation of online teaching model of high school information technology geared to the cultivation of computational thinking. The results of the study showed that the proposed teaching model was found to have a significant promotion effect on students' academic performance and computational thinking through the examination of students' academic performance and computational thinking.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Li, Qiuhong and Dong, Jiamin and Bai, Xinye and Cai, Minghan and Xu, Xiang},
  booktitle = {Proceedings of the 2023 14th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3588243.3588256},
  isbn = {9798400700651},
  keywords = {computational thinking; online learning; teaching models},
  location = {Shenzhen, China},
  numpages = {8},
  pages = {74–81},
  publisher = {Association for Computing Machinery},
  series = {IC4E '23},
  title = {Construction and Validation of an Online Teaching Model for the Development of Computational Thinking: Take high school information technology course as an example},
  url = {https://doi.org/10.1145/3588243.3588256},
  year = {2023}
}

@inproceedings{merged502,
  abstract = {The recent widespread popularity of computational thinking (CT) has raised the need for a reliable method for assessing it. Recent CT tests focus on programming skills rather than the analytical ability and problem-solving processes in science, philosophy and other areas of knowledge.  This poster presents the results (Test design) of an ongoing project that has developed a Psychometric Computational Thinking Test (PCTT) which has three phases: test design, test implementation and applying the test. In regards to the PCTT design, the reliability and validity of the test were based on content and construct validity which also includes its rating scales for its application. This work makes two contributions: (1) a standardized CT Test design incorporating psychometric techniques as well as computational techniques and (2) the inclusion of open-ended questions and their assessment with V of Aiken in order to validate responses.},
  address = {New York, NY, USA},
  author = {Santisteban, Julio and Santisteban-Mu\~{n}oz, Jennifer},
  booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3197091.3205823},
  isbn = {9781450357074},
  keywords = {Computational Thinking; Psychometric; metric},
  location = {Larnaca, Cyprus},
  numpages = {1},
  pages = {393},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2018},
  title = {Psychometric computational thinking test},
  url = {https://doi.org/10.1145/3197091.3205823},
  year = {2018}
}

@inproceedings{merged503,
  address = {New York, NY, USA},
  articleno = {1},
  author = {Bell, Tim},
  booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3481312.3488711},
  isbn = {9781450385718},
  location = {Virtual Event, Germany},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '21},
  title = {Computational thinking: online and offline, plugged and unplugged},
  url = {https://doi.org/10.1145/3481312.3488711},
  year = {2021}
}

@inproceedings{merged504,
  abstract = {Variable is a common computer science (CS) concept and is being introduced to upper elementary students in computational thinking (CT)-integrated instruction. However, there is scant empirical evidence of when and how elementary students should learn variables. For example, national computer science (CS) standards advise introducing variables in grades 3-5 and a K-8 variable learning trajectory (LT) synthesized learning goals from the literature and hypothesized four levels of thinking in working with variables. Yet, little empirical research lies behind these. This mixed methods study examined elementary students' understanding of variables. Participants were sampled from two fourth-grade classes from a Midwestern elementary school that implemented a series of CT-integrated math lessons. Students' written responses to variables assessment items were analyzed. Additionally, cognitive think-aloud interviews were conducted with nine students to elicit students' understanding while solving the variables assessment items. Our findings suggested that most students lacked a conceptual understanding of using variables to create generalized problem solutions that could work with any set of inputs. Additionally, students had difficulty with specific mechanics of using variables such as storing user input in a variable, updating variable values, and using the values stored in variables. This study underscores the need for careful design, use, and analysis of elementary CT-integrated lessons and assessments to introduce and reinforce the conceptual understanding and specific mechanics of variables for elementary students.},
  address = {New York, NY, USA},
  author = {Luo, Feiya and Yan, Wei and Liu, Ruohan and Israel, Maya},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
  doi = {10.1145/3478431.3499323},
  isbn = {9781450390705},
  keywords = {assessment; computational thinking; elementary instruction; mixed methods; variables},
  location = {Providence, RI, USA},
  numpages = {7},
  pages = {523–529},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Elementary Students' Understanding of Variables in Computational Thinking-Integrated Instruction: A Mixed Methods Study},
  url = {https://doi.org/10.1145/3478431.3499323},
  year = {2022}
}

@inproceedings{merged505,
  abstract = {An overarching goal of biostatistics education at any public health school is to cultivate students' ability to solve real-world problems. This paper discusses unconventional approaches to enhancing students' problem-solving ability in the setting of an online master degree program in epidemiology. Citing students' actual work, the author advocates shifting more attention to how to foster knowledge elaboration, an integral, yet oft-overlooked part of problem-based learning. The author further illustrates how computational thinking skills can be weaved into biostatistics teaching to facilitate knowledge elaboration.},
  address = {New York, NY, USA},
  author = {Zheng, Qi},
  booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
  doi = {10.1145/3474995.3475043},
  isbn = {9781450390033},
  keywords = {biostatistics; computational thinking; knowledge elaboration},
  location = {Shanghai, China},
  numpages = {6},
  pages = {283–288},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '21},
  title = {Let Computational Thinking Permeate Biostatistics Education of Public Health Students},
  url = {https://doi.org/10.1145/3474995.3475043},
  year = {2021}
}

@inproceedings{merged506,
  abstract = {The introductory agent-based modeling course we are presenting aims to equip second-year sociology students with basic skills which are critical to transforming their research ideas into theories and computational models. Our course follows a general course on theory construction in social science. As one of the first interactions of undergraduate social science students with computer science concepts, the course partially serves as a CS0 course; however, the main focus is on the higher-level skills needed to model social phenomena. This requires the course to maintain multiple foci on computer science and domain skills. In this paper, we present a course design considerations and establish a foundation for the comparison of agent-based models and the computational thinking and CS0 skills required for undergraduate social scientists studying agent-based modeling.},
  address = {New York, NY, USA},
  author = {Musabirov, Ilya and Suschevskiy, Vsevolod},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372687},
  isbn = {9781450367936},
  keywords = {agent-based modeling; computational thinking; social science},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1368},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Teaching Undergraduate Sociologists Modeling and Computational Thinking},
  url = {https://doi.org/10.1145/3328778.3372687},
  year = {2020}
}

@inproceedings{merged507,
  abstract = {Computational Thinking has been understood as an essential ability in a society mediated by technology. However, literature in the field shows that initiatives for developing this ability rarely address challenging contexts audiences. In this paper, we draw on the notion of mental models to relate the concepts of Computational Thinking and Digital Culture. We claim that practicing basic skills when exploring simple prototypes favors people to build mental models that are useful to understand and use technologies. In a case study, we engaged adults in their initial stages of literacy in activities that evolved from basic ones with a low fidelity ATM prototype to complex ones with a functional prototype. We identified that participants used the experience and knowledge they obtained from previous activities to carry out the next ones, showing confidence and autonomy when exploring a functional prototype.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Ortiz, Julia and Moreira, Carolina and Menezes, Krissia and Ferrari, Bernardo and Junior, Deogenes and Pereira, Roberto},
  booktitle = {Proceedings of the X Latin American Conference on Human Computer Interaction},
  doi = {10.1145/3488392.3488401},
  isbn = {9781450384896},
  keywords = {computational thinking; digital culture; human-computer interaction},
  location = {Valparaiso, Chile},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {CLIHC '21},
  title = {Computational Thinking for Digital Culture Development: discussions based on a practical experience},
  url = {https://doi.org/10.1145/3488392.3488401},
  year = {2021}
}

@article{merged508,
  abstract = {The purpose of this study is to examine the role of Minecraft-based coding activities on computational thinking (CT) of middle school students. In the study, CT was conceptualized so that it encapsulates not only the knowledge of computational concepts (e.g., loops and conditionals) but also the use of CT practices (e.g., testing and debugging). Data were collected using a combination of knowledge of computational concepts tests, the Minecraft-based coding artifacts, and one-on-one student interviews focusing on the processes of developing computational artifacts. The participants were 20 fifth-grade middle school students from a low-income public school with very limited (if none) formal computer programming experiences before the study. The Minecraft-based coding activities were designed and implemented as an instructional program to last 6 weeks. The results of the study showed a statistically significant increase in students’ knowledge of computational concepts. Based on the analysis of the students’ final coding artifacts, we identified that students mostly used the concepts of sequences, events, loops, and parallelism correctly, whereas variables, operators, and conditionals appeared to be the least successfully used concepts. The qualitative analysis of the artifact-based interviews showed that students employed the CT practices of testing and debugging most of the time while developing an artifact through coding. In contrast, the least resorted CT practice appeared to be reusing and remixing.},
  address = {New York, NY, USA},
  articleno = {21},
  author = {Kutay, Emine and Oner, Diler},
  doi = {10.1145/3471573},
  issue_date = {June 2022},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Knowledge of computational concepts; Minecraft; coding; computational thinking practices; low-income; middle school},
  month = {February},
  number = {2},
  numpages = {19},
  publisher = {Association for Computing Machinery},
  title = {Coding with Minecraft: The Development of Middle School Students’ Computational Thinking},
  url = {https://doi.org/10.1145/3471573},
  volume = {22},
  year = {2022}
}

@inproceedings{merged509,
  abstract = {The worldwide push for computing education at younger ages requires that teachers are prepared to deliver instruction that supports all learners. Other discipline-based education research fields offer a wealth of instructional scaffolds worthy of exploration in computing. One such scaffold drawn from math education is diagramming. While diagrams are frequently employed in university computing, little is known about its applications in K-8 (ages 6-14) computing.To inform diagram design for K-8 computing, we investigated how the spatial orientation of a diagram (horizontal or vertical) influenced the extent to which K-8 teachers developed different technological, pedagogical, and content knowledge (TPACK) of computational thinking (CT) concepts, such as loops, conditionals, and decomposition. We found that more teachers were able to decompose a sequence of events when using a vertical diagram. While teachers in both conditions were similarly able to describe various CT concepts and aspects of TPACK, more teachers using a vertical diagram made connections between concepts, whereas more teachers using a horizontal diagram described concepts in isolation. We hope this exploration will spur future work into diagramming and more broadly, spatial reasoning in K-8 computing.},
  address = {New York, NY, USA},
  author = {Salac, Jean and Eatinger, Donna and Franklin, Diana},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569737},
  isbn = {9781450394314},
  keywords = {computational thinking; diagrams; k-8; spatial reasoning; teacher professional development; tpack},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {917–923},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {The Role of Spatial Orientation in Diagram Design for Computational Thinking Development in K-8 Teachers},
  url = {https://doi.org/10.1145/3545945.3569737},
  year = {2023}
}

@inproceedings{merged510,
  abstract = {Today’s teaching and didactical methods are trying more and more to integrate digital technologies and computational thinking (CT) into other subjects. One way of combining and integrating these important skills and CT into all subjects, school levels, and school types is to include the game Poly-Universe (PolyUni). According to the results of the Poly-Universe in School Education (PUSE) study 2018, the game can be expected to have a positive effect on visual perceptual progress, including isolation and the development of shape-background skills. So far, however, comparatively few attempts have been made to explore the educational possibilities of PolyUni for different school levels and subjects, besides mathematics. This research explores how PolyUni can be used to promote CT and to evaluate whether the learning objectives in the subjects of physical education and biology have been achieved. Furthermore, it examines how PolyUni combines the requirements of the different curricula in secondary school, based on self-designed tasks. Additionally, further aspects PolyUni can promote besides the curriculum in secondary school are discussed. To explore the above-mentioned aspects, a mixed-methods study methodology was used. The participant observation method was employed for qualitative data collection, and a self-designed assessment grid and additional picture analysis were used for the quantitative data. The game was utilized in two workshops for biology and physical education at an Austrian secondary school, and fifty-six students were observed and analyzed. Based on the present data, it can be assumed that PolyUni helps to achieve the requirements of the curricula and pre-defined teaching and learning objectives in a playful way. Furthermore, the game not only promotes CT in secondary school but also encourages enjoyment and collaboration between peers in biology and physical education lessons.},
  address = {New York, NY, USA},
  author = {Schmidthaler, Eva and Schalk, Maritta and Schmollm\"{u}ller, Matthias and Sabitzer, Barbara and Andjic, Branko and Lavicza, Zsolt},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572554},
  isbn = {9781450397766},
  keywords = {Education; computational thinking; game-based learning; poly-Universe},
  location = {Barcelona, Spain},
  numpages = {8},
  pages = {24–31},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {The Effects of Using Poly-Universe on Computational Thinking in Biology and Physical Education},
  url = {https://doi.org/10.1145/3572549.3572554},
  year = {2023}
}

@article{merged511,
  abstract = {Computational, logic thinking and problem-solving skills are extremely important for students' success in the future. This poster describes a collaborative project that was conducted to promote K-8 Computer Science Education among in-service and pre-service teachers. More than 40 pre-service and in-service teachers participated in a learning experience designed to address the K-12 Computer Science Framework and Maryland's K-12 Computer Science Standards. The collaboration was designed to facilitate participants' learning about and application of foundational principles of computer science and computational thinking into K-8 STEM curriculum and teaching. Participants explored hard/software platforms and used open source sites such as Scratch, Code.org and Code Academy. Participants envisioned how activities apply to K-8 classrooms and worked in pairs or groups to design a problem-based project for students. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge.},
  address = {Evansville, IN, USA},
  author = {Li, Jiang and Shockey, Paulette and Cuddapah, Jennifer and Graybeal, Christy and Williams, Anthony},
  issn = {1937-4771},
  issue_date = {October 2020},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {3},
  numpages = {1},
  pages = {174},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Introducing computational thinking to pre-service teachers},
  volume = {36},
  year = {2020}
}

@inproceedings{merged512,
  abstract = {This poster provides an overview of the goals and objectives of the New York City Department of Education's (NYCDOE) Hack League, a district-wide competition that invites middle and high school students with any level of CS experience to explore the systemic impacts and applications of computing. By requiring participants to interact with data and prototype a proposed solution to an issue that the data illuminates, students creatively engage in a human-centered design and strategic problem-solving process aimed at improving the quality of life and civic issues in their communities. Each stage of competition represents a component of the engineering design process, thereby encouraging students to be thoughtful programmers. Through three stages of competition, students identify an issue and validate it with data, outline and prototype a solution while incorporating feedback from industry professionals and subject matter experts, and build metrics into their product. Making open data accessible to students has proven to be an effective approach to developing citizen scientists in NYC. This competition could be replicated in districts anywhere in the country and can be organized within or across schools. It is a great way to encourage student development as civic-minded individuals, engagement with their local government and elected officials, and application of computational thinking and computer science skills.},
  address = {New York, NY, USA},
  author = {Davis, Kylie and Shneyer, Elana},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372636},
  isbn = {9781450367936},
  keywords = {data analysis; data science; software prototyping},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1344},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Teaching Computational Thinking through Civics: NYC's Hack League},
  url = {https://doi.org/10.1145/3328778.3372636},
  year = {2020}
}

@inproceedings{merged513,
  abstract = {Computational thinking as a key in K-12 education has gotten more and more attention. Researchers and teachers are focusing more on tools and teaching methods that could edify computational thinking. Nowadays, developing students’ computational thinking through graphical programming has become a norm. In addition, project-based learning has been proven effective in cultivating students’ computational thinking. The purpose of this study is to find out the effectiveness of the paired programming teaching method, which is based on project-based learning in junior high school students’ computational thinking, and to provide new opportunities and conditions for the development of computational thinking in junior high school students. This research could expand the view of starting project-based graphical programming courses, and provide a reference for the designing, developing, and teaching of junior high school computational thinking courses.},
  address = {New York, NY, USA},
  author = {Liu, Hui and Li, Zhen and Duan, Jia Ting and Zeng, Yu},
  booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
  doi = {10.1145/3582580.3582630},
  isbn = {9781450398015},
  keywords = {computational thinking; computational thinking self-efficacy; junior high school student; pair programming; project-based learning},
  location = {Lincoln, United Kingdom},
  numpages = {5},
  pages = {287–291},
  publisher = {Association for Computing Machinery},
  series = {ICETM '22},
  title = {The Impact of Pair Programming Based on Project-Based Learning on Computational Thinking of Junior High School Students},
  url = {https://doi.org/10.1145/3582580.3582630},
  year = {2023}
}

@inproceedings{merged514,
  abstract = {This paper presents iThinkSmart, an immersive virtual reality-based application to facilitate the learning of computational thinking (CT) concepts. The tool was developed to supplement the traditional teaching and learning of CT by integrating three virtual mini games, namely, River Crossing, Tower of Hanoi, and Mount Patti treasure hunt, to foster immersion, interaction, engagement, and personalization for an enhanced learning experience. iThinkSmart mini games can be played on a smartphone with a Goggle Cardboard and hand controller. This first prototype of the game accesses players' competency of CT and renders feedback based on learning progress.},
  address = {New York, NY, USA},
  articleno = {34},
  author = {Joseph Agbo, Friday and Sunday Oyelere, Solomon and Suhonen, Jarkko and Tukiainen, Markku},
  booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3488042.3489963},
  isbn = {9781450384889},
  keywords = {Computational thinking; Computing education; HMD; Immersive virtual reality; VR; game-based learning; iThinkSmart},
  location = {Joensuu, Finland},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '21},
  title = {iThinkSmart: Immersive Virtual Reality Mini Games to Facilitate Students’ Computational Thinking Skills},
  url = {https://doi.org/10.1145/3488042.3489963},
  year = {2021}
}

@inproceedings{merged515,
  abstract = {The research project aims to identify the cognitive processes underlying the Computational Thinking (CT) skills of primary school pupils. Moreover, it investigates which didactical strategies are most effective for implementing CT in the curriculum. A mixed methods research was designed: qualitative data gathered from interviews and observations are combined with quantitative data collected through pre- and post-test measures with respect to the intervention.},
  address = {New York, NY, USA},
  author = {Moschella, Marialaura},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3325599},
  isbn = {9781450368957},
  keywords = {agile methodology; cognitive skills; computational thinking},
  location = {Aberdeen, Scotland Uk},
  numpages = {2},
  pages = {344–345},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {Computational Thinking At Primary School: Didactical and Psychological Aspects},
  url = {https://doi.org/10.1145/3304221.3325599},
  year = {2019}
}

@inproceedings{merged516,
  abstract = {Programming and computational thinking (CT) have become important topics in elementary education and are being implemented by national curricula, extracurricular programs, and informal learning environments. Most related research and implementation is mainly focused on block-based programming (BBP). However, BBP can lead to bad programming habits and a later transition to text-based programming (TBP) has been shown to be difficult for students, as they can lose confidence and motivation. Thus, we developed a course to facilitate the transition from BBP to TBP and foster CT while also promoting motivation and students’ programming-related self-concept. We considered data from 27 fourth-grade students aged 9 to 10, who participated in the course as part of an extracurricular enrichment program. In a pre-/post-test design, we assessed CT and its cognitive correlates such as non-verbal visuospatial reasoning, verbal reasoning, arithmetic competencies as well as the student’s motivation and attitude towards programming. Results indicated improved students’ CT, arithmetic, and non-verbal visuospatial reasoning. Furthermore, the transition to TBP did not significantly reduce students’ motivation for programming. Taken together, these findings indicate that the developed intervention may be helpful to facilitate the transition from BBP to TBP while keeping the students motivated and fostering CT.},
  address = {New York, NY, USA},
  articleno = {12},
  author = {Kunz, Katrin and Moeller, Korbinian and Ninaus, Manuel and Trautwein, Ulrich and Tsarava, Katerina},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609770},
  isbn = {9798400708510},
  keywords = {Python; block-based programming; computational thinking; elementary school age; hybrid programming; text-based programming; transition},
  location = {Cambridge, United Kingdom},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Making the Transition to Text-Based Programming: The Pilot Evaluation of a Computational Thinking Intervention for Primary School Students},
  url = {https://doi.org/10.1145/3605468.3609770},
  year = {2023}
}

@inproceedings{merged517,
  abstract = {The role of non-formal education in increasing female participation in Computer Science (CS) is a hot topic. Short-term interventions, including programming skill outreach activities, have been reported to increase self-efficacy and willingness to pursue computing careers in young women. We explored the impact of a programming outreach activity on three types of measures for 30 female pupils: computing self-efficacy, social participation, and understanding of basic computing concepts. Preliminary results revealed a significant increase in participants' self-efficacy and sense of belonging in computing after the informal learning activity. Students were more focused on tasks when engaging socially with their peers and teachers. A decrease in misconception was observed in uni-structural knowledge but no significant difference was found in multi-structural computing knowledge acquisition. These data provide a baseline for study of the long term impact of outreach activities.},
  address = {New York, NY, USA},
  author = {Hiley, Katherine and Cebolla, Hannah and Elshehaly, Mai},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594197},
  isbn = {9798400701399},
  keywords = {engagement; gender; non-formal education; outreach; women},
  location = {Turku, Finland},
  numpages = {1},
  pages = {642},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {The Impact of Non-Formal Computer Science Outreach on Computational Thinking in Young Women},
  url = {https://doi.org/10.1145/3587103.3594197},
  year = {2023}
}

@inproceedings{merged518,
  abstract = {Automatic grading systems help lessen the load of manual grading. Most existent autograders are based on unit testing, which focuses on the correctness of the code, but has limited scope for judging code quality. Moreover, it is cumbersome to implement unit testing for evaluating graphical output code. We propose an autograder that can effectively judge the code quality of the visual output codes created by students enrolled in a high school-level computational thinking course. We aim to provide suggestions to teachers on an essential aspect of their grading, namely the level of student competency in using abstraction within their codes. A dataset from five different assignments, including open-ended problems, is used to evaluate the effectiveness of our autograder. Our initial experiments show that our method can classify the students' submissions even for open-ended problems, where existing autograders fail to do so. Additionally, survey responses from course teachers support the importance of our work.},
  address = {New York, NY, USA},
  author = {Tisha, Sirazum Munira and Oregon, Rufino A. and Baumgartner, Gerald and Alegre, Fernando and Moreno, Juana},
  booktitle = {Proceedings of the 4th International Workshop on Software Engineering Education for the Next Generation},
  doi = {10.1145/3528231.3528357},
  isbn = {9781450393362},
  keywords = {code quality; lexical analysis; machine learning; open-ended problems},
  location = {Pittsburgh, Pennsylvania},
  numpages = {8},
  pages = {20–27},
  publisher = {Association for Computing Machinery},
  series = {SEENG '22},
  title = {An automatic grading system for a high school-level computational thinking course},
  url = {https://doi.org/10.1145/3528231.3528357},
  year = {2023}
}

@inproceedings{merged519,
  abstract = {To meet the demands of 21st century societies, it is essential that faculty across disciplines engage students with course activities and assignments that foster the development of computational thinking (CT). In this study, we address two pertinent questions: (1) What types of artifacts do students develop across different disciplines in response to CT-driven problem prompts' and (2) What types of CT skills do these artifacts demonstrate? To answer the questions, we examined 273 artifacts developed by undergraduate students across seven course assignments from four disciplines: mathematics, sociology, music, and English using a rubric developed to evaluate the following CT skills: abstraction, decomposition, data analysis, and algorithmic thinking. We found that a range of skills were reflected across student artifacts.},
  address = {New York, NY, USA},
  author = {Zhang, Yifan and Mohammad Mirzaei, Amanda and Pollock, Lori and Mouza, Chrystalla and Guidry, Kevin},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439594},
  isbn = {9781450380621},
  keywords = {computational thinking; undergraduate education},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1315},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Exploring Computational Thinking Across Disciplines Through Student-Generated Artifact Analysis},
  url = {https://doi.org/10.1145/3408877.3439594},
  year = {2021}
}

@inproceedings{merged520,
  abstract = {In this work, we describe our effort to develop, pilot, and evaluate a model for infusing computational thinking into undergraduate curricula across a variety of disciplines using multiple methods that previously have been individually tried and tested, including: (1) multiple pathways of computational thinking, (2) faculty professional development, (3) undergraduate peer mentors, and (4) formative assessment. We present pilot instantiations of computational thinking integration in three different disciplines including sociology, mathematics and music. We also present our professional development approach, which is based on faculty support rather than a co-teaching model. Further, we discuss formative assessment during the pilot implementation, including data focusing on undergraduate students' understanding and dispositions towards computational thinking. Finally, we reflect on what worked, what did not work and why, and identify lessons learned. Our work is relevant to higher education institutions across the nation interested in preparing students who can utilize computational principles to address discipline-specific problems.},
  address = {New York, NY, USA},
  author = {Pollock, Lori and Mouza, Chrystalla and Guidry, Kevin R. and Pusecker, Kathleen},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287469},
  isbn = {9781450358903},
  keywords = {computational thinking; computer science; computer science principles.; undergraduate students},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {435–441},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Infusing Computational Thinking Across Disciplines: Reflections &amp; Lessons Learned},
  url = {https://doi.org/10.1145/3287324.3287469},
  year = {2019}
}

@inproceedings{merged521,
  abstract = {Modeling or building models is a widely spread concept that includes several competences relevant for every domain. Our Erasmus+ project "Modeling at school", hence, aims at integrating modeling techniques from the field of computer science such as class or activity diagrams in order to support teaching and learning in all subjects and levels of primary and secondary education. On the one hand, we introduce modeling as effective and brain-based learning strategy and, on the other hand, we use it as language that expresses, describes and trains computational thinking integrated in everyday life situations and topics. This paper describes the development of a reference framework following the Common European Framework of Reference for Languages (CEFR) that will serve as guideline and assessment tool for teachers without computer science background, who teach the Austrian curriculum "Basic Digital Education".},
  address = {New York, NY, USA},
  author = {Sabitzer, Barbara and Demarle-Meusel, Heike and Rottenhofer, Marina},
  booktitle = {Proceedings of the 2020 9th International Conference on Educational and Information Technology},
  doi = {10.1145/3383923.3383960},
  isbn = {9781450375085},
  keywords = {Modeling; UML; brain-based learning strategy; reference framework},
  location = {Oxford, United Kingdom},
  numpages = {4},
  pages = {211–214},
  publisher = {Association for Computing Machinery},
  series = {ICEIT 2020},
  title = {Modeling as Computational Thinking Language: Developing a Reference Framework},
  url = {https://doi.org/10.1145/3383923.3383960},
  year = {2020}
}

@inproceedings{merged522,
  abstract = {In this poster, we will present the initial results of a meta-aggregation study that synthesizes qualitative evidence to identify the charac- teristics of effective in-service teacher professional development programs (TPD) around computational thinking (CT) integration in K-12. In addition, we will discuss the importance of these char- acteristics in supporting teachers. We identified four synthesized findings representing the key characteristics of effective TPDs for CT integration in K-12 (e.g., improving teacher capacity in CT in- tegration, creating meaningful learning experiences, establishing research-practice partnership, and providing continuous and sus- tainable support).},
  address = {New York, NY, USA},
  author = {Caskurlu, Secil and Yadav, Aman and Santo, Rafi},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439639},
  isbn = {9781450380621},
  keywords = {computational thinking; k-12; teacher professional development},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1317},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Preparing Teachers for Computational Thinking Integration in K-12: A Meta-Aggregation},
  url = {https://doi.org/10.1145/3408877.3439639},
  year = {2021}
}

@inproceedings{merged523,
  abstract = {Computational Thinking has become an important cognitive skill to develop in all areas of education. Despite its increasing popularity, the construct itself is only partially understood. There are few measures currently in place that advance our understanding of computational thinking and its subconstructs. In this article, we analyze existing measures of computational thinking (CT), looking specifically at their measures of decomposition. Decomposition is defined as the process of breaking down a problem into its sub-components. Even though most definitions of computational thinking include decomposition, fewbreak down the decompositional process beyond a basic definition. As one of the first steps in the computational thinking process, it is important to better understand the various manners in which decomposition occurs, which methods are most effective, and under what conditions. To better understand the decompositional process, we analyze evidence of decompositional process in a variety of disciplines. We then present a framework for decomposition in computational thinking. We demonstrate how this framework may help educators to better prepare students to break down complex problems, as well as provide guidance for how decompositional ability might be measured.},
  address = {New York, NY, USA},
  author = {Rich, Peter J. and Egan, Garrett and Ellsworth, Jordan},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3319793},
  isbn = {9781450368957},
  keywords = {assessment; computational thinking; decomposition; framework},
  location = {Aberdeen, Scotland Uk},
  numpages = {6},
  pages = {416–421},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {A Framework for Decomposition in Computational Thinking},
  url = {https://doi.org/10.1145/3304221.3319793},
  year = {2019}
}

@inproceedings{merged524,
  abstract = {In this article, the authors introduce the new educational curricula for Computing and Robotics in Andalusia [1], that will be offered as an optional subject for more than three hundred thousand students during 2021/2022 academic year and so on.This curriculum offers young students, aged 12-15 years old, with the opportunity to gain a better understanding on how our digital world works, as well as, developing a set of skills known as computational thinking. This term refers to a way of understanding and solving problems, in any discipline, with the help of computers.\c{c}},
  address = {New York, NY, USA},
  articleno = {18},
  author = {Garcia-Robles, Rocio and Fern\'{a}ndez-Cabaleiro, Santiago},
  booktitle = {Proceedings of the 10th International Conference on Digital and Interactive Arts},
  doi = {10.1145/3483529.3483662},
  isbn = {9781450384209},
  keywords = {Computational thinking; Educational programming; Robotics; STEAM-STEAM-STEAM+A},
  location = {Aveiro, Portugal, Portugal},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {ARTECH '21},
  title = {STEAM for all: New Computational Thinking Curricula in Spanish Formal Secondary Education},
  url = {https://doi.org/10.1145/3483529.3483662},
  year = {2022}
}

@inproceedings{merged525,
  abstract = {Based on the technology acceptance model, this paper constructs a computational thinking acceptance model for normal students. Taking normal students from H Normal University as a research sample, the structural equation model is used to quantitatively analyze that model. The research results show that subjective norms, the usefulness and ease of use of computational thinking have a positive and significant impact on the attitude and behavioral intentions of normal students to use computational thinking.},
  address = {New York, NY, USA},
  author = {Tian, Xinyu and Li, Chaoqian and Zhao, Yaru},
  booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
  doi = {10.1145/3474995.3475046},
  isbn = {9781450390033},
  keywords = {Computational thinking; Normal students; Structural equation model; Technology acceptance model},
  location = {Shanghai, China},
  numpages = {6},
  pages = {303–308},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '21},
  title = {Investigation on Computational Thinking of Normal Students Based on Technology Acceptance Model},
  url = {https://doi.org/10.1145/3474995.3475046},
  year = {2021}
}

@inproceedings{merged526,
  abstract = {Embedding Computational Thinking (CT) in the context of various school subjects across the curriculum, not only CS or STEM, is receiving increased attention. CT skills can be instrumental in many subjects, which makes the integration an opportunity for learning CT but also for deepening subject specific learning. This study focuses on language arts, in particular English as a second language. It investigates digital storytelling as a way to integrate CT, analyzing its impact on students’ learning both of English and of CT, and on students’ attitudes toward the CT integrated English lesson. A class of 8th grade students (average age 13 years) participated in the study. The impact of the CT integrated lessons was investigated using students’ final products, surveys, rubrics, exit tickets and focus group interviews. The results suggest that the digital storytelling approach may improve students’ learning of English and of CT, and that it helped enhancing students’ creativity and collaboration, thus promoting their digital participation.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Yeni, Sabiha and Nijenhuis-Voogt, Jacqueline and Hermans, Felienne and Barendsen, Erik},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556858},
  isbn = {9781450398534},
  keywords = {Computational Thinking; K–12 education; Language Arts; digital storytelling},
  location = {Morschach, Switzerland},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {An Integration of Computational Thinking and Language Arts: The Contribution of Digital Storytelling to Students’ Learning},
  url = {https://doi.org/10.1145/3556787.3556858},
  year = {2022}
}

@inproceedings{merged527,
  abstract = {Computational thinking (CT) is seen as one of the core elements fostered in STEM education, and many countries prepare and implement curricula for its development. Researchers realize that the development of CT in students at the elementary and middle school levels not only enables earlier use of CT, but also can better solute the problems in their daily learning. This study investigated the impact of self-directed learning on the development of CT in a block-based programming course. Using Pre- and posttest quasi-experimental research method, 128 students from a middle school were selected. Through the CT skill scale, the CT self-efficacy scale, and semistructured interviews, the quantitative and qualitative data were analyzed after four months of interventions. The findings revealed that the self-directed learning had a positive impact on middle school students’ CT skill and self-efficacy. Therefore, results revealed that self-directed learning is one of the effective learning strategies for developing CT of middle school students.},
  address = {New York, NY, USA},
  author = {Zhou, Qian and Luo, Xiande and Dong, Yilin and Khalid, Faiza and Ma, Hongliang},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572613},
  isbn = {9781450397766},
  location = {Barcelona, Spain},
  numpages = {4},
  pages = {403–406},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {The Effectiveness of Self-Directed Learning in Developing Computational Thinking of Middle School Students},
  url = {https://doi.org/10.1145/3572549.3572613},
  year = {2023}
}

@inproceedings{merged528,
  abstract = {Recent years have seen increased focus on integrating Computational Thinking (CT) across subject areas in lieu of treating it as a standalone subject. Over the course of two years, we focused on teacher development in a large city school system via summer workshops that brought in-service and pre-service teachers together to co-create integrated CT lessons. In this experience report, we will describe the workshop design and share the perspectives of the participating K-5 teachers. One particular area of focus of the workshop was integrating 'plugged' or technology-based computing examples for the teachers. Further, we engaged the teachers with a discussion of the role of CT in promoting equity for students and demonstrated ways in which student cultural experiences could be activated through creative computing. Specific outcomes of the work included increased confidence and value in CT vocabulary usage, ideas to infuse existing curriculum with CT ideas, and teacher belief that CT could be used as a "gateway" for learning CS. We make recommendations for future efforts to include CT in pre-service teacher preparation.},
  address = {New York, NY, USA},
  author = {Moudgalya, Sukanya Kannan and Yadav, Aman and Sands, Philip and Vogel, Sara and Zamansky, Mike},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3430665.3456334},
  isbn = {9781450382144},
  keywords = {K-5; computational thinking; equity; teacher education},
  location = {Virtual Event, Germany},
  numpages = {7},
  pages = {262–268},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Teacher Views on Computational Thinking as a Pathway to Computer Science},
  url = {https://doi.org/10.1145/3430665.3456334},
  year = {2021}
}

@inproceedings{merged529,
  abstract = {Computational thinking (CT) is a means to help learners engage in authentic disciplinary and problem-solving practices of computer science (CS). For CS classrooms, CT is considered "thinking like a computer scientist". CT is believed to be an important learning goal of introductory CS in addition to CS concepts and programming. Despite the growing attention on CT in K-12 CS education, there is lingering confusion on the what and how of CT, and CT's relationship to coding and CS. Education research on disciplinary thinking skills in science and mathematics education can provide guidance for teaching and learning of CT. For example, (a) The shift in emphasis on disciplinary thinking helps focus on deeper conceptual understanding rather than rote learning of knowledge and facts. Hence thinking like a scientist, or mathematician, historian or computer scientist, draws attention to authentic practices of those disciplines. (b) Thinking skills are best taught in context. Therefore, CT should be taught in CS classrooms or integrated into learning of other subjects rather than taught as a separate skill or subject. (c) Even if there is no transfer beyond the context in which they are taught, a focus on thinking skills helps in deeper conceptual learning; (d) Like critical or creative thinking, CT should be integrated into other subjects to enrich learning. Research on meaningful technology integration across subjects provides useful frameworks to inform CT integration efforts. This talk aims to productively move the discourse on CT toward concrete ideas for K-12 educators, researchers, and curricular designers.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293763},
  isbn = {9781450358903},
  keywords = {computational thinking; disciplinary thinking skills; k-12 computer science; problem solving},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1283},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Thinking about Computational Thinking: Lessons from Education Research},
  url = {https://doi.org/10.1145/3287324.3293763},
  year = {2019}
}

@inproceedings{merged530,
  abstract = {Teachers new to computing who are not familiar with technical “jargon” can feel like they have landed in a foreign world, making them reluctant to take on the subject, and potentially leading to misconceptions and misunderstandings in the classroom. The diversity of technical words, metaphors, and phrases in different contexts can make their meanings confusing, ambiguous or misunderstood for the diverse user groups in computing education. Therefore, understanding the nature of the commonly claimed difficulties and confusion caused by computer jargon among teachers becomes important for finding ways to address this issue. This paper presents the findings of an empirical study conducted to understand the nature of teachers’ understanding of computational terms (jargon) related to Computational Thinking concepts, and how a relevant professional development intervention can help to resolve issues related to them. The results indicate that the nature of the teachers’ understanding of computational terms can be either that the computational meaning is not known, that the computational context is unclear, or their applicability is unclear. Concerns about teachers finding computer jargon difficult to understand can be because the computational context in which they are applied makes them difficult for teachers to understand, rather than not knowing their meanings in the first place. Moreover, appropriate support can enable teachers to learn the techniques and skills that the terminology refers to.},
  address = {New York, NY, USA},
  author = {Munasinghe, Bhagya and Bell, Tim and Robins, Anthony},
  booktitle = {Proceedings of the 23rd Australasian Computing Education Conference},
  doi = {10.1145/3441636.3442311},
  isbn = {9781450389761},
  keywords = {Computational thinking; K-12; Professional development; Teachers; jargon},
  location = {Virtual, SA, Australia},
  numpages = {9},
  pages = {106–114},
  publisher = {Association for Computing Machinery},
  series = {ACE '21},
  title = {Teachers’ understanding of technical terms in a Computational Thinking curriculum},
  url = {https://doi.org/10.1145/3441636.3442311},
  year = {2021}
}

@inproceedings{merged531,
  abstract = {One of the key factors for measuring success in distance learning is student interaction with learning materials. Remote instruction has gained substantial traction with the advent of online education, and this attention has increased in the presence of global pandemics. The asynchronous nature of remote learning has deteriorated the quality of education for learners, which calls for the design of novel interactive techniques to promote student engagement. We study the impact of traditional learning tools such as textbooks and videos in contrast with interactive learning media in computational and algorithmic thinking, and investigate students' perception of learning and actual learning comprehension in higher education.},
  address = {New York, NY, USA},
  author = {Bao, Yeting and Hosseini, Hadi},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439621},
  isbn = {9781450380621},
  keywords = {algorithms; computational problem solving; visualization},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1253},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Computational Thinking, Perception, and Confidence in Distance Learning},
  url = {https://doi.org/10.1145/3408877.3439621},
  year = {2021}
}

@inproceedings{merged532,
  abstract = {Social-emotional skills and computational thinking are related to problem-solving skills. Even though these are crucial areas in today’s world, they are only rarely taught in school and interventions that target these areas simultaneously are still very rare. We therefore developed a four-day workshop with the aim of fostering computational thinking and social-emotional skills in Grade 4 students. To do so, we used the child-friendly programming language Scratch. In the present paper, we investigate the feasibility of such a workshop. In total, 18 students participated. Data was collected via observation and interviews and analysed by qualitative content analysis. Results showed that students liked working with Scratch and liked working on social-emotional challenges. The workshop was found to work well and students worked independently. Pair work activity was found to be particularly beneficial. Although some issues initially proved challenging (mostly relating to “how to” issues in Scratch), these may easily be addressed by making suitable adaptations to the introduction of the program provided on Day 1 of the workshop.},
  address = {New York, NY, USA},
  author = {Maitz, Katharina and Paleczek, Lisa and Danielowitz, Claudia},
  booktitle = {Proceedings of Mensch Und Computer 2022},
  doi = {10.1145/3543758.3549885},
  isbn = {9781450396905},
  keywords = {computational thinking; primary school; programming; social-emotional competencies},
  location = {Darmstadt, Germany},
  numpages = {5},
  pages = {399–403},
  publisher = {Association for Computing Machinery},
  series = {MuC '22},
  title = {Simultaneously Fostering Computational Thinking and Social-Emotional Competencies in 4th Graders Using Scratch: A Feasibility Study},
  url = {https://doi.org/10.1145/3543758.3549885},
  year = {2022}
}

@inproceedings{merged533,
  abstract = {Computational thinking (CT) has been recognized as an important part of K-12 education in many countries and is often described in term relating to computer science both in concepts and context. However, the unique practice of computer scientists collaborating on problem solving is often overlooked in CT education in high school. We believe that collaboration is a key aspect of modern computing, and propose to integrate collaborative CT activities into existing high school education. The aim is to prepare students better for exploring computational approaches to high school disciplines as they are practiced in the professional world. Our research question is: how can we design tools for supporting students' collaboration while teaching CT in high school? A new computational environment, CoTinker, has been developed. The tool uses a cross-device approach and foster students' verbal communication and collaboration in groups. The tool was tested in a Biology class. Students' computational thinking (CT) was assessed through learning activities and students' communication was analyzed by audio recordings, of students, imbedded in CoTinker and by focus group interviews with students. Preliminary findings showed students being able to collaborate and solve CT tasks in groups independent of teacher or researchers. Results also indicated that students were able to use, navigate, and critically reflect upon the CoTinker environment.},
  address = {New York, NY, USA},
  author = {Musaeus, Line Have and Petersen, Marianne Graves and Klokmose, Clemens Nylandsted and Iversen, Ole Sejer},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499234},
  isbn = {9781450390712},
  keywords = {collaboration; computational thinking; k-12 education; toolkit},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1025},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {CoTinker - A Toolkit for Supporting Computational Thinking and Collaboration in High School Education.},
  url = {https://doi.org/10.1145/3478432.3499234},
  year = {2022}
}

@inproceedings{merged534,
  address = {New York, NY, USA},
  author = {Zhang, Wei and Wang, Jihan and Zeng, Xinyao},
  booktitle = {Proceedings of the 4th International Conference on Modern Educational Technology},
  doi = {10.1145/3543407.3543414},
  isbn = {9781450396790},
  keywords = {Computational thinking; Confirmatory factor analysis; Evaluation index system; Exploratory factor analysis; text programming},
  location = {Macau, China},
  numpages = {6},
  pages = {38–43},
  publisher = {Association for Computing Machinery},
  series = {ICMET '22},
  title = {Construction of Evaluation Index System for College Students' Text Programming Computational Thinking},
  url = {https://doi.org/10.1145/3543407.3543414},
  year = {2022}
}

@inproceedings{merged535,
  abstract = {Computational thinking skills are linked with success in learning to program. There is evidence that aspects of dance and choreography may improve cognitive skills related to computational thinking. This project aims to investigate the relationship and develop activities which enhance computational thinking skills and encourage girls to engage with programming.},
  address = {New York, NY, USA},
  author = {Fairlie, Fiona},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460018},
  isbn = {9781450383974},
  keywords = {computational thinking; computer education; dance},
  location = {Virtual Event, Germany},
  numpages = {2},
  pages = {666–667},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {An Investigation into the Relationship Between Structured Dance Activities and Computational Thinking Skills},
  url = {https://doi.org/10.1145/3456565.3460018},
  year = {2021}
}

@inproceedings{merged536,
  abstract = {There is a growing focus on computational thinking (CT) in terms of supporting children’s understanding of everyday technologies. But unlike other technologies, Augmented Reality (AR) has received limited attention. In this paper, we present ExposAR – a collaborative cross-device AR system enabling children to create, use, and reflect on AR technologies through the co-creation of a simple AR application. With ExposAR, we explore three core design principles: 1) reify computational concepts, 2) support collaborative cross-device authoring, and 3) incorporate the user’s own world. These principles were developed through a co-design process with teachers and evaluated with 46 primary school students. We found that the collaborative authoring process with ExposAR supported students in understanding AR concepts and challenged their perspectives on AR. With these results, we bring AR to the CT agenda and contribute novel design principles for exposing the underlying mechanisms and implications of AR.},
  address = {New York, NY, USA},
  articleno = {131},
  author = {Lunding, Mille Skovhus and Gr\o{}nb\ae{}k, Jens Emil Sloth and Bilstrup, Karl-Emil Kj\ae{}r and S\o{}rensen, Marie-Louise Stisen Kjerstein and Petersen, Marianne Graves},
  booktitle = {Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3491102.3517636},
  isbn = {9781450391573},
  keywords = {Augmented reality; computational thinking; education; interactive learning system},
  location = {New Orleans, LA, USA},
  numpages = {14},
  publisher = {Association for Computing Machinery},
  series = {CHI '22},
  title = {ExposAR: Bringing Augmented Reality to the Computational Thinking Agenda through a Collaborative Authoring Tool},
  url = {https://doi.org/10.1145/3491102.3517636},
  year = {2022}
}

@article{merged537,
  abstract = {In general, computer science majors do not consider K-12 education as a career pathway. A potential reason is a lack of introduction to the career path during their undergraduate careers. In this project, supported through a grant from the Maryland Center for Computing Education (cs4md.org), we developed a pilot computational thinking course blending computer science majors and pre-service teachers. The course focused on describing and integrating computational thinking in a way that would translate to K-12 classrooms while utilizing non-programming based computational tools to demonstrate these ideas. Participants were able to put these ideas into practice in K-8 classrooms during the course and reflect on how the lessons were received. We discuss the implementation of the course, field placement, motivations, and our initial analysis of survey data, including impacts on attitudes on education as a career choice for computer science majors.},
  address = {Evansville, IN, USA},
  author = {Jamieson, Alan C. and Jamieson, Lindsay H.},
  issn = {1937-4771},
  issue_date = {October 2020},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {3},
  numpages = {1},
  pages = {171},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking for computer science majors: an introduction to CS education career pathways},
  volume = {36},
  year = {2020}
}

@inproceedings{merged538,
  abstract = {Teaching programming and computational thinking (CT) in primary schools have become more common in the last decade. However, there has been little international consensus on what teaching the topics encompass. We present CodeInnova, a framework developed jointly between four partnering countries for teaching programming and CT in K–9. In this paper, we present the curriculum for teaching CT and the accompanying teaching materials developed in CodeInnova. We also discuss preliminary results of testing the developed resources in classrooms.},
  address = {New York, NY, USA},
  articleno = {35},
  author = {Zhidkikh, Denis and Fagerlund, Janne and Peltonen, Marika and Vesisenaho, Mikko},
  booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3488042.3489964},
  isbn = {9781450384889},
  keywords = {computational thinking; primary education; programming},
  location = {Joensuu, Finland},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '21},
  title = {”CodeInnova”: A Unified Framework for Teaching Programming and Computational Thinking In Primary Schools},
  url = {https://doi.org/10.1145/3488042.3489964},
  year = {2021}
}

@inproceedings{merged539,
  abstract = {At present, there is a certain lag in the teaching ability of computational thinking in our country. This article is based on STEM86 platform, ISTE published by the author "Educator standards: Under the guidance of computational Thinking ability, a standard system for evaluating teachers' computational thinking teaching ability was constructed, and a test scale for evaluating teachers' computational thinking teaching ability was designed. The reliability and validity test and difficulty differentiation test proved that the designed test scale had good scientificity and reliability. On this basis, using this scale, through the empirical way, from three dimensions of computer discipline knowledge and skills, teaching design ability, evaluation and reflection ability to evaluate teachers before and after using STEM86 platform computational thinking teaching ability changes. The results show that STEM86 platform not only solves teachers' programming teaching resource needs, but also effectively improves teachers' computational thinking teaching ability, and provides more references and ideas for teachers' computational thinking teaching ability improvement research.},
  address = {New York, NY, USA},
  author = {Wang, Juan and Bai, Xinye and Xiang, Qianchen and An, Langsha and Cai, Minghan and He, Chunlin},
  booktitle = {Proceedings of the 2022 13th International Conference on E-Education, E-Business, E-Management, and E-Learning},
  doi = {10.1145/3514262.3514311},
  isbn = {9781450387187},
  keywords = {Computational thinking teaching ability; STEM86 platform},
  location = {Tokyo, Japan},
  numpages = {5},
  pages = {173–177},
  publisher = {Association for Computing Machinery},
  series = {IC4E '22},
  title = {Research on the Improvement of Teachers' Computational Thinking Teaching Ability Based on STEM86 Platform},
  url = {https://doi.org/10.1145/3514262.3514311},
  year = {2022}
}

@inproceedings{merged540,
  abstract = {Modeling is commonly employed in school settings to help students develop an understanding of biological systems [3]. By inspecting and modifying the inner workings of their models, students become familiar with causal factors and how they impact the properties of the model. We believe that allowing students to tinker with computational models involves developing the same skills used in computational thinking, such as abstraction, decomposition, analysis, automation, and generalization. In this poster, we discuss the design and implementation of a simulation that models the growth and spread of a hypothetical disease. The goal is to help middle school students develop computational thinking skills while learning how a virus spreads through the human population.},
  address = {New York, NY, USA},
  author = {Pellar-Kosbar, Meara and Gaines, Dylan and Monroe, Lauren and Rospierski, Alec and Martin, Alexander and Vigna, Ben and Stewart, Devin and Perttunen, Jared and Voss, Calvin and Pastel, Robert and Ureel, Leo C.},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460066},
  isbn = {9781450383974},
  keywords = {computational thinking; modeling; simulation; stem},
  location = {Virtual Event, Germany},
  numpages = {1},
  pages = {658},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Modeling the Growth and Spread of Infectious Diseases to Teach Computational Thinking},
  url = {https://doi.org/10.1145/3456565.3460066},
  year = {2021}
}

@inproceedings{merged541,
  abstract = {Teaching algorithmic thinking and programming is an important competency for future informatics teachers to acquire. To encourage this, we are investigating the development of a teaching-learning structure that combines the concept of semantic waves and algorithmic thinking with integrating block-based languages. In our teaching-learning laboratory for informatics (TLL), pre-service informatics teachers develop workshops based our concept, evaluate them with school classes and reflect on their didactic learning. Our concept is evaluated by students’ algorithmic thinking and their perception of the semantic wave using mixed methods. This poster presents one workshop based on our teaching-learning structure and its research procedures.},
  address = {New York, NY, USA},
  author = {Ritter, Frauke and Standl, Bernhard},
  booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 2},
  doi = {10.1145/3501709.3544285},
  isbn = {9781450391955},
  keywords = {Algorithmic Thinking; block-based programming; semantic wave},
  location = {Lugano and Virtual Event, Switzerland},
  numpages = {2},
  pages = {48–49},
  publisher = {Association for Computing Machinery},
  series = {ICER '22},
  title = {Promoting Computational Thinking in Teacher Education - Combining Semantic Waves and Algorithmic Thinking},
  url = {https://doi.org/10.1145/3501709.3544285},
  year = {2022}
}

@inproceedings{merged542,
  abstract = {Torino is a tangible programming environment designed for teaching the computational thinking curriculum in the UK to children who are blind or low vision (henceforth, just children) in an inclusive setting. In this paper we describe the experience of children in Bangalore, India, when Torino was introduced to them as a toy for creating and sharing stories, songs and music. We conducted 12 play sessions with 12 children (4 girls and 8 boys) with diverse backgrounds belonging to three different schools for the blind. We briefly present the reasons for play being central to our effort of bringing computational thinking to children who are blind and low vision in India, and share some experiences of the children and some insights that we have gathered so far: Children not only enjoyed every session, they rapidly moved from playing with pre-created examples, to making changes, to demanding that their favorite stories be told. In observing such play, we could infer that they have grasped the basic concepts of computational thinking? flow of control, variables, loops? though not articulated in that vocabulary.},
  address = {New York, NY, USA},
  author = {India, Gesu and Ramakrishna, Geetha and Bisht, Jyoti and Swaminathan, Manohar},
  booktitle = {Proceedings of the 21st International ACM SIGACCESS Conference on Computers and Accessibility},
  doi = {10.1145/3308561.3354608},
  isbn = {9781450366762},
  keywords = {digital skills; pedagogy; primary school},
  location = {Pittsburgh, PA, USA},
  numpages = {4},
  pages = {519–522},
  publisher = {Association for Computing Machinery},
  series = {ASSETS '19},
  title = {Computational Thinking as Play: Experiences of Children who are Blind or Low Vision in India},
  url = {https://doi.org/10.1145/3308561.3354608},
  year = {2019}
}

@inproceedings{merged543,
  abstract = {Programmable robots designed for preliterate children are one of the options being explored and put into practice for teaching computational thinking skills to children in preschool and kindergarten. Classroom use of these robots may involve use by groups of children due to cost, logistical, and pedagogical reasons. To understand design factors affecting the social use of these robots, we explored the use of three programmable robots with distinctive design characteristics in a kindergarten classroom. Our findings suggest that programmable robot designs that may work well for use by individual children may cause difficulties when shared by groups of children if not all children in the group are able to easily perceive the input (program), output (robot actions), or program state. Based on these design factors we provide recommendations for the design of programmable robots, their evaluation for social use, and for addressing design limitations with support by adult facilitators.},
  address = {New York, NY, USA},
  author = {Bakala, Ewelina and Gerosa, Anaclara and Hourcade, Juan Pablo and Pascale, Maria and Hergatacorzian, Camila and Tejera, Gonzalo},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3529745},
  isbn = {9781450391979},
  keywords = {computational thinking; kindergarten children; perception; programmable robot; social use},
  location = {Braga, Portugal},
  numpages = {8},
  pages = {422–429},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {Design Factors Affecting the Social Use of Programmable Robots to Learn Computational Thinking in Kindergarten},
  url = {https://doi.org/10.1145/3501712.3529745},
  year = {2022}
}

@inproceedings{merged544,
  abstract = {As computing education begins to grow in K-12 classrooms, it is increasingly important to understand the relationships between a student's coding attitudes and computing outcomes. While work has been done at the undergraduate and high school level, less is known about elementary students, and even less about Latinx students. We sought to explore the connections between Latinx elementary students' coding attitudes and computational thinking (CT) skills after participating in a year-long, remote computing curriculum in a public school district in Southern California. We collected validated measures on coding attitudes and CT skills for 164 fourth-grade students. We used structural equation modeling to analyze the relationship between the coding attitude constructs (i.e., confidence, utility, perception of coders, social influences, and interest) and scores on a CT assessment while controlling for demographic factors (i.e., gender, English language fluency, free or reduced lunch status, reading and math standardized test scores). In a model demonstrating acceptable fit, only math scores were a significant predictor of CT scores and coding confidence. Confidence was found to be significantly associated with the other attitude constructs except for perception of coders. Our results indicate that confidence plays a prominent role in student computing learning, especially at a young age. Efforts to better support Latinx students in computer science should include strategies that address students' coding confidence, such as developing positive perceptions of a student's learning process (e.g., failures as learning opportunities) in specific coding skills and practices (e.g., tinkering, debugging).},
  address = {New York, NY, USA},
  author = {Garcia, Leiny Y. and Parker, Miranda C. and Ojeda-Ramirez, Santiago and Warschauer, Mark},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569856},
  isbn = {9781450394314},
  keywords = {confidence; early coding attitudes; elementary school; latinx},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {326–332},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Confidence is the Key: Unlocking Predictive Factors of Latinx Elementary Students on a Computational Thinking Measure},
  url = {https://doi.org/10.1145/3545945.3569856},
  year = {2023}
}

@article{merged545,
  abstract = {This research examines the impact of online instructional modules that integrated computational thinking (CT) and robotics in two teacher education courses on students' knowledge and interest in CT and robotics. Ninety-three (93) students from a lower-division instructional technology course and Fifty-nine (59) students from an upper-division instructional technology course participated in the study. One-sample paired t-tests were conducted to determine whether significant differences existed in participants' self-reported CT and robotics knowledge and interest from before and after the instruction. The results of the analysis found some statistically significant differences in mean CT and robotics knowledge and interest from pre-test to post-test in both courses suggesting this form of instruction can increase students' knowledge and interest in these concepts.},
  address = {Evansville, IN, USA},
  author = {Azhar, Mohammad Q. and Powers, Jillian and Musgrove, Ann},
  issn = {1937-4771},
  issue_date = {April 2023},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {6},
  numpages = {11},
  pages = {40–50},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Examining the Computational Thinking and Robotics Knowledge and Interest of Undergraduate Students in Two Teacher Education Courses},
  volume = {38},
  year = {2023}
}

@inproceedings{merged546,
  abstract = {We have developed a Transition Year (TY) computational thinking module (for 15-16 year olds) based on Bebras tasks that was delivered online by teachers at 240 schools in Ireland during 2021-2022. To serve primary and secondary pre-service teachers, we have started developing a 24-hour module based on this TY module. We are co-creating the module with education experts and CS academics working collaboratively. The education experts consist of academics and pre-service teachers from both primary and secondary teaching departments at our institution.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Lehtim\"{a}ki, Taina and Hamm, James and Mooney, Aidan and Casey, Kevin and Monahan, Rosemary and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2022 Conference on United Kingdom &amp; Ireland Computing Education Research},
  doi = {10.1145/3555009.3555030},
  isbn = {9781450397421},
  location = {Dublin, Ireland},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {UKICER '22},
  title = {A computational thinking module for secondary students and pre-service teachers using Bebras-style tasks},
  url = {https://doi.org/10.1145/3555009.3555030},
  year = {2022}
}

@inproceedings{merged547,
  abstract = {At present, the mainstream means of measuring and assessing computational thinking are test papers and scales, which enable us to measure the level of students' computational thinking as a whole, but fail to represent the inner laws and thinking processes, thus cause difficulty on providing appropriate guidance. In this study, data embedding technology was adopted to collect data on students' operational behavior in answering questions, and learning analytic techniques (i.e., semantic analysis, lagged sequence analysis, etc.) were used to evaluate computational thinking. Students with higher- and lower-level of computational thinking were compared on their behavioral patterns in a seriel events in the computational thinking training process. An event graph was constructed to represent the computational thinking behaviors based on logical event relationships. This study provides insights on a novel approach of analyzing computational thinking from the procedural perspective, which could be helpful for understanding how the thinking path is structured during problem-solving process.},
  address = {New York, NY, USA},
  author = {Shen, Wenyao and Zhan, Zehui and Li, Chen and Chen, Han and Shen, Ranhao},
  booktitle = {Proceedings of the 6th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3551708.3556217},
  isbn = {9781450396455},
  location = {Guangzhou, China},
  numpages = {8},
  pages = {45–52},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '22},
  title = {Constructing Behavioral Representation of Computational Thinking based on Event Graph: A new approach for learning analytics},
  url = {https://doi.org/10.1145/3551708.3556217},
  year = {2022}
}

@inproceedings{merged548,
  abstract = {This paper reports a pilot test to a scale called 'Holistic Assessment of Computational Thinking (Hi-ACT. Hi-ACT is seven-point Likert type scale comprises 155 items, resulting form a consensus study completed earlier, which aimed at measure undergraduate students computational thinking skill. The questionnaire was piloted among fourth-year undergraduate students recruited from five faculties in two universities (N=548) in Indonesia. Structural equation modeling with partial least squares technique was followed to establish the factor structure of the scale. The internal consistency reliability was assessed using composite reliability. The convergent validity was evaluated based on two criteria, the outer loadings and the average variance extracted. Accordingly, 44 items that did not load properly on a particular construct were excluded, and the refined scale has confirmed its reliability and validity to the acceptable requirements.},
  address = {New York, NY, USA},
  author = {Sondakh, Debby E. and Osman, Kamisah and Zainudin, Suhaila},
  booktitle = {Proceedings of the 11th International Conference on Education Technology and Computers},
  doi = {10.1145/3369255.3369303},
  isbn = {9781450372541},
  keywords = {Assessment; Computational Thinking; Undergraduate},
  location = {Amsterdam, Netherlands},
  numpages = {5},
  pages = {241–245},
  publisher = {Association for Computing Machinery},
  series = {ICETC '19},
  title = {Holistic Assessment of Computational Thinking for Undergraduate: Reliability and Convergent Validity},
  url = {https://doi.org/10.1145/3369255.3369303},
  year = {2020}
}

@article{merged549,
  abstract = {Considering the expression "computational thinking" as an entry point to understand why the fundamental contribution of computing to science is the shift from solving problems to having problems solved.},
  address = {New York, NY, USA},
  author = {Nardelli, Enrico},
  doi = {10.1145/3231587},
  issn = {0001-0782},
  issue_date = {February 2019},
  journal = {Commun. ACM},
  month = {January},
  number = {2},
  numpages = {4},
  pages = {32–35},
  publisher = {Association for Computing Machinery},
  title = {Do we really need computational thinking?},
  url = {https://doi.org/10.1145/3231587},
  volume = {62},
  year = {2019}
}

@inproceedings{merged550,
  abstract = {With the global movement to incorporate computer science instruction into elementary education, learners are being introduced to computer science and computational thinking (CS/CT) ideas at increasingly younger ages. At these early ages, young learners are developing cognitive abilities foundational to their education. While other discipline-based education fields, such as math, science, and reading, have long studied the role of cognitive abilities, such as short-term working memory and long-term retrieval, in their respective fields, similar research in computer science education is relatively sparse. In this exploratory study, we examined the relationship between cognitive abilities and CS/CT performance of fourth-grade students (ages 9-10) who underwent either an introductory CT curriculum based on Use–&gt;Modify–&gt;Create or the same curriculum with additional scaffolding from the TIPP&amp;SEE metacognitive learning strategy. Our analysis revealed performance on CT assessments to be weakly correlated with working memory and long-term retrieval, with correlations increasing as the CT concepts grew more complex. This suggests that scaffolding beyond TIPP&amp;SEE may be needed with more complex CT concepts. We also found that when using TIPP&amp;SEE, students scoring below average on cognitive ability tests performed as well as students in the control condition with average cognitive ability scores. These results indicate TIPP&amp;SEE’s potential in creating more equitable computing instruction. We hope that results from this initial exploration can help encourage further study into the role of cognitive abilities in CS/CT education for young learners.},
  address = {New York, NY, USA},
  author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Franklin, Diana},
  booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
  doi = {10.1145/3446871.3469746},
  isbn = {9781450383264},
  keywords = {cognitive abilities; computational thinking; elementary education; memory},
  location = {Virtual Event, USA},
  numpages = {16},
  pages = {2–17},
  publisher = {Association for Computing Machinery},
  series = {ICER 2021},
  title = {Investigating the Role of Cognitive Abilities in Computational Thinking for Young Learners},
  url = {https://doi.org/10.1145/3446871.3469746},
  year = {2021}
}

@inproceedings{merged551,
  abstract = {Coding as a practical skill and computational thinking (CT) as a cognitive ability have become an important topic in education and research. It has been suggested that CT, as an early predictor of academic success, should be introduced and fostered early in education. However, there is no consensus on the underlying cognitive correlates of CT in young elementary school children. Therefore, the present work aimed at (i) assessing CT and investigating its associations to established cognitive abilities, and (ii) evaluating a newly developed CT course for elementary school children.As such, 31 7-10-year-old children took part in 10 lessons of a structured CT course. The course aimed at introducing and fostering CT concepts in both unplugged and plugged-in ways, incorporating life-size board games, Scratch, Scratch for Arduino, and Open Roberta programming environments. In a pre-/post-test design, we assessed several cognitive abilities using standardized tests on nonverbal-visuospatial and verbal reasoning abilities, numeracy, as well as short-term memory, and measured CT using an adapted version of the only existing validated test CTt, to accommodate it to the younger sample.We identified significant associations between CT and nonverbal-visuospatial reasoning, as well as different aspects of numeracy (e.g., fact retrieval and problem completion). In line with recent theoretical accounts and empirical investigations for other age groups, these findings specify the underlying cognitive mechanism of CT in elementary school. Moreover, our results indicated that students were able to specifically improve their CT abilities through the course, as assessed by the adapted version of the CTt.},
  address = {New York, NY, USA},
  articleno = {24},
  author = {Tsarava, Katerina and Leifheit, Luzia and Ninaus, Manuel and Rom\'{a}n-Gonz\'{a}lez, Marcos and Butz, Martin V. and Golle, Jessika and Trautwein, Ulrich and Moeller, Korbinian},
  booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3361721.3361729},
  isbn = {9781450377041},
  keywords = {cognitive skills; computational thinking; computational thinking assessment; computational thinking curriculum},
  location = {Glasgow, Scotland, Uk},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '19},
  title = {Cognitive Correlates of Computational Thinking: Evaluation of a Blended Unplugged/Plugged-In Course},
  url = {https://doi.org/10.1145/3361721.3361729},
  year = {2019}
}

@inproceedings{merged552,
  abstract = {This paper describes our process of creating computational thinking (CT) resources for primary school teachers in Ireland. The National Council for Curriculum and Assessment has proposed a revised primary mathematics curriculum with an emphasis on CT skills and problem solving, and some teachers would like to introduce it already on an informal basis. However, CT is not yet part of teacher training. Our motivating question has been: how can teachers without a computer science background deliver CT at primary level in Ireland? Our process involves third-level computer science academics co-creating resources with in-service and pre-service teachers during workshops. The resources comprise a workbook and lesson plans. Our resources are based on tasks from the International Bebras Challenge, a well-known large-scale international CT contest with a reasonably gender-neutral profile of school-age participants. The workbook consists of ten Bebras tasks, each followed by a page of original activities on the theme of the task. A set of ten lesson plans accompanies the workbook. Each lesson plan has information about how to use the corresponding workbook activities in the classroom, where the activity might fit into the existing curriculum, categorisation of the task in terms of eight CT topics, differentiation, and extension activities. This paper explains our process of workshop planning, workbook creation, and lesson plan co-creation. Preliminary evaluation of our process uses teacher feedback.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524804},
  isbn = {9781450392013},
  keywords = {bebras tasks; co-creation; computational thinking; lesson plans; partnership; primary school; workbook},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {207–213},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Bebras-inspired Computational Thinking Primary School Resources Co-created by Computer Science Academics and Teachers},
  url = {https://doi.org/10.1145/3502718.3524804},
  year = {2022}
}

@inproceedings{merged553,
  abstract = {The demand for computational thinking (CT) problem solving abilities surge as every aspect of life becomes more dependent on complex digital technologies. Just as in math and language, a strong CT foundation needs to be established in early education in order for students to develop an instinctive CT perspective of the world. The urgent demand for CT instruction in elementary school quickly draws attention to the shortage of elementary school-level teachers qualified and interested in CT. Additionally, with a commitment to equity in the United States education system and knowledge of the high percentage of English language learning (ELL) students in schools, the obligation to create curricula that will provide access to CT knowledge, skills, and practices for elementary-level ELL students is loudly apparent. In response to these two needs, our team has adapted existing Scratch-based CT curriculum to support classroom teachers with minimal CT experience and to be more accessible to English language learners. The purpose of this paper is to share the framework that guided the curriculum adaptations, to describe the specific changes that were made, and to discuss discoveries made during the process. This journey may be helpful to anyone who is tasked with modifying a curriculum to meet the needs of novice content teachers and ELL students.},
  address = {New York, NY, USA},
  author = {Saito-Stehberger, Dana and Garcia, Leiny and Warschauer, Mark},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3430665.3456355},
  isbn = {9781450382144},
  keywords = {English language learners; computational thinking; curriculum design; elementary education},
  location = {Virtual Event, Germany},
  numpages = {7},
  pages = {136–142},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Modifying Curriculum for Novice Computational Thinking Elementary Teachers and English Language Learners},
  url = {https://doi.org/10.1145/3430665.3456355},
  year = {2021}
}

@inproceedings{merged554,
  abstract = {With the growth of Computer Science (CS) and Computational Thinking (CT) instruction in the primary/elementary domain, it is important that such instruction supports diverse learners. Four categories of students -- students in poverty, multi-lingual students, students with disabilities, and students who have below-grade-level proficiency in reading and math, may face academic challenges that can hinder their learning in CS/CT curricula. However, little is known about how to support these students in CS/CT instruction, especially at this young age. TIPP&amp;SEE, a meta-cognitive strategy that scaffolds learning by proceduralizing engagement through example code, may offer some support. A quasi-experimental study revealed that the gaps between students with and without academic challenges narrowed when using the TIPP&amp;SEE strategy, indicating its promise in providing equitable learning opportunities in CS/CT.},
  address = {New York, NY, USA},
  author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Franklin, Diana},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432366},
  isbn = {9781450380621},
  keywords = {computational thinking; elementary/primary education; learning strategy; scratch},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {246–252},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Supporting Diverse Learners in K-8 Computational Thinking with TIPP&amp;SEE},
  url = {https://doi.org/10.1145/3408877.3432366},
  year = {2021}
}

@article{merged555,
  abstract = {Applications must be programmed to process instructions in parallel to take full advantage of the new multicore processors.},
  address = {New York, NY, USA},
  author = {Kirkpatrick, Keith},
  doi = {10.1145/3148760},
  issn = {0001-0782},
  issue_date = {December 2017},
  journal = {Commun. ACM},
  month = {November},
  number = {12},
  numpages = {3},
  pages = {17–19},
  publisher = {Association for Computing Machinery},
  title = {Parallel computational thinking},
  url = {https://doi.org/10.1145/3148760},
  volume = {60},
  year = {2017}
}

@inproceedings{merged556,
  abstract = {Computational Thinking is argued to be an essential skill for the workforce of the 21st century. As a skill, Computational Thinking should be taught in all schools, employing computational ideas integrated into other disciplines. Up until now, questions about how Computational Thinking can be effectively taught have been underexplored preventing efforts to cross the large gap between early adopters and the early majority, conceptualized as the Computer Science Education chasm. A promising strategy to cross the chasm is underway in Switzerland. Switzerland recently introduced a national curriculum, called Lehrplan 21, mandating Computer Science Education. This mandate requires the Computer Science education of elementary and middle school students. In 2017, the School of Education of Northwestern Switzerland (PH FHNW), introduced a mandatory pre-service teacher Computer Science Education course, to satisfy this mandate. All the PH FHNW students who study to become elementary school teachers must pass this two-semester course. The first part of this course was taught for the first time in fall of 2017. This paper presents the philosophy of this course and an initial analysis of both qualitative data capturing the students’ perceptions of Computational Thinking and quantitative data describing shifts in students’ skills and attitudes as effect sizes. The data suggest that it is possible to teach a basic understanding of programming to non-self-selected pre-service elementary school teachers.},
  address = {New York, NY, USA},
  author = {Lamprou, Anna and Repenning, Alexander},
  booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3197091.3197120},
  isbn = {9781450357074},
  keywords = {Computational Thinking; Computer Science Education; K-12 education; Pre-service teacher; Primary school},
  location = {Larnaca, Cyprus},
  numpages = {6},
  pages = {69–74},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2018},
  title = {Teaching how to teach computational thinking},
  url = {https://doi.org/10.1145/3197091.3197120},
  year = {2018}
}

@inproceedings{merged557,
  abstract = {Computational thinking (CT) is increasingly becoming a part of the K-12 educational landscape. While high schools with computer science teachers or technology coaches on staff are well positioned to help teachers integrate computational thinking into instruction, early childhood through middle schools (grades p-8) are often less well equipped. Further, the concept of CT is often poorly defined, especially as it relates to younger learners. Despite these challenges, teachers are being asked to integrate CT into other content lessons. To understand if and how this is happening, we conducted a statewide survey of primary (early childhood through middle school) Maryland teachers. The survey asked the teachers about their conceptualization of CT, CT resources they rely on, and their comfort levels to provide effective CT instruction for their students. The results of our survey demonstrate that teachers hold diverse views of the concept of CT and use a varied set of instructional resources in their classrooms. The contribution of this work is in helping advance our understanding of the current state of CT in primary classrooms.},
  address = {New York, NY, USA},
  author = {Garvin, Megean and Killen, Heather and Plane, Jan and Weintrop, David},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287376},
  isbn = {9781450358903},
  keywords = {acm proceedings; computational thinking; computing across the curriculum; k-8; teacher perceptions},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {899–905},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Primary School Teachers' Conceptions of Computational Thinking},
  url = {https://doi.org/10.1145/3287324.3287376},
  year = {2019}
}

@inproceedings{merged558,
  abstract = {Curricular changes towards fostering computational thinking through programming activities for students of all ages are spreading rapidly throughout Europe. However, students may be negatively biased or not interested or prepared to engage in such activities. This work proposes digital fabrication within a hands-on pedagogical frame as an approach to engage students in programming activities facilitating the use and understanding of computational thinking concepts. Within the proposed approach, students engage in programming applied to develop tasks from their school curriculum. This paper illustrates the approach through pilot trial experiences at a local junior high school.},
  address = {New York, NY, USA},
  articleno = {32},
  author = {Montero, Calkin Suero},
  booktitle = {Proceedings of the 18th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3279720.3279750},
  isbn = {9781450365352},
  keywords = {Craft- and project-based pedagogy; comprehensive education; digital fabrication; making},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '18},
  title = {Facilitating Computational Thinking through Digital Fabrication},
  url = {https://doi.org/10.1145/3279720.3279750},
  year = {2018}
}

@inproceedings{merged559,
  abstract = {Free-form Game-Design (GD) environments show promise in fostering Computational Thinking (CT) skills at a young age. However, such environments can be challenging to some students due to their highly open-ended nature. Our long-term goal is to alleviate this difficulty via pedagogical agents that can monitor the student interaction with the environment, detect when the student needs help and provide personalized support accordingly. In this paper, we present a preliminary evaluation of one such agent deployed in a real-word free-form GD learning environment to foster CT in the early K-12 education, Unity-CT. We focus on the effect of repetition by comparing student behaviors between no intervention, 1-shot, and repeated intervention groups for two different errors that are known to be challenging in the online lessons of Unity-CT environment. Our findings showed that the agent was perceived very positively by the students and the repeated intervention showed promising results in terms of helping students make less errors and more correct behaviors, albeit only for one of the two target errors. Based on these results, we provide insights on how to improve the delivery of the agent’s interventions in free-form GD environments.},
  address = {New York, NY, USA},
  author = {Yal\c{c}in, \"{O}zge Nilay and Lalle, Sebastien and Conati, Cristina},
  booktitle = {Proceedings of the 27th International Conference on Intelligent User Interfaces},
  doi = {10.1145/3490099.3511124},
  isbn = {9781450391443},
  keywords = {Computational Thinking; Game Design; Open-Ended Learning Environments; Pedagogical agent; Real-Time Support},
  location = {Helsinki, Finland},
  numpages = {13},
  pages = {633–645},
  publisher = {Association for Computing Machinery},
  series = {IUI '22},
  title = {An Intelligent Pedagogical Agent to Foster Computational Thinking in Open-Ended Game Design Activities},
  url = {https://doi.org/10.1145/3490099.3511124},
  year = {2022}
}

@inproceedings{merged560,
  abstract = {What should we teach students who are interested in geospatial data science and what should an undergraduate or graduate curriculum in this area look like? This paper addresses such issues from an epistemological perspective and discusses the critical linkages among different fields that are related to geo computational thinking.},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Xiao, Ningchuan},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365372},
  isbn = {9781450369527},
  keywords = {actionable knowledge; curriculum design; geo computational thinking; levels of abstraction},
  location = {Chicago, IL, USA},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {On the Epistemological Aspects of Geo-Computational Thinking and Curriculum Design},
  url = {https://doi.org/10.1145/3356393.3365372},
  year = {2019}
}

@inproceedings{merged561,
  abstract = {For K-8 computer science (CS) education to continue to expand, it is essential that we understand how students develop and demonstrate computational thinking (CT). One approach to gaining this insight is by having students articulate their understanding of CT through cognitive interviews. This study presents findings of a cognitive interview study with 13 fourth-grade students (who had previously engaged in integrated CT and mathematics instruction) working on CT assessment items. The items assessed four CT concepts: sequence, repetition, conditionals, and decomposition. This study analyzed studentstextquotesingle articulated understanding of the four CT concepts and the correspondence between that understanding and hypothesized learning trajectories (LTs). We found that 1) all students articulated an understanding of sequence that matched the intermediate level of the Sequence LT; 2) a majority of studentstextquotesingle responses demonstrated the level of understanding that the repetition and decomposition items were designed to solicit (8 of 9 responses were correct for repetition and 4 of 6 were correct for decomposition); and 3) less than half of studentstextquotesingle responses articulated an understanding of conditionals that was intended by the items (4 of 9 responses were correct). The results also suggested questioning the directional relationships of two statements in the existing Conditionals LT. For example, unlike the LT, this study revealed that students could understand "A conditional connects a condition to an outcome'' before "A condition is something that can be true or false.''},
  address = {New York, NY, USA},
  author = {Luo, Feiya and Israel, Maya and Liu, Ruohan and Yan, Wei and Gane, Brian and Hampton, John},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366845},
  isbn = {9781450367936},
  keywords = {computational thinking; k-8 computer science education; learning trajectories},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {919–925},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Understanding Students' Computational Thinking through Cognitive Interviews: A Learning Trajectory-based Analysis},
  url = {https://doi.org/10.1145/3328778.3366845},
  year = {2020}
}

@inproceedings{merged562,
  abstract = {Computational thinking has already been acknowledged as an important learning objective for all students in compulsory education. Our research interests focus on the assessment of fundamental computational thinking competencies, such as collection, organisation and analysis of data, algorithmic thinking and abstraction. For the needs of our research, we implemented the digital platform PhysGramming, which constitutes the backbone of a relevant assessment tool we have built. PhysGramming is developmentally appropriate for first and second grade primary school students and provides the opportunity to create their own digital games, transforming them from passive consumers to active creators of digital technology. The assessment tool has been applied to 450 students in the first and second grade of primary schools on Crete, Greece from February to June 2019. The research was conducted attuned to the ethical guidelines of educational research, within the framework of the physical and natural science courses and evolved around three axes: (a) Checking the validity and the reliability of the results that come out when applying the proposed assessment tool. (b) Designating the levels of computational thinking skills of students at first stages of schooling. (c) Checking the correlation between the levels of computational thinking skills and the comprehension of the lesson's content. In other words, we check whether high learning performance is a necessary and sufficient condition for diagnosing high levels of basic computational thinking skills. In this paper, we shortly describe the assessment tool we propose.},
  address = {New York, NY, USA},
  author = {Kalliopi, Kanaki and Michail, Kalogiannakis},
  booktitle = {Proceedings of the 2019 3rd International Conference on Education and E-Learning},
  doi = {10.1145/3371647.3371651},
  isbn = {9781450372251},
  keywords = {Assessment tool; Computational thinking; First stages of schooling},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {135–139},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '19},
  title = {Assessing Computational Thinking Skills at First Stages of Schooling},
  url = {https://doi.org/10.1145/3371647.3371651},
  year = {2020}
}

@inproceedings{merged563,
  abstract = {In the information age, computational thinking has become a basic quality necessary for learners. How to effectively improve the teaching effect and cultivate students' computational thinking ability has become the focus of most scholars. With the extensive development of "Internet+", the traditional face-to-face offline teaching mode has been unable to meet the diversified and personalized learning needs of students, and blended learning has become a brand-new teaching mode, and studies have shown that blended learning can effectively improve the computational thinking ability of learners. Therefore, this study analyzes and discusses the current situation of high school students' computational thinking ability in blended learning, which helps us to deeply understand the current situation of high school students' blended learning, think about how to promote high school students' blended learning, and improve high school students' computational thinking ability, so as to promote the quality of education and teaching. In this study, the literature research method, interview analysis method and questionnaire survey method were used to investigate the current situation of blended teaching activities on the cultivation of computational thinking with 138 freshmen, sophomores and juniors in a high school in western China. The results found that the overall situation of computational thinking level in blended learning of students in a high school in western China was moderate. This was characterized by better levels of cooperative and critical thinking skills, and poorer levels of creativity, algorithmic thinking and problem solving skills. By describing the current situation, it can be seen that there are some problems in the level of computational thinking ability of high school students in blended learning, based on this, this study, based on the specific research data, combined with the results of the interviews, puts forward some suggestions for improving the cultivation of high school students' computational thinking ability in blended learning in a high school in western China in three aspects.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Dong, Jiamin and Li, Qiuhong and Shao, Yanru and Liu, Yuqi and Xu, Fei},
  booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3670013.3670026},
  isbn = {9798400717062},
  location = {Fukuoka-shi, Japan},
  numpages = {8},
  pages = {70–77},
  publisher = {Association for Computing Machinery},
  series = {IC4E '24},
  title = {Current status and enhancement strategies for developing computational thinking of high school students in blended learning --Take the high school information technology curriculum as an example},
  url = {https://doi.org/10.1145/3670013.3670026},
  year = {2024}
}

@inproceedings{merged564,
  abstract = {This paper presents an educational experience about the feasibility of using the KIBO robot to engage the learning of programming and computational thinking with students with Down syndrome (DS). In particular, we describe a pilot study carried out with seven DS students aged between 7-19, but with a cognitive age from 3--6. The programming and computational thinking contents had been adapted to their particular needs and integrated into their current curricular activities. We studied the engaging of students using KIBO, the grade of comprehension of the sequences and programming and the emotional behavior of students with DS during the sessions. The results of this study shows that people with DS are capable to acquire satisfactorily basic programming and computational thinking skills using KIBO. Also, the motivation and the emotional state of DS students were positive promoted through the designed activities.},
  address = {New York, NY, USA},
  author = {Gonz\'{a}lez-Gonz\'{a}lez, Carina and Gonz\'{a}lez, Erika Herrera and Ruiz, Lorenzo Moreno and Infante-Moro, Alfonso and Guzm\'{a}n-Franco, Mar\'{\i}a D.},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3284179.3284191},
  isbn = {9781450365185},
  keywords = {Coding; Computational thinking; Down syndrome; Programming; Robotics},
  location = {Salamanca, Spain},
  numpages = {7},
  pages = {18–24},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {Teaching computational thinking to Down syndrome students},
  url = {https://doi.org/10.1145/3284179.3284191},
  year = {2018}
}

@inproceedings{merged565,
  abstract = {Visualization is a common feature of computer science education tools in K-12 and beyond. However, there are still many unknowns about what makes visual tools effective. The focus of this research is to explore the properties of effective interactive visualizations in non-programming tasks for teaching computational thinking in K-12. Main contribution is expected to be an evaluated model of a system for developing these interactive visualizations.},
  address = {New York, NY, USA},
  author = {\v{S}iaulys, Tomas},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460025},
  isbn = {9781450383974},
  keywords = {computational thinking; engagement taxonomy; interactive visualizations},
  location = {Virtual Event, Germany},
  numpages = {2},
  pages = {680–681},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Developing Interactive Visualizations Focusing on Computational Thinking in K-12 Computer Science Education},
  url = {https://doi.org/10.1145/3456565.3460025},
  year = {2021}
}

@inproceedings{merged566,
  abstract = {One challenge in teaching computational thinking (CT) in K-12 is that teachers often lack resources to teach CT in their classrooms. In this work, we explore the use of game creation as an avenue for teaching CT. We describe WearableLearning, an online platform with a finite-state machine-based interface for creating games and discuss how students can use it to learn and practice CT skills such as algorithmic thinking, problem decomposition, and debugging. Our goal is to empower teachers to teach CT through engaging game creation activities that enable students to create games and play the games that their peers developed through wearable devices.},
  address = {New York, NY, USA},
  author = {Castro, Francisco Enrique Vicente},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
  doi = {10.1145/3502717.3532137},
  isbn = {9781450392006},
  keywords = {computational thinking; finite state machines; k-12 education},
  location = {Dublin, Ireland},
  numpages = {1},
  pages = {618},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Exploring the Use of Finite-State Machines and Game Creation to Teach Computational Thinking in Middle Schools},
  url = {https://doi.org/10.1145/3502717.3532137},
  year = {2022}
}

@inproceedings{merged567,
  abstract = {During two generations (2016 and 2017) the computational thinking evaluation has been carried out in order to establish learning scenarios for new students, such interventions have been made in the Programming methodology course, it belonging to the career of Information Technology at the Technological University of Puebla in M\'{e}xico. The results have led a personalized education for students, recognizing previous skills as well as trying to correct those missing, so that it acquires the competences respective, credit the course and improve the retention percentage of the first quarter. In this sense, when detecting possible skill gaps, is it possible to predict what will be the impact to maintain or decrease enrollment during and the end of quarter? The present work aims to answer the question by the results interpretation obtained from the computational thinking evaluation to 242 new students, generation 2018. Initially, it was stablished which would be the student's situation during and the end of four months from September to December based on the correct assessment reagents; three categories were determined: 1. Sure desertion, 2. Safe permanence, 3. Variable permanence. Later, 50 students who enrolled the next quarter (January-April 2019) were revised if they had been predicted properly; using a survey, the familiarity of key concepts of the subject Programming methodology was obtained with the aim of determining a correspondence with the evaluation of computational thinking skills, as well as the established situation, consequently, establishing the validity of predicting the enrollment.},
  address = {New York, NY, USA},
  author = {Rojas-L\'{o}pez, Arturo and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362803},
  isbn = {9781450371919},
  keywords = {Computational thinking; Higher education; Problem solving; Programming Learning; Programming teaching},
  location = {Le\'{o}n, Spain},
  numpages = {6},
  pages = {13–18},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Interpretation of computational thinking evaluation results for enrollment prediction},
  url = {https://doi.org/10.1145/3362789.3362803},
  year = {2019}
}

@inproceedings{merged568,
  abstract = {In recent decades, technological developments related to computing, informatics, and digitization have generated radical changes in our lives. This new reality brings with it the need for children and young people to develop new basic skills linked to what has been called computational thinking. Computational thinking taught from an early age may allow individuals and society to understand and use new conceptual structures and models that represent complex phenomena and processes in the world around us. However, stimulating the development of computational thinking at an early age (preschool) continues to be an academic challenge whose approach requires research, interdisciplinary work, and innovation. My doctoral thesis aims to contribute to the design, development and evaluation of child-robot interaction (including programming interface, interaction context and activities), aimed at promoting the development of computational thinking in preschool children.},
  address = {New York, NY, USA},
  author = {Bakala, Ewelina and Hourcade, Juan Pablo and Tejera, Gonzalo},
  booktitle = {Proceedings of the 2020 ACM Interaction Design and Children Conference: Extended Abstracts},
  doi = {10.1145/3397617.3399721},
  isbn = {9781450380201},
  keywords = {child-robot interaction; computational thinking; interaction design; preschool children},
  location = {London, United Kingdom},
  numpages = {4},
  pages = {30–33},
  publisher = {Association for Computing Machinery},
  series = {IDC '20},
  title = {Exploring child-robot interaction ecology in the development of computational thinking},
  url = {https://doi.org/10.1145/3397617.3399721},
  year = {2020}
}

@inproceedings{merged569,
  abstract = {Computational thinking is considered a fundamental skill of children in the 21st century. In 2017, the new national curriculum standards of China included computational thinking as a core literacy of students. In this poster session, the authors will introduce their research on developing Chinese elementary school students' computational thinking skill. The authors have developed a new information technology course with the focus on computational thinking. The research uses the convergent cognition theory as the theoretical framework. The convergent cognition theory posits that learning computer programming affects students' mathematical thinking and vice versa. The programming environment is Scratch. A group of third grade students and a group of fourth grade students are the participants. Their computational thinking skill and math ability will be measured to see whether this course develops students' computational thinking skill and whether convergent cognition effects exist. Examples from the instructional materials will be presented as part of the poster. The authors will also report on the preliminary results of the course's effectiveness on developing students' computational thinking.},
  address = {New York, NY, USA},
  author = {Liu, Yaqin and Ma, Zhiqiang and Qian, Yizhou},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education},
  doi = {10.1145/3300115.3312514},
  isbn = {9781450362597},
  keywords = {Chinese elementary school students; computational thinking; convergent cognition},
  location = {Chengdu,Sichuan, China},
  numpages = {1},
  pages = {238},
  publisher = {Association for Computing Machinery},
  series = {CompEd '19},
  title = {Developing Chinese Elementary School Students' Computational Thinking: A Convergent Cognition Perspective},
  url = {https://doi.org/10.1145/3300115.3312514},
  year = {2019}
}

@inproceedings{merged570,
  address = {New York, NY, USA},
  author = {Montero, Calkin Suero},
  booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3375451},
  isbn = {9781450377157},
  location = {Koli, Finland},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '19},
  title = {Session details: Metacognition and Computational Thinking},
  url = {https://doi.org/10.1145/3375451},
  year = {2019}
}

@article{merged571,
  abstract = {As Information and Communication Technology (ICT) literacy education has recently shifted to fostering computing thinking ability as well as ICT use, many countries are conducting research on national curriculum and evaluation. In this study, we measured Korean students’ ICT literacy levels by using the national measurement tool that assesses abilities of the IT (Information Technology) area and the CT (Computational Thinking) area. A research team revised an existing ICT literacy assessment tool for the IT test and developed a new CT test environment in which students could perform actual coding through a web-based programming tool such as Scratch. Additionally, after assessing ICT literacy levels, differences in ICT literacy levels by gender and grade were analyzed to provide evidence for national education policies. Approximately 23,000 elementary and middle school students participated in the 2018 national assessment of ICT literacy, accounting for 1% of the national population of students. The findings demonstrated that female students had higher literacy levels in most sub-factors of IT and CT areas. Additionally, in the areas of strengths and weaknesses, the ratio of below-basic achievement among male students was at least two times greater than that of female students. Nonetheless, male students scored higher on CT automation, a coding item that involved problem solving using Scratch. Looking at the difference according to grade level, the level improved as the school year increased in elementary school, but there was no difference in middle school. When analyzing the detailed elements of middle school students, the automation factor of seventh grade students was found to be higher than eighth and ninth grade students. Based on these results, this study discussed some implications for ICT and computing education in elementary and middle schools.},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Kim, Han Sung and Kim, Soohwan and Na, Wooyoul and Lee, Woon Jee},
  doi = {10.1145/3427596},
  issue_date = {March 2021},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {21st century abilities; ICT literacy; computational thinking; elementary education; secondary education},
  month = {January},
  number = {1},
  numpages = {25},
  publisher = {Association for Computing Machinery},
  title = {Extending Computational Thinking into Information and Communication Technology Literacy Measurement: Gender and Grade Issues},
  url = {https://doi.org/10.1145/3427596},
  volume = {21},
  year = {2021}
}

@inproceedings{merged572,
  abstract = {Technology can be both a bane and a boon to education. Social media apps and digital games offer rich and highly stimulating forms of engagement outside of the classroom. This level of stimulus has created challenges for traditional educational paradigms and approaches. A promising response is for educators to embrace technology through interactive apps and gamification.This workshop provides hands-on engagement with a collection of freely-available interactive web apps that focus on the development of visual, spatial, and computational thinking. The workshop concludes with participants playing a third-person Unity game in which the (interactive) standalone web apps presented in the workshop have been embedded. The game, inspired by Han Solo's Kessel run, involves a trek across a sequence of platforms located in a galaxy far far away. Teleportation from one platform to the next is enabled by correctly completing the activity contained in the embedded (and interactive) web apps and then having the player walk through a portal. The player game score is calculated based on the speed and accuracy of their engagement with the exercises present.},
  address = {New York, NY, USA},
  author = {Winter, Victor and Sherwin, Kate},
  booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
  doi = {10.1145/3368308.3415450},
  isbn = {9781450370455},
  keywords = {computational thinking; mathematical thinking; spatial reasoning; visual thinking},
  location = {Virtual Event, USA},
  numpages = {2},
  pages = {426–427},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '20},
  title = {The Kessel Run - A Gamification of Visual, Spatial, and Computational Thinking},
  url = {https://doi.org/10.1145/3368308.3415450},
  year = {2020}
}

@inproceedings{merged573,
  abstract = {The purpose of this study is to develop a set of sequence test called CTST, and to determine whether it can be used to assess Sequencing Ability in computational thinking (CT). The content of the test is adapted from Baron-Cohen's picture story. We selected 5-7-year-old students (N=1234) from seven public schools in China for the test. The difficulty and distinguishing degree of each question were tested. Combined with the result of exploratory factor analysis (EFA) and confirmatory factor analysis (CFA), it is concluded that the sequence tests questions was composed of thirteen items, including three factors (amount, event and machine). Among them, four of the items that did not meet the standard were deleted. Our study also explored the differences of gender and age between 5-7-year-old students. The results show that the Sequencing Ability of girls is stronger than that of boys, and 7-year-old children may be the key period for the development of sequential ability. Generally speaking, the sequential test has good psychometric characteristics and can distinguish children with different CT sequencing Ability. We also discussed the limitations and direction of future work.},
  address = {New York, NY, USA},
  author = {An, Min},
  booktitle = {Proceedings of the 5th International Conference on Big Data and Education},
  doi = {10.1145/3524383.3524445},
  isbn = {9781450395793},
  keywords = {assessment tools; computational thinking; kindergarten education; sequencing ability},
  location = {Shanghai, China},
  numpages = {7},
  pages = {241–247},
  publisher = {Association for Computing Machinery},
  series = {ICBDE '22},
  title = {CTST: Development and Validation of an Sequence Ability in Computational Thinking in Early Childhood Education},
  url = {https://doi.org/10.1145/3524383.3524445},
  year = {2022}
}

@inproceedings{merged574,
  abstract = {In this paper, we explore the possible contribution of game modification (or modding) process to the development of Computational Thinking skills by discussing the design of ChoiCo (Choices with Consequences), an online digital environment for game creation and modding. ChoiCo integrates three different affordances for designing its games: a map-based (GIS) game scene, a simplified database and block-based programming editors. We also present a pilot study in which Junior High School students used ChoiCo for creating mods of a given digital game, based on a three-step modding scenario.},
  address = {New York, NY, USA},
  author = {Grizioti, Marianthi and Kynigos, Chronis},
  booktitle = {Proceedings of the 17th ACM Conference on Interaction Design and Children},
  doi = {10.1145/3202185.3210800},
  isbn = {9781450351522},
  keywords = {block-based programming; computational thinking; game modding},
  location = {Trondheim, Norway},
  numpages = {6},
  pages = {687–692},
  publisher = {Association for Computing Machinery},
  series = {IDC '18},
  title = {Game modding for computational thinking: an integrated design approach},
  url = {https://doi.org/10.1145/3202185.3210800},
  year = {2018}
}

@inproceedings{merged575,
  abstract = {Adapting a teaching intervention to the proficiency level of a student improves learning when teaching programming. The goal of this PhD-project is to discover to what extent this holds when teaching computational thinking (CT) skills. I will first determine how teaching interventions can be adapted to CT proficiency levels, and then examine their effectiveness through a series of longitudinal studies.},
  address = {New York, NY, USA},
  author = {de Jong, Imke},
  booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3341525.3394001},
  isbn = {9781450368742},
  keywords = {adaptation; computational thinking; higher education; interventions; proficiency level},
  location = {Trondheim, Norway},
  numpages = {2},
  pages = {571–572},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '20},
  title = {Teaching Computational Thinking with Interventions Adapted to Undergraduate Students' Proficiency Levels},
  url = {https://doi.org/10.1145/3341525.3394001},
  year = {2020}
}

@inproceedings{merged576,
  abstract = {The usage of playful activities is common in introductory programming settings. There is normally a virtual character or a physical robot that has to collect items or reach a goal within a map. Visually, these activities tend to be exciting enough to maintain children engaged: there is constant feedback about the actions being performed, and the virtual environments tend to be stimulating and aesthetically pleasant. Conversely, in adaptations for visually impaired children, these environments tend to become poorer, damaging the story at the cost of the programming actions and its dull mechanics (e.g., place a arrow block to move the character forward). In this paper, we present TACTOPI, a playful environment designed from the ground up to be rich in both its story (a nautical game) and its mechanics (e.g., a physical robot-boat controlled with a 3D printed wheel), tailored to promote computational thinking at different levels (4 to 8 years old). This poster intends to provoke discussion and motivate accessibility researchers that are interested in computational thinking to make playfulness a priority.},
  address = {New York, NY, USA},
  articleno = {82},
  author = {Abreu, L\'{u}cia and Pires, Ana Cristina and Guerreiro, Tiago},
  booktitle = {Proceedings of the 22nd International ACM SIGACCESS Conference on Computers and Accessibility},
  doi = {10.1145/3373625.3418003},
  isbn = {9781450371032},
  keywords = {computational thinking; play; robots; visually impaired children},
  location = {Virtual Event, Greece},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {ASSETS '20},
  title = {TACTOPI: a Playful Approach to Promote Computational Thinking for Visually Impaired Children},
  url = {https://doi.org/10.1145/3373625.3418003},
  year = {2020}
}

@inproceedings{merged577,
  abstract = {Calls for standardized and validated measures of computational thinking have been made repeatedly in recent years. Still, few such tests have been created and even fewer have undergone rigorous psychometric evaluation and been made available to researchers. The purpose of this study is to report our work in developing and validating a test of computational thinking concepts and skills and to compare different scoring methods for the test. This computational thinking exam is intended to be used in computing education research as a common measure of computational thinking so that the research community will be able to make more meaningful comparisons across samples and studies. The Computational Thinking Concepts and Skills Test (CTCAST) was administered to students in several courses, evaluated and revised, and then administered to another group of students. Part of the revision included changing half of the items to a multiple-select format. The test scores using the three scoring methods were compared to each other and to scores on a different test of core computer science knowledge. Results indicate the CTCAST and the test of core computer science knowledge measure similar, but not identical, aspects of students' knowledge and skills, and that item-level statistics vary according to the scoring method that is used. Recommendations for using and scoring the test are presented.},
  address = {New York, NY, USA},
  author = {Peteranetz, Markeya S. and Morrow, Patrick M. and Soh, Leen-Kiat},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366813},
  isbn = {9781450367936},
  keywords = {assessment; computational thinking; multiple-select items; test development},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {926–932},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Development and Validation of the Computational Thinking Concepts and Skills Test},
  url = {https://doi.org/10.1145/3328778.3366813},
  year = {2020}
}

@inproceedings{merged578,
  abstract = {We present reflections based on qualitative analysis of data from the CHEM+C Project which promotes computational thinking (CT) in classrooms through integration with science classes. The curriculum utilizes multiple representations, requiring students to work with physical phenomena, chemical equations, digital simulations, and modifiable code-based representations. Much CT focus on abstraction naturally emphasizes (1) extraction of a set of features from an object or process, and (2) finding commonality between objects and processes. But Rosen encourages us to think about abstraction as also including the production of new concepts or actions. Integrating CT into science offers the possibility of enhancing this aspect of abstraction. Changing the representational affordances available to the students allows them to take their CT thinking beyond learning-to-abstract towards learning-through-abstraction. This perspective moves computation from an internally focused exercise into the expression of valued ideas in a computational medium.},
  address = {New York, NY, USA},
  author = {Gautam, Aakash and Bortz, Whitney and Tatar, Deborah},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366892},
  isbn = {9781450367936},
  keywords = {abstraction; computational thinking; ct; k-12; multi-representation; representation; science context},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {393–399},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Abstraction Through Multiple Representations in an Integrated Computational Thinking Environment},
  url = {https://doi.org/10.1145/3328778.3366892},
  year = {2020}
}

@inproceedings{merged579,
  address = {New York, NY, USA},
  author = {Maiorana, Francesco},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3385579},
  isbn = {9781450367936},
  location = {Portland, OR, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Session details: Paper Session: Computational Thinking B},
  url = {https://doi.org/10.1145/3385579},
  year = {2020}
}

@article{merged580,
  abstract = {Seeking to change computing teaching to improve computer science.},
  address = {New York, NY, USA},
  author = {Guzdial, Mark and Kay, Alan and Norris, Cathie and Soloway, Elliot},
  doi = {10.1145/3363181},
  issn = {0001-0782},
  issue_date = {November 2019},
  journal = {Commun. ACM},
  month = {October},
  number = {11},
  numpages = {3},
  pages = {28–30},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking should just be good thinking},
  url = {https://doi.org/10.1145/3363181},
  volume = {62},
  year = {2019}
}

@inproceedings{merged581,
  abstract = {It has been argued that computational thinking should precede computer programming in the course of a career in computing. This argument is the basis for the slogan "logic first, syntax later" and the development of many cryptic syntax removed programming languages such as Scratch!, Blockly and Visual Logic. The goal is to focus on the structuring of the semantic relationships among the logical building blocks to yield solutions to computational problems. In this paper, we introduce a new programming platform, called the CodeMapper, in which learners are able to build computational logic in independent modules and aggregate them to create complex modules. CodeMapper is an abstract development environment in which rapid visual prototyping of systems is possible by combining already developed independent modules in logical steps.},
  address = {New York, NY, USA},
  author = {Vanvorce, Patrick and Jamil, Hasan M.},
  booktitle = {Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing},
  doi = {10.1145/3297280.3298913},
  isbn = {9781450359337},
  keywords = {computational thinking; conceptual programming; crowd-computing; imperative programming; rapid prototyping},
  location = {Limassol, Cyprus},
  numpages = {3},
  pages = {2532–2534},
  publisher = {Association for Computing Machinery},
  series = {SAC '19},
  title = {Computational thinking with the web crowd using CodeMapper},
  url = {https://doi.org/10.1145/3297280.3298913},
  year = {2019}
}

@inproceedings{merged582,
  address = {New York, NY, USA},
  author = {Allen, Meghan},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3385575},
  isbn = {9781450367936},
  location = {Portland, OR, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Session details: Paper Session: Computational Thinking Assessment},
  url = {https://doi.org/10.1145/3385575},
  year = {2020}
}

@inproceedings{merged583,
  abstract = {Computational thinking has recently gained more and more relevance as problem-solving competence of the 21st century. Taking Wing's [1] grand vision into account, each student should have certain skills in computational thinking in order to be able to participate adequately in social life and in his/her future profession. Thus, the International Computer and Information Literacy Study (ICILS 2018) does in addition to other student competences also measure their achievement in computational thinking [2]. In this internationally comparative large-scale assessment with a representative sample, a sound body of information is gathered that is used, among others, to explain variation in students' achievement in computational thinking. One field that represents a national extension in Germany is problem-solving. This paper presents a PhD project that focuses on this field and provides an analysis model that examines the relationship between students' self-perceived problem-solving skills and their computational thinking skills, taking into account further variables of influence and aims to explain variation in students' achievement of computational thinking.},
  address = {New York, NY, USA},
  author = {Labusch, Amelie},
  booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
  doi = {10.1145/3230977.3231019},
  isbn = {9781450356282},
  keywords = {ICILS 2018; computational thinking; problem-solving},
  location = {Espoo, Finland},
  numpages = {2},
  pages = {276–277},
  publisher = {Association for Computing Machinery},
  series = {ICER '18},
  title = {Fostering Computational Thinking through Problem-Solving at School},
  url = {https://doi.org/10.1145/3230977.3231019},
  year = {2018}
}

@inproceedings{merged584,
  abstract = {In recent years, computational thinking has once again received attention widely. Computational thinking is generally considered to be the ability to be acquired. However, this study is to use computational thinking as part of the learning method. In order to explore the application of computational thinking in teaching, this study first collected the main review papers, as well as the literature on the assessment of computational thinking, and examined their views. Then, this study proposes a learning method that integrates computational thinking into experiential learning theory and applies it to learning artificial intelligence techniques.},
  address = {New York, NY, USA},
  author = {Shih, Wen-Chung},
  booktitle = {Proceedings of the 3rd International Conference on Education and Multimedia Technology},
  doi = {10.1145/3345120.3345134},
  isbn = {9781450372107},
  keywords = {Artificial intelligence; Computational thinking; Experiential learning},
  location = {Nagoya, Japan},
  numpages = {5},
  pages = {364–368},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '19},
  title = {Integrating Computational Thinking into the Process of Learning Artificial Intelligence},
  url = {https://doi.org/10.1145/3345120.3345134},
  year = {2019}
}

@inproceedings{merged585,
  abstract = {Providing opportunities for students to collaborate while developing their computational thinking (CT) is a challenge, particularly for remote collaboration. To address this issue, an interdisciplinary team derived a set of design rationales (integration of learning activities, scaffolding progression, cross-device interaction and supporting collaboration in all activities) and developed CoTinker: a collaborative, cross-device tool designed to foster equity in the form of equal participation amongst students. Through a pilot study, we investigated high-school students (n=15), working with CT activities supported by CoTinker, in the form of a computer model of a biological phenomenon. We found that CoTinker was able to support students’ remote collaborative work and participation equity. Furthermore, students were able to take advantage of cross-device interaction using their laptop and mobile phones in concert. We conclude that the design rationales and CoTinker design can serve as useful starting points for enabling equitable collaboration amongst students working with CT.},
  address = {New York, NY, USA},
  articleno = {49},
  author = {Musaeus, Line Have and S\o{}rensen, Marie-Louise Stisen Kjerstein and Palfi, Blanka S\'{a}ra and Iversen, Ole Sejer and Klokmose, Clemens Nylandsted and Petersen, Marianne Graves},
  booktitle = {Nordic Human-Computer Interaction Conference},
  doi = {10.1145/3546155.3546709},
  isbn = {9781450396998},
  keywords = {computational thinking; cross-device; device ecology; education; interaction design; remote collaboration},
  location = {Aarhus, Denmark},
  numpages = {12},
  publisher = {Association for Computing Machinery},
  series = {NordiCHI '22},
  title = {CoTinker: Designing a Cross-device Collaboration Tool to Support Computational Thinking in Remote Group Work in High School Biology},
  url = {https://doi.org/10.1145/3546155.3546709},
  year = {2022}
}

@inproceedings{merged586,
  abstract = {This study investigated school-wide integration of computational thinking (CT) in elementary schools of: 1) systems-level approaches to integration; 2) teachers' understanding and implementation of CT integration, and 3) challenges to integration. Data sources include interviews with teachers, professional development (PD) providers, principals as well as implementation observations. Findings revealed three distinct approaches: (a) Lone STEM teacher implementer, (b) PD scaffolded approach, and (c) Whole school coach-in-residence approach. Teachers generally viewed CT in the context of problem-solving. Although struggles and challenges existed in all three schools, administrators, PD providers, and teachers all had a high commitment to CT integration.},
  address = {New York, NY, USA},
  author = {Yan, Wei and Liu, Ruohan and Israel, Maya and Sherwood, Heather and Fancsali, Cheri and Pierce, Melissa},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372623},
  isbn = {9781450367936},
  keywords = {computational thinking; computers and society; k-12 instruction; qualitative research},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1325},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {School-wide Integration of Computational Thinking into Elementary Schools: A Cross-case Study},
  url = {https://doi.org/10.1145/3328778.3372623},
  year = {2020}
}

@inproceedings{merged587,
  abstract = {This study explains the factors that enhance Computational Thinking (CT) in the education of Malaysia, specifically for undergraduate students. The purpose of strengthening the CT among the undergraduate students is to ensure the readiness and preparation for the coming industrial revolution, such as Industry Revolution 4.0 and beyond. This study proposes integrating Technology Readiness Index(TRI) and Technology Acceptance Model (TAM) as main factors to examine how it enhances the CT in Malaysian education. In addition, this integration will operate as the main theoretical framework for this research study and form a model in this research study, namely Technology Readiness Acceptance Model (TRAM). This study shall establish a suitable adoption model to integrate computational thinking from the Malaysian education perspective for the future industrial revolution. The discussion and explanation on the factors that enhance CT in Malaysian education are discussed further in the paper.},
  address = {New York, NY, USA},
  author = {Che Kamaruddin, Ahmad Rasydan and Low, Jing Hong and Sarwar, Abdullah},
  booktitle = {Proceedings of the 2021 5th International Conference on Education and E-Learning},
  doi = {10.1145/3502434.3502448},
  isbn = {9781450385749},
  keywords = {Computational Thinking; Future Industrial Revolution; Industry Revolution},
  location = {Virtual Event, Japan},
  numpages = {5},
  pages = {81–85},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '21},
  title = {Enhancing the Adoption of Computational Thinking Education Among the Malaysians to Prepare for Future Industrial Revolution},
  url = {https://doi.org/10.1145/3502434.3502448},
  year = {2022}
}

@inproceedings{merged588,
  abstract = {The computational thinking evaluation in last five years (2016-2020) has allowed to stablish a diagnosis for new students of Information Technologies division at the Universidad Tecnol\'{o}gica de Puebla – Mexico. The immediate benefit has been the offer of learning scenarios for the programming methodology course that impacts the retention indicator. Women and men have benefited from this strategy, but no review of the results had been conducted to determine whether there is any difference in evaluation performance from a gender perspective. As in other countries, in Mexico there is an accentuated percentage difference in terms of men´s election for higher education studies in areas of science, technology, engineering and mathematics. This article sets out the data analysis when evaluating five skills associated with the concept of computational thinking, this means, decomposition, abstraction, generalization, algorithmic design and evaluation. The conclusion of the analysis states that there is no significant gender difference in the results of evaluation. Women and men who enter to study the first semester have similar conditions and opportunities for learning the contents and consequently acquire the respective competencies.},
  address = {New York, NY, USA},
  author = {Rojas L\'{o}pez, Arturo and Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e}},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486429},
  isbn = {9781450390668},
  keywords = {Higher education; STEM; computational thinking; gender},
  location = {Barcelona, Spain},
  numpages = {6},
  pages = {109–114},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Initial performance analysis in the evaluation of computational thinking from a gender perspective in higher education},
  url = {https://doi.org/10.1145/3486011.3486429},
  year = {2021}
}

@inproceedings{merged589,
  abstract = {Computer science (CS) education advocates argue that integration of computational thinking (CT) into instruction in other subjects has promise for providing a strong foundation in computer science ideas for elementary school students. Less attention has been given to the role that CT may play in improving learning in subjects other than computer science. This document summarizes my plans to study how teaching elementary level mathematics through computational thinking practices can improve mathematics learning.},
  address = {New York, NY, USA},
  author = {Rich, Kathryn M.},
  booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
  doi = {10.1145/3230977.3231010},
  isbn = {9781450356282},
  keywords = {computational thinking; k-5; mathematics},
  location = {Espoo, Finland},
  numpages = {2},
  pages = {286–287},
  publisher = {Association for Computing Machinery},
  series = {ICER '18},
  title = {Using Computational Thinking to Transform Elementary Mathematics Instruction},
  url = {https://doi.org/10.1145/3230977.3231010},
  year = {2018}
}

@inproceedings{merged590,
  abstract = {In this study, we adapted the notion of framing, a theoretical construct that refers to a person's expectations about social spaces (Goffman, 1974), to investigate whether teachers viewed computational thinking (CT) according to subject-specific frames. This case study aimed to understand how teachers make connections between CT and subjects targeted for integration. Epistemological framing contributed new insights on why teachers connected CT in different ways to different subjects: frame shifting focused teachers' attention on goals and activities specific to each subject. As teachers attended to a subject's particularities, they drew upon different epistemic resources to construct their descriptions of CT. Our participants (n=6) were teachers who taught both 7th-12th grade computing and mathematics as separate subjects. Qualitative coding of interview transcripts revealed that teachers' ideas about CT in computing were strongly influenced by computer programming while their ideas about CT in mathematics corresponded with familiar ways of teaching and learning mathematics. Instead of accepting fragmented notions of CT as the price of integration into individual subjects, we propose limiting the scope when defining CT. We explain how this non-intuitive strategy can preserve the coherence of CT and how it might be used in CT professional development (PD) for mathematics teachers.},
  address = {New York, NY, USA},
  author = {Huang, Wendy and Chan, Shiau Wei and Looi, Chee Kit},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432400},
  isbn = {9781450380621},
  keywords = {computational thinking; disciplinarity; epistemic resource; framing; professional development; secondary mathematics education; teacher perspective; theory},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {390–396},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Frame Shifting as a Challenge to Integrating Computational Thinking in Secondary Mathematics Education},
  url = {https://doi.org/10.1145/3408877.3432400},
  year = {2021}
}

@inproceedings{merged591,
  abstract = {Researchers and practitioners have demonstrated various benefits of introducing computational thinking (CT) through music composition coding. While researchers have studied the impacts on participant attitudes towards CT and their learning of CT concepts, more case studies are needed on both learning CT concepts as well as CT practices, i.e., the processes of constructing music coding projects. This paper presents a case study of middle schoolers in an informal learning environment focused on integrating music composition with coding in TunePad. Specifically, we collected and analyzed logs of coding events, final code products, and surveys to explore both CT concept use and CT practices exhibited by the participants as they completed open-ended music coding activities to create their own melodies with specific music and CT requirements and recommendations.},
  address = {New York, NY, USA},
  author = {Zhang, Yifan and Krug, Douglas Lusa and Mouza, Chrystalla and Shepherd, David C. and Pollock, Lori},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524757},
  isbn = {9781450392013},
  keywords = {computational thinking (ct); informal learning; music composition},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {33–39},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {A Case Study of Middle Schoolers' Use of Computational Thinking Concepts and Practices during Coded Music Composition},
  url = {https://doi.org/10.1145/3502718.3524757},
  year = {2022}
}

@inproceedings{merged592,
  abstract = {We explore how generative conversational AI can assist students’ learning, creative, and sensemaking process in a visual programming environment where users can create comics from code. The process of visualizing code in terms of comics involves mapping programming language (code) to natural language (story) and then to visual language (of comics). While this process requires users to brainstorm code examples, metaphors, and story ideas, the recent development in generative models introduces an exciting opportunity for learners to harness their creative superpower and researchers to advance our understanding of how generative conversational AI can augment our intelligence in creative learning contexts. We provide an overview of our system and discuss interaction scenarios to demonstrate ways we can partner with generative conversational AI in the context of learning computer programming.},
  address = {New York, NY, USA},
  author = {Suh, Sangho and An, Pengcheng},
  booktitle = {Companion Proceedings of the 27th International Conference on Intelligent User Interfaces},
  doi = {10.1145/3490100.3516473},
  isbn = {9781450391450},
  keywords = {coding strip; comics; generative conversational AI; visual programming environment},
  location = {Helsinki, Finland},
  numpages = {4},
  pages = {73–76},
  publisher = {Association for Computing Machinery},
  series = {IUI '22 Companion},
  title = {Leveraging Generative Conversational AI to Develop a Creative Learning Environment for Computational Thinking},
  url = {https://doi.org/10.1145/3490100.3516473},
  year = {2022}
}

@inproceedings{merged593,
  abstract = {Educational robotics and physical computing have proved to be good sources of motivation for students of all ages and school levels. We conducted a series of workshops in the primary schools of city of Joensuu in eastern Finland, focusing on training the fundamental computational thinking (CT) skills by using a programmable and interactive Teddy Bear toy. Educational robotics and physical computing devices have proved to be an efficient way to teach these skills regardless the students’ age group or previous background. To assess the students’ intrinsic motivation towards Teddy Bear programming, we devised a survey for workshop participants and conducted a statistical analysis to compare differences between the genders and age groups. The results of the large-scale empirical study (n=1440) show that the students at the age of 9-10 years (Grades 3-4) are significantly more motivated towards such a learning tool than the students of age 11-12 years (Grades 5-6). Furthermore, we show that especially young girls find the Teddy Bear programming motivating and they are eager to learn more. This indicates that appealing tools play a key role when teaching programming and CT concepts to young school children.},
  address = {New York, NY, USA},
  author = {Jormanainen, Ilkka and Tukiainen, Markku},
  booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3434780.3436676},
  isbn = {9781450388504},
  keywords = {Computational thinking; IMI instrument; K-12 education; arduino; motivation; physical computing; programming education; robotics},
  location = {Salamanca, Spain},
  numpages = {7},
  pages = {54–60},
  publisher = {Association for Computing Machinery},
  series = {TEEM'20},
  title = {Attractive Educational Robotics Motivates Younger Students to Learn Programming and Computational Thinking},
  url = {https://doi.org/10.1145/3434780.3436676},
  year = {2021}
}

@inproceedings{merged594,
  abstract = {The acquisition of Computational Thinking (CT) skills is an essential goal of Computer Science (CS) education. Assessment of CT is critical for CS teaching and research. However, there is a paucity of developmentally appropriate CT measures designed for early elementary school children. Among existing measures, there has been little attention paid to methods for comparing CT skills across grades. In the present study, I examined the use of a normalized scoring system for comparing performance on three grade-specific versions of the TechCheck CT assessment. TechCheck is a brief, unplugged, multiple-choice instrument for children 5-9 years of age that probes six domains of CT. Baseline raw score TechCheck data from 596 students showed normal distributions with significant differences in means between grades. I calculated Z-scores and percentile ranks by grade. This normalization allowed for the comparison of CT skills within and across grades in the context of a pilot longitudinal study of the CAL-ScratchJr coding curriculum. Application of the normative scoring system showed a difference in the outcome of only 4 percentile ranks between first and second graders while raw scores indicated an improbable 45% difference. This study demonstrates that normalized TechCheck scores that take into account differences in the score distributions across grades can improve the measurement of CT skills in the context of early childhood CS educational interventions.},
  address = {New York, NY, USA},
  author = {Relkin, Emily},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499214},
  isbn = {9781450390712},
  keywords = {assessment; coding; computer science; early childhood; normalization; unplugged},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1175},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Cross-grade Comparison of Computational Thinking in Young Children Using Normalized Unplugged Assessment Scores},
  url = {https://doi.org/10.1145/3478432.3499214},
  year = {2022}
}

@inproceedings{merged595,
  abstract = {Computational thinking (CT) education reaches only a fraction of young children, in part because CT learning tools often require expensive hardware or fluent literacy. Informed by needfinding interviews, we developed a voice-guided smartphone application leveraging storytelling as a creative activity by which to teach CT concepts to 5- to 8-year-old children. The app includes two storytelling games where users create and listen to stories as well as four CT games where users then modify those stories to learn about sequences, loops, events, and variables. We improved upon the app design through wizard-of-oz testing (N = 28) and iterative design testing (N = 22) before conducting an evaluation study (N = 22). Children were successfully able to navigate the app, effectively learn about the target computing concepts, and, after using the app, children demonstrated above-chance performance on a near transfer CT concept recognition task.},
  address = {New York, NY, USA},
  articleno = {54},
  author = {Dietz, Griffin and Le, Jimmy K and Tamer, Nadin and Han, Jenny and Gweon, Hyowon and Murnane, Elizabeth L and Landay, James A.},
  booktitle = {Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3411764.3445039},
  isbn = {9781450380966},
  keywords = {children; computational thinking; storytelling; voice user interface},
  location = {Yokohama, Japan},
  numpages = {15},
  publisher = {Association for Computing Machinery},
  series = {CHI '21},
  title = {StoryCoder: Teaching Computational Thinking Concepts Through Storytelling in a Voice-Guided App for Children},
  url = {https://doi.org/10.1145/3411764.3445039},
  year = {2021}
}

@inproceedings{merged596,
  abstract = {Policymakers believe that preparing all students from the earliest grades to high school for a new future of STEM+Computing (STEM+C) integration involves teaching them not only the science and math central to these areas, but also how computational thinking is integral to STEM disciplines. This panel brings together four researchers who focus on research and development of interdisciplinary approaches to the integration of computing within STEM teaching and learning for preK-12 students. They will share the most impactful, practical, and promising approaches to STEM+C integration, their pros and cons, challenges, and key insights to successful STEM+C integration at all grade levels.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi and Fisler, Kathryn and Lee, Irene and Yadav, Aman},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366970},
  isbn = {9781450367936},
  keywords = {mathematics education; science education; stem education; stem+computing education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {481–482},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Integrating Computing and Computational Thinking into K-12 STEM Learning},
  url = {https://doi.org/10.1145/3328778.3366970},
  year = {2020}
}

@inproceedings{merged597,
  abstract = {This paper describes the design of a mobile based gaming application - Meri Kahani - created to teach computational thinking skills to school going teenagers in underdeveloped areas of Pakistan. We explore the use of gamification to teach computational thinking through level-based learning in a Pakistani context. This paper's final design demonstrates how gamified learning, rewarding techniques, and feminine themes can be used to attract female teenagers towards computational thinking. This paper also discusses the evaluation and usability testing results conducted on 16 school-going female teenagers. We hope that through this study, we have taken the first step towards nurturing an interest in young females for computational thinking and overcoming the gender gap that adversely affects female involvement in Computer Science in Pakistan.},
  address = {New York, NY, USA},
  articleno = {337},
  author = {Masood, Mehreen and Khawaja, Mujtaba Ahmed and Sharif, Muhammad Shehryaar and Iqbal, Omer and Mehmood Butt, Momin and Shahid, Suleman},
  booktitle = {Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3411763.3451776},
  isbn = {9781450380959},
  keywords = {Computational Thinking; Gamification; Low-Socioeconomic; Pakistan; Storytelling; Teenage Girls},
  location = {Yokohama, Japan},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '21},
  title = {Meri Kahani: A Gamified Solution to Teach Computational Thinking to Female Teenagers in Low Resource Communities},
  url = {https://doi.org/10.1145/3411763.3451776},
  year = {2021}
}

@inproceedings{merged598,
  abstract = {Tools like MIT App Inventor and Scratch are designed to help students develop programming and computational thinking skills by allowing them to use their interest and personal experiences to create meaningful artifacts. However, students often need additional help in translating their ideas into functional programs because they lack understanding of how to map the visual aspects of their projects to programming constructs and understanding of how to develop appropriate algorithms that bring their ideas to life. To address this issue, we created a Computational Thinking App Design Mat (App Design Mat) to scaffolds students' CT skill development in the context of creating a mobile application with MIT APP Inventor 2. The App Design Mat fosters student engagement in computational thinking through four areas of the mat: Problem Decomposition, Pattern Abstraction, Pattern Recognition, and Algorithm Design. In this poster will describe the design and results from the use of the App Design Mat with 80 eighth grade students. Our results suggest that most students understood the purpose of using the App Design Mat, used the App Design Mat effectively, and used some aspects of the App Design Mat in developing their final mobile app project.},
  address = {New York, NY, USA},
  author = {Jimenez, Yerika and Hays, Theodore and Gardner-McCune, Christina},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3022412},
  isbn = {9781450346986},
  keywords = {app inventor; computational thinking; computational thinking app design mat (app design mat)},
  location = {Seattle, Washington, USA},
  numpages = {1},
  pages = {711},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Computational Thinking App Design Mat: Supporting the Development of Students' Computational Thinking Skills (Abstract Only)},
  url = {https://doi.org/10.1145/3017680.3022412},
  year = {2017}
}

@inproceedings{merged599,
  abstract = {We propose computational empowerment as an approach and a Participatory Design response to challenges related to digitalization of society and the emerging need for digital literacy in K12 education. Our approach extends the current focus on computational thinking to include contextual, human-centred and societal challenges and impacts involved in students' creative and critical engagement with digital technology. Our research is based on the FabLab@School project, in which a PD approach to computational empowerment provided opportunities as well as further challenges for the complex agenda of digital technology in education. We argue that PD has the potential to drive a computational empowerment agenda in education by connecting political PD with contemporary visions for addressing a future digitalized labour market and society.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Iversen, Ole Sejer and Smith, Rachel Charlotte and Dindler, Christian},
  booktitle = {Proceedings of the 15th Participatory Design Conference: Full Papers - Volume 1},
  doi = {10.1145/3210586.3210592},
  isbn = {9781450363716},
  keywords = {computational empowerment; computational thinking; education},
  location = {Hasselt and Genk, Belgium},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {PDC '18},
  title = {From computational thinking to computational empowerment: a 21st century PD agenda},
  url = {https://doi.org/10.1145/3210586.3210592},
  year = {2018}
}

@inproceedings{merged600,
  abstract = {There are several experience reports on teaching computational thinking (CT) to children in a playful way. However, we did not find in the literature any studies presenting a well defined proposal of types of tools or methods that could be adopted to teach different concepts of computational thinking. Therefore, we investigate whether Cultural Viewpoint Metaphors (CVM) could be a good way to analyze, classify, and indicate which CT tools and teaching approaches existing studies are addressing. We first analyze existing research on teaching computational thinking to middle school students in Brazil. Then, the tools and methods used in those works in light of CVM. Our findings show positive results regarding the possibility of using CVM as a foundation to classify tools and methods for teaching CT.},
  address = {New York, NY, USA},
  articleno = {54},
  author = {de Oliveira, Gabriela A. Araujo and Assun\c{c}\~{a}o, Oto Braz and Prates, Raquel Oliveira},
  booktitle = {Proceedings of the 18th Brazilian Symposium on Human Factors in Computing Systems},
  doi = {10.1145/3357155.3358466},
  isbn = {9781450369718},
  keywords = {computational thinking; cultural viewpoint metaphors},
  location = {Vit\'{o}ria, Esp\'{\i}rito Santo, Brazil},
  numpages = {13},
  publisher = {Association for Computing Machinery},
  series = {IHC '19},
  title = {Using cultural viewpoint metaphors in the analysis of computational thinking teaching},
  url = {https://doi.org/10.1145/3357155.3358466},
  year = {2019}
}

@inproceedings{merged601,
  abstract = {Computational Thinking (CT) has been considered as a problem solving approach that involving fundamental thinking processes which include decomposition, pattern recognition, abstraction, and algorithms. To see that CT would be of useful to solve complex problems of user interface design (UID), this study aims to see the extent the CT framework would have an effect on the achievement of designs thinking process. The study was carried out based on the evaluation of user interface design projects accomplished by undergraduate students involving 3 cohorts composed of 21 groups in total. The results indicate that disregarding CT process in design thinking leads to inefficiency interface design.},
  address = {New York, NY, USA},
  author = {Semiawan, Transmissia},
  booktitle = {Proceedings of the 8th International Conference on Informatics, Environment, Energy and Applications},
  doi = {10.1145/3323716.3323741},
  isbn = {9781450361040},
  keywords = {abstraction; algorithm; computational thinking; decomposition; pattern recognition; user interface design},
  location = {Osaka, Japan},
  numpages = {5},
  pages = {238–242},
  publisher = {Association for Computing Machinery},
  series = {IEEA '19},
  title = {User interface design analysis pertaining to computational thinking framework},
  url = {https://doi.org/10.1145/3323716.3323741},
  year = {2019}
}

@inproceedings{merged602,
  abstract = {concepts (CTCs), specifically in block-based programming environments like Scratch, has been challenging, and assessment instruments developed and presented in prior studies either do not provide a complete picture about students' cognitive processes or they are not easy-to-administer, subjective, or requires lengthy analysis of qualitative data. Eye-tracking has become one of the most popular methods to study what individuals view, in what order, for how long, and how often, and it is a technology that could give us a window into students' cognitive processes and could be used as an assessment tool for comprehension of CTCs [1].This study presents eye-tracking technology as an objective, non-intrusive, and easy-to-administer assessment instrument to measure students' comprehension of core CTCs including sequences, loops, events, parallelism, conditionals, operators, data, motion, looks, sound, pen, and sensing. It explores gradual changes in students' comprehension of CTCs as reflected on three eye-gaze data as a proxy; FD (Fixation Duration), SA (Saccade Amplitudes), and RF (Regression Frequency).},
  address = {New York, NY, USA},
  author = {Arslanyilmaz, Abdurrahman and Corpier, Kendra},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3325555},
  isbn = {9781450368957},
  keywords = {assessment; computational thinking; eye tracking},
  location = {Aberdeen, Scotland Uk},
  numpages = {1},
  pages = {296},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {Eye Tracking to Evaluate Comprehension of Computational Thinking},
  url = {https://doi.org/10.1145/3304221.3325555},
  year = {2019}
}

@inproceedings{merged603,
  abstract = {There are increasing calls for mathematics teachers to foster computational thinking (CT) skills in their lessons and align them with existing curricula and national educational policies. Algorithmic thinking (AT) and generalization are two key elements of CT that are often underrepresented in traditional mathematics lessons. This study investigated how to address AT and generalization aspects in 12th-grade calculus lessons using the dynamic mathematics software GeoGebra. We present a six-lesson intervention designed by an interdisciplinary team of researchers and teachers with a background in computer science and mathematics education that aims to foster pre-university students’ AT and generalization skills in calculus lessons. We evaluated the intervention in a 15 students classroom in the Netherlands through the analysis of students’ workbooks, files, interviews, and the teacher’s logbook. The findings suggest that the intervention was favorably seen by both the teacher and the students, and that their learning and teaching experience was highly satisfactory. The most common challenges for successfully completing the designed material included issues related to getting familiar with GeoGebra, syntax, and effectively using conditional statements. Finally, we report on the learning and teaching experience and discuss strategies to address AT and generalization aspects for teachers who wish to address such CT aspects in mathematics lessons.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {van Borkulo, Sylvia and Chytas, Christos and Drijvers, Paul and Barendsen, Erik and Tolboom, Jos},
  booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3481312.3481319},
  isbn = {9781450385718},
  keywords = {GeoGebra; algorithmic thinking; computational thinking; generalization; mathematics education},
  location = {Virtual Event, Germany},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '21},
  title = {Computational Thinking in the Mathematics Classroom: Fostering Algorithmic Thinking and Generalization Skills Using Dynamic Mathematics Software},
  url = {https://doi.org/10.1145/3481312.3481319},
  year = {2021}
}

@inproceedings{merged604,
  abstract = {We present HyperCubes, an Augmented Reality (AR) platform to foster computational literacy. Using paper cubes as AR markers and spatial tracking, the user becomes familiar with sequences of instructions as coding blocks. We leverage spatial cognition as a means to improve understanding of procedural and sequential models. We have performed two pilot studies for an iterative and user centered design of the platform. With a final qualitative user study we address engagement levels and the educational potential of the platform. We argue that by using spatial cognition and the flexibility of the AR medium, a playful introduction to basic computational thinking concepts can be presented in late elementary school and middle school children.},
  address = {New York, NY, USA},
  author = {Fuste, Anna and Schmandt, Chris},
  booktitle = {Extended Abstracts of the Annual Symposium on Computer-Human Interaction in Play Companion Extended Abstracts},
  doi = {10.1145/3341215.3356264},
  isbn = {9781450368711},
  keywords = {augmented reality; computational thinking; diy; k-12 education; paper crafts; programming; spatial cognition},
  location = {Barcelona, Spain},
  numpages = {9},
  pages = {379–387},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '19 Extended Abstracts},
  title = {HyperCubes: A Playful Introduction to Computational Thinking in Augmented Reality},
  url = {https://doi.org/10.1145/3341215.3356264},
  year = {2019}
}

@inproceedings{merged605,
  abstract = {For online courses to be an effective alternative to face-to-face courses, they must provide equivalent levels of interaction, engagement, supervision, and support. This paper analyzes and compares the experiences of students in face-to-face and online sections of the same introductory course taught by the same instructor. The course heavily utilizes team-based active learning, and effort was put into maintaining comparable group experiences in the online section. An analysis of student opinions and objective outcomes revealed only minor differences between the two sections. Notably, there were no statistically significant variations in students' overall grades, self reported confidence, or course evaluation ratings, indicating that high quality student experiences and outcomes can be achieved when migrating active learning to an online format.},
  address = {New York, NY, USA},
  author = {Smith, Rebecca and Rixner, Scott},
  booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3341525.3387388},
  isbn = {9781450368742},
  keywords = {active learning; computational thinking; online education},
  location = {Trondheim, Norway},
  numpages = {7},
  pages = {342–348},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '20},
  title = {Design and Evaluation of a Collaborative Online Computational Thinking Course},
  url = {https://doi.org/10.1145/3341525.3387388},
  year = {2020}
}

@inproceedings{merged606,
  abstract = {There is a growing need to present all students with an opportunity to learn computer science and computational thinking (CT) skills during their primary and secondary education. Traditionally, these opportunities are available outside of the core curriculum as stand-alone courses often taken by those with preparatory privilege. Researchers have identified the need to integrate CT into core classes to provide equitable access to these critical skills. We have worked in a research-practice partnership with two magnet middle schools focused on digital sciences to develop and implement computational thinking into life sciences classes. In this report, we present initial lessons learned while conducting our design-based implementation research on integrating computational thinking into middle school science classes. These case studies suggest that several factors including teacher engagement, teacher attitudes, student prior experience with CS/CT, and curriculum design can all impact student engagement in integrated science-CT lessons.},
  address = {New York, NY, USA},
  articleno = {21},
  author = {Catet\'{e}, Veronica and Lytle, Nicholas and Dong, Yihuan and Boulden, Danielle and Akram, Bita and Houchins, Jennifer and Barnes, Tiffany and Wiebe, Eric and Lester, James and Mott, Bradford and Boyer, Kristy},
  booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3265757.3265778},
  isbn = {9781450365888},
  keywords = {STEM+C; computational thinking; professional development},
  location = {Potsdam, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '18},
  title = {Infusing computational thinking into middle grade science classrooms: lessons learned},
  url = {https://doi.org/10.1145/3265757.3265778},
  year = {2018}
}

@inproceedings{merged607,
  abstract = {As final event of the project "Informatics - A Child's Play?!", which aimed at introducing computational thinking in primary and secondary schools, the authors initiated the first Children's Congress in 2016 with the main theme of "Languages - Pictures - Information". This is now an annual event, where all participating children can slip into the role of researchers and present the results of their projects accomplished together with their teachers as well as teacher students of different master courses. As preparation the project teams get an introduction into computational thinking and several computer science concepts with the task of applying at least one of them in their project and the development of creative products. The themes of the Children's Congress are relatively open and fit into every subject, because our main aim is introducing computational thinking "by the way" to all participants. During their work on cross-curricular or even subject specific projects, pupils, students and teachers learn that basics of computational thinking are or can be integrated in every subject. This paper reports on the implementation and procedure of the Children's Congress and gives an overview of the projects accomplished in the first two years (2016 and 2017). It describes how and where computational thinking has been integrated and presents the main results of the evaluation gained from interviews and questionnaires.},
  address = {New York, NY, USA},
  articleno = {25},
  author = {Sabitzer, Barbara and Demarle-Meusel, Heike},
  booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3265757.3265782},
  isbn = {9781450365888},
  keywords = {children as researchers; competition; computational thinking; digital literacy; teacher training},
  location = {Potsdam, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '18},
  title = {A congress for children and computational thinking for everyone},
  url = {https://doi.org/10.1145/3265757.3265782},
  year = {2018}
}

@inproceedings{merged608,
  abstract = {This study reports the design and development of the Computational Thinking(CT) Test Tool to measure Cognitive Ability of K-12 students. The newly developed CT test tool was validated with experts and K-12 students. We expect that the CT test tool will be used as a basic data to identify the current situation of computing education.},
  address = {New York, NY, USA},
  author = {Ryu, Miyoung and Han, SeonKwan},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372594},
  isbn = {9781450367936},
  keywords = {computational thinking; computational thinking cognitive test tool; computing education},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1319},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Computational Thinking Test Tool to Measure Cognitive Ability of K-12 Students},
  url = {https://doi.org/10.1145/3328778.3372594},
  year = {2020}
}

@article{merged609,
  address = {New York, NY, USA},
  author = {CACM Staff},
  doi = {10.1145/2949401},
  issn = {0001-0782},
  issue_date = {July 2016},
  journal = {Commun. ACM},
  month = {June},
  number = {7},
  numpages = {1},
  pages = {8},
  publisher = {Association for Computing Machinery},
  title = {Rethinking computational thinking},
  url = {https://doi.org/10.1145/2949401},
  volume = {59},
  year = {2016}
}

@inproceedings{merged610,
  abstract = {Computational thinking (CT) is being considered as a key set of problem-solving skills to be acquired by the new generations of digital citizens and workers in order to thrive in a computer-based world. However, from a psychometric point of view, CT is still a poorly defined psychological construct: there is no full consensus on a formal definition of CT or how to measure it; and its correlations with other psychological constructs, whether cognitive or non-cognitive, have not been completely established. In response to the latter, this paper aims to study specifically the correlations between CT and the several dimensions from the 'Big Five' model of human personality: Conscientiousness, Openness to Experience, Extraversion, Agreeableness, and Neuroticism. To do so, the Computational Thinking Test (CTt) and the Big Five Questionnaire-Children version (BFQ-C) are administered on a sample (n = 99) of Spanish students from 5th to 10th grade. Results show statistically significant correlations between CT and: Openness to Experience (r = 0.41), Extraversion (r = 0.30), and Conscientiousness (r = 0.27). These results are partially consistent with the literature about the links between cognitive and personality variables, and corroborate the existence of a non-cognitive side of CT. Hence, educational interventions aimed at fostering CT should take into account these non-cognitive issues in order to be comprehensive and successful.},
  address = {New York, NY, USA},
  author = {Rom\'{a}n-Gonz\'{a}lez, Marcos and P\'{e}rez-Gonz\'{a}lez, Juan-Carlos and Moreno-Le\'{o}n, Jes\'{u}s and Robles, Gregorio},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012496},
  isbn = {9781450347471},
  keywords = {assessment; big five model; computational thinking; computational thinking test; educational psychology; personality},
  location = {Salamanca, Spain},
  numpages = {8},
  pages = {51–58},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Does computational thinking correlate with personality? the non-cognitive side of computational thinking},
  url = {https://doi.org/10.1145/3012430.3012496},
  year = {2016}
}

@inproceedings{merged611,
  abstract = {Developing computational thinking (CT) assessment methods appropriate for elementary students is attracting growing attention as CT research in elementary education progresses. To review the current elementary CT assessments for potential gaps, and seek additional methodologies to expand our understanding of CT, an integrative literature review of 75 research papers was performed in two phases. In Phase One, we conducted a critical analysis of existing elementary CT assessment studies. Key results include: 1) Artifact analysis, CT assessment items, and interviews are the most common methods utilized to assess CT in elementary grades; 2) Existing CT assessments primarily focus on students' computational artifacts and performance on CT tests; however, strategies to study students' thought processes during CT problem-solving are limited and under-utilized. Guided by the results of phase one, along with the theoretical perspective that connected CT to visual processing ability, in phase two we performed a survey of literature in the area of understanding cognitive processes through eye-tracking (i.e., visual attention) and think-aloud methodologies (i.e., verbalization). We focused on eye-tracking and think-aloud methodologies as these have been used to understand students' cognitive processes during problem-solving in other areas. Based on these findings, we proposed that in addition to current established methodologies, eye-tracking with the think-aloud technique can provide new insights into students' CT.},
  address = {New York, NY, USA},
  author = {Liu, Ruohan and Luo, Feiya and Israel, Maya},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3430665.3456380},
  isbn = {9781450382144},
  keywords = {assessment; computational thinking; elementary education},
  location = {Virtual Event, Germany},
  numpages = {7},
  pages = {269–275},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {What Do We Know about Assessing Computational Thinking? A New Methodological Perspective from the Literature},
  url = {https://doi.org/10.1145/3430665.3456380},
  year = {2021}
}

@inproceedings{merged612,
  abstract = {Computational Thinking (CT) is regarded as a key competency for k-12 children in the 21st century. In this project, a design-based learning (DBL) approach was proposed to improve elementary school students’ CT. This approach included programming skills learning and STEM practices with authentic real-life contexts. We assessed CT in a more accurate manner with experience-sampling methodology (ESM). A quasi-experiment study was carried out to assess how the intervention was associated with students’ self-perceived CT skills using event-based experience-sampling methodology. Forty sixth graders engaged in the curriculum units to create artifacts that solve specific real-world problems using Arduino electronic kits and Mind+ programming software. Results revealed that students’ self-perceived CT skills increased to a greater extent statistically. Using the experience sampling method, students’ self-perceived CT skills has different fluctuations in different stages of DBL, at the third phase of designing artifact, there is a significant decrease because learners are unfamiliar at the beginning of complicated cooperation in depth, which is likely to produce discourse conflicts and reduce efficiency. With the intervention of teachers, learners begin to improve greatly in the later stage. Learners have the highest CT in the iteration and improvement phases of prototype making and the final demonstration stage. In addition, collaboration plays an extremely important role in DBL, especially in the design phase. This study contributes to research in DBL teaching approach, CT instruction, its application in STEM education in particular, and how it can be used in elementary level education in general.},
  address = {New York, NY, USA},
  author = {Li, Xing and Zhang, Yi and Huang, Jing},
  booktitle = {Proceedings of the 3rd World Symposium on Software Engineering},
  doi = {10.1145/3488838.3488842},
  isbn = {9781450384094},
  keywords = {Computational thinking; Design based learning; Experience-sampling method; STEM education},
  location = {Xiamen, China},
  numpages = {6},
  pages = {17–22},
  publisher = {Association for Computing Machinery},
  series = {WSSE '21},
  title = {Testing a design-based learning approach to enhance elementary students’ computational thinking with experience-sampling method},
  url = {https://doi.org/10.1145/3488838.3488842},
  year = {2022}
}

@inproceedings{merged613,
  abstract = {The promotion of Computational Thinking principles at different levels of education enables the development of practical competencies for software development. Several off-the-shelf technologies exist to promote computational abilities with the support of block-based programming and working hardware. However, in some contexts, a significant limitation is the complexity and costs that carry the acquisition and implementation of working hardware such as Educational Robots. In this paper, we discuss a strategy to reinforce the learning of Computational Thinking (CT) skills by providing an analogous method to Educational Robots. We offer an affordable solution to assist high school students to build a CT-based software/hardware integrated solution. We executed this strategy in a coding bootcamp where students were required to design and implement an algorithm, and illustrate its execution in software and hardware. The proposed exercise delivered the expected results engaging students to ideate the solution of a problem, implement an algorithm, and create a physical demonstration of it.},
  address = {New York, NY, USA},
  author = {Fronza, Ilenia and Corral, Luis and Pahl, Claus},
  booktitle = {Proceedings of the 20th Annual SIG Conference on Information Technology Education},
  doi = {10.1145/3349266.3351410},
  isbn = {9781450369213},
  keywords = {computational thinking; education; prototyping},
  location = {Tacoma, WA, USA},
  numpages = {6},
  pages = {55–60},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '19},
  title = {Combining Block-Based Programming and Hardware Prototyping to Foster Computational Thinking},
  url = {https://doi.org/10.1145/3349266.3351410},
  year = {2019}
}

@inproceedings{merged614,
  abstract = {In this study we examine how playing Zoombinis can help upper elementary and middle school learners build implicit computational thinking (CT) skills. Building on prior methods used with the digital science learning games, Impulse and Quantum Spectre, we are combining video analysis and educational data mining to identify implicit computational thinking that emerges through gameplay [1]. This paper reports on the first phase of this process: developing a human labeling system for evidence of specific CT skills (e.g., problem decomposition, pattern recognition, algorithmic thinking, abstraction) in three Zoombinis puzzle by analyzing video data from a sample of elementary learners, middle school learners, game experts, and computer scientists. Future work will combine these human-labeled video data with game log data from these 70+ learners and computer scientists to create automated assessments of implicit computational thinking skills from gameplay behaviors in large player audiences. This poster with video examples will share results of this work-in-progress.},
  address = {New York, NY, USA},
  articleno = {45},
  author = {Rowe, Elizabeth and Asbell-Clarke, Jodi and Gasca, Santiago and Cunningham, Kathryn},
  booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3102071.3106352},
  isbn = {9781450353199},
  keywords = {computational thinking; implicit learning; learning games; video analysis},
  location = {Hyannis, Massachusetts},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {FDG '17},
  title = {Assessing implicit computational thinking in zoombinis gameplay},
  url = {https://doi.org/10.1145/3102071.3106352},
  year = {2017}
}

@inproceedings{merged615,
  abstract = {While programming is a process covering many stages, many of the tasks K-12 students meet at school are small with little need for, e.g., analysis or design. These earlier phases are, however, important to let children meet open-ended problems, brainstorm solutions and ideate their own creative designs. In this paper we present a model for an online, scalable and scaffolded design workshop for covering such aspects at K-12 level. Through a case study with 1200 students and 60 teachers on IoT and smart things, we describe the workshop and the resulting designs. While the students managed to design their own artifacts, more time had been needed for covering ethical aspects related to technology design. The results suggest creating separate workshops for different grade levels, and also for design and ethical aspects respectively. Moreover, additional resources could support teachers in continuing the discussion with the students after the workshop.},
  address = {New York, NY, USA},
  author = {Mannila, Linda and Skog, Mia},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589377},
  isbn = {9798400701313},
  keywords = {Case study; Computational thinking; Design; K-12 education; Online workshop; Programming},
  location = {Chicago, IL, USA},
  numpages = {11},
  pages = {222–232},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {"Look at Our Smart Shoe" - a Scalable Online Concept for Introducing Design as Part of Computational Thinking in Grades 1-6},
  url = {https://doi.org/10.1145/3585088.3589377},
  year = {2023}
}

@article{merged616,
  abstract = {Addressing unresolved questions concerning computational thinking.},
  address = {New York, NY, USA},
  author = {Denning, Peter J.},
  doi = {10.1145/2998438},
  issn = {0001-0782},
  issue_date = {June 2017},
  journal = {Commun. ACM},
  month = {May},
  number = {6},
  numpages = {7},
  pages = {33–39},
  publisher = {Association for Computing Machinery},
  title = {Remaining trouble spots with computational thinking},
  url = {https://doi.org/10.1145/2998438},
  volume = {60},
  year = {2017}
}

@article{merged617,
  abstract = {It is commonly agreed that being able to think computationally will make it easier for students to master computing disciplines as well as apply these thinking skills to subjects beyond computing. In this work, we attempt to bridge the gap between the overarching high-level ideas initially proposed by Jeanette Wing and K-16 computer science education. We propose a first step towards refining, summarizing and concretizing what computational thinking is within the K-16 computer science education scope. Our focus is on identifying and defining aspects (subtopics) of computational thinking that directly relate to computer science in terms of K-16 teaching and learning of computer science.},
  address = {Evansville, IN, USA},
  author = {Hoskey, Arthur and Zhang, Sen},
  issn = {1937-4771},
  issue_date = {January 2017},
  journal = {J. Comput. Sci. Coll.},
  month = {January},
  number = {3},
  numpages = {7},
  pages = {129–135},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking: what does it really mean for the K-16 computer science education community},
  volume = {32},
  year = {2017}
}

@article{merged618,
  abstract = {The Swedish government has recently introduced digital competence including programming in the Swedish K-9 curriculum starting no later than fall 2018. This means that 100 000 teachers need to learn programming and digital competence in less than a year. In this paper we report on our experience working with professional teacher training in Sweden's fifth largest city. The city has about 150 000 inhabitants and about 50 schools with about 14 000 students in primary education. The project has been carried out in close cooperation with the municipality.},
  address = {New York, NY, USA},
  author = {Heintz, Fredrik and Mannila, Linda},
  doi = {10.1145/3210553},
  issn = {2153-2184},
  issue_date = {June 2018},
  journal = {ACM Inroads},
  month = {April},
  number = {2},
  numpages = {7},
  pages = {65–71},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking for all: an experience report on scaling up teaching computational thinking to all students in a major city in Sweden},
  url = {https://doi.org/10.1145/3210553},
  volume = {9},
  year = {2018}
}

@inproceedings{merged619,
  abstract = {Computational thinking (CT) is a popular phrase that refers to a collection of computational ideas and habits of mind that people in computing disciplines acquire through their work in designing programs, software, simulations, and computations performed by machinery. Recently a computational thinking for K-12 movement has spawned initiatives across the education sector, and educational reforms are under way in many countries. However, modern CT initiatives should be well aware of the broad and deep history of computational thinking, or risk repeating already refuted claims, past mistakes, and already solved problems, or losing some of the richest and most ambitious ideas in CT. This paper presents an overview of three important historical currents from which CT has developed: evolution of computing's disciplinary ways of thinking and practicing, educational research and efforts in computing, and emergence of computational science and digitalization of society. The paper examines a number of threats to CT initiatives: lack of ambition, dogmatism, knowing versus doing, exaggerated claims, narrow views of computing, overemphasis on formulation, and lost sight of computational models.},
  address = {New York, NY, USA},
  author = {Tedre, Matti and Denning, Peter J.},
  booktitle = {Proceedings of the 16th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/2999541.2999542},
  isbn = {9781450347709},
  keywords = {CSER; computational ideas; computational thinking; computer science education; disciplinary ways of thinking and practicing; history of computational thinking},
  location = {Koli, Finland},
  numpages = {10},
  pages = {120–129},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '16},
  title = {The long quest for computational thinking},
  url = {https://doi.org/10.1145/2999541.2999542},
  year = {2016}
}

@inproceedings{merged620,
  abstract = {Game-Design (GD) environments show promise in fostering Computational Thinking (CT) skills at a young age. However, such environments can be challenging to some students due to their highly open-ended nature. We propose to alleviate this difficulty by learning interpretable student models from data that can drive personalization of a real-world GD learning environment to the student’s needs. We apply our approach on a dataset collected in ecological settings and evaluate the ability of the generated student models at predicting ineffective learning behaviors over the course of the interaction. We then discuss how these behaviors can be used to define personalized support in GD learning activities, by conducting extensive interviews with experienced instructors.},
  address = {New York, NY, USA},
  author = {Lall\'{e}, S\'{e}bastien and Yal\c{c}\i{}n, \"{O}zge Nilay and Conati, Cristina},
  booktitle = {LAK21: 11th International Learning Analytics and Knowledge Conference},
  doi = {10.1145/3448139.3448175},
  isbn = {9781450389358},
  keywords = {Computational Thinking; Educational Data Mining; Game Design; Open-Ended Learning Environments; Student Modeling},
  location = {Irvine, CA, USA},
  numpages = {11},
  pages = {375–385},
  publisher = {Association for Computing Machinery},
  series = {LAK21},
  title = {Combining Data-Driven Models and Expert Knowledge for Personalized Support to Foster Computational Thinking Skills},
  url = {https://doi.org/10.1145/3448139.3448175},
  year = {2021}
}

@inproceedings{merged621,
  abstract = {Game design is increasingly used in modern education to foster Computational Thinking (CT). Yet, it is unclear how and if the game genre of student-designed games impact CT and programming. We explore how game genre impacts CT development and programming routines in Scratch games designed by 8th-grade students using a metrics-based approach (i.e., Dr. Scratch). Our findings show that designing particular games (e.g., action, storytelling) impact CT and programming development. We observe, for instance, that CT skills develop and consolidate fast, after which students can focus on aspects more specific to game design. Based on the results, we suggest that researchers and educators in constructionist learning consider the impact of game genre when designing game-based curricula for the learning of programming and CT.},
  address = {New York, NY, USA},
  author = {Troiano, Giovanni Maria and Chen, Qinyu and Alba, \'{A}ngela Vargas and Robles, Gregorio and Smith, Gillian and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
  booktitle = {Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3313831.3376755},
  isbn = {9781450367080},
  keywords = {Dr. Scratch; computational thinking; constructionist learning; game design; game-based learning; scratch; video games},
  location = {Honolulu, HI, USA},
  numpages = {17},
  pages = {1–17},
  publisher = {Association for Computing Machinery},
  series = {CHI '20},
  title = {Exploring How Game Genre in Student-Designed Games Influences Computational Thinking Development},
  url = {https://doi.org/10.1145/3313831.3376755},
  year = {2020}
}

@article{merged622,
  abstract = {In this paper, we argue for a pedagogical approach of embracing "mistakes" as an effective teaching tool for coding. This technique of teaching uses mistakes as a learning tool to teach computational thinking. Instead of simply showing and explaining correct solutions, code with logical errors is presented to the class. After verifying the code does not work, the class as a whole, becomes engaged in trying to correct the logical errors in code presented to the class. In this paper, we reference the Student Query Directed Learning approach which we map into our techniques. We present a transcript of a lecture one of the authors has given using this technique to illustrate motivations, how to steer the conversation where we want it to go, and student/instructor interactions. Finally, we suggest some "ground rules" to ensure this environment is all-encompassing and one which is conducive to learning.},
  address = {Evansville, IN, USA},
  author = {Harrison, W. Scott and Hanebutte, Nadine},
  issn = {1937-4771},
  issue_date = {June 2018},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {11},
  pages = {52–62},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Embracing coding mistakes to teach computational thinking},
  volume = {33},
  year = {2018}
}

@inproceedings{merged623,
  abstract = {Although Computational Thinking and Programming have become obligatory in many national curricula, the majority of teachers in practice are currently in dire need of support from both the research and teaching community. A national research and teacher development project was initiated in Sweden to address this issue. To develop their pedagogical competence in these new subjects, 31 in-service teachers from the project performed lesson studies at their schools. This study collected and analyzed the documentation of 12 lesson studies regarding how computational thinking skills are taught and assessed in K--9, with block-based programming. The study applies a validated CT framework to identify the involved computational thinking skills. The result presents a progression stage scheme for these skills in compulsory schools. The paper also discusses the problems and challenges in the assessment of computational thinking skills.},
  address = {New York, NY, USA},
  author = {Zhang, LeChen and Nouri, Jalal and Rolandsson, Lennart},
  booktitle = {Proceedings of the Twenty-Second Australasian Computing Education Conference},
  doi = {10.1145/3373165.3373173},
  isbn = {9781450376860},
  keywords = {Assessment; Block-based programming; Compulsory education; Computational thinking; Programming; Progression},
  location = {Melbourne, VIC, Australia},
  numpages = {10},
  pages = {66–75},
  publisher = {Association for Computing Machinery},
  series = {ACE'20},
  title = {Progression Of Computational Thinking Skills In Swedish Compulsory Schools With Block-based Programming},
  url = {https://doi.org/10.1145/3373165.3373173},
  year = {2020}
}

@inproceedings{merged624,
  abstract = {This study aimed to understand elementary students' challenges and interactions in computational thinking-integrated botany through robotics activities. Data was collected from screen-casting videos and analyzed using Collaborative Computing Observation Instrument (CCOI), a web-based analysis instrument with nodes and paths that classify and specify students' computing experience. The results revealed that all participants engaged in independent work for most of the time, with short interactions on 1) general computer technology issues; 2) software navigating issues; 3) questions about academic content; 4) computing discussion with the instructor; 5) informing the instructor about task accomplishment. The findings of this study will provide important insights to CS researchers, educators, and elementary teachers regarding CT-integration research and practice.},
  address = {New York, NY, USA},
  author = {Liu, Ruohan and Luo, Feiya and Israel, Maya},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372631},
  isbn = {9781450367936},
  keywords = {computational thinking; k-8 computer science education},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1299},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Video Analysis of Student Challenges and Interactions in Computational Thinking-integrated Botany},
  url = {https://doi.org/10.1145/3328778.3372631},
  year = {2020}
}

@inproceedings{merged625,
  abstract = {Recently, there has been significant interest in integrating Maker-related experiences into formal education. A challenge is reconciling open-ended making and non-deterministic learning goals with standards that drive traditional education. In the context of our CS-focused STEM magnet school, we designed two 2nd grade lessons that not only align with grade-level standards and our school's computer science-oriented pedagogy, but also incorporate 3D printing and the philosophy of Makerspaces. The integrated Maker experience serves to scaffold computational thinking practices such as abstraction, modeling, and decomposition, which are essential for long-term success in STEM learning. To bring these aspects together, we created a rubric based on existing evaluation tools. Using this rubric, we evaluated the two lessons with a small sample of participants. Our pilot study shows promise of mastery in standard-related content, evidence of a making mindset, engagement in the activity, innovation in design, and solidarity in working with peers. Aligning state standards with open-ended Maker activities has potential for fostering student growth and engagement in the classroom. An additional component of our research was reflecting on our experience as teachers with no Makerspace experience who were newly submerged in the digital fabrication world. We present the two 3D printing-based lessons, one addressing extreme weather standards, the other incorporating understanding of urban, suburban, and rural communities. We also present the rubric we designed, the literature that guided this work, and reflections and recommendations from our experience of learning digital fabrication for the first time and integrating it into curriculum.},
  address = {New York, NY, USA},
  author = {Scheppegrell, Lindsey and Hiatt, Elyse and Okerlund, Johanna and Wilson, David},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293833},
  isbn = {9781450358903},
  keywords = {active learning; computational thinking; digital education; digital fabrication; evaluation tools; maker movement; makerspace; stem learning},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1276},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Computational Thinking in the Making: Lessons for Second Graders in a STEM Computer Science Immersion School},
  url = {https://doi.org/10.1145/3287324.3293833},
  year = {2019}
}

@inproceedings{merged626,
  abstract = {Computational Thinking can be defined as a set of skills for problem solving based on Computer Science. Computational Thinking skills are not only limited to the field of computing but also extensible to all areas of knowledge. Young people grow up surrounded by technology but many of them go for university without any prior knowledge in computer science. Several initiatives have been created to promote Computational Thinking abilities in students all over the world. Teaching computational thinking must necessarily involve problem-solving, and can be applied to various types of problems that do not directly involve coding tasks. However, it is recognized to everyone that programming is a good way to improve Computational Thinking. In this article, we have done a survey on the existing tools that use the codification as main means of development of the abilities of computational thinking or not. It was also a concern to mention those that provide a wide variety of resources for teachers. This paper is an attempt to demonstrate the importance of computational thinking in the first beginning of learning programming, and what activities best contribute to increase the abilities of each computer engineering student in computational thinking according to the characteristics of those who attend the Polytechnic of Guarda, Portugal. Most of our students have never had the opportunity to learn computational thinking.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Figueiredo, Jos\'{e} and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145351},
  isbn = {9781450353861},
  keywords = {CS0; CS1; Computational thinking; Programming; learning programming; teaching programming},
  location = {C\'{a}diz, Spain},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Improving Computational Thinking Using Follow and Give Instructions},
  url = {https://doi.org/10.1145/3144826.3145351},
  year = {2017}
}

@inproceedings{merged627,
  abstract = {Chile is a medium-sized developing country, with approximately 3,500,000 school-aged children. Computational thinking (CT) has been recognized as a tool for developing XXI century skills, but Chile has a large population of in-service teachers that do not know what CT is, limiting its application in classrooms. In response, the government has enacted a training program for in-service primary school teachers, focusing on changing their perceptions about CT, and showing them how it can be used in classroom. This training program was designed for grades 1-6 and piloted in the capital region during 2018. The program initially focused on coding activities, but was then redesigned to show how CT can be used to help meet the learning objectives of different subjects in the curriculum. The program was then scaled up nationwide. In this experience report, we discuss the outcomes of this program. The training program scaled as intended and we identified positive changes in teacher perceptions about CT, especially among female participants. We conclude with the lessons we learned from this experience.},
  address = {New York, NY, USA},
  author = {Simmonds, Jocelyn and Gutierrez, Francisco J. and Meza, Federico and Torrent, Catalina and Villalobos, Jaime},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432542},
  isbn = {9781450380621},
  keywords = {computational thinking; gender; teacher training programs},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {260–266},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Changing Teacher Perceptions about Computational Thinking in Grades 1-6, through a National Training Program},
  url = {https://doi.org/10.1145/3408877.3432542},
  year = {2021}
}

@inproceedings{merged628,
  abstract = {Computational thinking (CT) is necessary for Science, Technology, Engineering, and Mathematics (STEM) literacy, but it can be difficult for many students to develop and it is challenging to integrate into science curricula. Here, we present a five-session curriculum where sixth-grade students programmed a Liquid Handling Robot (LHR) to conduct a science experiment while engaging in CT. We used a mixed-methods approach to assess how the curricular integration of robotics and science experimentation advances students’ CT skills and perceptions of computation in science. We identified growth in CT skills, specifically regarding Algorithmic Thinking. Students identified as key advantages of this approach the increased precision in experimental procedures, time-efficiency, and easier debugging. This course provides a proof of concept curriculum on how the implications for teaching and learning of CT can be assessed, and how CT and robotics can be brought to science classrooms, especially for chemistry and biology.},
  address = {New York, NY, USA},
  author = {Fuhrmann, Tamar and Ahmed, Deeana Ijaz and Arikson, Len and Wirth, Mike and Miller, Mark L and Li, Ethan and Lam, Amy and Blikstein, Paulo and Riedel-Kruse, Ingmar},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3465180},
  isbn = {9781450384520},
  keywords = {Computational thinking; computational literacy; hands-on experimentation; robotics; science labs},
  location = {Athens, Greece},
  numpages = {6},
  pages = {444–449},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {Scientific Inquiry in Middle Schools by combining Computational Thinking, Wet Lab Experiments, and Liquid Handling Robots},
  url = {https://doi.org/10.1145/3459990.3465180},
  year = {2021}
}

@inproceedings{merged629,
  abstract = {Computational thinking (CT) is emerging as an important theme in computer science and high school education. However, research is needed to develop pedagogies for introducing students to CT. This research study examines the possible synergistic effect of implementing CT into a STEM subject, e.g. biotechnology. The study uses three interventions in which students work with predesigned computer models. Quantitative and qualitative methods are being used to gather data for analyzing students' gain in both content knowledge and CT.},
  address = {New York, NY, USA},
  author = {Musaeus, Line Have},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3339430},
  isbn = {9781450361859},
  keywords = {computational thinking; computer models; educational intervention; k-12 education; teacher professional development},
  location = {Toronto ON, Canada},
  numpages = {2},
  pages = {345–346},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {Developing Student's Computational Thinking through Agent-Based Modeling in Secondary Education},
  url = {https://doi.org/10.1145/3291279.3339430},
  year = {2019}
}

@inproceedings{merged630,
  abstract = {In recent years, several visual programming languages and tools are emerging, which allow young students to easily program applications. Particularly, the block-based language used by Scratch has been the standard in most school initiatives to introduce Computational thinking (CT) in courses unrelated to computing. However, CT competences are not specifically included in the curricula of many Higher Education degrees that future teachers of Primary and Secondary Education have to complete. This paper describes a workshop for teachers' training on CT. It is based on the block-based common language of Scratch, but focused on enhancing teachers' skills to develop mobile applications with a tool based on the MIT's AppInventor. This workshop provided some insights on the capabilities of future teachers in the use of programming tools1.},
  address = {New York, NY, USA},
  articleno = {4},
  author = {Dodero, Juan Manuel and Mota, Jos\'{e} Miguel and Ruiz-Rube, Iv\'{a}n},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145352},
  isbn = {9781450353861},
  keywords = {Computational thinking; mobile programming; visual programming languages},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Bringing computational thinking to teachers' training: a workshop review},
  url = {https://doi.org/10.1145/3144826.3145352},
  year = {2017}
}

@inproceedings{merged631,
  abstract = {Computational thinking (CT) is emerging as an important theme in computer science and high school education. However, research is needed to inform high-school teachers how to foster students' development of CT in computer science and other subjects. Evidence suggests that agent-based modeling is a valuable way for students to learn CT in different subjects. This paper reports a teaching experiment where researchers, developers, and high school teachers collaborated to develop six NetLogo models. The models were used in nine Danish High Schools in the following four subjects: Biotechnology, chemistry, biology, and social science. Teachers and students had no or very limited experience with programming. Students build CT and content knowledge by using, modifying, and creating code in the models. This paper provides details for others to adopt the models and the underlying CMC framework, which integrates: Coding, Modeling, and Content. The paper evaluates the results from an open-ended questionnaire with all participating students (n=210) and semi-structured interviews with all teachers (n=15). Thematic analysis was applied to categorize the qualitative data. Results showed that students were able to use, modify, and create code in NetLogo that enabled them to develop CT and content knowledge. The CMC framework represents a fruitful way for teachers to design and teach and for students to tinker with learning CT.},
  address = {New York, NY, USA},
  author = {Musaeus, Line Have and Musaeus, Peter},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287452},
  isbn = {9781450358903},
  keywords = {computational thinking; computer models; educational intervention; k-12 education; teacher professional development.},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {913–919},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Computational Thinking in the Danish High School: Learning Coding, Modeling, and Content Knowledge with NetLogo},
  url = {https://doi.org/10.1145/3287324.3287452},
  year = {2019}
}

@inproceedings{merged632,
  abstract = {Computational thinking is an emerging teaching strategy as well as an ability necessary for all people in the future. In this study, social stories are used to teach autistic children social skills. Combining sequential computational thinking as a learning strategy and applying Conductive Copper Foil Tape and Makey Makey, a social story teaching aid is made. With the help of it, children can learn the content from social stories, learn social stories through computational thinking and arrange corresponding sequence structure. Three autistic children from Grade 1 took part in six teaching experiments and were observed their change of social skills. The results showed that scientific teaching aid could improve autistic children's social ability, speaking skills, attention, and learning interests, making them observe the storytelling more carefully and easily, understand the story development, and learn social skills from it. Besides, this teaching aid could improve autistic children's social reciprocity and provide theoretical references for relevant fields.},
  address = {New York, NY, USA},
  articleno = {21},
  author = {Li, Xin-Zhu and Chen, Chun-Ching and Kang, Xin},
  booktitle = {Proceedings of the 2021 2nd International Conference on Computing, Networks and Internet of Things},
  doi = {10.1145/3468691.3468712},
  isbn = {9781450389693},
  keywords = {Autism; Computational thinking; Computer-aided instruction; Social stories},
  location = {Beijing, China},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {CNIOT '21},
  title = {Design of Social Story Teaching Aid for Autistic Children Based on Computational Thinking and Its Case Study},
  url = {https://doi.org/10.1145/3468691.3468712},
  year = {2021}
}

@inproceedings{merged633,
  abstract = {Computational thinking (CT) is a set of concepts and problem-solving skills that are not only imperative for computer scientists, but important and applicable to nearly every discipline. CT skills are essential in a world where technology is ubiquitous. In the past decade, many efforts have been made to develop and evaluate computational thinking in primary and secondary students. Promoting CT skills in these young students can help reduce the underrepresentation of women and minorities in STEM careers since students who are exposed to CT at an early age are more likely to pursue a STEM discipline in college [18].This paper describes the COSMIC program, funded by Google's Tides Foundation, that introduces middle school students to CS and CT using the CS First curriculum and Scratch. The COSMIC activities spanned three years directly serving 700 students through 175 distinct events. Females comprised 51.1% of the individuals served, and 10.2% of those served were part of a minority group. The COSMIC activities allowed the researchers to investigate the effectiveness of the CS First curriculum. Using the Hairball-powered Dr. Scratch analysis tool on the curricular projects, the paper reports on the efficacy of the CS First curriculum in terms of its coverage of vital CT concepts and its success in transferring those concepts to middle school students.},
  address = {New York, NY, USA},
  author = {Beason, Kara and Fenwick, James B. and Norris, Cindy},
  booktitle = {Proceedings of the 2020 ACM Southeast Conference},
  doi = {10.1145/3374135.3385264},
  isbn = {9781450371056},
  keywords = {STEM; computer science education; pedagogical tool; programming animations; software},
  location = {Tampa, FL, USA},
  numpages = {8},
  pages = {10–17},
  publisher = {Association for Computing Machinery},
  series = {ACMSE '20},
  title = {Introducing Middle School Students to Computational Thinking with the CS First Curriculum},
  url = {https://doi.org/10.1145/3374135.3385264},
  year = {2020}
}

@inproceedings{merged634,
  abstract = {Technologies of Information and Communication Technologies (ICT) have contributed significantly to the emergence of the Knowledge Society. However, there is a strong gender gap in the field of science and technology due to the influence of the male-centered culture that persists today. Computational thinking is presented as a way to develop in children from an early age the ability to solve problems, designing systems and understanding human behavior while using the fundamental concepts of computing. This factor allows girls to be in touch with technology in a fun and meaningful way; so as to balance the male and female presence in science and technology, achieving a more egalitarian system. In this article is presented a systematic review of the literature which indicates that few studies about computational thinking are working from a gender perspective, although some countries have already opted for teaching computer in the classroom. In addition, the review shows some methodologies which are using languages and suitable tools in order to work the computational thinking. Notwithstanding, It can be the basis for a proposal to integrate the gender perspective. In turn, it is committed to the creation of a methodological guide that encourages this teaching in national and international schools.},
  address = {New York, NY, USA},
  articleno = {46},
  author = {Espino, Elisenda Eva Espino and Gonz\'{a}lez, Carina Gonz\'{a}lez},
  booktitle = {Proceedings of the XVII International Conference on Human Computer Interaction},
  doi = {10.1145/2998626.2998665},
  isbn = {9781450341196},
  keywords = {Computational Thinking; Gender; Methodology; Review},
  location = {Salamanca, Spain},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Interacci\'{o}n '16},
  title = {Gender and Computational Thinking: Review of the literature and applications},
  url = {https://doi.org/10.1145/2998626.2998665},
  year = {2016}
}

@inproceedings{merged635,
  abstract = {Players can build implicit understanding of challenging scientific concepts when playing digital science learning games [7]. In this study, we examine implicit computational thinking (CT) skills of 72 upper elementary and middle school students and 10 computer scientists playing a game called Pizza Pass. We report on the process of creating automated detectors to identify four CT skills from gameplay: problem decomposition, pattern recognition, algorithmic thinking, and abstraction. This paper reports on hand-labeled playback data obtaining acceptable inter-rater reliability and 100 gameplay features distilled from digital log data. In future work, we will mine these features to automatically identify the CT skills previously labeled by humans. These automated detectors of CT will be used to analyze gameplay data at scale and provide actionable feedback to teachers in real-time.},
  address = {New York, NY, USA},
  author = {Rowe, Elizabeth and Asbell-Clarke, Jodi and Baker, Ryan and Gasca, Santiago and Bardar, Erin and Scruggs, Richard},
  booktitle = {Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3170427.3188541},
  isbn = {9781450356213},
  keywords = {computational thinking; data mining; implicit learning; learning games},
  location = {Montreal QC, Canada},
  numpages = {6},
  pages = {1–6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '18},
  title = {Labeling Implicit Computational Thinking in Pizza Pass Gameplay},
  url = {https://doi.org/10.1145/3170427.3188541},
  year = {2018}
}

@inproceedings{merged636,
  abstract = {Parents that homeschool their children ignore certain topics when they lack mastery or interest in them. Homeschool groups try to address this issue, cooperatively educating their children. We were contacted by such a group that wanted to introduce their children to computational thinking (CT). These children, aged 7-11, have showed an interest in technology, and use online educational resources. None of the parents felt capable of tutoring the group about CT. They also worried about losing control about how their children interact with technology. We report an intervention over 9 months to introduce eleven young homeschoolers to CT in a suburban environment, describing the impact on parent and children attitudes towards technology and CT. We conclude with three lessons: 1)~science-related activities should be used to introduce CT among homeschoolers, 2) "success'' is establishing a meaningful relationship with a homeschool group, and 3) activities designed for school children need to be adapted to the homeschooling context.},
  address = {New York, NY, USA},
  author = {Sep\'{u}lveda-D\'{\i}az, Carla and Stuardo Rojas, Elson and Simmonds, Jocelyn and Gutierrez, Francisco J. and Hitschfeld, Nancy and Casanova, Cecilia and Sotomayor, Cecilia},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366925},
  isbn = {9781450367936},
  keywords = {computational thinking; homeschooling; young learners},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {65–71},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Lessons Learned From Introducing Preteens in Parent-Led Homeschooling to Computational Thinking},
  url = {https://doi.org/10.1145/3328778.3366925},
  year = {2020}
}

@article{merged637,
  abstract = {In this paper we describe a set of tools, LEGO® Mindstorms NXT, SCRATCH, App Inventor, and CS Unplugged, that was presented to teachers to support computational thinking curriculum initiatives. During a workshop sponsored by GOOGLE's CS4HS program, educators were given step-by-step instructions in the basics of each tool, along with a computational thinking activity/challenge that can be used in the classroom. Survey data from the workshop indicated that a breadth first, intensive introduction influenced educators to consider these tools. The educators cited deficient school resources as a possible barrier to implementation, but the introduction of the Raspberry Pi holds promise for mitigating this. Educators unanimously found the workshop useful and indicated that they are likely to include the tools in their classrooms},
  address = {Evansville, IN, USA},
  author = {Imberman, Susan P. and Sturm, Deborah and Azhar, Mohammad Q.},
  issn = {1937-4771},
  issue_date = {June 2014},
  journal = {J. Comput. Sci. Coll.},
  keywords = {CS unplugged; LEGO® Mindstorms NXT; SCRATCH; app inventor; computational thinking; robotics},
  month = {June},
  number = {6},
  numpages = {8},
  pages = {39–46},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking: expanding the toolkit},
  volume = {29},
  year = {2014}
}

@inproceedings{merged638,
  abstract = {The contiguity of physical and digital content of embodied learning has been shown to increase student's engagement in educational contexts. Applications with various kinds of physical interactions have been deployed to enhance the learning experiences in many engineering domains. However, even though computer science education (CSE) is one of zestful topics in the recent years, there are few studies focusing on the embodiment of CSE materials, by which the abstract and intangible concepts could be transformed into an intuitive affordance that utilizes sensorimotor experiences during the learning process. We propose an augmented embodiment mobile app designed for computational thinking (CT), specifically the debugging practices and abstraction concept, that makes use of gestures and augmented reality for learners to interact with the content. We examine the logic by the design framework for embodied learning and discuss potential extensions of multimodal analytics in such an application. Our preliminary user study in a middle school shows students' engagement in the application, however, it also reflected several design issues that need to be solved in the next iteration. The future plan of data analysis and experiments is also discussed.},
  address = {New York, NY, USA},
  author = {Chung, Cheng-Yu and Hsiao, I-Han},
  booktitle = {Companion Proceedings of the 24th International Conference on Intelligent User Interfaces},
  doi = {10.1145/3308557.3308676},
  isbn = {9781450366731},
  keywords = {augmented reality; computer science education; embodied learning; mobile computing; multimodal interfaces},
  location = {Marina del Ray, California},
  numpages = {2},
  pages = {37–38},
  publisher = {Association for Computing Machinery},
  series = {IUI '19 Companion},
  title = {An exploratory study of augmented embodiment for computational thinking},
  url = {https://doi.org/10.1145/3308557.3308676},
  year = {2019}
}

@article{merged639,
  abstract = {We describe the content, pedagogy and technology of a computational thinking course. While open to students in all majors, in practice the course serves students in predominantly non-STEM majors. We have seen the positive impact on student motivation of the data science context used in the course and the pedagogical value of the "cohort" model of collaborative peer learning. The technology includes a scaffolded programming environment for accessing curated real-world data sets.},
  address = {Evansville, IN, USA},
  author = {Kafura, Dennis and Bart, Austin Cory and Chowdhury, Bushra},
  issn = {1937-4771},
  issue_date = {December 2018},
  journal = {J. Comput. Sci. Coll.},
  month = {December},
  number = {2},
  numpages = {7},
  pages = {157–163},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {A computational thinking course accessible to non-stem majors},
  volume = {34},
  year = {2018}
}

@inproceedings{merged640,
  abstract = {In this paper I discuss my doctoral research which aims to better understand collaborative computational thinking (CT). In order to be successful in the 21st century, skills such CT (understanding and applying computational concepts) are indispensable for people across all ages and disciplines. One can learn computational concepts by taking a traditional course offered in a school or by self-guided learning through an online platform. Whatever the form of learning, computational concepts can be difficult to fully comprehend for novices. Collaborative learning has been considered effective in reducing learner's anxiety and in helping struggling learners overcome common learning difficulties. The proposed dissertation study aims to investigate how collaboration impacts learning of CT across both classroom setting and in an online learning community. This paper briefly describes the motivation and outline of my proposed dissertation study, the overarching research questions, the data currently collected, and my data analysis methodologies.},
  address = {New York, NY, USA},
  author = {Chowdhury, Bushra},
  booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
  doi = {10.1145/2787622.2787736},
  isbn = {9781450336307},
  keywords = {collaborative learning; computational thinking; novice learner; social interactions},
  location = {Omaha, Nebraska, USA},
  numpages = {2},
  pages = {251–252},
  publisher = {Association for Computing Machinery},
  series = {ICER '15},
  title = {Understanding Collaborative Computational Thinking},
  url = {https://doi.org/10.1145/2787622.2787736},
  year = {2015}
}

@inproceedings{merged641,
  abstract = {The purpose of this study was to describe the effectiveness of using living books (mobile leaning and augmented reality) within the context of microlearning approach to promote vocational students' computational thinking. The participants were 97 vocational students that included experimental group (n=52) and control group (n=45) vocational college who enrolled in the basic of mathematics career in 2nd semester of academic year 2018. The instruments of this research include learning materials: mobile learning and AR book, the lesson plan of surface area and volume topic in basic mathematics career subject, pre and post-tests, and the computational thinking assessment. The results showed that the students' learning achievement of experimental group employed microlearning approach using living books, the control group employed traditional learning was statistically significant at level of .01. In addition, the result of students' computational thinking in the experimental group using of microlearning living book have been the computational thinking at the high level.},
  address = {New York, NY, USA},
  author = {Leela, Soralak and Chookeaw, Sasithorn and Nilsook, Prachyanun},
  booktitle = {Proceedings of the 3rd International Conference on Digital Technology in Education},
  doi = {10.1145/3369199.3369200},
  isbn = {9781450372206},
  keywords = {Computational thinking; Microlearning; living book},
  location = {Yamanashi, Japan},
  numpages = {5},
  pages = {25–29},
  publisher = {Association for Computing Machinery},
  series = {ICDTE '19},
  title = {An Effective Microlearning Approach Using Living Book to Promote Vocational Students' Computational Thinking},
  url = {https://doi.org/10.1145/3369199.3369200},
  year = {2020}
}

@inproceedings{merged642,
  abstract = {Many programs offer informal experiences in programming for select students who may qualify or whose parents pay fees for attending. Integrating computational thinking (CT) in the formal classroom setting provides equal opportunities to develop valuable problem-solving skills for all students. However, such integration poses challenges since teachers may have limited experiences in computing and may be pressured by time constraints due to the need to cover Common Core and Next Generation Science Standards (NGSS) as well as district specific initiatives. A 2-year intervention has been designed to target upper elementary level self-contained classrooms to increase teachers' knowledge and ability for integrating CT into science lessons. Twenty teachers from four school districts in Southern California participated in the first year of the project's professional development activities. These schools have varying levels of diversity and socioeconomic status of student populations. Instead of using popular drag-and-drop programming tools such as Scratch or Tynker, the first year of the project focused on key CT concepts and helped teachers connect these concepts with skills important for student success in science activities. This paper reports on the study of the project's impact on student learning of key CT concepts among students from project classrooms. The main elements of the professional development are also described.},
  address = {New York, NY, USA},
  author = {Ouyang, Youwen and Hayden, Katherine L. and Remold, Julie},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159520},
  isbn = {9781450351034},
  keywords = {assessment; computational thinking; professional development; upper elementary grades},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {308–313},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Introducing Computational Thinking through Non-Programming Science Activities},
  url = {https://doi.org/10.1145/3159450.3159520},
  year = {2018}
}

@article{merged643,
  abstract = {The Communications Web site, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmYegor Bugayenko ponders the dangers of "hazardous enthusiasm," while Mark Guzdial considers whether the need to teach computational thinking can be "designed away."},
  address = {New York, NY, USA},
  author = {Bugayenko, Yegor and Guzdial, Mark},
  doi = {10.1145/3344262},
  issn = {0001-0782},
  issue_date = {September 2019},
  journal = {Commun. ACM},
  month = {August},
  number = {9},
  numpages = {2},
  pages = {10–11},
  publisher = {Association for Computing Machinery},
  title = {Why programmers should curb their enthusiasm, and thinking about computational thinking},
  url = {https://doi.org/10.1145/3344262},
  volume = {62},
  year = {2019}
}

@inproceedings{merged644,
  abstract = {This paper presents the recent evolution of a Web prototype originally conceived to teach music and computational thinking to preschool and primary school learners through a gamification approach. The software tool, called Legato, is based on the metaphor of building blocks, whose characteristics (e.g., position in space, shape, and color) can be associated with basic music parameters (e.g., pitch, rhythm, and timbre). Legato is a Web app written using standard languages, such as HTML5, CSS and JavaScript; besides, it adopts the Web MIDI API to produce sounds. The prototype is made publicly available for evaluation and use in an educational context.},
  address = {New York, NY, USA},
  author = {Barat\`{e}, Adriano and Ludovico, Luca A. and Mauro, Davide A.},
  booktitle = {Proceedings of the 14th International Audio Mostly Conference: A Journey in Sound},
  doi = {10.1145/3356590.3356625},
  isbn = {9781450372978},
  keywords = {building blocks; computational thinking; music education; web audio},
  location = {Nottingham, United Kingdom},
  numpages = {4},
  pages = {227–230},
  publisher = {Association for Computing Machinery},
  series = {AM '19},
  title = {A Web Prototype to Teach Music and Computational Thinking Through Building Blocks},
  url = {https://doi.org/10.1145/3356590.3356625},
  year = {2019}
}

@inproceedings{merged645,
  address = {New York, NY, USA},
  author = {Ray, Meg},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3314816},
  isbn = {9781450358903},
  location = {Minneapolis, MN, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Session details: Paper Session: Computational Thinking 2},
  url = {https://doi.org/10.1145/3314816},
  year = {2019}
}

@inproceedings{merged646,
  abstract = {In today's increasingly digital world, it is critical that all students learn to think computationally from an early age. Assessments of Computational Thinking (CT) are essential for capturing information about student learning and challenges. Several existing K-12 CT assessments focus on concepts like variables, iterations and conditionals without emphasizing practices like algorithmic thinking, reusing and remixing, and debugging. In this paper, we discuss the development of and results from a validated CT Practices assessment for 4th-6th grade students. The assessment tasks are multilingual, shifting the focus to CT practices, and making the assessment useful for students using different CS curricula and different programming languages. Results from an implementation of the assessment with about 15000 upper elementary students in Hong Kong indicate challenges with algorithm comparison given constraints, deciding when code can be reused, and choosing debugging test cases. These results point to the utility of our assessment as a curricular tool and the need for emphasizing CT practices in future curricular initiatives and teacher professional development.},
  address = {New York, NY, USA},
  author = {Basu, Satabdi and Rutstein, Daisy and Xu, Yuning and Shear, Linda},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366849},
  isbn = {9781450367936},
  keywords = {assessment; computational thinking; evidence-centered design},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {912–918},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {A Principled Approach to Designing a Computational Thinking Practices Assessment for Early Grades},
  url = {https://doi.org/10.1145/3328778.3366849},
  year = {2020}
}

@inproceedings{merged647,
  abstract = {The Use-Modify-Create progression (UMC) was conceptualized in 2011 after comparing the productive integration of computational thinking across National Science Foundation-funded Innovative Technology Experiences for Students and Teachers (NSF ITEST) programs. Since that time, UMC has been widely promoted as a means to scaffold student learning of computational thinking (CT) while enabling personalization and allowing for creative adaptations of pre-existing computational artifacts. In addition to UMC's continued application, it has recently been utilized to scaffold student learning in topics as diverse as machine learning, e-textiles, and computer programming. UMC has also been applied to instructional goals other than "supporting students in becoming creators of computational artifacts." This panel will re-examine the UMC progression and refine our understanding of when its use is suitable, and when not, and share findings on evaluations and extensions to UMC that are productive in new and different contexts.},
  address = {New York, NY, USA},
  author = {Martin, Fred and Lee, Irene and Lytle, Nicholas and Sentance, Sue and Lao, Natalie},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366971},
  isbn = {9781450367936},
  keywords = {computational thinking; lesson design; use-modify-create},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {807–808},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Extending and Evaluating the Use-Modify-Create Progression for Engaging Youth in Computational Thinking},
  url = {https://doi.org/10.1145/3328778.3366971},
  year = {2020}
}

@inproceedings{merged648,
  abstract = {It is widely accepted that computer foundation course will benefit from the research and application of Computational Thinking in China. It is in fact that most research work in Computation Thinking have served for students but much less for teachers. College teachers in China took less systematic training in order to adequately prepare them for increasingly higher teaching requirements. To address this issue, this paper first proposes an outcomes-based teacher education program distinguished from CT principles under teaching and learning perspective, decomposed an abstract computational thinking idea into a definite coursework content. This paper then describe an outcomes-based evaluative frame which supports teachers to ensure a successful application of CT theories and concepts into practical skill development. Results from practice showed that the current research work is effective and widely accepted for which evidence is also provided.},
  address = {New York, NY, USA},
  author = {Xu, Yiyi and Liu, Pengfei and Tang, Peihe},
  booktitle = {Proceedings of the 2nd International Conference on E-Society, E-Education and E-Technology},
  doi = {10.1145/3268808.3268860},
  isbn = {9781450365284},
  keywords = {Computational thinking; outcomes-based teaching and learning; teacher education program},
  location = {Taipei, Taiwan},
  numpages = {4},
  pages = {123–126},
  publisher = {Association for Computing Machinery},
  series = {ICSET 2018},
  title = {Exploration of Outcome-Based Computational Thinking Education Programs for Teachers},
  url = {https://doi.org/10.1145/3268808.3268860},
  year = {2018}
}

@inproceedings{merged649,
  abstract = {This work aims to present a hands-on activity for the first degree equations. The activity was applied to a reinforcement class of the K-8, in a public school in Birigui, S\~{a}o Paulo, Brazil. The activity used the Balance of Equations game, built on the Scratch programming environment with the objective of teaching the initial ideas of first degree equations to a class with a learning gap in this discipline. The planning of the activity was divided into three moments, with the intention of starting from an analogy to the principle of equivalence of an equation, reaching the algebraic transcription of an equation through activities of manipulation of the game code. Seven concepts related to computational thinking with strong potential to be worked during the activity were identified. In this way, besides the presentation of the classroom case, this article identifies these seven concepts, analyzing how they could be developed during the application of the activity, seeking to answer the following question: How can computational thinking skills be explored through hands-on activity for the teaching of equations?},
  address = {New York, NY, USA},
  author = {Barbosa, Luciana Leal da Silva and Maltempi, Marcus Vinicius},
  booktitle = {Proceedings of FabLearn 2019},
  doi = {10.1145/3311890.3311898},
  isbn = {9781450362443},
  keywords = {Balances of equations Game; Computational thinking; Hands-on activity; Mathematics education},
  location = {New York, NY, USA},
  numpages = {8},
  pages = {57–64},
  publisher = {Association for Computing Machinery},
  series = {FL2019},
  title = {Recognizing Possibilities of Computational Thinking When Teaching First-degree Equations: A Classroom Case},
  url = {https://doi.org/10.1145/3311890.3311898},
  year = {2019}
}

@inproceedings{merged650,
  abstract = {Collaborative learning can help reduce the anxiety level of learners, improve understanding and thus create a positive atmosphere for learning. This study analyzes students' collaborative learning experiences within small interdisciplinary "cohorts" while learning computational thinking in a university-level class. The cohort allows students from different disciplines to contribute diverse perspectives, socially interact with each other and in turn create situations where two or more students learn together. This study uses both qualitative and quantitative means to explore students' collaborative learning experiences. Ethnographically-informed qualitative data using Stahl's collaborative framework is analyzed. The analysis revealed that most students found the cohort model to be valuable in learning computational thinking by allowing them to ask about and explain problems, especially with students from different disciplines who perceive and explain a problem differently. Quantitative data from a multi-term survey complements and confirms the findings from the qualitative data. Our study helps to inform those teaching foundational computing concepts to a diverse audience of learners.},
  address = {New York, NY, USA},
  author = {Chowdhury, Bushra and Bart, Austin Cory and Kafura, Dennis},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159470},
  isbn = {9781450351034},
  keywords = {cohort; collaborative learning; computational thinking; interdisciplinary groups},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {143–148},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Analysis of Collaborative Learning in a Computational Thinking Class},
  url = {https://doi.org/10.1145/3159450.3159470},
  year = {2018}
}

@inproceedings{merged651,
  abstract = {Computer Science (CS) Unplugged activities have been deployed in many informal settings to present computing concepts in an engaging manner. To justify use in the classroom, however, it is critical for activities to have a strong educational component. For the past three years, we have been developing and refining a CS Unplugged curriculum for use in middle school classrooms. In this paper, we describe an assessment that maps questions from a comprehensive project to computational thinking (CT) skills and Bloom's Taxonomy. We present results from two different deployments and discuss limitations and implications of our approach.},
  address = {New York, NY, USA},
  author = {Rodriguez, Brandon and Kennicutt, Stephen and Rader, Cyndi and Camp, Tracy},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3017779},
  isbn = {9781450346986},
  keywords = {CS unplugged; assessment; computational thinking},
  location = {Seattle, Washington, USA},
  numpages = {6},
  pages = {501–506},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Assessing Computational Thinking in CS Unplugged Activities},
  url = {https://doi.org/10.1145/3017680.3017779},
  year = {2017}
}

@article{merged652,
  abstract = {Computational thinking describes key principles from computer science that are broadly generalizable. Robotics programs can be engaging learning environments for acquiring core computational thinking competencies. However, few empirical studies evaluate the effectiveness of a robotics programming curriculum for developing computational thinking knowledge and skills. This study measures pre/post gains with new computational thinking assessments given to middle school students who participated in a virtual robotics programming curriculum. Overall, participation in the virtual robotics curriculum was related to significant gains in pre- to posttest scores, with larger gains for students who made further progress through the curriculum. The success of this intervention suggests that participation in a scaffolded programming curriculum, within the context of virtual robotics, supports the development of generalizable computational thinking knowledge and skills that are associated with increased problem-solving performance on nonrobotics computing tasks. Furthermore, the particular units that students engage in may determine their level of growth in these competencies.},
  address = {New York, NY, USA},
  articleno = {4},
  author = {Witherspoon, Eben B. and Higashi, Ross M. and Schunn, Christian D. and Baehr, Emily C. and Shoop, Robin},
  doi = {10.1145/3104982},
  issue_date = {March 2018},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; K-12; curriculum design; programming; robotics},
  month = {October},
  number = {1},
  numpages = {20},
  publisher = {Association for Computing Machinery},
  title = {Developing Computational Thinking through a Virtual Robotics Programming Curriculum},
  url = {https://doi.org/10.1145/3104982},
  volume = {18},
  year = {2017}
}

@inproceedings{merged653,
  abstract = {Designing games requires a complex sequence of planning and executing actions. This paper suggests that game design requires computational thinking, and discusses two methods for analyzing computational thinking in games designed by students in the visual programming language Scratch. We present how these two analyses produce different narratives of computational thinking for our case studies, and reflect on how we plan to move forward with our larger analysis.},
  address = {New York, NY, USA},
  author = {Hoover, Amy K. and Barnes, Jackie and Fatehi, Borna and Moreno-Le\'{o}n, Jes\'{u}s and Puttick, Gillian and Tucker-Raymond, Eli and Harteveld, Casper},
  booktitle = {Proceedings of the 2016 Annual Symposium on Computer-Human Interaction in Play Companion Extended Abstracts},
  doi = {10.1145/2968120.2987750},
  isbn = {9781450344586},
  keywords = {climate change; computational thinking; game design; student agency},
  location = {Austin, Texas, USA},
  numpages = {7},
  pages = {173–179},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY Companion '16},
  title = {Assessing Computational Thinking in Students' Game Designs},
  url = {https://doi.org/10.1145/2968120.2987750},
  year = {2016}
}

@inproceedings{merged654,
  abstract = {In recent years, Computational Thinking (CT) made its way into K-12 as a key set of 21st-century skills. However, the issue of assessing student's learning of CT remains a challenging one: it is indeed not clear how to achieve a comprehensive evaluation that is able to assess not only the technical and domain-specific skills, but also the domain-independent meta-skills of CT. Finding a solution to this issue is crucial, because assessment not only determines whether or not educational goals are being met, but also supports the design of a curriculum. Multiple forms of assessments have been proposed within the main perspective of programming skills, neglecting the possible generalization of CT training on other skills. In this work, we first review the existing approaches to CT assessment. Then, we discuss what non-technical skills (relational skills and cognitive life-skills) should be included in a comprehensive CT assessment framework. Moreover, we provide an indication of possible solutions to capitalize on the existing experiences in order to achieve a feasible integration of different types of assessment.},
  address = {New York, NY, USA},
  articleno = {15},
  author = {Basso, Demis and Fronza, Ilenia and Colombi, Alessandro and Pahl, Claus},
  booktitle = {Proceedings of the 18th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3279720.3279735},
  isbn = {9781450365352},
  keywords = {End-User Software Engineering; K-12; Software Engineering Training and Education},
  location = {Koli, Finland},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '18},
  title = {Improving Assessment of Computational Thinking Through a Comprehensive Framework},
  url = {https://doi.org/10.1145/3279720.3279735},
  year = {2018}
}

@inproceedings{merged655,
  abstract = {The aim of this paper is to broaden our view on the relationship between Computational Thinking and the development of the abstraction skill applied to mathematics. It was aimed to reveal trends and new potential solutions to be explored in the teaching of mathematics. We carefully selected sixty-four papers related with the objective above cited. From which we inspected twenty-four discovering that abstraction is a key skill for mathematics and Computational Thinking. We also discovered that we need to define which type of abstraction are we going to work on together with choosing between the two ways of teaching CT: integrating it to the curricula or as an after-school program.},
  address = {New York, NY, USA},
  author = {Chaabi, Hasnaa and Azmani, Amina and Dodero, Juan Manuel},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362881},
  isbn = {9781450371919},
  keywords = {APOS Theory; Abstraction; Basic Learnings; Computational Thinking; Mathematics Education Research; Thinking Skills; learning profiles},
  location = {Le\'{o}n, Spain},
  numpages = {6},
  pages = {981–986},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Analysis of the relationship between computational thinking and mathematical abstraction in primary education},
  url = {https://doi.org/10.1145/3362789.3362881},
  year = {2019}
}

@inproceedings{merged656,
  abstract = {The purpose of this paper is to show the effect of learning analytics system based teaching that instructor depends on a system which monitors learner's programming activities and grasps his/her achievement level in real-time under block-based programming environment. Based on the analyzed information, teachers might provide timely help and lead students to engage in coding education. Also, we found that there exits statistically significant difference in decomposition, abstraction, and algorithm components among several components of Computational thinking skills.},
  address = {New York, NY, USA},
  author = {Jeon, Inseong and Song, Ki-Sang},
  booktitle = {Proceedings of the 2019 11th International Conference on Computer and Automation Engineering},
  doi = {10.1145/3313991.3314017},
  isbn = {9781450362870},
  keywords = {Coding education; Computational thinking; Intellectual Tutoring System; Software education},
  location = {Perth, WN, Australia},
  numpages = {5},
  pages = {12–16},
  publisher = {Association for Computing Machinery},
  series = {ICCAE 2019},
  title = {The Effect of Learning Analytics System towards Learner's Computational Thinking Capabilities},
  url = {https://doi.org/10.1145/3313991.3314017},
  year = {2019}
}

@inproceedings{merged657,
  abstract = {In Latin America, computational thinking workshops are mostly developed in urban areas, charging participation fees. And although teachers are increasingly being expected to include technology in their classrooms, computational thinking and programming are not mandatory topics in teacher training programs. This hinders the development of digital skills among Latino students, and we expect that the digital gap between urban and rural populations will expand over time, especially in socio-economically vulnerable populations. Believing that teachers can be agents of change, we designed a 12 hour workshop to train the K-8 teaching staff in a rural and vulnerable school. The goal of this experience was to help these teachers develop basic computational thinking skills and devise new ways to incorporate what they learned in their classrooms. In this paper, we report our experience facilitating this workshop, and analyze the teacher perceptions before and after the intervention. Teacher attitudes changed drastically during the execution of the workshop, and they were able to come up with creative ways of incorporating computational thinking activities into their subjects. The reported experience can be used as input to develop public policies with respect to how computational thinking should be introduced in rural and vulnerable environments.},
  address = {New York, NY, USA},
  author = {Simmonds, Jocelyn and Gutierrez, Francisco J. and Casanova, Cecilia and Sotomayor, Cecilia and Hitschfeld, Nancy},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287456},
  isbn = {9781450358903},
  keywords = {computational thinking; latin america; rural environments; socio-economic vulnerability; teacher development},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {1143–1149},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {A Teacher Workshop for Introducing Computational Thinking in Rural and Vulnerable Environments},
  url = {https://doi.org/10.1145/3287324.3287456},
  year = {2019}
}

@inproceedings{merged658,
  abstract = {In the 21st century, the skills of computational thinking complement those of traditional math teaching. In order to gain the knowledge required to teach these skills, a cohort of math teachers participated in an in-service training scheme conducted as a massive open online course (MOOC). This paper analyses the success of this training scheme and uses the results of the study to focus on the skills of computational thinking, and to explore how math teachers expect to integrate computing into the K-12 math syllabus. The coursework and feedback from the MOOC course indicate that they readily associate computational thinking with problem solving in math. In addition, some of the teachers are inspired by the new opportunities to be creative in their teaching. However, the set of programming concepts they refer to in their essays is insubstantial and unfocused, so these concepts are consolidated here to form a hypothetical learning trajectory for computational thinking.},
  address = {New York, NY, USA},
  author = {Niemel\"{a}, Pia and Partanen, Tiina and Harsu, Maarit and Lepp\"{a}nen, Leo and Ihantola, Petri},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3141885},
  isbn = {9781450353014},
  keywords = {K-12 computer science curriculum; computational thinking; in-service teacher training; learning trajectory; math-integrated computing},
  location = {Koli, Finland},
  numpages = {10},
  pages = {70–79},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Computational thinking as an emergent learning trajectory of mathematics},
  url = {https://doi.org/10.1145/3141880.3141885},
  year = {2017}
}

@inproceedings{merged659,
  abstract = {With national K-12 education initiatives such as "CSForAll," block-based programming environments have emerged as widely used tools for teaching novice programming. A key challenge presented by block-based programming environments is assessing students' computational thinking (CT) and programming competencies. Developing assessment methods that can evaluate students' use of CT practices such as testing and refining, and developing and using appropriate algorithms, can help teachers evaluate students learning and provide appropriate scaffolding. In this work, we utilize an evidence-centered assessment design approach to devise a three-dimensional assessment to evaluate students' CT competencies based on evidence extracted from their programming trajectories in a block-based programming environment. In this assessment, the first dimension assesses students' knowledge of essential CT concepts, the second dimension assesses students' dynamic testing and refining strategies, and the third dimension assesses their overall problem-solving efficiency. We apply the assessment framework to data collected from students' interactions with a game-based learning environment designed to develop middle-grade students' CT competencies and programming skills. The results demonstrate that students' knowledge of basic CT constructs, such as appropriate use and combination of control structures, serves as the foundation for designing and implementing effective algorithms. Further, we assessed students testing and refining strategies over the three dimensions of novelty, positivity, and scale. The results demonstrate that students with higher algorithmic capabilities tend to make more novel, positive, and small-scale changes. The results reveal distinctive patterns in students' approaches to computational thinking problem solving and make a step toward identifying and assessing productive computational thinking practices.},
  address = {New York, NY, USA},
  author = {Akram, Bita and Min, Wookhee and Wiebe, Eric and Mott, Bradford and Boyer, Kristy Elizabeth and Lester, James},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293798},
  isbn = {9781450358903},
  keywords = {block-based programming; computational thinking assessment; evidence-centered design; game-based learning; programming trajectories},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1269},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Assessing Middle School Students' Computational Thinking Through Programming Trajectory Analysis},
  url = {https://doi.org/10.1145/3287324.3293798},
  year = {2019}
}

@inproceedings{merged660,
  abstract = {Elementary schools throughout the United States are attempting to integrate computational thinking (CT) into their instruction, often without guidance from research about effective approaches for achieving particular CT goals. This cross-case study investigated the school-wide integration of CT in three elementary schools in a large urban school district in the Northeast that has a district-led CS for All initiative. Data included interviews with teachers, professional development providers, and school administrators as well as surveys from teachers and classroom observations in each participating school. Findings revealed three distinct approaches to integration: (a) single teacher leader-driven model, (b) scaffolded professional development model, and (c) intensive coaching model. These approaches reflect the visions set by administrators and teachers, methods used by professional development providers, and cultures of each school. Across the case studies, common pedagogical approaches included strategic use of both unplugged and plugged activities with a range of computational tools, a focus on collaborative project-based learning, and the use of CT-specific academic language to anchor new CT learning within the academic disciplines. The study highlighted advantages and challenges within each integration approach with implications for schools considering CT integration.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Yan, Wei and Liu, Ruohan and Martin, Wendy and Adair, Alexandra and Fancsali, Cheri and Rivera-Cash, Edgar and Pierce, Melissa and Israel, Maya},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432379},
  isbn = {9781450380621},
  keywords = {case study; computational thinking; elementary education; integration},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {253–259},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Diverse Approaches to School-wide Computational Thinking Integration at the Elementary Grades: A Cross-case Analysis},
  url = {https://doi.org/10.1145/3408877.3432379},
  year = {2021}
}

@inproceedings{merged661,
  abstract = {This paper presents the preliminary results of the project "Computational Thinking for children education", aimed at promoting computational thinking, creativity and learning amongst primary school children. The didactic activities of the project focus on computer programming and, in particular, the development of video games. The paper introduces also a teaching model based on narrative learning where the screenplay of the game has a key role. A preliminary analysis of the project results highlights how children's perception of computer programming is influenced by practical coding sessions; furthermore, these results suggest that some individual features (e.g. gender; math and language competencies), and the socio-economics familiar context can significantly impact on development of computational thinking skills.},
  address = {New York, NY, USA},
  articleno = {6},
  author = {Chiazzese, Giuseppe and Fulantelli, Giovanni and Pipitone, Vito and Taibi, Davide},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145354},
  isbn = {9781450353861},
  keywords = {Computational Thinking; Kodu Game Lab; computational thinking tools; primary school children education},
  location = {C\'{a}diz, Spain},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Promoting computational thinking and creativeness in primary school children},
  url = {https://doi.org/10.1145/3144826.3145354},
  year = {2017}
}

@inproceedings{merged662,
  abstract = {While several approaches have been proposed to assess computational thinking (CT) abilities, it is still unclear how many and which these abilities are. Despite the undisputed importance of assessment, the fact is that there is not enough evidence on which abilities are merely theoretical and which can be empirically observed in the context of CT. This paper is part of a larger investigation in which we try to answer a simple question: can CT abilities be quantitatively defined and measured? In this particular study, we try to answer a simple question: How many CT abilities can be empirically observed using factor analysis? We approach this question, using a dataset containing answers of 1564 students from Lithuania in the Bebras Challenge from 2015. Firstly, we used confirmatory factor analysis to verify a theory that claims that five CT abilities are assessed by the contest. Our analysis shows the theory is not statistically supported. Secondly, we used principal component analysis as an exploratory analysis to try to derive an appropriate number of factors from the data. Surprisingly, the analysis suggests there are only two main recognizable factors. Finally, we briefly discuss these factors and hypothesize that the first is called evaluation ability, which would include abstraction, generalization, and decomposition, while factor 2 is algorithmic thinking and logical reasoning.},
  address = {New York, NY, USA},
  author = {Araujo, Ana Liz Souto O. and Andrade, Wilkerson L. and Guerrero, Dalton D. Serey and Melo, Monilly Ramos Araujo},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287405},
  isbn = {9781450358903},
  keywords = {assessment; bebras challenge; computational thinking},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {545–551},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {How Many Abilities Can We Measure in Computational Thinking? A Study on Bebras Challenge},
  url = {https://doi.org/10.1145/3287324.3287405},
  year = {2019}
}

@inproceedings{merged663,
  abstract = {There is a long-standing question in the computational thinking (CT) literature regarding CT assessment methods. To address this, this project takes a multidisciplinary approach to design, develop, and evaluate a novel computer-based competency assessment of CT. Several pilot studies have suggested promising results regarding its reliability; the evaluation phase will be conducted using a psychometric model and data mining techniques to investigate item properties and extract performance patterns.},
  address = {New York, NY, USA},
  author = {Lai, Rina P.Y.},
  booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3341525.3394002},
  isbn = {9781450368742},
  keywords = {computational problems; computational thinking; computer-based assessment; formative assessment; parson's problem},
  location = {Trondheim, Norway},
  numpages = {2},
  pages = {573–574},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '20},
  title = {The Design, Development, and Evaluation of a Novel Computer-based Competency Assessment of Computational Thinking},
  url = {https://doi.org/10.1145/3341525.3394002},
  year = {2020}
}

@inproceedings{merged664,
  abstract = {Introducing coding in the curriculum at an early age is considered a long term investment in bridging the skills gap between the technology demands of the labour market and the availability of people to fill them. The keys to success include moving from mere literacy to active control - not only at the level of learners but also at the level of teachers. However, given the fast development of the field, one might wonder whether acquiring specific coding skills really is the essence of introducing coding early in the curriculum. We argue that the reach of ICT -including coding skills- is much broader than STEM alone and a background in STEM is no longer a requirement for successful coding. The complex link between coding and computational thinking is the real critical success factor. We refer to TACCLE3 (an EU Erasmus+ project) as a successful approach to the implementation and valorisation of computational thinking across the curriculum.},
  address = {New York, NY, USA},
  author = {DePryck, Koen},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012492},
  isbn = {9781450347471},
  keywords = {STEM; TACCLE3; coding; computational thinking},
  location = {Salamanca, Spain},
  numpages = {3},
  pages = {27–29},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {From computational thinking to coding and back},
  url = {https://doi.org/10.1145/3012430.3012492},
  year = {2016}
}

@inproceedings{merged665,
  abstract = {We live in a digital society that needs new better prepared professionals for the new challenges and opportunities provided by the ICT. Students must learn how to deal with all the issues that emerge in this new context. They should acquire computational thinking skills by integrating STEAM, however this needs for changes in current learning curricula and also new learning approaches. RoboSTEAM project deals with this issue by the application of a Challenge Based Learning approach that uses Robotics and Physical Devices. One of the problems found during the project is the complexity of the application of a Challenge Based Learning approach due to the special needs of each educational institution. Given this situation the present work presents provides a flexible definition of challenge and describes also samples regarding how to use them.},
  address = {New York, NY, USA},
  author = {Conde, Miguel \'{A}. and Fern\'{a}ndez, Camino and Alves, Jonny and Ramos, Mar\'{\i}a-Jo\~{a}o and Celis-Tena, Susana and Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e} and Reimann, Daniela and Jormanainen, Ilkka and Pe\~{n}alvo, Francisco J. Garc\'{\i}a},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362893},
  isbn = {9781450371919},
  keywords = {Challenge Based Learning; Computational Thinking; Physical Devices; Robotics; STEAM; Schools Education},
  location = {Le\'{o}n, Spain},
  numpages = {7},
  pages = {24–30},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {RoboSTEAM - A Challenge Based Learning Approach for integrating STEAM and develop Computational Thinking},
  url = {https://doi.org/10.1145/3362789.3362893},
  year = {2019}
}

@article{merged666,
  address = {New York, NY, USA},
  author = {CACM Staff},
  doi = {10.1145/3128899},
  issn = {0001-0782},
  issue_date = {September 2017},
  journal = {Commun. ACM},
  month = {August},
  number = {9},
  numpages = {2},
  pages = {8–9},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking is not necessarily computational},
  url = {https://doi.org/10.1145/3128899},
  volume = {60},
  year = {2017}
}

@inproceedings{merged667,
  abstract = {Computational thinking and coding-based problem solving are increasingly seen as crucial cross-disciplinary skills and an important part of a well-rounded education. Coding games and problem solving exercises have been growing in popularity. Many large-scale initiatives have been launched in order to bring these initiatives into classrooms, from preschool to secondary education. CodyColor is a simplified coding game, which takes basic programming instructions representing movements ("turn left" and "turn right") and represents them with color blocks. In contrast to most other coding games, color-coded programming relies on no symbolic interpretation on part of the player in order to be approachable by very young players as well. We present a massively multiplayer online version of CodyColor, discuss design and implementation specifics, and enumerate some of the possible game modes.},
  address = {New York, NY, USA},
  author = {Klopfenstein, Lorenz Cuno and Delpriori, Saverio and Maldini, Riccardo and Bogliolo, Alessandro},
  booktitle = {Extended Abstracts of the Annual Symposium on Computer-Human Interaction in Play Companion Extended Abstracts},
  doi = {10.1145/3341215.3356315},
  isbn = {9781450368711},
  keywords = {coding; computational thinking; game; massively multiplayer; online; web application},
  location = {Barcelona, Spain},
  numpages = {6},
  pages = {453–458},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '19 Extended Abstracts},
  title = {CodyColor: Design of a Massively Multiplayer Online Game to Develop Computational Thinking Skills},
  url = {https://doi.org/10.1145/3341215.3356315},
  year = {2019}
}

@inproceedings{merged668,
  abstract = {Robot is one of the carriers to carry out preschoolers’ computational thinking education. Keeko robot can carry out voice interaction, screen interaction, programming board interaction, and help children learn to code. This paper conducted semi-structured interviews and observed the demonstration courses with Keeko robot development team, designed the questionnaire based on the theoretical foundation of Positive Technological Development)PTD(, carried out an online survey on 103 preschool teachers who had used Keeko as a teaching tool of computational thinking, and a total of 89 participants completed the questionnaire. Single-sample Wilcoxon signed-rank test statistics was used to analyze the questionnaire data, and obtain preliminary views on using Keeko robot to motivate children's positive behaviors. The results showed that the median of the six constructs in the questionnaire is greater than 4 (4 represents uncertain attitude and neutral attitude), which meant that they have a positive attitude towards using Keeko robot to carry out the computational thinking education. The research result helps people understand the attitude of preschool teachers and provides a valuable reference for the development and design of related robots in the future. In the meanwhile, it also helps preschool teachers to improve their understanding of robots, curriculum content, teaching process and children's behavior, so as to effectively carry out the computational thinking education on preschoolers.},
  address = {New York, NY, USA},
  author = {Wang, Gang and Wang, Hung-Hsiang},
  booktitle = {Proceedings of the 4th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3416797.3416823},
  isbn = {9781450388375},
  location = {Kyoto, Japan},
  numpages = {4},
  pages = {235–238},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '20},
  title = {Study of the Impact of Computational Thinking Education Based on Robots on Behaviors of Preschoolers},
  url = {https://doi.org/10.1145/3416797.3416823},
  year = {2020}
}

@inproceedings{merged669,
  abstract = {This paper describes a learning activity on computational thinking in Ethics classroom with compulsory secondary school students (14-16 years). It is based on the assumption that computational thinking (or better "logical thinking") is applicable not only to STEM subjects but to any other field in education, and it is particularly suited to decision making in moral dilemmas. This will be carried out through the study of so called "moral machines", using a game-based learning approach on self-driving vehicles and the need to program such cars to perform certain behaviours under extreme situations. Students will be asked to logically base their reasoning on different ethical approaches and try to develop a schema of decision making that could serve to program a machine to respond to those situations. Students will have to deal also with the uncertainty of reaching solutions that will be debatable and not universally accepted as part of de difficulty, more ethical than technical, to provide machines with the ability to take decisions where there is no such thing as a "right" versus "wrong" answer, and potentially both (or more) of the possible actions will bring unwanted consequences.},
  address = {New York, NY, USA},
  author = {Seoane-Pardo, Antonio M.},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012494},
  isbn = {9781450347471},
  keywords = {computational thinking; decision making; ethics; game-based learning; logic; moral machines; self-driving car},
  location = {Salamanca, Spain},
  numpages = {8},
  pages = {37–44},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Computational thinking beyond STEM: an introduction to "moral machines" and programming decision making in ethics classroom},
  url = {https://doi.org/10.1145/3012430.3012494},
  year = {2016}
}

@inproceedings{merged670,
  abstract = {Recently, Computer Science education in Switzerland reached a critical milestone. In the past two years the School of Education of FHNW, one of Switzerland's largest schools of education, introduced a mandatory Computer Science education module, comprised of a two-course sequence for its students: pre-service primary-level schoolteachers. Due to its design and audience, this mandatory module introduces a variety of unique challenges. The module is taken by a majority of female students (75%), many with no prior experience and/or interest in programming and Computer Science. The module starts with a course focused on learning Computational Thinking, referred to as FW, followed by a course focused on teaching Computational Thinking, referred to as FD. Since 2017, 1000 pre-service primary-level teachers have been trained in Computer Science education through this module. This curricula initiative computes the effect sizes from teaching two complete iterations of the "FW then FD" design. It is based on attitude assessment data collected at four points: Pre-FW, Post-FW, Pre-FD, Post-FD, during the first two years of this mandatory module. Our research indicates that, by course's end, pre-service teachers are mostly confident in their ability to program and think computationally.},
  address = {New York, NY, USA},
  author = {Repenning, Alexander and Lamprou, Anna and Basawapatna, Ashok},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432446},
  isbn = {9781450380621},
  keywords = {K-12; computer science education; mandatory computer science education; pre-service teacher education},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {274–280},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Computing Effect Sizes of a Science-first-then-didactics Computational Thinking Module for Preservice Elementary School Teachers},
  url = {https://doi.org/10.1145/3408877.3432446},
  year = {2021}
}

@inproceedings{merged671,
  abstract = {Although educators, researchers, and designers have increasingly advocated for developing computational thinking (CT) in young children, the vast majority of CT learning environments fail to support the development of positive attitudes towards problem solving, confidence in dealing with complexity, and communicating and working with others to achieve a goal. To address this issue, our design team developed a music-based puzzle game called SynthSync. The game challenges players to work collaboratively to "debug" jumbled musical compositions through close listening, tinkering, and communication. SynthSync players manipulate controls to adjust musical variables (pitch, note length, and the length of rests) in arhythmic and dissonant musical puzzles based on popular songs until they "discover" the original piece of music.},
  address = {New York, NY, USA},
  author = {Jordan-Douglass, Anna and Kumar, Vishesh and Woods, Peter J.},
  booktitle = {Proceedings of the 17th ACM Conference on Interaction Design and Children},
  doi = {10.1145/3202185.3210766},
  isbn = {9781450351522},
  keywords = {children; collaborative problem solving; computational thinking; debugging; game; music; puzzles},
  location = {Trondheim, Norway},
  numpages = {4},
  pages = {513–516},
  publisher = {Association for Computing Machinery},
  series = {IDC '18},
  title = {Exploring computational thinking through collaborative problem solving and audio puzzles},
  url = {https://doi.org/10.1145/3202185.3210766},
  year = {2018}
}

@inproceedings{merged672,
  abstract = {Players can build implicit understanding of challenging scientific concepts when playing digital science learning games [1]. In this study, we examine implicit computational thinking (CT) skills among upper elementary and middle school students during Zoombinis gameplay. We report on the development of a human labeling system for gameplay evidence of four CT skills: problem decomposition, pattern recognition, algorithmic thinking, and abstraction. We define labels that identify use of these skills in three Zoombinis puzzles, based on analysis of video data from both CT novices (upper elementary and middle school students) and CT experts (computer scientists and expert Zoombinis players). Future work will involve the construction of detectors for implicit CT skills based on these human labels, in order to analyze gamelog data at scale and give feedback to teachers.},
  address = {New York, NY, USA},
  author = {Rowe, Elizabeth and Asbell-Clarke, Jodi and Cunningham, Kathryn and Gasca, Santiago},
  booktitle = {Extended Abstracts Publication of the Annual Symposium on Computer-Human Interaction in Play},
  doi = {10.1145/3130859.3131294},
  isbn = {9781450351119},
  keywords = {computational thinking; implicit learning; learning games; video analysis},
  location = {Amsterdam, The Netherlands},
  numpages = {6},
  pages = {195–200},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '17 Extended Abstracts},
  title = {Assessing Implicit Computational Thinking in Zoombinis Gameplay: Pizza Pass, Fleens &amp; Bubblewonder Abyss},
  url = {https://doi.org/10.1145/3130859.3131294},
  year = {2017}
}

@inproceedings{merged673,
  abstract = {Computational thinking is considered best practice for teaching computing and more broadly to solve problems and design systems, however as computing extends beyond the desktop (for instance increased integration of ubicomp technologies) so too must our educational methods. Exposure to ubicomp technologies is most accessible through the maker movement. With this in mind we argue we must move from computational thinking to computational making as an educational framework. Here we present a case study of children's making to support our vision for a broader conception of computational making.},
  address = {New York, NY, USA},
  author = {Rode, Jennifer A. and Weibert, Anne and Marshall, Andrea and Aal, Konstantin and von Rekowski, Thomas and Elmimouni, Houda and Booker, Jennifer},
  booktitle = {Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing},
  doi = {10.1145/2750858.2804261},
  isbn = {9781450335744},
  keywords = {computational making; computational thinking; maker culture},
  location = {Osaka, Japan},
  numpages = {12},
  pages = {239–250},
  publisher = {Association for Computing Machinery},
  series = {UbiComp '15},
  title = {From computational thinking to computational making},
  url = {https://doi.org/10.1145/2750858.2804261},
  year = {2015}
}

@inproceedings{merged674,
  abstract = {This synopsis presents the preliminary results of a larger study that aims to uncover design principles for teaching computational thinking to primary school children. This research focuses on teaching computational thinking to 8-year-olds through ScratchJr. By engaging in a cyclic process in which we create lesson materials and use evaluation data to improve them, we formulate design principles and provide teachers with sample course materials.},
  address = {New York, NY, USA},
  author = {Faber, Hylke H. and van der Ven, Jan Salvador and Wierdsma, Menno D.M.},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3059009.3072986},
  isbn = {9781450347044},
  keywords = {computational thinking; primary education; scratchjr},
  location = {Bologna, Italy},
  numpages = {1},
  pages = {359},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {Teaching Computational Thinking to 8-Year-Olds through ScratchJr},
  url = {https://doi.org/10.1145/3059009.3072986},
  year = {2017}
}

@inproceedings{merged675,
  abstract = {As many countries are about to make changes in the primary school curriculum by introducing computational thinking, new methods and support for teachers is needed in order help them develop and adapt teaching materials. In this paper, technical pitfalls and other considerations for designing teaching materials with the microcontroller BBC micro:bit are presented. The results are based on a series of 21 workshops in different parts of Sweden aiming to investigate what is important to consider when designing teaching materials with the BBC micro:bit for training Swedish primary schools students computational thinking skills. The contribution of the paper are a number of identified considerations that can be helpful for teachers when designing exercises and planning for teaching computational thinking with the BBC micro:bit.},
  address = {New York, NY, USA},
  author = {Tyr\'{e}n, Markus and Carlborg, Niklas and Heath, Carl and Eriksson, Eva},
  booktitle = {Proceedings of the Conference on Creativity and Making in Education},
  doi = {10.1145/3213818.3213829},
  isbn = {9781450353717},
  keywords = {BBC micro:bit; computational thinking; programming; school; teaching},
  location = {Trondheim, Norway},
  numpages = {6},
  pages = {81–86},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe'18},
  title = {Considerations and Technical Pitfalls for Teaching Computational Thinking with BBC micro:bit},
  url = {https://doi.org/10.1145/3213818.3213829},
  year = {2018}
}

@inproceedings{merged676,
  abstract = {This study examined how computational thinking (CT) has been used to teach problem-solving skills and programming education in the recent past. This study specifically (i) identified articles that discussed CT approach for programming education at higher education institutions (HEIs), (ii) classified the different CT approaches and tools employed for programming education at HEIs, (iii) synthesised and discussed results that are reported by relevant studies that utilized CT for teaching programming at HEIs. A systematic literature review methodology was adopted in this study. Out of 161 articles retrieved, 33 of them that met the inclusion criteria were reviewed. Our study revealed that the use of CT at HEIs for programming education began in 2010; many studies did not specify the context of use, but the use of CT is found to be gaining grounds in many contexts, especially the developed countries; course design approach was mostly employed by educators to introduce CT at HEIs for programming education. Furthermore, this study pointed out how CT approach can be explored for designing a smart learning environment to support students in learning computer programming.},
  address = {New York, NY, USA},
  articleno = {12},
  author = {Agbo, Friday Joseph and Oyelere, Solomon Sunday and Suhonen, Jarkko and Adewumi, Sunday},
  booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3364510.3364521},
  isbn = {9781450377157},
  keywords = {computational thinking; higher education; problem-solving; programming; smart learning; undergraduates},
  location = {Koli, Finland},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '19},
  title = {A Systematic Review of Computational Thinking Approach for Programming Education in Higher Education Institutions},
  url = {https://doi.org/10.1145/3364510.3364521},
  year = {2019}
}

@inproceedings{merged677,
  abstract = {Teacher training in computational thinking is becoming more and more important, as many countries are introducing it at all K-12 school levels. Introductory programming courses are known to be difficult and some studies suggest they foster a fixed-mindset views of intelligence, reinforcing the idea that only some people have the so called "geek gene". This is particularly dangerous if thought by future school teachers. Interventions to stimulate "CS growth mindset" in students and their teachers are fundamental and worth CS education research.},
  address = {New York, NY, USA},
  author = {Lodi, Michael},
  booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
  doi = {10.1145/3105726.3105736},
  isbn = {9781450349680},
  keywords = {computational thinking; growth mindset; teacher training},
  location = {Tacoma, Washington, USA},
  numpages = {2},
  pages = {281–282},
  publisher = {Association for Computing Machinery},
  series = {ICER '17},
  title = {Growth Mindset in Computational Thinking Teaching and Teacher Training},
  url = {https://doi.org/10.1145/3105726.3105736},
  year = {2017}
}

@article{merged678,
  abstract = {The 1st International Workshop on Geo-computational Thinking in Education (GeoEd 2019) was held in conjunction with the 27th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems (ACM SIGSPATIAL 2019). The workshop is intended to bring together experts from both geography (or related) and computer science disciplines who have primary interest in geospatial data and technologies, either from academia or industry, to discuss the grand challenges towards improving existing learning pathways through integration of geo-computational thinking in higher education. This could impact a variety of disciplines that increasingly deal with geospatial data beyond geography, such as social sciences, environmental sciences, public policy, climatology, and other geo-related disciplines. The workshop speakers and attendants have discussed their vision on challenges and opportunities of various topics within the workshop scope.},
  address = {New York, NY, USA},
  author = {Magdy, Amr and Dony, Coline},
  doi = {10.1145/3383653.3383657},
  issue_date = {November 2019},
  journal = {SIGSPATIAL Special},
  month = {February},
  number = {3},
  numpages = {2},
  pages = {12–13},
  publisher = {Association for Computing Machinery},
  title = {1st ACM SIGSPATIAL Workshop on Geo-Computational Thinking in Education (GeoEd 2019): Chicago, Illinois, USA - November 5, 2019},
  url = {https://doi.org/10.1145/3383653.3383657},
  volume = {11},
  year = {2020}
}

@inproceedings{merged679,
  abstract = {Computational thinking complements critical thinking as a way of reasoning to solve problems, make decisions and interact with our world. It draws concepts and techniques such as abstraction, decomposition, algorithmic design, generalization, evaluation and iteration from computer and information science, but has broad application in the arts, sciences, humanities and social sciences. This paper compares computational and critical modes of thinking, identifying concepts and terminology that support cross-disciplinary discourse, inform faculty and curriculum development efforts, and interconnect learning outcomes at the course, program and university level, thus helping programs better articulate contributions to institutional goals. A better understanding of each mode can enrich what we teach aspiring information professionals about computational and critical thinking, how we teach it, and how we apply these skills in our professional work.},
  address = {USA},
  articleno = {92},
  author = {Kules, Bill},
  booktitle = {Proceedings of the 79th ASIS&amp;T Annual Meeting: Creating Knowledge, Enhancing Lives through Information &amp; Technology},
  keywords = {computational thinking; critical thinking; curriculum; education; student learning outcomes},
  location = {Copenhagen, Denmark},
  numpages = {6},
  publisher = {American Society for Information Science},
  series = {ASIST '16},
  title = {Computational thinking is critical thinking: connecting to university discourse, goals, and learning outcomes},
  year = {2016}
}

@inproceedings{merged680,
  abstract = {With the prevalence1 of the computational thinking, Chinese colleges and universities adopt this concept into their elementary computer teaching for cultivating students' thinking and application ability, which strongly support the students' development. Therefore, it is very important to evaluate the effectiveness of computational thinking in the elementary computer courses. Through such an evaluation, we can obtain the objective data which reflects the teaching effect of elementary computer courses, establish scientific teaching evaluation matrices, and emphasize the importance of those courses. In this paper, we investigate the teaching effectiveness for achieve accurate data and decision support on the computational-thinking-oriented computer curriculum reform. Our research is based on recent evaluations and data acquisition. We analyze the test database, categories of questions, and scores of students. We find several problems, such as the over-emphasizing the programming, incomplete knowledge components, limited background, large deviation of evaluation results among universities. Finally, we give several improvement recommendations.},
  address = {New York, NY, USA},
  articleno = {12},
  author = {Bo, Li and Xiaobin, Zhang and Ning, Wu},
  booktitle = {Proceedings of the ACM Turing 50th Celebration Conference - China},
  doi = {10.1145/3063955.3063967},
  isbn = {9781450348737},
  keywords = {computational thinking; teaching effectiveness evaluation; test paper; university computer foundation course},
  location = {Shanghai, China},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {ACM TURC '17},
  title = {Teaching evaluation for computational-thinking-oriented elementary computer courses},
  url = {https://doi.org/10.1145/3063955.3063967},
  year = {2017}
}

@inproceedings{merged681,
  abstract = {This workshop will explore using school-based sensor technologies to bring computational thinking into middle school science and integrated STEM courses. Participants will learn how to introduce students to sensor technologies and support their understanding of how to use sensor technologies to "make the invisible, visible." We will use the sensor technologies to conduct a variety of short, real-world investigations, such as measuring air quality and noise levels using the available sensors. Teachers will largely play the role of students as they learn to program the sensor technologies, gather and analyze data, and create displays to share their findings. The workshop will use an open-access, one-week sensor immersion curriculum, and ideas for improvements will be solicited from by the group. No prior experience using sensor technologies or programming is needed.},
  address = {New York, NY, USA},
  author = {Gendreau Chakarov, Alexandra and Biddy, Quentin and Runberg, Derek},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3367013},
  isbn = {9781450367936},
  keywords = {computational thinking; sensors},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1394},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Using Sensor Technologies to Introduce Secondary Education Students to Computational Thinking and Computer Science},
  url = {https://doi.org/10.1145/3328778.3367013},
  year = {2020}
}

@inproceedings{merged682,
  address = {New York, NY, USA},
  author = {Turner, Scott},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3247832},
  isbn = {9781450351034},
  location = {Baltimore, Maryland, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Session details: Paper Session: Computational Thinking #2},
  url = {https://doi.org/10.1145/3247832},
  year = {2018}
}

@inproceedings{merged683,
  address = {New York, NY, USA},
  author = {Hawthorne, Elizabeth},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3247823},
  isbn = {9781450351034},
  location = {Baltimore, Maryland, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Session details: Paper Session: Computational Thinking #1},
  url = {https://doi.org/10.1145/3247823},
  year = {2018}
}

@proceedings{merged684,
  address = {New York, NY, USA},
  isbn = {9781450369527},
  location = {Chicago, IL, USA},
  publisher = {Association for Computing Machinery},
  title = {GeoEd'19: Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-computational Thinking in Education},
  year = {2019}
}

@inproceedings{merged685,
  abstract = {Even though the computer science education community has not definitively established exactly what ?Computational Thinking" entails, most will agree that it is using a computing machine to solve problems. Like all tools for solving problems, this knowledge should be made available to everyone. Jeannette Wing sounded this call in 2006, writing that "computational methods and models give us the courage to solve problems and design systems that no one of us would be capable of tackling alone." These skills are not just for computer scientists, but for anyone and everyone who plans to solve problems. We already teach other forms of problem solving to all our students including: Mathematical Thinking, Critical Thinking, and Scientific Reasoning. Computational Thinking, as well as engineering and design's Design Thinking, should be equally exposed to all students. It is also important to illuminate that these tools are not used in isolation to solve problems. Perhaps the key to the acceptance of Computational Thinking (as well as Design Thinking) as essential educational tools is to highlight their overlap and interdependence with other problem solving skills. The next generation will need practice with every tool at their disposal to be prepared to solve tomorrow's problems. I propose embedding Computational Thinking in a problem solving framework that leverages teachers' (and students') existing knowledge of problem solving in mathematics, science, and language arts in order to encourage teachers in non CS disciplines to teach Computational Thinking in their classrooms.},
  address = {New York, NY, USA},
  author = {Fleenor, Hillary},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293792},
  isbn = {9781450358903},
  keywords = {computational thinking; computer science education; problem solving},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1253},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Establishing Computational Thinking as Just Another Tool in the Problem Solving Tool Box},
  url = {https://doi.org/10.1145/3287324.3293792},
  year = {2019}
}

@inproceedings{merged686,
  abstract = {This experience report describes two iterations of a curriculum development process in which middle school teachers worked with our research team to collaboratively design and enact instructional units where students used sensors to investigate scientific phenomena. In this report, we examine the affordances of using a sensor platform to support the integration of disciplinary learning and computational thinking (CT) aligned with Next Generation Science Standards and the CT in STEM Taxonomy developed by Weintrop and colleagues. In the first unit, students investigated the conditions for mold growth within their school using a custom sensor system. After analyzing implementation experiences and student interest data, our team engaged in another round of co-design to develop a second instructional unit. This unit uses a different sensor system (the micro:bit) which supports additional CT in STEM practices due to its block-based programming interface and its real time data display. For the second unit we selected a different phenomenon: understanding and designing maglev trains.},
  address = {New York, NY, USA},
  author = {Gendreau Chakarov, Alexandra and Recker, Mimi and Jacobs, Jennifer and Van Horne, Katie and Sumner, Tamara},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287476},
  isbn = {9781450358903},
  keywords = {computational thinking; middle school science; sensors},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {818–824},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Designing a Middle School Science Curriculum that Integrates Computational Thinking and Sensor Technology},
  url = {https://doi.org/10.1145/3287324.3287476},
  year = {2019}
}

@inproceedings{merged687,
  abstract = {This paper contributes to the contemporary debate on the increasing use of computational thinking (CT) in primary schools. It is based on an empirical study in which 28 Swedish third-grade school children (9-10 years of age) participated in a creative workshop where they were challenged to design a digital game using stop-motion film technique, working in groups. The study applies a designerly approach to game design activities to investigate what aspects of computational skills can be identified when children employ stop motion filmmaking as a means to envision a digital game design idea and how a designerly approach can enable them to enact dimensions of their computational skills? The data included video observations, casual conversations, and stop-motion videos representing the children's game design ideas. The analysis identified three aspects of computational thinking strategies while children produced stop-motion films: step-by-step procedural skills; design and arrangement skills; and computational perspectives.},
  address = {New York, NY, USA},
  author = {Brooks, Eva and Sj\"{o}berg, Jeanette},
  booktitle = {Proceedings of the Interaction Design and Children Conference},
  doi = {10.1145/3392063.3394402},
  isbn = {9781450379816},
  keywords = {communication; computational thinking skills; designerly approach; funds of knowledge; representation; school children; stop-motion filmmaking},
  location = {London, United Kingdom},
  numpages = {9},
  pages = {87–95},
  publisher = {Association for Computing Machinery},
  series = {IDC '20},
  title = {A designerly approach as a foundation for school children's computational thinking skills while developing digital games},
  url = {https://doi.org/10.1145/3392063.3394402},
  year = {2020}
}

@inproceedings{merged688,
  abstract = {The percentages of 1dropout, accreditation and average grade of students that study university courses of Methodology of programming and Programming of first and second semester of career of Information and Communication Technologies in the Technological University of Puebla are not favorable and represent a problem to be solved by academic team, for the above, the main objective of present study is to show results of interventions carried out in front of a group of educational strategies that allowed to have better percentages in comparison with those obtained in the last 8 years. The first intervention involved evaluation of computational thinking through abilities of Generalization, Decomposition, Abstraction, Evaluation and Algorithmic Design, then students were offered 10 learning scenarios for Methodology of programming course. In the second intervention, 4 elements were manipulated to offer options in course of Programming, which were contents, modes of work, rhythms and time, and evaluation. In both interventions, use of Moodle platform allowed to expose learning contents and to have an appropriate context chosen by students. The main result was to generate personalized education as well as a learning experience that contributed to motivation of student in harmony with academic goals of initial programming courses.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Rojas-L\'{o}pez, Arturo and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145357},
  isbn = {9781450353861},
  keywords = {Computational thinking; Computer programming course; Educational programming; Engineering course; Engineering education; Higher education; Learning programming; Programming; Programming teaching; Students; Teaching},
  location = {C\'{a}diz, Spain},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Personalized education using computational thinking and b-learning environment: classroom intervention},
  url = {https://doi.org/10.1145/3144826.3145357},
  year = {2017}
}

@inproceedings{merged689,
  abstract = {This paper discusses how a few changes in some computational thinking tasks proposed during the Bebras challenge affected the solvers' performance. After the 2016 challenge held in November in our country (Italy), we interviewed some participants on the difficulties they had faced and we modified some of the tasks accordingly. We then proposed the whole set of tasks, with some of them modified, to pupils who had not participated to the challenge in November and compared performances in the two sessions. Using Item Response Theory, we measured the change in the distribution of difficulty and discrimination of the modified tasks. On the basis of the obtained results, we tried to better understand the many factors which influenced the difference in performances, both in the conceptual and cognitive task content and in its presentation (text, images, layout).},
  address = {New York, NY, USA},
  author = {Lonati, Violetta and Monga, Mattia and Malchiodi, Dario and Morpurgo, Anna},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3141900},
  isbn = {9781450353014},
  keywords = {K-12 education; bebras; computational thinking; informal education; item response theory},
  location = {Koli, Finland},
  numpages = {10},
  pages = {60–69},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {How presentation affects the difficulty of computational thinking tasks: an IRT analysis},
  url = {https://doi.org/10.1145/3141880.3141900},
  year = {2017}
}

@inproceedings{merged690,
  abstract = {This demo focuses supplements our paper "From Computational Thinking to Computation Making" to allow visitors to interact with the various technologies the children in our club created, including an interactive monster. Additionally, to make the demo interactive and to encourage conference attendees to discuss their experience of "making" we will have a Monster Making contest.},
  address = {New York, NY, USA},
  author = {Rode, Jennifer A. and Marshall, Andrea and Weibert, Anne and Aal, Konstantin and von Rekowski, Thomas and Elmimouni, Houda and Sharma, Akshay and Jobs, Jordan and Schleeter, Alexis and Booker, Jennifer},
  booktitle = {Adjunct Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing and Proceedings of the 2015 ACM International Symposium on Wearable Computers},
  doi = {10.1145/2800835.2800926},
  isbn = {9781450335751},
  keywords = {children; education; making; programming; ubicomp},
  location = {Osaka, Japan},
  numpages = {2},
  pages = {401–402},
  publisher = {Association for Computing Machinery},
  series = {UbiComp/ISWC'15 Adjunct},
  title = {From computational thinking to computational making},
  url = {https://doi.org/10.1145/2800835.2800926},
  year = {2015}
}

@inproceedings{merged691,
  abstract = {As educational jurisdictions around the world begin to integrate computational thinking (CT) into their K-12 mandatory curriculum, there is a need to ensure that classroom activities are engaging, relate to student interests, and effectively promote the development of CT skills. The analysis of sports performance data fulfills this criteria for some students and teachers and presents an exciting context in which students from all K-12 grades can access complex CT concepts. This lightning talk investigates sports analytic tasks within the context of the CT in mathematics and science taxonomy introduced by Weintrop et al. (2015). Specific classroom activities are presented including analyzing the distribution of soccer goals, baseball salaries, the location of successful basketball shots, and the placement of volleyball serves. Examples of data analytics projects will be shared and the four main components of the taxonomy (data practices, modelling and simulation practices, computational problem-solving practices and systems thinking practices) will be identified within each project.},
  address = {New York, NY, USA},
  author = {Floyd, Steven Paul and Sorbara, Luigi},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293773},
  isbn = {9781450358903},
  keywords = {analytics; computational thinking; computer science; data analytics; k-12 education; mathematics; modelling; sports; sports analytics},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1282},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Sports Analytics as a Context for Computational Thinking in K-12 Education},
  url = {https://doi.org/10.1145/3287324.3293773},
  year = {2019}
}

@inproceedings{merged692,
  abstract = {Science, Technology, Engineering, Arts and Mathematics (STEAM) are fundamental basis for the development of our society. From this perspective, it is necessary to educate all people to solve problems underlying computer programming tasks since it is an important foundation of the STEAM world. Consequently, it is urgent to implement proposals aimed at the development of computational thinking, especially for girls since there is little representation of this group in the STEAM context. Therefore, this work is based on a systematic review protocol aimed at identifying the different strategies in the teaching and learning of computational thinking from a gender perspective, generating an alert regarding the needs of the female group in learning computational thinking and promoting gender-equitable education in this regard.},
  address = {New York, NY, USA},
  author = {Torres-Torres, Yucnary-Daitiana and Rom\'{a}n-Gonz\'{a}lez, Marcos and P\'{e}rez-Gonz\'{a}lez, Juan-Carlos},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486414},
  isbn = {9781450390668},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {25–29},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Specific Didactic Strategies Used for the Development of Computational Thinking in the Female Collective in Primary and Secondary Education: A Systematic Review Protocol},
  url = {https://doi.org/10.1145/3486011.3486414},
  year = {2021}
}

@inproceedings{merged693,
  abstract = {This study seeks to extend the existing research on the use of visual programming tools to work and develop computational thinking. We show the primary education students' perceptions of the use of the software Lego Education WeDo in the subject of natural sciences to promote the computational thinking. We tried to test the following hypotheses: Students will learn to build and program 3D models with Lego Education WeDo (H1), students will think creatively to solve the problems (H2), Lego Education WeDo will help pupils to know the relationship between cause and effect (H3), and the tasks developed will allow pupils to reflect about the possibilities they have and to find the correct answer (H4). Based on the result analysis there were evidences of the effectiveness of the project to increase the participants' awareness of the computational thinking. The research also concluded that according to learners' perception, the way in which activities were designed provided them possibilities to learn to build models in 3D and program them. Moreover, the findings of the study also demonstrated that the success of the project also depended on the teacher's role as a guide in the teaching-learning process.},
  address = {New York, NY, USA},
  author = {Pinto-Llorente, Ana M and Mart\'{\i}n, Sonia Casillas and Gonz\'{a}lez, Marcos Cabezas and Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e}},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012495},
  isbn = {9781450347471},
  keywords = {collaborative learning; computational thinking; introductory programming; natural sciences; visual programming tool},
  location = {Salamanca, Spain},
  numpages = {6},
  pages = {45–50},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Developing computational thinking via the visual programming tool: lego education WeDo},
  url = {https://doi.org/10.1145/3012430.3012495},
  year = {2016}
}

@inproceedings{merged694,
  abstract = {Programming and computational thinking skills are promoted in schools worldwide. However, there is still a lack of tools that assist learners and educators in the assessment of these skills. We have implemented an assessment tool, called Dr. Scratch, that analyzes Scratch projects with the aim to assess the level of development of several aspects of computational thinking. One of the issues to address in order to show its validity is to compare the (automatic) evaluations provided by the tool with the (manual) evaluations by (human) experts. In this paper we compare the assessments provided by Dr. Scratch with over 450 evaluations of Scratch projects given by 16 experts in computer science education. Our results show strong correlations between automatic and manual evaluations. As there is an ample debate among educators on the use of this type of tools, we discuss the implications and limitations, and provide recommendations for further research.},
  address = {New York, NY, USA},
  author = {Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Harteveld, Casper and Robles, Gregorio},
  booktitle = {Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
  doi = {10.1145/3027063.3053216},
  isbn = {9781450346566},
  keywords = {assessment; computational thinking; programming; scratch},
  location = {Denver, Colorado, USA},
  numpages = {8},
  pages = {2788–2795},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '17},
  title = {On the Automatic Assessment of Computational Thinking Skills: A Comparison with Human Experts},
  url = {https://doi.org/10.1145/3027063.3053216},
  year = {2017}
}

@inproceedings{merged695,
  abstract = {Our research group has studied how Kindergarteners through second graders can be introduced to the ideas of Computational Thinking (CT) through engineer design, unplugged, and programming activities. We often found it difficult to explain the boundaries and clear definitions for CT in research, to students and their teachers. Literature provides a variety of definitions from various perspectives, but these definitions often seem like capturing smoke. We see evidence CT, indicating fire, but how hot or lasting it burns cannot be measured by smoke alone. CT is typically defined by siloed concepts and skills. Some silos describe concrete ideas, which tend to be tied to programming principles. Many describe essential ideas, but over generalized becoming hard to teach and measure and distinguish from other types of problem solving. Is there a middle ground where we can clearly observe the presence and growing maturing of CT yet not limit the ways it can manifest, particularly without requiring coding? We hope this poster inspires conversation on 1.) the intersection of CT and programming skills, 2.) the priority and order for learning those skills, and 3.) how we can promote CT in disciplines who interact with and help define computational solutions yet are never expected to learn to program. We hope to share our perspective as well as garner feedback and possibly collaboration on better refining curriculum within Computer Science as well as promoting CT in other disciplines.},
  address = {New York, NY, USA},
  author = {Lowe, Tony and Brophy, Sean and Cardella, Monica},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293842},
  isbn = {9781450358903},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1277},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Exploring the Definition of Computational Thinking in Research and the Classroom},
  url = {https://doi.org/10.1145/3287324.3293842},
  year = {2019}
}

@inproceedings{merged696,
  abstract = {Using, processing and evaluating digitized information is relevant to every subject in primary and secondary school education. As this information is represented, modified and perceived through analog and digital media, competencies including critical reflection, knowledge, usage, and creation of information and media have been included in the German education system. Due to the highly inter- and transdisciplinary character of these skills, the development of a combined information and media literacy to teach the critical handling, reflection and design of information and (digital) media similar to a classical literacy concerning reading and writing skills. As this skill is fundamental for understanding the everyday digital environment, Computational Thinking poses a central idea of information and media literacy in order to understand how information of the real or fictional world are represented through digital media, how this digitized information is automaticly processed and displayed using media systems as well as how the resulting representations are interpreted. Information and media literacy adresses every subject and school type which is why it has to be integrated into future teacher education curricula. This paper shows the conception and implementation of an Information and Media Literacy certificate for student teachers with a focus on Computational Thinking. Based on recent studies, established curricula for Media Literacy, Computer Literacy and Digital Literacy as well as present Bavarian school curricula for Computer Science, we built the curriculum for the Computational Thinking part of the certificate upon fundamental ideas of Computer Science: Representation of Information, Software Engineering, Algorithms, Networks, Data Integrity and Data Security, Languages, and Physical Computing.},
  address = {New York, NY, USA},
  articleno = {20},
  author = {Dengel, Andreas and Heuer, Ute},
  booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3265757.3265777},
  isbn = {9781450365888},
  keywords = {computational thinking; information and media literacy; teacher education},
  location = {Potsdam, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '18},
  title = {A curriculum of computational thinking as a central idea of information &amp; media literacy},
  url = {https://doi.org/10.1145/3265757.3265777},
  year = {2018}
}

@inproceedings{merged697,
  abstract = {The recognition of middle grades as a critical juncture in CS education has led to the widespread development of CS curricula and integration efforts. The goal of many of these interventions is to develop a set of underlying abilities that has been termed computational thinking (CT). This goal presents a key challenge for assessing student learning: we must identify assessment items associated with an emergent understanding of key cognitive abilities underlying CT that avoid specialized knowledge of specific programming languages. In this work we explore the psychometric properties of assessment items appropriate for use with middle grades (US grades 6-8; ages 11-13) students. We also investigate whether these items measure a single ability dimension. Finally, we strive to recommend a "lean" set of items that can be completed in a single 50-minute class period and have high face validity. The paper makes the following contributions: 1) adds to the literature related to the emerging construct of CT, and its relationship to the existing CTt and Bebras instruments, and 2) offers a research-based CT assessment instrument for use by both researchers and educators in the field.},
  address = {New York, NY, USA},
  author = {Wiebe, Eric and London, Jennifer and Aksit, Osman and Mott, Bradford W. and Boyer, Kristy Elizabeth and Lester, James C.},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287390},
  isbn = {9781450358903},
  location = {Minneapolis, MN, USA},
  numpages = {6},
  pages = {456–461},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Development of a Lean Computational Thinking Abilities Assessment for Middle Grades Students},
  url = {https://doi.org/10.1145/3287324.3287390},
  year = {2019}
}

@article{merged698,
  abstract = {Computational Thinking (CT) has been recognized as one of the fundamental skills that all graduates should acquire. For this reason, motivational concerns need to be addressed at an early age of a child, and reaching students who do not consider themselves candidates for science, technology, engineering, and mathematics disciplines is important as well if the broadest audience possible is to be engaged. This article describes a framework for teaching and assessing CT in the context of K-12 education. The framework is based on Agile software engineering methods, which rely on a set of principles and practices that can be mapped to the activities of CT. The article presents as well the results of an experiment applying this framework in two sixth-grade classes, with 42 participants in total. The results show that Agile software engineering methods are effective at teaching CT in middle schools, after the addition of some tasks to allow students to explore, project, and experience the potential product before using the software tools at hand. Moreover, according to the teachers’ feedback, the students reached all the educational objectives of the topics involved in the multidisciplinary activities. This result can be taken as an indicator that it is possible to use computing as a medium for teaching other subjects, besides computer science.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Fronza, Ilenia and Ioini, Nabil El and Corral, Luis},
  doi = {10.1145/3055258},
  issue_date = {December 2017},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; K-12; agile methods; framework; software engineering},
  month = {August},
  number = {4},
  numpages = {28},
  publisher = {Association for Computing Machinery},
  title = {Teaching Computational Thinking Using Agile Software Engineering Methods: A Framework for Middle Schools},
  url = {https://doi.org/10.1145/3055258},
  volume = {17},
  year = {2017}
}

@inproceedings{merged699,
  abstract = {Work in culturally responsive pedagogy and culturally responsive computing (CRC)(Scott, et al., 2014) holds promise for how to include underrepresented students into making communities as they develop their computational thinking (CT) skills. Cultural responsiveness involves instructors using what they know about students' individual identities to develop learning opportunities; having high expectations; and understanding students' sociopolitical contexts (Ladson-Billings, 1995). By integrating these approaches, students encounter a makerspace without pre-determined cultural norms that encourages questioning assumptions that limit the development of inclusive technology. This poster explores preliminary results from a mixed methods multiple case study. Sixteen high school students participated in a two-week summer making program that focused on CT and physics skills. Students shared elements of their identities, brought in artifacts for "show and tell", collected data on how they spend their time, and categorized assets in their communities to then incorporate into their own projects. Researchers analyzed classroom observations, videos, interviews, and student notebooks, as well as students' pre-post tests and attitudinal surveys. Findings reflect the importance of valuing student identity, building community, and highlighting how CT and physics affect students' lives. More information: https://actmaproject.wordpress.com/ Keywords: computational thinking, cultural responsiveness, makerspaces. DOI: https://doi.org/10.1145/3159450.3162291},
  address = {New York, NY, USA},
  author = {Hadad, Roxana and Hausman Jacobson, C. Meghan and Thomas, Kate and Sol\'{o}rzano, Germania and Kachovska, Mila and Yin, Yue},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162291},
  isbn = {9781450351034},
  keywords = {computational thinking; cultural responsiveness; makerspaces},
  location = {Baltimore, Maryland, USA},
  numpages = {1},
  pages = {1097},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Using Cultural Responsiveness to Elicit Computational Thinking in Maker Environments: (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162291},
  year = {2018}
}

@inproceedings{merged700,
  abstract = {The paper describes the initial research on the integration of Computational Thinking, through the dissemination of skills and practice of exercises in a context of Gamification, within the framework of a pilot program called Apadrinamiento, aimed to students of high school who visit the facilities of the Universidad Tecnol\'{o}gica de Puebla, and that are considering studying in the Division of Information and Communication Technologies. The main objective is to increase the confidence of students in the solution of problems through the skills that exercise Computational Thinking. This report details the planning of the activities, the indicators to be measured and the scenarios where the interventions will be carried out that allow, in a second stage, the creation of strategies to avoid desertion. The main conclusion of the paper is to have created an academic strategy to benefit the understanding of pre-university students in the current computer world through the exercise of Computational Thinking.},
  address = {New York, NY, USA},
  author = {Rojas-L\'{o}pez, Arturo and Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e}},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3284179.3284187},
  isbn = {9781450365185},
  keywords = {Computational thinking; pre-university students; solution problems},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {31–35},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {Increase of confidence for the solution of problems in preuniversity students through Computational Thinking},
  url = {https://doi.org/10.1145/3284179.3284187},
  year = {2018}
}

@inproceedings{merged701,
  abstract = {Computational thinking (CT) is an essential skill for students in the 21st century, providing a set of problem-solving methods that involve formulating problems and solutions in a form that can be carried out by an information-processing agent across a variety of fields. In addition, research shows that the integration of CT in education has the potential to improve the problem-solving skills of K-12 students. This study aimed to investigate the effect of a CT experimental course on 94 primary school students' perceptions of their problem-solving skills as well as possible correlations between the variables concerning the students' perceptions. Participants worked in pairs in the context of Scratch, a block-based visual programming language, and the data were collected through the Problem-Solving Inventory for Children (PSIC). A one-group pretest-posttest was conducted and the results suggest that a CT course can improve participants' overall perceptions of their problem-solving skills. Finally, increases in the participants' levels of control over emotions and behavior when facing problems were correlated with increases in their will to face their problems rather than avoid them.},
  address = {New York, NY, USA},
  author = {Vourletsis, Ioannis and Politis, Panagiotis},
  booktitle = {Proceedings of the 2020 9th International Conference on Educational and Information Technology},
  doi = {10.1145/3383923.3383935},
  isbn = {9781450375085},
  keywords = {Computational Thinking (CT); block-based visual programming; problem-solving skills; students' perceptions},
  location = {Oxford, United Kingdom},
  numpages = {7},
  pages = {14–20},
  publisher = {Association for Computing Machinery},
  series = {ICEIT 2020},
  title = {Effects of a Computational Thinking Experimental Course on Students' Perceptions of Their Problem-Solving Skills},
  url = {https://doi.org/10.1145/3383923.3383935},
  year = {2020}
}

@inproceedings{merged702,
  abstract = {This study investigates primarily the use of Computational Thinking in teaching mathematical concepts of Perimeter and Area. For those 3rd and 4th Grade students with learning disabilities, specifically, the extent to which their construction and understanding of mathematical concepts and their development of computational thinking are explored. For these reasons, the experimental research method is the one-group pretest-posttest design that we adopted which was conducted with 26 students, identified as learning disabilities by the committee for Identification and Placement of Gifted and Disabled Student. Data collected are analyzed with the Paired Sample t-test to comparison of these students in their learning outcomes and difference in aspects of construction of mathematical concepts and development of computational thinking after teaching. We find this teaching method enhances the learning outcomes and performance in the Math unit of Perimeter and Area and the performance of the development of computational thinking of these students after the intervention (160 minutes).},
  address = {New York, NY, USA},
  author = {Liao, Chen-Huei and Hsu, Hui-Ju and Wu, Pei-Chen},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372588},
  isbn = {9781450367936},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1282},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Integrating Computational Thinking in math courses for 3rd and 4th Grade students with Learning disabilities via Scratch},
  url = {https://doi.org/10.1145/3328778.3372588},
  year = {2020}
}

@inproceedings{merged703,
  abstract = {The paper describes some selected approaches related to the support of teacher's work, which focuses on the development of computational thinking and the use of modern e-learning on-line resources. The article also deals with the design related to the research, which will be implemented in connection with these activities and will thus commit to the current professional discussion on the possibilities of development of computational thinking in connection with the Digital Education Strategy until 2020 and the upcoming reform of ICT curriculum in the Czech Republic. Web and mobile applications appear to be suitable e-learning resources for algorithm and programming studies that can contribute positively to the development of computational thinking. So far, however, no relevant research has described whether teachers or future teachers are familiar with these resources, whether they can use them, and whether they also meet their needs. We want to respond to all these facts in our research.},
  address = {New York, NY, USA},
  author = {Dragon, Tom\'{a}\v{s}},
  booktitle = {Proceedings of the 3rd International Conference on Education and Multimedia Technology},
  doi = {10.1145/3345120.3352738},
  isbn = {9781450372107},
  keywords = {E-learning; algorithmization; computational thinking; mobile applications; programming; research; web applications},
  location = {Nagoya, Japan},
  numpages = {5},
  pages = {131–135},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '19},
  title = {Support of Teacher's Work in the Field of Development of Computational Thinking Through E-Learning Resources},
  url = {https://doi.org/10.1145/3345120.3352738},
  year = {2019}
}

@inproceedings{merged704,
  abstract = {In this paper the first two years of activities of "Programma il Futuro" project are described. Its goal is to disseminate among teachers in Italian primary and secondary schools a better awareness of informatics as the scientific basis of digital technologies. The project has adapted Code.org learning material and has introduced it to Italian schools with the support of a dedicated web site. Response has been enthusiastic in terms of participation: in two years more than one million students have been engaged and have completed a total of 10 million hours of informatics in schools. Almost all students found the material useful and were interested, teachers have reported. They have also declared to have experienced high satisfaction and a low level of difficulty. A detailed analysis of quantitative and qualitative data about the project is presented and areas for improvement are identified. One of the most interesting observations appears to corroborate the hypothesis that an exposure to informatics since the early age is important to attract students independently from their gender.},
  address = {New York, NY, USA},
  author = {Corradini, Isabella and Lodi, Michael and Nardelli, Enrico},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3059009.3059040},
  isbn = {9781450347044},
  keywords = {computational thinking; experience report; informatics education},
  location = {Bologna, Italy},
  numpages = {6},
  pages = {224–229},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {Computational Thinking in Italian Schools: Quantitative Data and Teachers' Sentiment Analysis after Two Years of "Programma il Futuro"},
  url = {https://doi.org/10.1145/3059009.3059040},
  year = {2017}
}

@inproceedings{merged705,
  abstract = {Teaching and training for high-performance computing in our college could not catch up with HPC research level. Thus, it is imperative to promote teaching reform on parallel computing course in our college. Our first parallel programming course is mainly for the first-grade graduate students majoring in CS and related branches with no previous HPC training. The goal is to teach them basic parallel programming methods, parallel thinking and parallel problem solving methodology by coding on a real supercomputer; let the students learn some representative parallel application development issues and some big challenges in HPC by project practice. In this article, we will present our course design objective, principles, practical method and outcome. Particularly, programming practice methodology, project organization, incentive mechanism and assessment methods in project practice will be illustrated. Finally, we present some quantitative findings. According to the feedback, our first parallel programming course achieves the effectiveness on inspiring students' enthusiasm for programming and improving students' abilities for problem solving.},
  address = {New York, NY, USA},
  author = {Chen, Juan and Shen, Li and Yin, Jianping and Zhang, Chunyuan},
  booktitle = {Proceedings of ACM Turing Celebration Conference - China},
  doi = {10.1145/3210713.3210736},
  isbn = {9781450364157},
  keywords = {HPC and project practice; parallel programming},
  location = {Shanghai, China},
  numpages = {7},
  pages = {103–109},
  publisher = {Association for Computing Machinery},
  series = {ACM TURC '18},
  title = {Parallel programming course development based on parallel computational thinking},
  url = {https://doi.org/10.1145/3210713.3210736},
  year = {2018}
}

@inproceedings{merged706,
  abstract = {We report on the preliminary results of an ongoing study examining the teaching of new primary school topics based on Computational Thinking in New Zealand. We analyse detailed feedback from 13 teachers participating in the study, who had little or no previous experience teaching computer science and related topics. From this we extract key themes identified by the teachers that are likely to be encountered deploying a new curriculum, including unexpected opportunities for cross-curricula learning, development of social skills, and engaging a wide range of students.},
  address = {New York, NY, USA},
  author = {Bell, Tim and Duncan, Caitlin and Atlas, James},
  booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2978249.2978266},
  isbn = {9781450342230},
  keywords = {Computational thinking; teachers},
  location = {M\"{u}nster, Germany},
  numpages = {2},
  pages = {100–101},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '16},
  title = {Teacher Feedback on Delivering Computational Thinking in Primary School},
  url = {https://doi.org/10.1145/2978249.2978266},
  year = {2016}
}

@inproceedings{merged707,
  abstract = {We are developing ways to teach computational thinking through interaction with tangible digital tools for synthetic biology. Inspired in part by Jeannette Wing's (Wing 2008) notion of the essence and pervasiveness of computational thinking, a growing community within SIGCSE is exploring tools that encourage computational thinking that don't use traditional computer science terminology or computer programming (Basawapna 2013, Daily 2014, Freeman 2014, Miller 2014, Wolz 2011). However, that community has not yet explored how to teach computational thinking through bio-design. Synthetic biology is a relatively new research field where scientists engineer living organisms to exhibit new behaviors. Biologists arrange and combine BioBricks, sequences of DNA that exhibit a behavior, sense an environmental factor, or indicate the beginning or end of a larger sequence. Bio-design not only incorporates traditional principles of computational thinking (abstraction, modularity, design/build/test), but also introduces new challenges that force the user to apply these principles in new ways. Interacting with biology can thus 1) help deepen understanding for people who are proficient in computational thinking, 2) provide a platform for introduction to computational thinking for the first time. Because most bio-design is performed in a wetlab by experienced biologists, we focus now on designing and developing low-barrier digital tools for interacting with biology. We present SynFlo (Okerlund 2016), a tangible interactive system for bio-design that mimics a real-life biological wetlab protocol and we discuss the properties of SynFlo and bio-design in general that encourage computational thinking.},
  address = {New York, NY, USA},
  author = {Okerlund, Johanna and Shaer, Orit and Latulipe, Celine},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2850569},
  isbn = {9781450336857},
  keywords = {biology; computational thinking; tangible interaction},
  location = {Memphis, Tennessee, USA},
  numpages = {1},
  pages = {698},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {Teaching Computational Thinking Through Bio-Design (Abstract Only)},
  url = {https://doi.org/10.1145/2839509.2850569},
  year = {2016}
}

@inproceedings{merged708,
  abstract = {Theorists and advocates of “remixing” have suggested that appropriation can act as a pathway for learning. We test this theory quantitatively using data from more than 2.4 million multimedia programming projects shared by more than 1 million users in the Scratch online community. First, we show that users who remix more often have larger repertoires of programming commands even after controlling for the numbers of projects and amount of code shared. Second, we show that exposure to computational thinking concepts through remixing is associated with increased likelihood of using those concepts. Our results support theories that young people learn through remixing, and have important implications for designers of social computing systems.},
  address = {New York, NY, USA},
  author = {Dasgupta, Sayamindu and Hale, William and Monroy-Hern\'{a}ndez, Andr\'{e}s and Hill, Benjamin Mako},
  booktitle = {Proceedings of the 19th ACM Conference on Computer-Supported Cooperative Work &amp; Social Computing},
  doi = {10.1145/2818048.2819984},
  isbn = {9781450335928},
  keywords = {computer mediated communication; computers and children; creativity support tools; learning; online communities; peer production; remixing; social computing and social navigation},
  location = {San Francisco, California, USA},
  numpages = {12},
  pages = {1438–1449},
  publisher = {Association for Computing Machinery},
  series = {CSCW '16},
  title = {Remixing as a Pathway to Computational Thinking},
  url = {https://doi.org/10.1145/2818048.2819984},
  year = {2016}
}

@inproceedings{merged709,
  abstract = {Computational thinking is nowadays being widely adopted and investigated. Educators and researchers are using two main approaches to teach these skills in schools: with computer programming exercises, and with unplugged activities that do not require the use of digital devices or any kind of specific hardware. While the former is the mainstream approach, the latter is especially important for schools that do not have proper technology resources, Internet connections or even electrical power. However, there is a lack of investigations that prove the effectiveness of the unplugged activities in the development of computational thinking skills, particularly for primary schools. This paper, which summarizes a quasi-experiment carried out in two primary schools in Spain, tries to shed some light on this regard. The results show that students in the experimental groups, who took part in the unplugged activities, enhanced their computational thinking skills significantly more than their peers in the control groups who did not participate during the classes, proving that the unplugged approach may be effective for the development of this ability.},
  address = {New York, NY, USA},
  author = {Brackmann, Christian P. and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio and Moreno-Le\'{o}n, Jes\'{u}s and Casali, Ana and Barone, Dante},
  booktitle = {Proceedings of the 12th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3137065.3137069},
  isbn = {9781450354288},
  keywords = {Assessment; Computational Thinking Test; Computational Thinking Unplugged; Computers in Education; Elementary Education; Evaluation; Primary School},
  location = {Nijmegen, Netherlands},
  numpages = {8},
  pages = {65–72},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '17},
  title = {Development of Computational Thinking Skills through Unplugged Activities in Primary School},
  url = {https://doi.org/10.1145/3137065.3137069},
  year = {2017}
}

@inproceedings{merged710,
  abstract = {Digital games represent a ludic, attractive and pedagogically interesting possibility for teaching-learning processes. The appearance of several children's games based on creation of algorithmic sequences for controlling characters shows the growing importance given to the development of computational thinking at elementary level. However, the adoption of this kind of game in educational contexts is hindered by the lack of trustworthy design and evaluation methods to access the quality of the games and guide developers and educators. This paper reports the evaluation of a children's digital game for teaching computational thinking, and presents results that contribute to the generation of guidelines related to interface elements, interaction issues and key design choices for performing functions that are common to games of the kind.},
  address = {New York, NY, USA},
  articleno = {29},
  author = {Falc\~{a}o, Taciana Pontual and Gomes, Tancicleide C. Sim\~{o}es and Albuquerque, Isabella Rocha},
  booktitle = {Proceedings of the 14th Brazilian Symposium on Human Factors in Computing Systems},
  doi = {10.1145/3148456.3148485},
  isbn = {9781450353625},
  keywords = {computational thinking at elementary level; development of games about computational thinking; evaluation of digital games},
  location = {Salvador, Brazil},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {IHC '15},
  title = {Computational thinking through children's games: an analysis of interaction elements},
  url = {https://doi.org/10.1145/3148456.3148485},
  year = {2015}
}

@inproceedings{merged711,
  abstract = {Computational thinking (CT) ability has been described as a new training objective of basic computer courses in Chinese university. Currently, contents and methods of basic computer course teaching in college have been unable to meet the actual needs to develop CT ability. This paper firstly makes an analysis of possible reasons for the above challenge and then aimed to how to teach and what to teach in a practical way. Our research discussed the basic concept and research status of "computing culture" discussed and extracted above 60 typical cases based "computing culture". These cases focused on discovery joinery of prophetic computer scientists etc. As the main line of teaching, these cases run through in-class teaching and organize every teaching step, such as leading-in, explanation, discussion, dialogue, and conclusion and so on. The several years teaching practice prove the strategies for teaching design put forward in this study is effective to foster a student's sense of "computing" and to arouse the students' interest. The finding concludes that developing the broader value of computing-culture and continued investing in the refine of computing-culture based cases are valuable.},
  address = {New York, NY, USA},
  author = {Xu, Yiyi and Liu, Pengfei and Zhao, Jun},
  booktitle = {Proceedings of the 10th International Conference on Education Technology and Computers},
  doi = {10.1145/3290511.3290542},
  isbn = {9781450365178},
  keywords = {case developing; computational thinking; computing culture; teaching scheme},
  location = {Tokyo, Japan},
  numpages = {4},
  pages = {57–60},
  publisher = {Association for Computing Machinery},
  series = {ICETC '18},
  title = {A teaching scheme using forerun computing-culture cases for computational-thinking oriented course},
  url = {https://doi.org/10.1145/3290511.3290542},
  year = {2018}
}

@inproceedings{merged712,
  abstract = {Computational thinking (CT) tools express their designers' perspective on how a selected set of Computer Science concepts should be introduced, typically hiding details to avoid unnecessary complexity. This paper focuses on how concurrency is dealt with by five well-known tools in this domain: Scratch, Alice, AgentSheets, NetLogo and Greenfoot. We present the results of a systematic analysis contrasting their model of concurrent behavior with the corresponding programming interface messages that trigger their users' interpretation and learning of concurrency-related concepts. We present and discuss the conceptualizations that potentially emerge from using these five tools and compare them with established concurrency concepts. Our findings indicate opportunities for an explicit exploration of how some concurrency aspects are implemented in games and simulations built with CT tools. We believe that this might facilitate future learning and comprehension of complex concurrency concepts, considering that the knowledge embedded in these tools can also influence students' understanding of concurrency.},
  address = {New York, NY, USA},
  articleno = {28},
  author = {Slaviero, Cleyton and Haeusler, Edward Hermann},
  booktitle = {Proceedings of the 14th Brazilian Symposium on Human Factors in Computing Systems},
  doi = {10.1145/3148456.3148484},
  isbn = {9781450353625},
  keywords = {computer science education; concurrent programming; programming},
  location = {Salvador, Brazil},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {IHC '15},
  title = {Exploring concurrency on computational thinking tools},
  url = {https://doi.org/10.1145/3148456.3148484},
  year = {2015}
}

@inproceedings{merged713,
  abstract = {The ability to select or customize characters in educational applications and games has been shown to influence factors related to learning effects such as transfer, self-efficacy, and motivation. Most previous conclusions on the perception of virtual characters and the effect of character assignment in interactive applications have been reached through short, one-task experiments. To investigate more long-term effects of assigning versus customizing characters as well as explore perceptions of personal character appearance, we conduct a study in which sixth and seventh grade students are introduced to programming concepts with the software VEnvI (Virtual Environment Interactions) in seven one-hour sessions over two weeks. In VEnvI, students create performances for virtual characters by assembling blocks. With a between-subjects design, in which some of the students can alter their character and others are not given that possibility, we examine the influence of the presence or absence of character choice options on learning.We hypothesize that students have higher learning outcomes when they can choose and customize how their character looks compared to when they are assigned a character. We confirm this hypothesis for a category of learning (Remember and Understand) and give insights on students' relationships with their character.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Lin, Lorraine and Parmar, Dhaval and Babu, Sabarish V. and Leonard, Alison E. and Daily, Shaundra B. and J\"{o}rg, Sophie},
  booktitle = {Proceedings of the ACM Symposium on Applied Perception},
  doi = {10.1145/3119881.3119884},
  isbn = {9781450351485},
  keywords = {character appearance; character customization; pedagogical agent; virtual character},
  location = {Cottbus, Germany},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {SAP '17},
  title = {How character customization affects learning in computational thinking},
  url = {https://doi.org/10.1145/3119881.3119884},
  year = {2017}
}

@inproceedings{merged714,
  abstract = {Many advanced countries are recognizing more and more the importance of teaching computing, in some cases even as early as in primary school. "Computational thinking" is the term often used to denote the conceptual core of computer science or "the way a computer scientist thinks", as Wing put it. Such term - given also the lack of a widely accepted definition - has become a "buzzword" meaning different things to different people. We investigated the Italian primary school teachers' conceptions about computational thinking by analyzing the results of a survey (N=972) conducted in the context of "Programma il Futuro" project. Teachers have been asked to provide a definition of computational thinking and to answer three additional related closed-ended questions. The analysis shows that, while almost half of teachers (43.4%) have included in their definitions some fundamental elements of computational thinking, very few (10.8%) have been able to provide an acceptably complete definition. On a more positive note, the majority is aware that computational thinking is not characterized by coding or by the use of information technology.},
  address = {New York, NY, USA},
  author = {Corradini, Isabella and Lodi, Michael and Nardelli, Enrico},
  booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
  doi = {10.1145/3105726.3106194},
  isbn = {9781450349680},
  keywords = {computational thinking definition; conceptions and misconceptions; informatics education; primary school teachers},
  location = {Tacoma, Washington, USA},
  numpages = {9},
  pages = {136–144},
  publisher = {Association for Computing Machinery},
  series = {ICER '17},
  title = {Conceptions and Misconceptions about Computational Thinking among Italian Primary School Teachers},
  url = {https://doi.org/10.1145/3105726.3106194},
  year = {2017}
}

@inproceedings{merged715,
  abstract = {Drawing on the long debate about whether computer science (CS) and computational thinking skills are innate or learnable, this working group is based on the following hypothesis: The apparent innate ability of some CS learners who succeed in CS courses despite no prior exposure to computing is a manifestation of early childhood experiences and learning outside formal education.},
  address = {New York, NY, USA},
  author = {Cutts, Quintin and Donaldson, Peter and Cole, Elizabeth and Alshaigy, Bedour and Gutica, Mirela and Hellas, Arto and Larraza-Mendiluze, Edurne and McCartney, Robert and Patitsas, Elizabeth and Riedesel, Charles},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3059009.3081332},
  isbn = {9781450347044},
  keywords = {early-years; pre-computational; pre-requisite; primary; thinking},
  location = {Bologna, Italy},
  numpages = {1},
  pages = {393},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {Searching for Early Developmental Activities Leading to Computational Thinking Skills},
  url = {https://doi.org/10.1145/3059009.3081332},
  year = {2017}
}

@inproceedings{merged716,
  abstract = {The way in which the student processes the information, codifies it and recovers it, constitutes its learning approach. The learning process differentiates two qualitative ways of dealing with this process: the deep approach and the superficial approach. The use of each approach depends on the context. However, the adoption of a deep learning approach is positively related to the academic performance. Computational Thinking is defined as a competence of the XXI century, which allows solving problems from a computational point of view, and there is a variety of instruments that allow to measure it, and to know the state in which the evaluated student is. In this paper, we verified the existence of the positive significant relationship between the learning approach and computational thinking in students entering the career of Computer Sciences. By applying Pearson correlation test to verify the relationship between Learning Approaches and Computational Thinking, we found that both variables have homogeneous behaviors and that students show similar conditions. Men are in better conditions than women on the evaluated aspects of the Computational Thinking, Also, we found a significantly positive relationship between Computational Thinking and the Learning Approach (r = 0,882). This result shows that the learning approaches that students' practice are linked to the computational thinking they demonstrate. According to the results, the teachers of this career must develop active and deep methodological strategies due to the predisposition in these students.},
  address = {New York, NY, USA},
  author = {Villalba-Condori, Klinge Orlando and Cuba-Sayco, Sonia Esther Castro and Ch\'{a}vez, Evelyn Paola Guillen and Deco, Claudia and Bender, Cristina},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3284179.3284185},
  isbn = {9781450365185},
  keywords = {Career of Computer Sciences; Computational Thinking; Learning Approach},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {36–40},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {Approaches of Learning and Computational Thinking in Students that get into the Computer Sciences Career},
  url = {https://doi.org/10.1145/3284179.3284185},
  year = {2018}
}

@inproceedings{merged717,
  abstract = {1There are increasing calls to introduce computational thinking (CT) practices at the K-12 level. These calls are motivated by a consensus that CT practices can be valuable for everyone. This work is based on the assertion that making, or the personal construction of objects employing digital and/or analog technologies, can provide a rich context for enacting CT practices. This paper investigates the activities of a group of beginning youth makers creating an interactive digital/ physical water piano to ask: What forms of CT practices do they enact, and in what ways are these practices further developed in their work? Data includes qualitative ethnographic data including observations, recordings and interviews. We explore the ways youth encounter new, yet relatable and intriguing practices---like debugging to isolate an issue---and appropriate them within particular contexts and for particular goals, often to deal with the immediate challenges they are facing. We end by offering conjectures for ways to support beginning youth makers in appropriating CT practices.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Wagh, Aditi and Gravel, Brian and Tucker-Raymond, Eli},
  booktitle = {Proceedings of the 7th Annual Conference on Creativity and Fabrication in Education},
  doi = {10.1145/3141798.3141808},
  isbn = {9781450363495},
  keywords = {Computational thinking; digital fabrication; learning; making},
  location = {Stanford, CA, USA},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {FabLearn '17},
  title = {The Role of Computational Thinking Practices in Making: How Beginning Youth Makers Encounter &amp; Appropriate CT Practices in Making},
  url = {https://doi.org/10.1145/3141798.3141808},
  year = {2017}
}

@inproceedings{merged718,
  abstract = {The paper's objective is present the design and the planning of initial learning scenarios for the course Programming Fundamentals, from the evaluation of computational thinking to new students of the careers Computer engineering and Programmer analyst of the Technological University of Chile and Training Center Technical respectively at INACAP, to favor the motivation and autonomy of study through the recognition of skills and the use of the instructional design of the face-to-face course. The proposal is based on correspondence with three of five change trends that integrated the educational model. Regarding the Knowledge society, promote recognition of the individuality of the student as a person who will do university studies, that is, the scenarios respond to the fact that each person learns differently. In the Training of competences, contribute with preventive actions that the teacher communicates when there is a lack of specific skills. Finally, in the Flexibility and articulation, provide a diagnostic tool that favors the recognition of previous competences to have an articulated beginning of studies based on the needs of the student. Consequently, contribute to the INACAP's educational model.},
  address = {New York, NY, USA},
  author = {Rojas-L\'{o}pez, Arturo and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362802},
  isbn = {9781450371919},
  keywords = {Computational thinking; Higher education; Problem solving; Programming Learning; Programming teaching},
  location = {Le\'{o}n, Spain},
  numpages = {7},
  pages = {6–12},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Initial learning scenarios based on the computational thinking evaluation for the course Programming fundamentals at INACAP},
  url = {https://doi.org/10.1145/3362789.3362802},
  year = {2019}
}

@inproceedings{merged719,
  abstract = {Computational thinking, as coined by Jeannette Wing, is a fundamental skill for all to be able to live in today's world, a mode of thought that goes well beyond computing and provides a framework for reasoning about problems and methods of their solution. It has a long tradition as algorithmic thinking which within computer science is a competence to formulate a solution of a problem in the form of an algorithm and then to implement the algorithm as a computer program. Computational thinking is not an adequate characterization of computer science as claimed by Peter Denning and he is right -- it is a collection of key mental tools and practices originated in computing but addressed to all areas far beyond computer science. As an extension of algorithmic thinking, it includes thinking with many levels of abstraction as a problem solving approach inherently connected to computer science and addressed to all students to use computers and computing skills in solving problems in various school subjects coming from various scientific and applied areas. Computational thinking involves concepts, skills and competences that lie at the heart of computing, such as abstraction, decomposition, generalization, approximation, heuristics, algorithm design, efficiency and complexity issues and therefore it is clear that basic computer science knowledge helps to systematically, correctly, and efficiently process information, perform tasks, and solve problems. Although coming from computer science, computational thinking is not only the study of computer science, though computers play an essential role in the design of problems' solutions. It is a very important and useful mode of thinking in almost all disciplines and school subjects as an insight into what can and cannot be computed.In this talk we shall discuss a new computing curriculum addressed to ALL students in K-12 in Poland which motivates them to use computational thinking in solving problems in various school subjects. Moreover its goal is to encourage and prepare students from early school years to consider computing and related fields as disciplines of their future study and professional career. To this end, the curriculum allows teachers and schools to personalize learning and teaching according to students' interests, abilities, and needs.The new computing curriculum benefits a lot from our experience in teaching informatics in our schools for almost 30 years -- the first curriculum was approved by the ministry of education in 1985, 20 years after the first regular classes on informatics were held in two high schools in Wroc\l{}aw and in Warsaw. Today, informatics is an obligatory subject in middle school (grades 7-9) and high school (grades 10-12) and it will replace computer lessons (mainly on ICT) in elementary schools (grades 1-6). The new curriculum is also addressed to vocational education.},
  address = {New York, NY, USA},
  author = {Sys\l{}o, Maciej M.},
  booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2729094.2742582},
  isbn = {9781450334402},
  keywords = {algorithmic thinking; computational thinking; k-12 computing curriculum},
  location = {Vilnius, Lithuania},
  numpages = {1},
  pages = {1},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '15},
  title = {From Algorithmic to Computational Thinking: On the Way for Computing for all Students},
  url = {https://doi.org/10.1145/2729094.2742582},
  year = {2015}
}

@inproceedings{merged720,
  abstract = {To promote computational thinking (CT) education in primary schools, in-service teachers need to attend CT teacher development programmes. One of the intended learning outcomes of the programme is to improve CT practices of teachers, which is one of the three key elements in the CT framework proposed by Brennan and Resnick. Assessing one's CT practices is challenging because there is no universally agreed-upon assessment method on CT practices in the existing literature. This study adopted the Evidence-centered Assessment Design (ECD) method to design test questions to evaluate teachers' development of CT practices. This study provided two Teacher Development Courses (TDCs) to enable teachers to teach CT through programming. TDC 1 focused on developing CT concepts, practices and perspectives of teachers, while TDC 2 put emphasis on pedagogies of teaching CT. 80 teachers participated in the two courses. The CT practices tests were administered before the courses, between the two courses and after the courses respectively. Results indicated that CT practices were improved progressively when the in-service teachers attended the two courses. It indicated that it is useful for teachers to experience programming practices in their initial learning as well as during their pedagogical development.},
  address = {New York, NY, USA},
  author = {Kong, Siu-Cheung and Lao, Andrew Chan-Chio},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287470},
  isbn = {9781450358903},
  keywords = {assessment; computational thinking (ct); computational thinking practices (ct practices); in-service teacher; teacher development},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {976–982},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Assessing In-service Teachers' Development of Computational Thinking Practices in Teacher Development Courses},
  url = {https://doi.org/10.1145/3287324.3287470},
  year = {2019}
}

@inproceedings{merged721,
  abstract = {This paper describes our experiences developing and teaching two different interventions focused on computational thinking and computer science at a yearly STEM outreach program hosted by a local school district. We describe the creation of our lesson plans, how we worked with experienced and pre-service teachers alike to deliver the lessons, and how we assessed the effectiveness of each intervention. We will discuss our successes and failures, and provide information on our future plans to incorporate more formalized education theory, pedagogy, and research methodology in future years to further this project. Based on our assessment results, we observed statistically significant gains in student self-efficacy with creating computer programs that perform a variety of operations. In addition, students reported a significantly higher understanding of how computer programming can be used in daily life. Our survey also highlighted differences in student self-efficacy between the two interventions, and we discuss possible sources for that result. We discuss observed results based on student groups with various backgrounds, previous STEM experiences, and socioeconomic status.},
  address = {New York, NY, USA},
  author = {Feldhausen, Russell and Weese, Joshua Levi and Bean, Nathan H.},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159593},
  isbn = {9781450351034},
  keywords = {K-12; STEM; middle school; outreach; pedagogy; self-efficacy},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {302–307},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Increasing Student Self-Efficacy in Computational Thinking via STEM Outreach Programs},
  url = {https://doi.org/10.1145/3159450.3159593},
  year = {2018}
}

@inproceedings{merged722,
  abstract = {There is a growing need to use computers to formulate problems and their solutions across domains. It has thus become imperative that students across the globe be able to work with computing to express themselves. However, teaching computer science in a traditional way may not be possible in all settings. We studied a method to integrate computational thinking, the ability to express problems and their solutions to a computing device, into an existing science classroom with the goal of deepening learning in both science and computational thinking in a low-resource setting in Nepal. In this note, we present findings from the study. The proposed curricular method acknowledges local differences and presents a way to adapt to those differences through adaptable multiple layers of activities and representational variability. We hope that interested educators and development practitioners would try our method in classrooms.},
  address = {New York, NY, USA},
  articleno = {36},
  author = {Gautam, Aakash and Bortz, Whitney Elaine Wall and Tatar, Deborah},
  booktitle = {Proceedings of the Ninth International Conference on Information and Communication Technologies and Development},
  doi = {10.1145/3136560.3136601},
  isbn = {9781450352772},
  keywords = {CT; ICT4D; ICTD; NetLogo; agent-based simulation; computational thinking; educational technology},
  location = {Lahore, Pakistan},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {ICTD '17},
  title = {Case for Integrating Computational Thinking and Science in a Low-Resource Setting},
  url = {https://doi.org/10.1145/3136560.3136601},
  year = {2017}
}

@inproceedings{merged723,
  abstract = {The phenomenon of "Big Data" is creating a need for research perspectives that blend computational thinking (with its focus on, e.g., abstractions, algorithms and scalability) with inferential thinking (with its focus on, e.g., underlying populations, sampling patterns, error bars and predictions). Database researchers and statistical machine learning researchers are centrally involved in the creation of this blend, and research that incorporates perspectives from both databases and machine learning will be of particular value in the bigger picture. This is true both for methodology and for theory. I present highlights of several research initiatives that draw jointly on database and statistical foundations, including work on concurrency control and distributed inference, subsampling, time/data tradeoffs and inference/privacy tradeoffs.},
  address = {New York, NY, USA},
  author = {Jordan, Michael I.},
  booktitle = {Proceedings of the 34th ACM SIGMOD-SIGACT-SIGAI  Symposium on Principles of Database Systems},
  doi = {10.1145/2745754.2745782},
  isbn = {9781450327572},
  keywords = {big data; computational thinking; inferential thinking; statistical machine learning},
  location = {Melbourne, Victoria, Australia},
  numpages = {1},
  pages = {1},
  publisher = {Association for Computing Machinery},
  series = {PODS '15},
  title = {Computational Thinking, Inferential Thinking and "Big Data"},
  url = {https://doi.org/10.1145/2745754.2745782},
  year = {2015}
}

@inproceedings{merged724,
  abstract = {This document has the purpose to present some results obtained in the pilot experience, play and program with Bee-Bot. The activities were developed in the framework of the doctoral research project whose purpose is the design and integration of learning activities with robotics to foster programming skills and computational thinking in the classroom of early childhood. Teachers and students of the second cycle of early childhood education of a concerted school participated in the experience during 2016-2017 academic period. School is in Salamanca, Spain. The activity allowed students to solve programming challenges using the Bee-Bot floor robot. Instruments were used to collect data, such as: questionnaires, interviews, rubrics and field diary. In general terms, the results obtained were positive. The technical, pedagogical and social aspects proposed in this research have received the favorable acceptance of teachers and students. Therefore, the information generated allowed to strengthen the design, structure and evaluation of the robotics program would be used in later stages of the investigation.},
  address = {New York, NY, USA},
  author = {Gonz\'{a}lez, Yen Air Caballero and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3284179.3284188},
  isbn = {9781450365185},
  keywords = {Computational thinking; early childhood education; programming skills; robotics},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {41–45},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {A robotics-based approach to foster programming skills and computational thinking: Pilot experience in the classroom of early childhood education},
  url = {https://doi.org/10.1145/3284179.3284188},
  year = {2018}
}

@inproceedings{merged725,
  abstract = {We present an education scenario for the simulation of the "pixel" of a computer screen. The teaching and learning process is implemented as a game problem based scenario related to the "rescue" of an object by the students. We used the Arduino controller and the Ejs and S4A software in order to motivate students to be involved in the computational experiment methodology and the dimensions of the computational thinking (CT). Research is in process for the effectiveness of this scenario to 5th and 6th grade students using a CT questionnaire.},
  address = {New York, NY, USA},
  author = {Psycharis, Sarantos and Kotzampasaki, Evangelia},
  booktitle = {Proceedings of the 2017 International Conference on Education and E-Learning},
  doi = {10.1145/3160908.3160918},
  isbn = {9781450353779},
  keywords = {Arduino; Computational Experiment; Computational Thinking; Ejs; STEM},
  location = {Bangkok, Thailand},
  numpages = {4},
  pages = {26–29},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '17},
  title = {A Didactic Scenario for Implementation of Computational Thinking using Inquiry Game Learning},
  url = {https://doi.org/10.1145/3160908.3160918},
  year = {2017}
}

@inproceedings{merged726,
  abstract = {Nowadays students live in the digital age and they do not only should learn to speak, write or develop specific skills. Students needs to be successful in their context and a possible way to achieve this is by developing the computational thinking. In the last few years there are several initiatives to promote computational thinking and to define approaches and methods to support it. One of this is the unplugged methods, in which students develop computational thinking skills without using the technology. This paper presents an experiment to promote computational thinking by using unplugged methods and employing robots as teachers as an engagement factor for the students. During the experiment, they have been distributed in two groups. One has carried out unplugged activities to develop computational thinking while the other did not. From the experiment, it is possible to see that results are better for those students that have completed unplugged activities and there are differences depending on age.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Conde, Miguel \'{A}. and Fern\'{a}ndez-Llamas, Camino and Rodr\'{\i}guez-Sedano, Francisco J. and Guerrero-Higueras, \'{A}ngel M. and Matell\'{a}n-Olivera, Vicente and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145355},
  isbn = {9781450353861},
  keywords = {Child education; Computational Thinking; Educational Robotics; Unplugged Science},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Promoting Computational Thinking in K-12 students by applying unplugged methods and robotics},
  url = {https://doi.org/10.1145/3144826.3145355},
  year = {2017}
}

@inproceedings{merged727,
  abstract = {Pedagogic Conversational Agents are interactive systems that teach by talking to the students. They have been used in several domains to develop competences such as storytelling or negotiation from University to Pre-Primary Education. However, in the literature, no cases of using agents for teaching programming to develop computational thinking in children have been found. In the last decades, there is a growing interest in developing computational thinking in children. According to some authors, if children develop computational thinking, they will be able to solve not only computer problems but their daily life problems in a better way. It is under research which educational technologies and methodologies can be more adequate depending on the context to achieve this goal. In this paper, it is proposed, for the first time, the use of Pedagogic Conversational Agents to develop computational thinking in children. Given the complexity of designing this new type of agent, and as it has been done in previous occasions when trying to design a new agent, the MEDIE methodology will be followed to eventually integrate the agent into the classrooms.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Urrutia, Elizabeth K. Morales and Oca\~{n}a, Jos\'{e} Miguel and P\'{e}rez-Mar\'{\i}n, Diana and Tamayo, Silvia},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145350},
  isbn = {9781450353861},
  keywords = {Computational Thinking; Pedagogic Conversational Agents; Pre-Primary Education; Primary Education},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {A first proposal of Pedagogic Conversational Agents to develop Computational Thinking in children},
  url = {https://doi.org/10.1145/3144826.3145350},
  year = {2017}
}

@inproceedings{merged728,
  abstract = {Students and faculty alike at all education levels are clearly spending much more of their time interacting with computing and communication tools than with each other. Is this good? Are all uses of computational technology in education helpful, and if not, how does one separate the benefits from the burdens? We will explore how computing enables multiple representations in the sciences, arts, and humanities, giving us the opportunity to be more fully human as we seek new knowledge in service to society. Moving "beyond PowerPointless-ness," we have the opportunity to demonstrate that computing really matters in teaching and learning. Computing "matters" because quantitative reasoning, computational thinking, and multi-scale modeling are the intellectual "heart and soul" of 21st Century science and therefore are the essential skills of the 21st Century workforce. Computing "matters" because we can apply the power of dynamic, visual, and interactive computing to reach a deeper understanding of models across math and science while exploring their role in understanding our world.},
  address = {New York, NY, USA},
  author = {Panoff, Robert Michael},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2554795},
  isbn = {9781450326056},
  keywords = {computational science; computational thinking; modeling; simulation; visualization},
  location = {Atlanta, Georgia, USA},
  numpages = {2},
  pages = {1–2},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Computational thinking for all: the power and the peril},
  url = {https://doi.org/10.1145/2538862.2554795},
  year = {2014}
}

@inproceedings{merged729,
  abstract = {The outcome of a multidisciplinary and iterative process, CyberPLAYce is a tangible, interactive, cyber-physical learning tool for children supporting computational thinking and, particularly, playful storytelling. CyberPLAYce finds inspiration in the concept of child-computer interaction, where meaning is constructed through spatially reconfiguring the physical environment. The novel aspect of CyberPLAYce is its extension of cyber-learning to the dimension of space where children construct meaning at a larger physical scale. This paper outlines the motivations for CyberPLAYce, focuses on the full arc of design and evaluation activities concerning computational thinking (CT) practices that engaged 8-12-year-old storytellers, and concludes with a consideration of future work focusing on spatial thinking with CyberPLAYce. Results from our empirical study suggest that cyber-physical play afforded by CyberPLAYce scaffolds computational thinking, creating, and sharing in children. Particularly for IDC researchers in the educational domain, CyberPLAYce represents a Research-through-design exemplar supporting children's enjoyment of learning and meaning-construction.},
  address = {New York, NY, USA},
  author = {Soleimani, Arash and Green, Keith Evan and Herro, Danielle and Walker, Ian D.},
  booktitle = {Proceedings of the The 15th International Conference on Interaction Design and Children},
  doi = {10.1145/2930674.2930703},
  isbn = {9781450343138},
  keywords = {Architecture; Childhood Education; Computer Support Tools; Interactive Environments; Play; Prototyping; Storytelling; Tangible Computing; User-Centered Design},
  location = {Manchester, United Kingdom},
  numpages = {10},
  pages = {157–166},
  publisher = {Association for Computing Machinery},
  series = {IDC '16},
  title = {A Tangible, Story-Construction Process Employing Spatial, Computational-Thinking},
  url = {https://doi.org/10.1145/2930674.2930703},
  year = {2016}
}

@inproceedings{merged730,
  abstract = {Trastea.club (http://www.trastea.club/) is an initiative of the University of Deusto (Spain) aimed to develop STEM-related skills among young students (STEM stands for Science, Technology, Engineering, and Science). We chose the name "trastea" because it means to tinker in Spanish, a verb that fits with the hands-on approach of this initiative. Since January 2014, we have organized more than 180 workshops attended by more than 3.200 students from 35 different schools. With the aim of supporting the methodological and technical changes needed to integrate these new skills in the classroom, 216 teachers also benefited from our training courses, consultancy and support to adapt Trastea.club's activities to their curricula. Initiatives such as Trastea.club aim to support the constant adaptation process faced by schools and teachers due to the rapidly changing technologies and the evolution of students' profiles. The main goal of this initiative is to help schools in their constant adaptation processes towards the new digital literacy1.},
  address = {New York, NY, USA},
  articleno = {10},
  author = {Guenaga, Mariluz and Menchaca, Iratxe and Garaizar, Pablo and Egu\'{\i}luz, Andoni},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145358},
  isbn = {9781450353861},
  keywords = {Computational thinking; STEM; children and K-12 education; technology},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Trastea.club, an initiative to develop computational thinking among young students},
  url = {https://doi.org/10.1145/3144826.3145358},
  year = {2017}
}

@inproceedings{merged731,
  abstract = {This paper intends to share both the experience of teachers and document the research of the design, implementation, and evaluation of a massive open online course (MOOC). The primary purpose of the MOOC was to do outreach and build community to interest teachers from any discipline in Puerto Rico to incorporate Computational Thinking (CT) into their curriculum and peak their interest in Computer Science Education (CSE). Additional objectives were to use CT as a way to build self-efficacy in high school teachers as integrators of this newly gained knowledge while investigators learned the state of CSE and technology integration in schools of Puerto Rico. The MOOC titled Integrating Computational Thinking into the Curriculum was the first free online Professional Development offered to educators in Puerto Rico and has served as the launching board for the Computer Science Teachers' Association (CSTA) in Puerto Rico. This paper will describe the course's development, content and pertinent activities as they relate to the established goals of the project. Finally, it will share some vignettes of the educators' experiences as well as the results of a survey that was administered to 164 participants of the MOOC in its second rendition and had a 32% response rate.},
  address = {New York, NY, USA},
  author = {Ord\'{o}\~{n}ez Franco, Patricia and Carroll-Miranda, Joseph and L\'{o}pez Delgado, Mar\'{\i}a and Gerena L\'{o}pez, Eliud and Rodr\'{\i}guez G\'{o}mez, Grace},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159544},
  isbn = {9781450351034},
  keywords = {K-12 professional development; MOOC; computational thinking; cultural relevance},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {296–301},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Incorporating Computational Thinking in the Classrooms of Puerto Rico: How a MOOC Served as an Outreach and Recruitment Tool for Computer Science Education},
  url = {https://doi.org/10.1145/3159450.3159544},
  year = {2018}
}

@inproceedings{merged732,
  abstract = {End-user game design affords teachers a unique opportunity to integrate computational thinking concepts into their classrooms. However, it is not always apparent in game and simulation projects what computational thinking-related skills students have acquired. Computational Thinking Pattern Analysis (CTPA) enables teachers to visualize which of nine specific skills students have mastered in game design that can then be used to create simulations. CTPA has the potential to automatically recognize and calculate student computational thinking skills, as well as to map students' computational thinking skill progression, as they proceed through the curriculum. The current research furthers knowledge of CTPA by exploring its validity based on how its performance correlates to human grading of student games. Initial data from this validation study indicates that CTPA correlates well with human grading and that it can even be used to predict students' future achievement levels given their current skill progression, making CTPA a potentially invaluable computational thinking evaluation tool for teachers.},
  address = {New York, NY, USA},
  author = {Koh, Kyu Han and Nickerson, Hilarie and Basawapatna, Ashok and Repenning, Alexander},
  booktitle = {Proceedings of the 2014 Conference on Innovation &amp; Technology in Computer Science Education},
  doi = {10.1145/2591708.2591724},
  isbn = {9781450328333},
  keywords = {computational thinking; computational thinking assessment; computational thinking pattern analysis; cyberlearning infrastructure; end user programming},
  location = {Uppsala, Sweden},
  numpages = {6},
  pages = {213–218},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '14},
  title = {Early validation of computational thinking pattern analysis},
  url = {https://doi.org/10.1145/2591708.2591724},
  year = {2014}
}

@inproceedings{merged733,
  abstract = {Computational thinking – the ability to solve problems using concepts from computer science – has been widely discussed in the computer science education field. However, the relationship of computational thinking to intelligence – seen as the general ability to understand and solve complex problems – is contestable and has not been extensively explored. The present study addressed the question of how computational thinking is related to intelligence. To find an answer to this question, 71 pre-service teacher students completed a survey with 20 Bebras tasks as a measure of computational thinking and a non-verbal intelligence test (TONI-3) to assess their general problem-solving ability. The large and significant correlation of r(70) = .53, p &lt; .001, indicates that both concepts are highly related. Implications of the findings are discussed, including the meaning of the relationship between computational thinking and intelligence during teaching and assessment, and the possibility of more holistic measures of computational thinking that incorporate procedural aspects.},
  address = {New York, NY, USA},
  author = {Boom, Kay-Dennis and Bower, Matt and Arguel, Ama\"{e}l and Siemon, Jens and Scholkmann, Antonia},
  booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3197091.3197104},
  isbn = {9781450357074},
  keywords = {Bebras Challenge; Computational thinking; discriminate validity; non-verbal intelligence; problem-solving},
  location = {Larnaca, Cyprus},
  numpages = {6},
  pages = {206–211},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2018},
  title = {Relationship between computational thinking and a measure of intelligence as a general problem-solving ability},
  url = {https://doi.org/10.1145/3197091.3197104},
  year = {2018}
}

@inproceedings{merged734,
  abstract = {Human-computer interaction is a long established sub-discipline of computer science. While there has been significant focus on the importance of developing computational thinking skills, there appears to be a gap in the literature in using HCI principles, analysis and design as a framework for doing so. We present the first step to identify methodologies for systematically introducing HCI to pupils from an early age, presenting a commentary for their prospective future application, comparing to similar approach as other foundational aspects of computer science in developing computational thinking skills that have been considered for the past decade.},
  address = {New York, NY, USA},
  author = {Calderon, Ana C. and Crick, Tom},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818333},
  isbn = {9781450337533},
  location = {London, United Kingdom},
  numpages = {3},
  pages = {127–129},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {Using Interface Design to Develop Computational Thinking Skills},
  url = {https://doi.org/10.1145/2818314.2818333},
  year = {2015}
}

@article{merged735,
  abstract = {The Communications Web site, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmJeannette Wing considers the proliferation of computational thinking, while Dan Stanzione hopes to bring more HPC practitioners to SC16.},
  address = {New York, NY, USA},
  author = {Wing, Jeannette M. and Stanzione, Dan},
  doi = {10.1145/2933410},
  issn = {0001-0782},
  issue_date = {July 2016},
  journal = {Commun. ACM},
  month = {June},
  number = {7},
  numpages = {2},
  pages = {10–11},
  publisher = {Association for Computing Machinery},
  title = {Progress in computational thinking, and expanding the HPC community},
  url = {https://doi.org/10.1145/2933410},
  volume = {59},
  year = {2016}
}

@inproceedings{merged736,
  address = {New York, NY, USA},
  author = {Pulimood, Monisha},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/3260375},
  isbn = {9781450336857},
  location = {Memphis, Tennessee, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {Session details: Paper Session: Computational Thinking},
  url = {https://doi.org/10.1145/3260375},
  year = {2016}
}

@inproceedings{merged737,
  abstract = {The participation of girls and women is fundamental in solving problems that the society demands. Currently, the figures indicate a deficit of female presence in the STEM context, which implies the loss of the talent of the female collective. The school, as the transforming axis of society, must generate actions that motivate, involve and generate commitment in girls and women, enhancing their engagement in the STEM context. This paper shows two unplugged activities taken from a serial of activities implemented with elementary students and families in a digital cultural center in Madrid-Spain. The implementation is based on general objectives such as 1. To introduce and motivate interest since an early age in computer programming, 2. To develop gender dynamics that educate on gender equity to strengthen female empowerment in the STEM area. Performing the example in the roles of female gender in science, as well as transforming stereotypes with the purpose of motivate girls and adult women, without excluding the male group. The activities also seek to train Computational Thinking skills, to introduce basic computer programming concepts as well as showing that unplugged activities are important in teaching computer programming, and integrate women into the STEM area, as an important tool to reduce gender gaps. Based on our informal observations, some results were: involvement of the female collective in the construction of codes, improvement in the dynamics of gender equity in each activity and that the girls created more complex codes than males.},
  address = {New York, NY, USA},
  author = {Torres-Torres, Yucnary-Daitiana and Rom\'{a}n-Gonz\'{a}lez, Marcos and P\'{e}rez-Gonz\'{a}lez, Juan-Carlos},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362813},
  isbn = {9781450371919},
  keywords = {Code-literacy; Computational Thinking; Computer Education; Elementary Education; Families; Gender; Primary School; Unplugged},
  location = {Le\'{o}n, Spain},
  numpages = {7},
  pages = {209–215},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Implementation of Unplugged Teaching Activities to Foster Computational Thinking Skills in Primary School from a Gender Perspective},
  url = {https://doi.org/10.1145/3362789.3362813},
  year = {2019}
}

@inproceedings{merged738,
  abstract = {Computational thinking (CT) involves a broadly applicable and complex set of processes that are often explained by way of the knowledge, attitudes, and general practices that they entail. However, to become facile with CT, learners require instruction that is grounded in concrete, relevant experiences. This paper examines teacher practices that are intended to promote CT skill acquisition through instruction that takes place in two framing contexts. The phenomenological context, which is based on observable patterns of object interaction that recur in games and simulations, is particularly valuable for developing the capacity to think abstractly. Abstraction is the key to recognizing analogous conditions, an ability that is the basis for transferring learning to new situations. The disciplinary context describes areas of application within and across subject areas, including computer science, that can foster proficiency with data representation, problem decomposition, and other CT skills. Using the Scalable Game Design curriculum as a lens to examine classroom practices, we find that teachers both plan and enact CT instruction in these contexts.},
  address = {New York, NY, USA},
  author = {Nickerson, Hilarie and Brand, Catharine and Repenning, Alexander},
  booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
  doi = {10.1145/2787622.2787720},
  isbn = {9781450336307},
  keywords = {abstraction; computational thinking; computational thinking patterns; computer science education; contextualization; phenomenology; scalable game design; simulation; stem education},
  location = {Omaha, Nebraska, USA},
  numpages = {10},
  pages = {207–216},
  publisher = {Association for Computing Machinery},
  series = {ICER '15},
  title = {Grounding Computational Thinking Skill Acquisition Through Contextualized Instruction},
  url = {https://doi.org/10.1145/2787622.2787720},
  year = {2015}
}

@inproceedings{merged739,
  abstract = {How do we integrate requisite thinking skills into children's earliest informal and formal learning experiences in order to prepare the next generation of problem solvers? This project examines how Computational Thinking (CT) skills align to the abilities and interests of young children and can be integrated with other STEM learning activities in order to promote school readiness. The goals of the project are to (1) build a knowledge base on how CT can be promoted in early childhood through integration with mathematics and science, (2) develop learning blueprints to guide the development of integrated classroom and family resources, and (3) develop and evaluate prototype activities to identify design principles useful to future development efforts integrating CT and STEM in early childhood. In this work, a multidisciplinary research team with expertise in CT, early science and mathematics, technology and media, and home and school learning partners with preschool educators and parents to co-design and pilot test prototype activities. Emerging prototypes presented integrate fundamental science and mathematics concepts and practices with CT skills such as problem decomposition, logical and algorithmic thinking, abstraction and debugging. They include hands-on activities with manipulatives familiar to young children and developmentally appropriate technology with unique affordances for complementing and reinforcing the learning that occurs during hands-on experiences. With a goal of addressing CS For All, the co-design, development and pilot testing of prototype activities aim to take into account the needs and strengths of preschool programs and families from low-income and culturally diverse communities.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi and Dominguez, Ximena and Kamdar, Danae and Vahey, Phil and Moorthy, Savitha and Rafanan, Ken and Gracely, Sara},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293837},
  isbn = {9781450358903},
  keywords = {computational thinking; formal learning; informal learning; mathematics; preschool; science},
  location = {Minneapolis, MN, USA},
  numpages = {2},
  pages = {1257–1258},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Integrating Computational Thinking in Informal and Formal Science and Math Activities for Preschool Learners},
  url = {https://doi.org/10.1145/3287324.3293837},
  year = {2019}
}

@inbook{merged740,
  abstract = {Computational thinking (CT) constitutes an essential set of skills and practices that all students should learn in order to effectively and meaningfully participate in an increasingly computational world. This paper introduces Sphero.Math, a curriculum that integrates CT concepts and practices into 4th-grade mathematics classrooms using the Sphero robot. Sphero.Math was co-designed with school district partners in such a way as to achieve two central design goals. First, integrate CT and mathematics in a mutually-supportive way, meaning that learners engage with CT as a means to deepen mathematics learning and that mathematics serves as a context to learn CT. Second, create a CT-infused curriculum using existing school/district resources that is designed to fit within the constraints of public school classrooms. Along with introducing Sphero.Math and its design goals, this paper presents empirical evidence for the types of CT and math learning opportunities that Sphero.Math can provide for students. In doing so, this work contributes to our understanding of ways to productively integrate CT into elementary classrooms and advances our understanding of how to work within existing educational infrastructure to provide effective and equitable CT learning opportunities for all students.},
  address = {New York, NY, USA},
  author = {Weintrop, David and Walkoe, Janet and Walton, Margaret and Bih, Janet and Moon, Peter and Elby, Andrew and Bennett, Bianca and Kantzer, Madison},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {39–46},
  publisher = {Association for Computing Machinery},
  title = {Sphero.Math: a computational thinking-enhanced fourth grade mathematics curriculum},
  url = {https://doi.org/10.1145/3507951.3519286},
  year = {2022}
}

@article{merged741,
  abstract = {Recent initiatives demonstrate the interest in, and demand for, computational thinking education in elementary schools. However, teachers' readiness for programming-based activities along with their concerns about taking away time from key subject content present barriers for broader integration of computational thinking. This paper presents our experience and findings of a yearlong professional development for a cohort of 21 teachers from self-contained classrooms in grades 4 - 6. The project targeted these grade levels for two reasons: (1) self-contained classrooms provide maximum contact time between teachers and students, affording more flexibility in scheduling and potential for sustained impact, and (2) these grades are critical times for students to build interest and foundations in STEM while many teachers in these classrooms have limited STEM and computing background. The paper provides an overview of the professional development and describes selected activities in more detail. The impact of the professional development on the participating teachers is also presented.},
  address = {Evansville, IN, USA},
  author = {Ouyang, Youwen and Hayden, Katherine L. and Remold, Julie},
  issn = {1937-4771},
  issue_date = {April 2018},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {4},
  numpages = {7},
  pages = {165–171},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Preparing upper elementary school teachers for integrating computational thinking into regular classroom activities},
  volume = {33},
  year = {2018}
}

@article{merged742,
  abstract = {Seeking to reframe computational thinking as computational participation.},
  address = {New York, NY, USA},
  author = {Kafai, Yasmin B.},
  doi = {10.1145/2955114},
  issn = {0001-0782},
  issue_date = {August 2016},
  journal = {Commun. ACM},
  month = {July},
  number = {8},
  numpages = {2},
  pages = {26–27},
  publisher = {Association for Computing Machinery},
  title = {From computational thinking to computational participation in K--12 education},
  url = {https://doi.org/10.1145/2955114},
  volume = {59},
  year = {2016}
}

@inproceedings{merged743,
  abstract = {In this paper, we examine computational thinking and its connections to critical thinking from the perspective of in- formatics. We developed an introductory course for students in our College of Informatics, which includes majors rang- ing from journalism to computer science. The course cov- ered a set of principles of informatics, using both lectures and active learning sessions designed to develop informat- ics and computational thinking skills. The set of principles was drawn from a wide set of sources, and included broad principles like those of Denning and Loidl, as well as more limited principles related to topics like universal computa- tion and undecidability. We evaluated the change in both computational and critical thinking skills over the course of the semester, using a well-known validated critical thinking test and a computational thinking test of our own devising.},
  address = {New York, NY, USA},
  author = {Walden, James and Doyle, Maureen and Garns, Rudy and Hart, Zachary},
  booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2462476.2483797},
  isbn = {9781450320788},
  keywords = {computational thinking; informatics},
  location = {Canterbury, England, UK},
  numpages = {6},
  pages = {4–9},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '13},
  title = {An informatics perspective on computational thinking},
  url = {https://doi.org/10.1145/2462476.2483797},
  year = {2013}
}

@inproceedings{merged744,
  abstract = {In recent years, we have seen an increasing interest in bringing programming back to K-12 education. Many educators begin to recognize the necessity of helping children develop computational thinking (CT) as an essential skill to address 21st century challenges. In this poster, we report the preliminary findings from the first year of a 3-year longitudinal study based on a coding curriculum for Grade 4 to Grade 6. This 3-year study aims to gain an understanding of how coding activities helps children at upper primary school ages develop CT for problem solving, and if this problem-solving mindset is transferrable to other contexts, for example, daily life scenario and mathematical field. A part of the research focuses on a comparative study between students' intrinsic motivation of coding (i.e. "plugged") activities and "unplugged" activities (i.e. learning concepts from computer science through paper-based games without programming), which helps us understand the advantages and disadvantages of different learning approaches to CT. At the end of the first year, around 600 fourth graders" were assessed with their CT competence and affective tendency through: (1) a pre/post-test on the CT skill and mathematical ability; (2) a questionnaire on intrinsic motivation in plugged and unplugged activities. The preliminary findings indicate that students have gained a good programming-related knowledge and improved problem-solving skills through our curriculum. They were intrinsically motivated to participated in both types of activities. However, students did not show the ability to transfer computational thinking to mathematical context.},
  address = {New York, NY, USA},
  author = {Jiang, Shan and Wong, Gary K.W.},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162270},
  isbn = {9781450351034},
  keywords = {coding education; computational thinking; cs unplugged; intrinsic motivation},
  location = {Baltimore, Maryland, USA},
  numpages = {1},
  pages = {1094},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Are Children More Motivated with Plugged or Unplugged Approach to Computational Thinking? (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162270},
  year = {2018}
}

@inproceedings{merged745,
  abstract = {This multidisciplinary and interdisciplinary project is developed with the main objective of increasing interest in science and technology among children and young people in an inclusive way, breaking stereotypes and invisible social and gender barriers. In order to reduce the gender gap in technical careers, the social aspect of robotics applied to chemistry is highlighted at early ages. Qu\'{\i}-Bot-H2O Project has been included in the gender equality lines of action of the two references territorial public administrations for UPC Manresa (Bages County Council in its III Gender Equality Plan and the Manresa City Council in the II Gender Equality Plan). Qu\'{\i}-Bot-H2O challenge is supported by the Spanish Ministry of Economy and Competitiveness under Grant FECYT2021-15626, Line of action 2. Education and scientific vocations (2nd place out of 120 awarded).},
  address = {New York, NY, USA},
  author = {Tarr\'{e}s, Marta I. and Dorado, Antonio David},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486430},
  isbn = {9781450390668},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {115–119},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Qu\'{\i}-Bot-H2O Challenge: Integration of computational thinking with chemical experimentation in early ages including gender, inclusive and diversity patterns},
  url = {https://doi.org/10.1145/3486011.3486430},
  year = {2021}
}

@inproceedings{merged746,
  abstract = {Computational thinking (CT) has been hailed as valuable to everyone in the population, and if so, it should be taught to all. This research builds on existing work identifying pre-requisite skills for developing CT skills, referred to here as foundational CT skills. To add weight to the validity of the "CT for all" claim, this research attempts to determine whether foundational CT skills are of value to non-IT industry and for pupils elsewhere in their studies. The foundational CT skills will be trialled with pupils in the 5-8 yr age range and evaluated for their contribution to the pupils' ongoing education. Findings will be used to inform the curriculum and help to develop worthwhile computational thinking skills irrespective of the child's chosen career.},
  address = {New York, NY, USA},
  author = {Cole, Elizabeth C.},
  booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
  doi = {10.1145/2787622.2787737},
  isbn = {9781450336307},
  keywords = {computational thinking; early years; industry; primary; value},
  location = {Omaha, Nebraska, USA},
  numpages = {2},
  pages = {253–254},
  publisher = {Association for Computing Machinery},
  series = {ICER '15},
  title = {On Pre-requisite Skills for Universal Computational Thinking Education.},
  url = {https://doi.org/10.1145/2787622.2787737},
  year = {2015}
}

@inproceedings{merged747,
  abstract = {Non-major education continues to be a growing area of study in computer science education research. This paper focuses on architects as an audience and the teaching of computer science by architects, who successfully applied computer science education research. The author describes the structure and development of a required computational thinking course with an average yearly enrollment of 69 students and how it applied best practices from Media Computation to improve student outcomes and engagement. A four-year impact study found that a flipped classroom model combined with peer learning methods was superior to traditional lectures and labs for improving student performance and reducing attrition. Comparisons of pre- and post-class surveys revealed an improved perception of computing and an increased interest in the subject -- a positive outcome for a required introductory course. The author also studied the course's long-term effects. Three years after taking the course, a majority of students felt they retained what they learned and that learning computational thinking helped them to learn new software and perform better in advanced computing courses. By taking into account how architects learn and revising in response to assessments, we believe our course structure and teaching methodology demonstrates an effective case for applying computer science education research within an architectural curriculum.},
  address = {New York, NY, USA},
  author = {Senske, Nick},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3017750},
  isbn = {9781450346986},
  keywords = {architecture (field); computational design; computational thinking; flipped classrooms; media computation; non-majors; peer learning; peer programming},
  location = {Seattle, Washington, USA},
  numpages = {6},
  pages = {525–530},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Evaluation and Impact of a Required Computational Thinking Course for Architecture Students},
  url = {https://doi.org/10.1145/3017680.3017750},
  year = {2017}
}

@inproceedings{merged748,
  abstract = {Initial research shows the promise of instructional and learning benefits for students when computational thinking is effectively integrated across the curriculum. Benefits include building higher-order thinking and problem-solving skills, creating real-world applied contexts, and enabling students to create, produce and interact with information. These are critical levers to wide adoption. To address this challenge, in partnership with the Education Development Center, we have developed a three-year study in which we will work closely with five high-poverty New York City elementary schools that, with the help of an external implementation partner, are trying out distinctly different approaches to integrating CT into elementary instruction, in order to understand how those models work in various contexts, and which models may be particularly effective.Our poster will display the proposed integration model of our first demonstration site as well as the indicators and instruments we are using to understand how this model works.},
  address = {New York, NY, USA},
  author = {Charles, Thea and Oliver, Amber and Mulloy, Kate},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162283},
  isbn = {9781450351034},
  keywords = {integrated computational thinking instruction; whole-school model},
  location = {Baltimore, Maryland, USA},
  numpages = {1},
  pages = {1096},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Effective Models for Integrating Computational Thinking into NYC Elementary Schools: A Proposed Research Agenda (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162283},
  year = {2018}
}

@inproceedings{merged749,
  abstract = {The rapid growth in the size and scope of datasets in science and technology has created a need for novel foundational perspectives on data analysis that blend the inferential and computational sciences. That classical perspectives from these fields are not adequate to address emerging problems in "Big Data" is apparent from their sharply divergent nature at an elementary level-in computer science, the growth of the number of data points is a source of "complexity" that must be tamed via algorithms or hardware, whereas in statistics, the growth of the number of data points is a source of "simplicity" in that inferences are generally stronger and asymptotic results can be invoked. On a formal level, the gap is made evident by the lack of a role for computational concepts such as "runtime" in core statistical theory and the lack of a role for statistical concepts such as "risk" in core computational theory. I present several research vignettes aimed at bridging computation and statistics, including the problem of inference under privacy and communication constraints, and ways to exploit parallelism so as to trade off the speed and accuracy of inference.},
  address = {New York, NY, USA},
  author = {Jordan, Michael I.},
  booktitle = {Proceedings of the 28th ACM Symposium on Parallelism in Algorithms and Architectures},
  doi = {10.1145/2935764.2935826},
  isbn = {9781450342100},
  keywords = {big data; communication; inference; parallelism; privacy; statistics},
  location = {Pacific Grove, California, USA},
  numpages = {1},
  pages = {47},
  publisher = {Association for Computing Machinery},
  series = {SPAA '16},
  title = {On Computational Thinking, Inferential Thinking and Data Science},
  url = {https://doi.org/10.1145/2935764.2935826},
  year = {2016}
}

@inproceedings{merged750,
  abstract = {Computational thinking (CT), a transversal intellectual foundation integral to computer science, is making its way into compulsory comprehensive education worldwide. Students are expected to attain skills and knowledge in such interdisciplinary CT principles as Algorithmic thinking, Data representation, and Debugging. Problem-solving by designing and manipulating interactive media with Scratch, a graphical programming tool, is popular especially at the primary school level. However, there has been confusion regarding how introductory CT can be operationalized for educational practice. Teachers and students need research-based knowledge for setting appropriate learning goals in addition to instruments for formative assessment that potentially improve the quality of learning. This study contributes to these issues by developing the assessment for learning of CT via Scratch in primary school settings. A review on prior studies involving the assessment of CT-related computational ideas in Scratch has led to the conceptualization of a revised assessment framework. Next steps in the study are analyzing fourth grade students' (N=58) Scratch projects and exploring complementary methods for analyzing CT in video recordings of the students' programming processes.},
  address = {New York, NY, USA},
  author = {Fagerlund, Janne},
  booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
  doi = {10.1145/3230977.3231013},
  isbn = {9781450356282},
  keywords = {assessment; computational thinking; education; graphical programming; primary school; scratch},
  location = {Espoo, Finland},
  numpages = {2},
  pages = {264–265},
  publisher = {Association for Computing Machinery},
  series = {ICER '18},
  title = {A Study on the Assessment of Introductory Computational Thinking via Scratch Programming in Primary Schools},
  url = {https://doi.org/10.1145/3230977.3231013},
  year = {2018}
}

@inproceedings{merged751,
  abstract = {Are fine arts and technology compatible partners" Do these disciplines support each other or flinch when they are combined like oil and water" Do collaborative efforts provide interesting insights and opportunities for students" For practitioners" There seems to be an explosion of interest in exploring arts and technology connections: new media, digital media, kinetic art, new frontiers, emergent media, interdisciplinary, multidisciplinary, and transdisciplinary are only some of the terms used to describe this fusion of disciplines.A visit to the SIGGRAPH art gallery or the SIGCHI Interactivity sessions, for example, will showcase a wide variety of uses of computing, embedded control, sensors, and actuators in the service of art. Kinetic art using embedded control is a marriage of art and technology. Artistic sensibility and creativity are required for concept and planning, and computer science and engineering skills are required to realize the artistic vision. However, these different skills are often taught in extremely different parts of a university campus.In this talk I will start with some thoughts on the nature of combining arts and technology, and show some historical and contemporary examples specifically relating to kinetic art. I will then describe an ongoing collaborative course that involves Computer Science and Art students working together to design and create computer-controlled kinetic art. Students in the course explore interfacing of embedded computer systems with sensors and actuators of all sorts. They also explore physical and conceptual aspects of machine-making as a fine-art sculpture process. Our goal is to enhance the educational experience of both groups of students. We believe that both student groups gain significant and unusual benefits that they can apply in a variety of ways in their respective disciplines.},
  address = {New York, NY, USA},
  author = {Brunvand, Erik},
  booktitle = {Proceedings of the 25th Edition on Great Lakes Symposium on VLSI},
  doi = {10.1145/2742060.2742123},
  isbn = {9781450334747},
  keywords = {dinner speaker},
  location = {Pittsburgh, Pennsylvania, USA},
  numpages = {1},
  pages = {145},
  publisher = {Association for Computing Machinery},
  series = {GLSVLSI '15},
  title = {Computational Thinking Meets Design Thinking: Technology and Arts Collaborations},
  url = {https://doi.org/10.1145/2742060.2742123},
  year = {2015}
}

@inproceedings{merged752,
  abstract = {Computational thinking (CT), which encompasses strategies for problem analysis and solution design, is highly applicable in all STEM disciplines, including computer science, for learning concepts as well as solving problems. Yet, the exposure of K-12 students to CT in many schools is practically non-existent. For students to acquire this important skill, teachers require in-depth knowledge of the problem solving strategies that define CT, and strategies for integrating CT into their lesson plans. The proposed special session will be both a tutorial on CT and an interactive session for sharing the experience and results from a CT workshop held at Columbus State University for middle and high school STEM subject teachers. This workshop, offered as a part of the ACT4STEM (Applying Computational Thinking for STEM Disciplines) project, took place in the summer of 2015. It brought together teachers from the metropolitan Columbus area in Georgia with priority given to teachers from high-need schools (as determined by the GA Department of Education [1]). The workshop introduced the participants to CT concepts and demonstrated how CT strategies of pattern recognition, generalization, problem decomposition and algorithmic thinking can be used to improve student learning of STEM concepts. The proposed special session will present sample CT modules developed for the ACT4STEM workshop in the form of a tutorial and projects and lesson plans designed by participants during the workshop. It will include interactive, hands-on activities and discussions in addition to results from the teachers' actual experiences on applying these lesson plans in their classes. This special session will benefit K12 teachers of STEM subjects interested in improving their students' comprehension of discipline related concepts and their application. Moreover, computer science faculty interested in helping K-12 teachers by organizing training sessions will gain valuable insights from the first-hand accounts of the presenters of their own experience with such an effort.},
  address = {New York, NY, USA},
  author = {Hodhod, Rania and Khan, Shamim and Kurt-Peker, Yesem and Ray, Lydia},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2844675},
  isbn = {9781450336857},
  keywords = {computational thinking; computer science education; k-12 teacher training},
  location = {Memphis, Tennessee, USA},
  numpages = {2},
  pages = {156–157},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {Training Teachers to Integrate Computational Thinking into K-12 Teaching},
  url = {https://doi.org/10.1145/2839509.2844675},
  year = {2016}
}

@inproceedings{merged753,
  abstract = {Many countries are introducing new school computing syllabuses that make programming and computational thinking core components. However, many of the teachers involved have major knowledge, skill and pedagogy gaps. We have explored the effectiveness of using 'unplugged' methods (constructivist, often kinaesthetic, activities away from computers) with contextually rich storytelling to introduce teachers to these topics in a non-threatening way. We describe the approach we have used in workshops for teachers and its survey based evaluation. Teachers were highly positive that the approach was inspiring, confidence building and gave them a greater understanding of the concepts involved, as well as giving practical teaching techniques that they would use.},
  address = {New York, NY, USA},
  author = {Curzon, Paul and McOwan, Peter W. and Plant, Nicola and Meagher, Laura R.},
  booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2670757.2670767},
  isbn = {9781450332507},
  keywords = {K-12 education; computational thinking; unplugged},
  location = {Berlin, Germany},
  numpages = {4},
  pages = {89–92},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '14},
  title = {Introducing teachers to computational thinking using unplugged storytelling},
  url = {https://doi.org/10.1145/2670757.2670767},
  year = {2014}
}

@inproceedings{merged754,
  abstract = {The aim of this research was to develop a set of tasks assessing prerequisite Computational Thinking (CT) skills within Czech primary school students using an educational robotics as a supporting tool. Czech Republic, along with numerous European countries, currently implements a revision of the existing computer science curriculum at the primary and secondary education level, to widen the national information literacy and embed the development of CT into the basic STEM education. The integration of the CT development at a level of a national school education raises a question of assessing actual CT skills of the students and creating a standardized methodology for a such assessment. This paper discusses the results of the research aimed to assess the CT skills within primary school students which was tested on a sample number of 90 students age 8 - 13 during extended education classes and events.},
  address = {New York, NY, USA},
  author = {Bryndov\'{a}, Lucie and Mali\v{s}\r{u}, Petri},
  booktitle = {Proceedings of the 4th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3416797.3416819},
  isbn = {9781450388375},
  location = {Kyoto, Japan},
  numpages = {5},
  pages = {239–243},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '20},
  title = {Assessing the Current Level of the Computational Thinking Within the Primary and Lower Secondary School Students using Educational Robotics Tasks},
  url = {https://doi.org/10.1145/3416797.3416819},
  year = {2020}
}

@inproceedings{merged755,
  abstract = {This paper describes the design and initial assessment of a general education course in computational thinking for non-computer science majors. The key elements of the course include multidisciplinary cohorts to achieve learning across contexts, multiple languages/tools, including block-based and textual programming languages, repeated exposure to the underlying computational ideas in different forms, and student-defined projects using real world ("big") data to heighten motivation through self-directed contextualized learning. The preliminary multi-methods assessment shows that the course engendered high levels of motivation, achieved key objectives for learning in and across contexts, largely affirmed the choice of languages/tools, and supported, though less strongly than anticipated, the motivational effects of real-world data},
  address = {New York, NY, USA},
  author = {Kafura, Dennis and Bart, Austin Cory and Chowdhury, Bushra},
  booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2729094.2742593},
  isbn = {9781450334402},
  keywords = {big data; computational thinking; interdisciplinary cohorts; student engagement},
  location = {Vilnius, Lithuania},
  numpages = {6},
  pages = {63–68},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '15},
  title = {Design and Preliminary Results From a Computational Thinking Course},
  url = {https://doi.org/10.1145/2729094.2742593},
  year = {2015}
}

@inproceedings{merged756,
  address = {New York, NY, USA},
  author = {Horn, Michael and Zaman, Bieke},
  booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
  doi = {10.1145/3248696},
  isbn = {9781450349215},
  location = {Stanford, California, USA},
  publisher = {Association for Computing Machinery},
  series = {IDC '17},
  title = {Session details: Coding and Computational Thinking (Full Paper Session)},
  url = {https://doi.org/10.1145/3248696},
  year = {2017}
}

@inproceedings{merged757,
  abstract = {This paper reports on a multi-semester study of the impact on student perceptions of their computational thinking abilities as a result of collaboration between students in computer science (CS) and journalism courses to solve a problem for a community partner, Habitat for Humanity. Interdisciplinary computing collaborations have become a popular mode of instruction in upper-level CS courses. In many cases, these collaborations have been with other STEM disciplines. However, there are non-STEM fields that have been transformed by computer science and can also serve as fruitful test beds for curricular innovation; journalism is one such field. In this study, undergraduate students in CS and journalism courses focused on creating a computational solution to address a real community need. The study investigates whether immersion in multidisciplinary collaborative experiences increases the computational thinking abilities of both CS and non-CS students. 41 CS students participated in the study alongside 96 students in a range of other STEM and non-STEM majors. Quantitative data were collected to gauge students' attainment of concepts and skills constitutive to computational thinking. Pre-test data indicate that CS students were no different from other STEM students in their own assessment of computational thinking and skills. Post-test data indicate that while all students made significant gains in self-assessment of skills and knowledge, CS majors fared significantly better than their peers. It is particularly noteworthy that CS majors' gains outpaced those of computer engineering majors. Further research is planned to gain additional insight into the possible reasons behind these results.},
  address = {New York, NY, USA},
  author = {Pulimood, Sarah Monisha and Pearson, Kim and Bates, Diane C.},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2844636},
  isbn = {9781450336857},
  keywords = {collaboration; community engaged learning; computational thinking},
  location = {Memphis, Tennessee, USA},
  numpages = {6},
  pages = {30–35},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {A Study on the Impact of Multidisciplinary Collaboration on Computational Thinking},
  url = {https://doi.org/10.1145/2839509.2844636},
  year = {2016}
}

@article{merged758,
  abstract = {Computational Thinking Through Mobile Computing is an NSF-funded project for introducing students to computational thinking through creating mobile apps. In this hands-on workshop, which is targeted at undergraduate and secondary school computer science teachers, participants will develop Android apps using MIT App Inventor 2. This is a new version of the visual blocks-based programming environment with additional language features (local variables, improved handling of procedure and event parameters) and browser-based blocks editing. The workshop will focus on computational concepts relevant to mobile apps: event-based programming, location awareness, social computing, persistence and sharing, and leveraging the sensors and actuators of mobile devices. The workshop will also present pedagogical materials (lessons, tutorials, assignments), evaluation materials (blocks-based quizzes, surveys, project rubrics), and student projects. A laptop and gmail account are required for this workshop. Participants can borrow an Android device to use during the workshop, or they may use their own Android device if they have one.},
  address = {Evansville, IN, USA},
  author = {Turbak, Franklyn and Pokress, Shaileen Crawford and Sherman, Mark},
  issn = {1937-4771},
  issue_date = {June 2014},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {3},
  pages = {15–17},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Mobile computational thinking with APP inventor 2},
  volume = {29},
  year = {2014}
}

@inproceedings{merged759,
  abstract = {With the rapid development of information technology, it is extremely urgent to cultivate compound talents with innovative thinking and innovative ability from the perspective of talent cultivation. This paper mainly starts from the reform of the general computer education course, puts forward the general computer education innovation scheme for interdisciplinary talent cultivation. Stressing on training model of interdisciplinary talents, the reform plan is elaborated from education model, curriculum system, teaching content and practice base construction, etc., and then concrete implementation methods are given from these four aspects accordingly.},
  address = {New York, NY, USA},
  author = {Quan, Yujuan and Liu, Xiaoli and Lin, Longxin},
  booktitle = {Proceedings of the 2019 4th International Conference on Distance Education and Learning},
  doi = {10.1145/3338147.3338151},
  isbn = {9781450362658},
  keywords = {Computational Thinking and General Education; Interdisciplinary Talent Training; Internet of Things},
  location = {Shanghai, China},
  numpages = {5},
  pages = {132–136},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '19},
  title = {On the Training Model of Interdisciplinary Talents by Computational Thinking and General Education Program},
  url = {https://doi.org/10.1145/3338147.3338151},
  year = {2019}
}

@inproceedings{merged760,
  abstract = {This poster reports on research in progress. We develop a coding scheme to analyze teaching materials with respect to Computational Thinking (CT) content. In this pilot study, we apply the coding scheme to a sample of Dutch materials for Computing Science. The framework turns out to be useful for both global and in-depth analysis of CT content.},
  address = {New York, NY, USA},
  author = {Barendsen, Erik and Stoker, Idzard},
  booktitle = {Proceedings of the 13th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/2526968.2526995},
  isbn = {9781450324823},
  keywords = {computational thinking; computing education},
  location = {Koli, Finland},
  numpages = {2},
  pages = {199–200},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '13},
  title = {Computational thinking in CS teaching materials: a pilot study},
  url = {https://doi.org/10.1145/2526968.2526995},
  year = {2013}
}

@inproceedings{merged761,
  abstract = {This study was aimed at exploring the pedagogical content knowledge (PCK) of computer science (CS) teachers in secondary education in the Netherlands concerning three aspects of Computational Thinking: data collection, algorithms &amp; procedures and simulation. Semi-structured interviews with a specially developed interview protocol containing Content Representation (CoRe) instrument were used. From the preliminary analysis of the acquired data we conclude that all interviewed teachers demonstrate PCK on data collection and algorithms &amp; procedures but with varying knowledge of learning objectives and completeness of their PCK. Teachers' PCK on simulation exhibit great variation from meager, through fragmentary to abundant.},
  address = {New York, NY, USA},
  author = {Grgurina, Nata\v{s}a and Barendsen, Erik and Zwaneveld, Bert and van Veen, Klaas and Stoker, Idzard},
  booktitle = {Proceedings of the 14th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/2674683.2674704},
  isbn = {9781450330657},
  keywords = {computational thinking; computer science education; pedagogical content knowledge},
  location = {Koli, Finland},
  numpages = {2},
  pages = {173–174},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '14},
  title = {Computational thinking skills in dutch secondary education: exploring pedagogical content knowledge},
  url = {https://doi.org/10.1145/2674683.2674704},
  year = {2014}
}

@inproceedings{merged762,
  abstract = {This study is aimed to teach autistic children to learn social reciprocity and emotional expression through social stories, and build a social story teaching aid system with the aid of sequential computational thinking as learning strategy as well as Chibitronics and Makey Makey. This system can make autistic children to learn situational content from social stories, understand the social stories through computational thinking and arrange corresponding sequential structure. In this study, we recruited three 9 year-old autistic children, carried out teaching experiments four times and observed their behavior for story plot. It showed that technical teaching aid can improve autistic children's learning motivation and interests and provide them with contextual cue of social situation, helping build their social recognition and social reciprocity into social situation and their social reciprocity skills. I believe that autistic children can improve their social reciprocity and emotional expression skills with the help of sequential computational thinking and social teaching aid system designed with Chibitronics and Makey Makey.},
  address = {New York, NY, USA},
  author = {Li, Xin-Zhu and Kang, Xin},
  booktitle = {Proceedings of the 2021 12th International Conference on E-Education, E-Business, E-Management, and E-Learning},
  doi = {10.1145/3450148.3450150},
  isbn = {9781450388542},
  keywords = {Autism; Computational thinking; Computer-aided instruction; Conductive materials; Interactive learning environments; MaKey MaKey; social stories},
  location = {Tokyo, Japan},
  numpages = {5},
  pages = {1–5},
  publisher = {Association for Computing Machinery},
  series = {IC4E '21},
  title = {Combining Computational Thinking and Chibitronics and Makey Makey to Develop a Social Story Teaching Aid System to Improve Social Reciprocity and Emotional Expression Skills for Autistic Children},
  url = {https://doi.org/10.1145/3450148.3450150},
  year = {2021}
}

@inproceedings{merged763,
  abstract = {As Computational Thinking becomes pervasive in undergraduate programs, new students must be educated in meaningful, authentic contexts that they find both motivating and relatable. I propose working with big data as a novel context for introductory programming, authentic given its importance in diverse fields such as agriculture, history, and more. Big data is considered difficult to use because of its inherent technical obstacles. To overcome these difficulties, I introduce a new project: CORGIS - a "Collection of Real-time, Giant, Interesting, Situated Datasets". The CORGIS project comprises a collection of libraries that provide an interface to big data for students, architectures for rapidly enabling new datasets, and a web-based textbook platform for disseminating relevant course materials. This textbook features an online block-based programming environment, real-time collaborative text editing, and continuous server-side storage. In this poster, I describe the educational theory guiding this work, the novel technolgy created and deployed, and the initial, promising results.},
  address = {New York, NY, USA},
  author = {Bart, Austin Cory},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2693616},
  isbn = {9781450329668},
  keywords = {Big data; CORGIS; Computational Thinking; Motivation},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {719},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Situating Computational Thinking with Big Data: Pedagogy and Technology (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2693616},
  year = {2015}
}

@inproceedings{merged764,
  abstract = {The term Computational Thinking (CT) was introduced in 2006 by J. M. Wing to indicate a set of analytical skills regarded necessary for the youth in the modern information society [11]. We describe an ongoing research project on CT skills in the Netherlands, focusing on the computer science (CS) course in the upper grades of secondary education. In the first phase of the project we explore the occurrence and nature of CT aspects in the CS teaching materials and policy documents as well as teachers' pedagogical content knowledge (PCK). In this poster we describe the research design and the method of the first phase of the project and we report and discuss the results obtained so far, focusing on the teachers' perspective.},
  address = {New York, NY, USA},
  author = {Grgurina, Nata\v{s}a and Barendsen, Erik and Zwaneveld, Bert and van Veen, Klaas and Stoker, Idzard},
  booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2670757.2670761},
  isbn = {9781450332507},
  keywords = {computational thinking; computer science education; pedagogical content knowledge; problem-solving},
  location = {Berlin, Germany},
  numpages = {2},
  pages = {124–125},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '14},
  title = {Computational thinking skills in dutch secondary education: exploring teacher's perspective},
  url = {https://doi.org/10.1145/2670757.2670761},
  year = {2014}
}

@inproceedings{merged765,
  abstract = {End-user game design tools are effective in motivating and exposing students with no prior programming experience to computer science. However, while there is good evidence that these environments are effective motivators, the question remains what do students actually learn? For our purposes, using AgentSheets, we would like to know if students can apply the knowledge obtained from programming games to creating science simulations. Specifically, we want to better understand if students are able to recognize Computational Thinking Patterns (CTP) from their game programming experience. Computational Thinking Patterns are abstract programming patterns that enable agent interactions not only in games but also in science simulations. Students and teachers who participated in a game design summer institute were administered a Computational Thinking Pattern Quiz (CTP Quiz). This quiz tested the participants' ability to recognize and understand patterns in a context removed from game programming. We found that participants, for the most part, were able to understand and recognize the patterns in a variety of contexts},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok and Koh, Kyu Han and Repenning, Alexander and Webb, David C. and Marshall, Krista Sekeres},
  booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1953163.1953241},
  isbn = {9781450305006},
  keywords = {computational thinking; computational thinking patterns; middle school computer education; scalable game design; student observation; transfer; university programming education},
  location = {Dallas, TX, USA},
  numpages = {6},
  pages = {245–250},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '11},
  title = {Recognizing computational thinking patterns},
  url = {https://doi.org/10.1145/1953163.1953241},
  year = {2011}
}

@inproceedings{merged766,
  abstract = {Computational Thinking (CT) is beginning to be accepted as one of the fundamental 21st century skills for everyone. Curricula and environments are being developed for different group ages, from kindergarten to university, in several countries. As part of this global tendency, France has recently taken political decisions to integrate CT Education (CTE) in the mandatory national curriculum. However, many challenges remain until a full implementation is achieved. In this paper we report on a partnership between a university, local elementary schools and the county Ministry of Education (MoE), and on an exploratory project of introducing CT to K-5 students. This project has provided us with valuable feedback on the specifics of integrating CT in a national curriculum and the creation of a partnership and a community. These lessons will be used in the following stage of scaling up to more elementary schools in the entire county, but also addressing other school levels such as kindergarten, middle school and high school.},
  address = {New York, NY, USA},
  author = {Chiprianov, Vanea and Gallon, Laurent},
  booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2899415.2899439},
  isbn = {9781450342315},
  keywords = {community of practice; computer science education; curriculum; elementary school; teacher training},
  location = {Arequipa, Peru},
  numpages = {6},
  pages = {112–117},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '16},
  title = {Introducing Computational Thinking to K-5 in a French Context},
  url = {https://doi.org/10.1145/2899415.2899439},
  year = {2016}
}

@article{merged767,
  abstract = {The rapid digitization of texts presents both new opportunities and real barriers of entry to computer-assisted explorations of texts for both faculty and students. Computer science programs, especially those on liberal arts campuses, are well positioned to help faculty and students across the humanities (and social sciences) who seek to apply computational techniques to their digitized corpora of interest. This workshop provides hands-on practice with Lexos [1], a web-based workflow for entry-level text processing, statistical analysis, and visualization of results when exploring digitized texts. Funded by the National Endowment for the Humanities (NEH), Lexos reflects six years of software development with undergraduates in a model that blends a start-up company with interdisciplinary research. In addition to hands-on play, participants will be introduced to course materials used in our "Computing for Poets" course as well as share in discussions of effective practices for outreach to the digital humanities on their campuses. More information on our successful use in the classroom and in our own research is available at our website [2]. The software for Lexos is available on our GitHub repo [3].},
  address = {Evansville, IN, USA},
  author = {LeBlanc, Mark D.},
  issn = {1937-4771},
  issue_date = {June 2017},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {1},
  pages = {10},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Bringing computational thinking to the digital humanities: introducing students to explorations of digitized texts},
  volume = {32},
  year = {2017}
}

@inproceedings{merged768,
  abstract = {Computational thinking has been promoted in recent years as a skill that is as fundamental as being able to read, write, and do arithmetic. However, what computational thinking really means remains speculative. While wonders, discussions and debates will likely continue, this article provides some analysis aimed to further the understanding of the notion. It argues that computational thinking is likely a hybrid thinking paradigm that must accommodate different thinking modes in terms of the way each would influence what we do in computation. Furthermore, the article makes an attempt to define computational thinking and connect the (potential) thinking elements to the known thinking paradigms. Finally, the author discusses some implications of the analysis.},
  address = {New York, NY, USA},
  author = {Hu, Chenglie},
  booktitle = {Proceedings of the 16th Annual Joint Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/1999747.1999811},
  isbn = {9781450306973},
  keywords = {computation; computational thinking; computing education; thinking model},
  location = {Darmstadt, Germany},
  numpages = {5},
  pages = {223–227},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '11},
  title = {Computational thinking: what it might mean and what we might do about it},
  url = {https://doi.org/10.1145/1999747.1999811},
  year = {2011}
}

@inproceedings{merged769,
  abstract = {Computational Thinking (CT) has gained in popularity in recent years, both within educational and political discourses. It is more than ever important to discuss the term itself in order to determine to which extent it is helpful in solving the challenges it has been suggested to address. Recently, Denning (2017) proposed that CT can be viewed as either "traditional" or "new". Traditional CT is a skillset resulting from engaging in traditional computing activities, e.g. programming, whereas new CT forefronts certain skills as desired in problem solving. By looking at CT through the perspective of computer semiotics, specifically the algorithmic sign, it is possible to dissolve the hard distinction of traditional vs. new. Instead, a perception of CT having both an implicit and an explicit nature emerges, allowing for a dialectic relationship between CT's integrated implicit and explicit nature.},
  address = {New York, NY, USA},
  author = {Spangsberg, Thomas Hvid and Brynskov, Martin},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3144591},
  isbn = {9781450353014},
  keywords = {algorithmic sign.; computational thinking; computer semiotics; computing education},
  location = {Koli, Finland},
  numpages = {2},
  pages = {197–198},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Towards a dialectic relationship between the implicit and explicit nature of computational thinking: a computer semiotics perspective},
  url = {https://doi.org/10.1145/3141880.3144591},
  year = {2017}
}

@article{merged770,
  abstract = {Computational thinking (CT) is broadly defined as the mental activity for abstracting problems and formulating solutions that can be automated. In an increasingly information-based society, CT is becoming an essential skill for everyone. To ensure that students develop this ability at the K-12 level, it is important to provide teachers with an adequate knowledge about CT and how to incorporate it into their teaching. This article describes a study on designing and introducing computational thinking modules and assessing their impact on preservice teachers’ understanding of CT concepts, as well as their attitude towards computing. Results demonstrate that introducing computational thinking into education courses can effectively influence preservice teachers’ understanding of CT concepts.},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Yadav, Aman and Mayfield, Chris and Zhou, Ninger and Hambrusch, Susanne and Korb, John T.},
  doi = {10.1145/2576872},
  issue_date = {March 2014},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; teacher education; teaching/learning strategies},
  month = {March},
  number = {1},
  numpages = {16},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking in Elementary and Secondary Teacher Education},
  url = {https://doi.org/10.1145/2576872},
  volume = {14},
  year = {2014}
}

@inproceedings{merged771,
  abstract = {Nowadays, the teaching-learning processes are constantly changing, one of the latest modifications promises to strengthen the development of digital skills and thinking in the participants, from an early age. In this sense, the present article shows the advances of a study oriented to the formation of programming abilities, computational thinking and collaborative learning in an initial education context. As part of the study it was initially proposed to conduct a training day for teachers who will participate in the experimental phase of the research, considering this human resource as a link of great importance to achieve maximum use of students in the development of curricular themes of the level, using ICT resources and programmable educational robots. The criterion and the positive acceptance expressed by the teaching group after the evaluation applied at the end of the session, constitute a good starting point for the development of the following activities that make up the research in progress.},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Gonz\'{a}lez, Yen Air Caballero and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145353},
  isbn = {9781450353861},
  keywords = {Computational thinking; collaborative learning; programming; robotics; teaching-learning processes},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Development of computational thinking and collaborative learning in kindergarten using programmable educational robots: a teacher training experience},
  url = {https://doi.org/10.1145/3144826.3145353},
  year = {2017}
}

@inproceedings{merged772,
  abstract = {This paper presents preliminary findings from a project-based learning laboratory of robotics aimed at stimulating computational thinking processes in primary school students. The laboratory was carried out within the context of an ongoing project funded by the Italian Ministry of Education, University and Research. The aim of the project is to activate a national network for the enhancement of students' technological and scientific skills in school and extra-school settings. A group of 51 students, engaged in the robotics laboratory, were compared to a comparison group of 32 students in order to evaluate the impact of programming WeDo robotics artefacts on the development of computational thinking skills. Overall, the results showed that programming robotics artefacts may exert positive effects on children's acquisition of computational thinking skills.},
  address = {New York, NY, USA},
  author = {Chiazzese, Giuseppe and Arrigo, Marco and Chifari, Antonella and Lonati, Violetta and Tosto, Crispino},
  booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3284179.3284186},
  isbn = {9781450365185},
  keywords = {Robotics education; coding; computational thinking; project-based learning},
  location = {Salamanca, Spain},
  numpages = {6},
  pages = {25–30},
  publisher = {Association for Computing Machinery},
  series = {TEEM'18},
  title = {Exploring the Effect of a Robotics Laboratory on Computational Thinking Skills in Primary School Children Using the Bebras Tasks},
  url = {https://doi.org/10.1145/3284179.3284186},
  year = {2018}
}

@inproceedings{merged773,
  abstract = {Computational thinking is taking an ever increasing role in education. According to the Netherlands institute for curriculum development there currently is little to no education on this topic in Dutch primary schools. Since teachers are the key to high quality education, it is important to know which knowledge primary school teachers should have on this topic. This exploratory research is part of a larger design-based study on how 5--6 year old students can develop CT skills at a basic level and what teachers in primary education need to know about computational thinking to teach it. This poster describes the educational design research consisting of a total of three rounds and the results after the first two rounds.},
  address = {New York, NY, USA},
  author = {Koning, Josina I. and Faber, Hylke H. and Wierdsma, Menno D. M.},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3141908},
  isbn = {9781450353014},
  keywords = {computational thinking; early childhood; educational design research; primary education; unplugged},
  location = {Koli, Finland},
  numpages = {2},
  pages = {189–190},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Introducing computational thinking to 5 and 6 year old students in dutch primary schools: an educational design research study},
  url = {https://doi.org/10.1145/3141880.3141908},
  year = {2017}
}

@inproceedings{merged774,
  abstract = {Alternate Reality Games (ARGs) can be utilized as an educational platform to engage students in a collaborative exploration of the field of computing as a means to increase interest in computing. This paper will review the use of ARGs for educational purposes, the educational value of using ARGS, and how ARGs can be designed for re-use. My research is focused on exploring the use of ARGS as component of a computing education framework.},
  address = {New York, NY, USA},
  author = {Doore, Karen},
  booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
  doi = {10.1145/2493394.2493418},
  isbn = {9781450322430},
  keywords = {alternate reality games; collaboration; computer science education; narrative; participation; serious games},
  location = {San Diego, San California, USA},
  numpages = {2},
  pages = {171–172},
  publisher = {Association for Computing Machinery},
  series = {ICER '13},
  title = {Alternate realities for computational thinking},
  url = {https://doi.org/10.1145/2493394.2493418},
  year = {2013}
}

@inproceedings{merged775,
  abstract = {Alongside recent UK initiatives on computing education, coupled with demands for the development of broader societal digital competencies, we propose that computational thinking skills can be taught to early year students and highlight a method for teaching a specific aspect, namely pattern recognition. Although our example might appear specific to this context, we identify how this could readily be extended to a broader class of educational settings, proposing an underlying pedagogical framework. Finally, a proof-of-concept prototype, corresponding to the implementation of the method, is highlighted.},
  address = {New York, NY, USA},
  author = {Calderon, Ana C. and Crick, Tom and Tryfona, Catherine},
  booktitle = {Proceedings of the 2015 British HCI Conference},
  doi = {10.1145/2783446.2783600},
  isbn = {9781450336437},
  keywords = {computational thinking; computing education; early years education; pattern recognition; signature pedagogies},
  location = {Lincoln, Lincolnshire, United Kingdom},
  numpages = {2},
  pages = {259–260},
  publisher = {Association for Computing Machinery},
  series = {British HCI '15},
  title = {Developing computational thinking through pattern recognition in early years education},
  url = {https://doi.org/10.1145/2783446.2783600},
  year = {2015}
}

@inproceedings{merged776,
  abstract = {Computational thinking is gaining recognition as an important skill set for students, both in computer science and other disciplines. Although there has been much focus on this field in recent years, it is rarely taught as a formal course within the curriculum, and there is little consensus on what exactly computational thinking entails and how to teach and evaluate it. To address these concerns, we have developed a computational thinking framework to be used as a planning and evaluative tool. Within this framework, we aim to unify the differing opinions about what computational thinking should involve. As a case study, we have applied the framework to Light-Bot, an educational game with a strong focus on programming, and found that the framework provides us with insight into the usefulness of the game to reinforce computer science concepts.},
  address = {New York, NY, USA},
  author = {Gouws, Lindsey Ann and Bradshaw, Karen and Wentworth, Peter},
  booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2462476.2466518},
  isbn = {9781450320788},
  keywords = {computational thinking; computer science education; evaluation framework},
  location = {Canterbury, England, UK},
  numpages = {6},
  pages = {10–15},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '13},
  title = {Computational thinking in educational activities: an evaluation of the educational game light-bot},
  url = {https://doi.org/10.1145/2462476.2466518},
  year = {2013}
}

@inproceedings{merged777,
  abstract = {Computational Thinking a taken a greater interest in the schools. Each time is being incorporated into the classroom to develop some skills in the children as: solving and formulation problem with help of technology tools. Children with cochlear implants have many challenges into ambit social, cultural and educational. Using the technology is proposed a physical and digital game as support tool in the acquisition of some skills related with thinking computational.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Henao, Cristhiam and Naranjo, Juan Sebasti\'{a}n and Cano, Sandra and Pe\~{n}e\~{n}ory, Victor M.},
  booktitle = {Proceedings of the XIX International Conference on Human Computer Interaction},
  doi = {10.1145/3233824.3233866},
  isbn = {9781450364911},
  keywords = {Children with Cochlear Implants; Computational Thinking},
  location = {Palma, Spain},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Interacci\'{o}n '18},
  title = {Designing an Interactive System as support to the development of Computational Thinking for Children with Cochlear Implants: Extended Abstract},
  url = {https://doi.org/10.1145/3233824.3233866},
  year = {2018}
}

@inproceedings{merged778,
  abstract = {Internationally, there is a growing awareness on the necessity of providing relevant computing education in schools, particularly high schools. We present a new and generic approach to Computing in Danish High Schools based on a conceptual framework derived from ideas related to computational thinking. We present two main theses on which the subject is based, and we present the included knowledge areas and didactical design principles. Finally we summarize the status and future plans for the subject and related development projects.},
  address = {AUS},
  author = {Caspersen, Michael E. and Nowack, Palle},
  booktitle = {Proceedings of the Fifteenth Australasian Computing Education Conference - Volume 136},
  isbn = {9781921770210},
  keywords = {application areas; computational thinking; core competencies; course content; curriculum structure; didactical design principles; high school; knowledge areas; learning activities},
  location = {Adelaide, Australia},
  numpages = {7},
  pages = {137–143},
  publisher = {Australian Computer Society, Inc.},
  series = {ACE '13},
  title = {Computational thinking and practice: a generic approach to computing in Danish high schools},
  year = {2013}
}

@inproceedings{merged779,
  abstract = {In this paper, we describe the first phase of a cross-disciplinary project between computing and English faculty who explored how computational thinking skills such as abstraction, modeling, and iteration can be used to support English faculty in teaching students to write well. This initial phase of collaboration focused on developing and applying a model to capture fundamental concepts for teaching composition with special emphasis on those related to clarity. We iteratively developed a complex concept map that can act as a curriculum planning and teaching tool. In the next phase of the project, we plan to adapt selected exercises from traditional writing courses to include computational approaches such as modeling, and to test which audiences benefit from these revised exercises.},
  address = {New York, NY, USA},
  author = {Howell, Linda and Jamba, Lisa and Kimball, A. Samuel and Sanchez-Ruiz, Arturo},
  booktitle = {Proceedings of the 49th Annual ACM Southeast Conference},
  doi = {10.1145/2016039.2016059},
  isbn = {9781450306867},
  keywords = {English; computational thinking; concept maps; modeling},
  location = {Kennesaw, Georgia},
  numpages = {6},
  pages = {48–53},
  publisher = {Association for Computing Machinery},
  series = {ACMSE '11},
  title = {Computational thinking: modeling applied to the teaching and learning of English},
  url = {https://doi.org/10.1145/2016039.2016059},
  year = {2011}
}

@inproceedings{merged780,
  abstract = {Computational thinking (CT) is a way that allows us to create solutions to problems through the use of skills such as abstraction, decomposition, generalization, evaluation and algorithmic design. There are Institutions that offer global CT assessment to particularly promote the study of professions in the area of Computer Science and in some cases there is also training for teachers of primary and secondary education. In this paper we present the proposal to evaluate the CT skills of new students in the Division of Technologies Information and Communication of the Universidad Tecnol\'{o}gica de Puebla to relate the knowledge indicated in the Programming Methodology course and provide an initial environment that accredits learning, review or learn as determined by the test in order to motivate the student who already has a knowledge and attends the required education. The main conclusion of the work is to create learning scenarios through assessing the skills mentioned initially using reagents internationally recognized.},
  address = {New York, NY, USA},
  author = {L\'{o}pez, Arturo Rojas and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012499},
  isbn = {9781450347471},
  keywords = {computational thinking; computer programming course; curriculum design; educational programming; engineering course; engineering education; engineering problems; first year students; higher education; introductory programming course; learning programming; programming; programming teaching; students; teaching; work in progress},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {73–77},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Relationship of knowledge to learn in programming methodology and evaluation of computational thinking},
  url = {https://doi.org/10.1145/3012430.3012499},
  year = {2016}
}

@inproceedings{merged781,
  abstract = {This paper deals with using internet educational videos as a suitable form of e-learning to support the development of computational thinking. In the context of continuous technology development, the demand for IT specialists capable of solving a variety of problems using information technology is increasing. This should make everyday life easier and shorten the time needed to solve these problems. Before someone can become an IT specialist, or at least begin to think as one, they must start building their knowledge. One of the best ways to start can be their own inner motivation or an impulse from their school environment. The goal of this paper is to select appropriate channels for sharing YouTube videos on the server and to describe how they can participate in supporting the development of computational thinking. This article introduces freely available YouTube channels that can be used as a form of e-learning as well as an inspiration for computer science.},
  address = {New York, NY, USA},
  author = {Dragon, Tom\'{a}\v{s}},
  booktitle = {Proceedings of the 2018 2nd International Conference on Education and E-Learning},
  doi = {10.1145/3291078.3291102},
  isbn = {9781450365772},
  keywords = {E-learning; YouTube; computational thinking; programming; videos},
  location = {Bali, Indonesia},
  numpages = {4},
  pages = {22–25},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '18},
  title = {Using Educational Videos on The Internet as A Form of E-Learning to Support the Development of Computational Thinking},
  url = {https://doi.org/10.1145/3291078.3291102},
  year = {2018}
}

@article{merged782,
  abstract = {Recruiting a precollege audience into computing disciplines can be challenging. One approach is to engage those that have a strong influence with the precollege students, K-12 teachers [16]. To engage these teachers, we held a Google-sponsored Computer Science for High School (CS4HS) workshop at our small university. The workshop, scheduled over a two day period, included presentations on the Computer Science Teachers Association (CSTA) K-12 computer science curriculum standards, recruiting woman into computing disciplines, and careers in technology. Additionally, there were hands-on sessions with Scratch programming, FIRST robotics, computer hardware, programming in Excel, and CS Unplugged. A unique aspect of this workshop was that high school, middle school, and elementary school teachers, both in and out of technology-related disciplines, were invited to attend. Another unique aspect of our workshop was the inclusion of several sessions with activities for participants to create action plans for incorporating computational thinking components into the curriculum at their respective schools. This included a presentation from a former school superintendent on how to work with school districts in considering computer science as a component in the curriculum and several small-group working sessions to develop the action plans. Discussions with the attendees and subsequent surveys revealed some surprising information about perceptions that K-12 teachers had surrounding computer science and technology. This paper describes our experience with the workshop.},
  address = {Evansville, IN, USA},
  author = {Pokorny, Kian L. and White, Nathan},
  issn = {1937-4771},
  issue_date = {May 2012},
  journal = {J. Comput. Sci. Coll.},
  month = {May},
  number = {5},
  numpages = {9},
  pages = {234–242},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking outreach: reaching across the K-12 curriculum},
  volume = {27},
  year = {2012}
}

@inproceedings{merged783,
  abstract = {As computer science plays an increasingly large role in our lives, it is important to also move it into our classrooms. Computer science careers are among the fastest growing jobs, yet large groups of the population are severely underrepresented in computer science. Elementary school is a key time to introduce computer science or computational thinking because students are capable of programming and they will soon be deciding whether they see a future in the sciences. Including computational thinking as a part of the elementary school general education would give all children an introduction to the subject. In addition, elementary schools are looking for computational thinking material. We need appropriate, research-based tools and curricula for them to use.Unlike the natural sciences, computer science's domain is pliable. Through language and programming environments, developers can create new ways to represent computational thinking concepts. My research seeks 1) to understand how 4th through 6th grade students learn computational thinking, 2) to develop computational thinking learning progressions and curricula, and 3) to create a language and programming environment suitable for elementary school classes and teachers who do not have a computer science background.},
  address = {New York, NY, USA},
  author = {Hill, Charlotte},
  booktitle = {Proceedings of the Tenth Annual Conference on International Computing Education Research},
  doi = {10.1145/2632320.2632327},
  isbn = {9781450327558},
  keywords = {diversity; k-12 education; outreach},
  location = {Glasgow, Scotland, United Kingdom},
  numpages = {2},
  pages = {151–152},
  publisher = {Association for Computing Machinery},
  series = {ICER '14},
  title = {Computational thinking curriculum development for upper elementary school classes},
  url = {https://doi.org/10.1145/2632320.2632327},
  year = {2014}
}

@inproceedings{merged784,
  abstract = {As computer science (CS) and computational thinking (CT) make their way into all levels of K-12 education, valid assessments aligned with new curricula can assist in measuring student learning, easing the way for adoption of new computing courses, and evaluation of pedagogical approaches for teaching computing ideas and concepts. Without attention to rigorous assessment, CT can have little hope of making its way successfully into K-12 school education settings at scale. This BoF session will involve discussion around ongoing work at SRI International (under several NSF-funded projects) on the design and development of formative and summative assessments for the ECS curriculum. Additionally, various forms of assessment (including free response and multiple-choice questions, and computational artifacts), and insights from past research on their use will be discussed. BOF attendees will be able to discuss multiple viewpoints, connect with others who care about assessment of CT, and share resources and ideas.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi and Bienkowski, Marie and Snow, Eric},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691843},
  isbn = {9781450329668},
  keywords = {assessment; computational thinking; evidence-centered design},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {700},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Assessments for Computational Thinking in K-12 (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2691843},
  year = {2015}
}

@inproceedings{merged785,
  abstract = {Researchers and educators have designed curricula and resources for introductory programming environments such as Scratch, App Inventor, and Kodu to foster computational thinking in K-12. This paper is an empirical study of the effectiveness and usefulness of tiles and flashcards developed for Microsoft Kodu Game Lab to support students in learning how to program and develop games. In particular, we investigated the impact of physical manipulatives on 3rd -- 5th grade students' ability to understand, recognize, construct, and use game programming design patterns. We found that the students who used physical manipulatives performed well in rule construction, whereas the students who engaged more with the rule editor of the programming environment had better mental simulation of the rules and understanding of the concepts.},
  address = {New York, NY, USA},
  author = {Aggarwal, Ashish and Gardner-McCune, Christina and Touretzky, David S.},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3017791},
  isbn = {9781450346986},
  keywords = {K-12; computational thinking; curriculum design; flashcards; kodu; physical manipulatives; tiles},
  location = {Seattle, Washington, USA},
  numpages = {6},
  pages = {9–14},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Evaluating the Effect of Using Physical Manipulatives to Foster Computational Thinking in Elementary School},
  url = {https://doi.org/10.1145/3017680.3017791},
  year = {2017}
}

@inproceedings{merged786,
  abstract = {In this paper, we report the developments of a Computational Thinking Acquisition project carried out in pilot Brazilian schools. The project is a branch of a successful, more than a decade old project in the USA. We present and discuss the factors that led to specific cultural appropriation and diversification of the North American experience. In particular, we explain the kind of technology that has been developed in South America compared to the one developed and used in the USA, and propose that the lessons we have learned in the project's short history in Brazil can already seed the reflection of IT and Education researchers.},
  address = {New York, NY, USA},
  author = {de Souza, Clarisse S. and Salgado, Luciana C. and Leit\~{a}o, Carla F. and Serra, Martha M.},
  booktitle = {Proceedings of the 2014 Conference on Innovation &amp; Technology in Computer Science Education},
  doi = {10.1145/2591708.2591729},
  isbn = {9781450328333},
  keywords = {agentsheets; computational thinking acquisition; programming},
  location = {Uppsala, Sweden},
  numpages = {6},
  pages = {117–122},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '14},
  title = {Cultural appropriation of computational thinking acquisition research: seeding fields of diversity},
  url = {https://doi.org/10.1145/2591708.2591729},
  year = {2014}
}

@inproceedings{merged787,
  abstract = {The K-12 CS Framework provides guidance on what concepts and practices students are expected to know and demonstrate within different grade bands. For these guidelines to be useful in CS education, a critical next step is to translate the guidelines to explicit learning targets and design aligned instructional tools and assessments. Our research and development goal in this paper is to design a playful, curriculum-neutral assessment aligned with the 'Data and Analysis' concept (grades 6-8) from the CS framework. Using Evidence Centered Design and Participatory Design, we present a set of assessment guidelines for assessing data and analysis, as well as a set of design considerations for integrating data and analysis across middle school curricula in CS and non-CS contexts. We outline these contributions, describe how they were applied to the development of a game-based formative assessment for data and analysis, and present preliminary findings on student understanding and challenges inferred from student gameplay.},
  address = {New York, NY, USA},
  author = {Basu, Satabdi and Disalvo, Betsy and Rutstein, Daisy and Xu, Yuning and Roschelle, Jeremy and Holbert, Nathan},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366881},
  isbn = {9781450367936},
  keywords = {cs assessment; data and analysis; evidence centered design; game-based assessment; participatory design},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {985–991},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {The Role of Evidence Centered Design and Participatory Design in a Playful Assessment for Computational Thinking About Data},
  url = {https://doi.org/10.1145/3328778.3366881},
  year = {2020}
}

@inproceedings{merged788,
  abstract = {Computational Thinking (CT) is gaining a lot of attention in education. We explored how to discern the occurrences of CT in the projects of 12th grade high school students in the computer science (CS) course. Within the projects, they constructed models and ran simulations of phenomena from other (STEM) disciplines. We examined which CT aspects occurred in students' activities and how to assess students' CT accomplishments. For this purpose we employed a framework based on CT characterizations by Wing [14, 15], CSTA [4] and Comer et al. [3]. We analyzed students' project documentation, survey results and interviews with individual students. The findings indicate that this framework is suitable for detection of occurrences of CT aspects in students' data. Moreover, our preliminary results suggest that the framework is useful in assessment of the quality of the students' CT performance.},
  address = {New York, NY, USA},
  author = {Grgurina, Nata\v{s}a and Barendsen, Erik and van Veen, Klaas and Suhre, Cor and Zwaneveld, Bert},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818325},
  isbn = {9781450337533},
  keywords = {Computational thinking; computer science education; modeling; simulations; students' learning},
  location = {London, United Kingdom},
  numpages = {4},
  pages = {65–68},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {Exploring Students' Computational Thinking Skills in Modeling and Simulation Projects: a Pilot Study},
  url = {https://doi.org/10.1145/2818314.2818325},
  year = {2015}
}

@inproceedings{merged789,
  address = {New York, NY, USA},
  author = {Lang, Catherine},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3249881},
  isbn = {9781450318686},
  location = {Denver, Colorado, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Session details: Paper - computational thinking},
  url = {https://doi.org/10.1145/3249881},
  year = {2013}
}

@inproceedings{merged790,
  abstract = {For the last 15 years we have been exploring notions of design and social media as means to foster highly engaging as well as effective educational environments. We have created what we call social computational thinking tools with the goal to synthesize human abilities with computer affordances. This presentation will outline three social computational thinking tools and discuss how they have combined notions of design and social media to create unique learning experiences in the classroom:1) Mr. Vetro is a Collective Simulation teaching students about human physiology through technologically enhanced role play of interacting organs,2) Scalable Game Design teaches students computational thinking through game design. They learn about computational thinking patterns in the context of game design and later apply these patterns to scientific simulation building.3) CyberCollage is a Collective Programming environment enabling students to work on game and simulation projects collaboratively in real time.},
  address = {Porto Alegre, BRA},
  author = {Repenning, Alexander},
  booktitle = {Proceedings of the 10th Brazilian Symposium on Human Factors in Computing Systems and the 5th Latin American Conference on Human-Computer Interaction},
  isbn = {9788576692577},
  location = {Porto de Galinhas, Pernambuco, Brazil},
  numpages = {1},
  pages = {1},
  publisher = {Brazilian Computer Society},
  series = {IHC+CLIHC '11},
  title = {Social computational thinking tools: reinventing computation education in public schools},
  year = {2011}
}

@inproceedings{merged791,
  abstract = {SIGCSE members love the beauty of computational thinking. They know the joy of bringing those ideas to young people. That love for computational thinking entails respect for the computational values that empower people in the digital world. For academics, those values have been central to the flowering of computing as an intellectual endeavor. Today, those values are increasingly threatened by stresses from both within and outside academia: squabbles over who owns academic work, increasingly stringent and overreaching intellectual property laws, and the replacement of open computing platforms by closed applications and walled-garden application markets.In this talk I'll describe some things we've done at MIT to support computational values, like open publication of all our course materials, our faculty policy on open publication of academic research, and our recently announced initiative for open online instruction based on non-proprietary software platforms. I'll discuss Creative Commons licensing and Free Software, and the importance of tinkerability for empowering citizens in an information society. And I'll describe App Inventor for Android, a new programming tool motivated by the vision that all of us us can experience mobile computing as creators using tools that we can control and reshape, rather than only as consumers of packaged applications.},
  address = {New York, NY, USA},
  author = {Abelson, Hal},
  booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2157136.2157206},
  isbn = {9781450310987},
  keywords = {keynote},
  location = {Raleigh, North Carolina, USA},
  numpages = {2},
  pages = {239–240},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '12},
  title = {From computational thinking to computational values},
  url = {https://doi.org/10.1145/2157136.2157206},
  year = {2012}
}

@inproceedings{merged792,
  abstract = {Computer scientists are in wide agreement that computational thinking is destined to become a crucial topic in computer science departments. Advocates tout computational thinking as an essential tool for informed citizens of the information age, allowing those citizens to understand the digital infrastructure underlying their lives and also to solve longstanding problems using new computational approaches.},
  address = {New York, NY, USA},
  author = {Xu, Yan and Peters, Joseph and Kirkpatrick, Arthur and O'Neil, Kevin},
  booktitle = {Proceedings of the 14th Western Canadian Conference on Computing Education},
  doi = {10.1145/1536274.1536299},
  isbn = {9781605584157},
  keywords = {computational thinking},
  location = {Burnaby, British Columbia, Canada},
  numpages = {1},
  pages = {81},
  publisher = {Association for Computing Machinery},
  series = {WCCCE '09},
  title = {Computational thinking: special sauce or snake oil?},
  url = {https://doi.org/10.1145/1536274.1536299},
  year = {2009}
}

@inproceedings{merged793,
  abstract = {The Computer Science, Academia and Industry extra-curricular program has been operated for Israeli high school students majoring in computer science. A case study was conducted aimed to identify computational thinking in students' project development processes.},
  address = {New York, NY, USA},
  author = {Meerbaum-Salant, Orni and Haberman, Bruria and Pollack, Sarah},
  booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2729094.2754857},
  isbn = {9781450334402},
  keywords = {computational thinking},
  location = {Vilnius, Lithuania},
  numpages = {1},
  pages = {341},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '15},
  title = {"Computer Science, Academia and Industry" as pedagogical model to enhance Computational thinking},
  url = {https://doi.org/10.1145/2729094.2754857},
  year = {2015}
}

@inproceedings{merged794,
  abstract = {Computational Thinking Through Mobile Computing is an NSF-funded project for introducing students to computational thinking through creating mobile apps. In this hands-on workshop, which is targeted at undergraduate and secondary school computer science teachers, participants will develop Android apps using MIT App Inventor 2. This is a new version of the visual blocks-based programming environment with additional language features (e.g., local variables) and browser-based blocks editing. The workshop will also present pedagogical materials (lessons, tutorials, assignments), evaluation materials (blocks-based quizzes, surveys, project rubrics), and student projects. All of the pedagogical materials presented in the workshop, as well as all of the materials used by the workshop presenters in their individual courses, are posted on the Web and are available to everyone under a Creative Commons license. A laptop is required for this workshop. Each participant will be provided with an Android mobile device to use during the workshop. Participants who have their own Android phones or tablets can use them if they choose. This workshop is based upon work supported by the National Science Foundation under Grant Numbers 1225680, 1225719, 1225745, 1225976, and 1226216.},
  address = {New York, NY, USA},
  author = {Turbak, Franklyn and Martin, Fred and Pokress, Shaileen Crawford and Morelli, Ralph and Sherman, Mark and Wolber, David},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2539023},
  isbn = {9781450326056},
  keywords = {CS0; blocks programming; computational thinking; event-based programming; mobile computing},
  location = {Atlanta, Georgia, USA},
  numpages = {1},
  pages = {745},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Mobile computational thinking with app inventor 2 (abstract only)},
  url = {https://doi.org/10.1145/2538862.2539023},
  year = {2014}
}

@inproceedings{merged795,
  address = {New York, NY, USA},
  articleno = {4},
  author = {J\"{o}rg, Sophie and Leonard, Alison E. and Babu, Sabarish and Gundersen, Kara and Parmar, Dhaval and Boggs, Kevin and Daily, Shaundra Bryant},
  booktitle = {ACM SIGGRAPH 2014 Posters},
  doi = {10.1145/2614217.2630597},
  isbn = {9781450329583},
  location = {Vancouver, Canada},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {SIGGRAPH '14},
  title = {Character animation and embodiment in teaching computational thinking},
  url = {https://doi.org/10.1145/2614217.2630597},
  year = {2014}
}

@inproceedings{merged796,
  abstract = {Computational thinking, a form of thinking and problem solving within computer science, has become a popular focus of research on computer science education. In this paper, we attempt to investigate the role that computational thinking plays in the experience of introductory computer science students at a South African university. To this end, we have designed and administered a test for computational thinking ability, and contrasted the results of this test with the class marks for the students involved. The results of this test give us an initial view of the abilities that students possess when entering the computer science course. The results indicate that students who performed well in the assessment have a favourable pass rate for their class tests, and specific areas of weakness have been identified. Finally, we describe the plan for a follow-up test to take place at the end of the course to determine how students' abilities have changed over a semester of studies.},
  address = {New York, NY, USA},
  author = {Gouws, Lindsey and Bradshaw, Karen and Wentworth, Peter},
  booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
  doi = {10.1145/2513456.2513484},
  isbn = {9781450321129},
  keywords = {computational thinking; computer science education; student evaluation},
  location = {East London, South Africa},
  numpages = {7},
  pages = {271–277},
  publisher = {Association for Computing Machinery},
  series = {SAICSIT '13},
  title = {First year student performance in a test for computational thinking},
  url = {https://doi.org/10.1145/2513456.2513484},
  year = {2013}
}

@inproceedings{merged797,
  abstract = {With the advent of online educational platforms and the advances in pedagogical technologies, self-directed learning has emerged as one of the most popular modes of learning. Distance education---elevated by the COVID-19 pandemic---involves methods of instruction through a variety of remote activities which often rely on educational videos for mastery. In the absence of direct student engagement, the asynchronous nature of remote activities may deteriorate the quality of education for learners. Students often have an illusion of skill acquisition after watching videos, which results in overestimation of abilities and skills. We focus on the efficacy of skill acquisition through interactive technologies and assess their impact on computational thinking in comparison with delivery through other traditional media (e.g. videos and texts). In particular, we investigate the relationship between actual learning, perception of learning, and learners' confidence in adult learners. Our results reveal intriguing observations about the role of interactivity and visualization and their implications on the pedagogical design for self-directed learning modules.},
  address = {New York, NY, USA},
  author = {Bao, Yeting and Hosseini, Hadi},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569749},
  isbn = {9781450394314},
  keywords = {computational thinking; interactive learning; skill acquisition},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {778–784},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Mind the Gap: The Illusion of Skill Acquisition in Computational Thinking},
  url = {https://doi.org/10.1145/3545945.3569749},
  year = {2023}
}

@inproceedings{merged798,
  abstract = {Consider the following scenario: A student is browsing Facebook and sees a strangely compelling image on her friend's page. She follows the "how I made this link" to learn more. She finds herself on a page with a gallery of animations that she browses. Then she sees a "Create" button and clicks it. She skims the instructions and decides that this is not a "standard" graphics program - rather than using a timeline and "tools", it has just a few basic images (e.g., a horizontal blend, a vertical blend, some time-blends) and a few operations that you use to build new images from existing images. She plays a bit. And she finds that she can create some strange and interesting images, but not necessarily the ones she wants to make, and certainly not anything like her friend made. So she looks further. She learns that there are "challenges" that help you learn the system (and, as importantly, that help you consider and master different aspects of computational thinking), and tries to figure out how to make images as seemingly simple as a triangle or a circle using the limited selection of basic images and operations. It's not easy, but she finds it fun to try (and sometimes more fun to fail -- failures also create interesting images). You've just read a sample encounter with the Mathematical Image Synthesis Toolkit, or MIST. MIST is an open-source, Web-based graphics application that takes a constructionist approach in which open experimentation in image making helps students develop skills in computational thinking and deepen their understanding of mathematical functions. MIST is available at http://glimmer.grinnell.edu.},
  address = {New York, NY, USA},
  author = {Fordham, Eileen and Freger, Halley and Hinchman-Dominguez, Amanda and Mitchell, Alexander and Rebelsky, Daniel and Tsou, Victoria and Wheeler, Earnest and Wolter, Zoe and Rebelsky, Samuel A.},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691940},
  isbn = {9781450329668},
  keywords = {animation; computational thinking; constructionism; functional programming; open source; social media; web software},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {690},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Developing Computational Thinking Through Image Making and Constructionist Learning (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2691940},
  year = {2015}
}

@inproceedings{merged799,
  abstract = {In this paper we describe a set of computing activities that were used in an outreach enrichment program for middle school girls. The computing activities used a combination of scaffolded exam-ples and minimalist workbooks to introduce and support interaction with computational thinking (CT) concepts, including problem solving, abstraction and basic computational vocabulary. We describe the activities briefly, followed by a discussion of the girls' experiences, drawing primarily from interviews conducted at the end of each activity.},
  address = {New York, NY, USA},
  author = {Webb, Heidi and Rosson, Mary Beth},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445227},
  isbn = {9781450318686},
  keywords = {middle school girls; scaffolded example; scratch},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {95–100},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Using scaffolded examples to teach computational thinking concepts},
  url = {https://doi.org/10.1145/2445196.2445227},
  year = {2013}
}

@inproceedings{merged800,
  abstract = {We study student understanding of the use of a tree structure in the context of an introductory web development course. In particular, we analyze student answers as they use a tree structure to construct file references in web pages. More fundamentally, our study initiates a bottom-up study of computational thinking by identifying the computational thinking mistakes that students make when they are learning resource referencing for web development. Our preliminary results suggest that students do not necessarily learn abstract concepts (like trees) and abstract rules of reasoning (composing relative and absolute tree paths) by just working with folders and composing file references alone.},
  address = {New York, NY, USA},
  author = {Miller, Craig S. and Perkovi\'{c}, Ljubomir and Settle, Amber},
  booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/1822090.1822128},
  isbn = {9781605588209},
  keywords = {computational thinking; file referencing; tree structures; web development},
  location = {Bilkent, Ankara, Turkey},
  numpages = {5},
  pages = {132–136},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '10},
  title = {File references, trees, and computational thinking},
  url = {https://doi.org/10.1145/1822090.1822128},
  year = {2010}
}

@inproceedings{merged801,
  abstract = {I have recently completed my third year of study in the Educational Psychology and Educational Technology doctoral program at Michigan State University. I have successfully completed all of my coursework and comprehensive/qualifying exams. I will be proposing my dissertation study in the Fall semester of 2016 and expect to defend my dissertation in the Fall semester of 2017. My prior research has been focused on issues related to computational thinking, creativity, and computer science education. I am currently developing my literature review and honing my core research questions. I hope to subsequently develop my research methods and measures more fully, with plans to begin fieldwork in Fall of 2016.},
  address = {New York, NY, USA},
  author = {Good, Jon},
  booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
  doi = {10.1145/2960310.2960346},
  isbn = {9781450344494},
  keywords = {computational thinking; gender equity; secondary education},
  location = {Melbourne, VIC, Australia},
  numpages = {2},
  pages = {277–278},
  publisher = {Association for Computing Machinery},
  series = {ICER '16},
  title = {Computational Thinking as a Computer Science Education Framework and the Related Effects on Gender Equity},
  url = {https://doi.org/10.1145/2960310.2960346},
  year = {2016}
}

@article{merged802,
  address = {New York, NY, USA},
  author = {Armoni, Michal},
  doi = {10.1145/3011071},
  issn = {2153-2184},
  issue_date = {December 2016},
  journal = {ACM Inroads},
  month = {November},
  number = {4},
  numpages = {4},
  pages = {24–27},
  publisher = {Association for Computing Machinery},
  title = {COMPUTING IN SCHOOLSComputer science, computational thinking, programming, coding: the anomalies of transitivity in K-12 computer science education},
  url = {https://doi.org/10.1145/3011071},
  volume = {7},
  year = {2016}
}

@article{merged803,
  abstract = {In this ninth piece to the Ubiquity symposium discussing What is computation? Alfred V. Aho shares his views about the importance of computational thinking in answering the question.  --Editor},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Aho, Alfred V.},
  doi = {10.1145/1922681.1922682},
  issue_date = {January 2011},
  journal = {Ubiquity},
  month = {January},
  number = {January},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  title = {Ubiquity symposium: Computation and Computational Thinking},
  url = {https://doi.org/10.1145/1922681.1922682},
  volume = {2011},
  year = {2011}
}

@inproceedings{merged804,
  address = {New York, NY, USA},
  author = {Pala, Jill},
  booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3258452},
  isbn = {9781450305006},
  location = {Dallas, TX, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '11},
  title = {Session details: Computational thinking},
  url = {https://doi.org/10.1145/3258452},
  year = {2011}
}

@inproceedings{merged805,
  abstract = {: In this paper, we describe the content and evaluation of a Computational Thinking (CS0) course developed to improve the analytical problem solving of students participating in the course. The course is targeted to students who are mathematically under-prepared to enter our introductory programming sequence; however, it has recently been included in the University's general education curriculum so that students majoring in any discipline may take the course. Using the Whimbey Analytical Skills Inventory (WASI) students in the CS0 class, along with students in an analogous level engineering class (FESP), were tested at the beginning of the course and again at the end, using different versions of the test. The improvement in scores was statistically significant when measured by both the student t-test and the Cohen d (effect size) for CS0 students but not for the FESP students, providing support that the course does, in fact, increase student analytical problem solving skills. Courses in Computational Thinking have demonstrated success in many schools; however, this research demonstrates its effectiveness in improving analytical skills in majors as well as non-majors.},
  address = {New York, NY, USA},
  author = {Van Dyne, Michele and Braun, Jeffrey},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2538956},
  isbn = {9781450326056},
  keywords = {CS0; analytical skills; computational thinking; course effectiveness; critical thinking; problem solving},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  pages = {133–138},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Effectiveness of a computational thinking (CS0) course on student analytical skills},
  url = {https://doi.org/10.1145/2538862.2538956},
  year = {2014}
}

@article{merged806,
  abstract = {We introduce workshop participants to Quoridor, a multiplayer strategy game for which we've developed an engine in Greenfoot [1]. We use Greenfoot, an interactive Java development environment designed primarily for educational purpose that allows easy development of two-dimensional graphical applications. Participants will first learn how to play the game and then follow a simple algorithm while playing to demonstrate the type of strategies that can be devised in the game engine. The session will then be divided into groups guided by workshop presenters and focus on developing a strategy and implementing it within the Quoridor engine in Greenfoot. At the end of the workshop, groups will be pitted against each other in a Battle Royal.},
  address = {Evansville, IN, USA},
  author = {Jonas, Michael and Sabin, Mihaela},
  issn = {1937-4771},
  issue_date = {June 2015},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {3},
  pages = {8–10},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking in Greenfoot: AI game strageties for CS1: conference workshop},
  volume = {30},
  year = {2015}
}

@inproceedings{merged807,
  abstract = {A movement to include computer science in K-12 curriculum standards has sparked a significant interest in computational thinking (CT). This paper describes current and future work in the development of visual programming curricula for teaching CT at the K-12 level and self-efficacy surveys for evaluating the effectiveness of the curricula at fostering CT. Current work on a comprehensive system for automated extraction of assessment data for descriptive analytics and visualization is also described. To complement attitude surveys, a translation of Scratch to Blockly is proposed. Data on student programming behaviors at the collegiate level will be collected and quantitatively analyzed to help assess CT in support of self-efficacy.},
  address = {New York, NY, USA},
  author = {Weese, Joshua Levi},
  booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
  doi = {10.1145/2960310.2960347},
  isbn = {9781450344494},
  keywords = {assessment; computational thinking; outreach; self-efficacy},
  location = {Melbourne, VIC, Australia},
  numpages = {2},
  pages = {279–280},
  publisher = {Association for Computing Machinery},
  series = {ICER '16},
  title = {Mixed Methods for the Assessment and Incorporation of Computational Thinking in K-12 and Higher Education},
  url = {https://doi.org/10.1145/2960310.2960347},
  year = {2016}
}

@inproceedings{merged808,
  abstract = {We introduce the Progression of Early Computational Thinking (PECT) Model, a framework for understanding and assessing computational thinking in the primary grades (Grades 1 to 6). The model synthesizes measurable evidence from student work with broader, more abstract coding design patterns, which are then mapped onto computational thinking concepts.We present the results of a pilot-test study of the PECT Model in order to demonstrate its potential efficacy in detecting both differences in computational thinking among students of various ages as well as any clear overall progressions in increasing computational sophistication. Results of this sort are vital for establishing research-based and age-appropriate curricula for students in the primary grades, i.e., developing non-trivial, challenging but not overly daunting lesson plans that utilize the cognitive development stage of each grade level most effectively.},
  address = {New York, NY, USA},
  author = {Seiter, Linda and Foreman, Brendan},
  booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
  doi = {10.1145/2493394.2493403},
  isbn = {9781450322430},
  keywords = {assessment; computational thinking; programming; scratch},
  location = {San Diego, San California, USA},
  numpages = {8},
  pages = {59–66},
  publisher = {Association for Computing Machinery},
  series = {ICER '13},
  title = {Modeling the learning progressions of computational thinking of primary grade students},
  url = {https://doi.org/10.1145/2493394.2493403},
  year = {2013}
}

@inproceedings{merged809,
  abstract = {In this poster, we describe efforts to assess computational thinking activities that can be easily implemented in any science classroom. Studies have shown that a set of conditions must be met for computational thinking tools to be used in K-12 education and that when they are used, there is a wide spectrum in the level of computational thinking that the tool enables. This study extends this work by examining how middle school students translated their science fair projects into Scratch and what evidence of computational thinking is present. Scrape, a tool designed to analyze Scratch projects was used. Overall, it was found that most students simply created a presentation of their project without much complexity. Eight students created interactive projects that required user participation and used more advanced computational concepts. Finally, recommendations are given for next steps in the creation of a series of activities that would scaffold student learning as they apply to computational thinking concepts of a science concept.},
  address = {New York, NY, USA},
  author = {Albert, Jennifer and Peddycord III, Barry and Barnes, Tiffany},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691928},
  isbn = {9781450329668},
  keywords = {computational science; computational thinking; middle school computer education; next generation science standards},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {679},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Evaluating Scratch Programs to Assess Computational Thinking in a Science Lesson (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2691928},
  year = {2015}
}

@inproceedings{merged810,
  address = {New York, NY, USA},
  author = {Craig, Annemieke},
  booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3251961},
  isbn = {9781605588209},
  location = {Bilkent, Ankara, Turkey},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '10},
  title = {Session details: Computational thinking},
  url = {https://doi.org/10.1145/3251961},
  year = {2010}
}

@article{merged811,
  abstract = {This paper presents a small, multi-method case study conducted throughout the spring 2010 semester of CS1: Introduction to Computer Science at the University of Memphis. This study explored students' comprehension of three Computational Thinking concepts: algorithms, abstraction and efficiency. Results indicate that students understand and value the concept of the algorithm but are only beginning to understanding abstraction. In addition, student observations about efficiency represent the true focus of Computational Thinking, i.e., applying computer science concepts to other fields of study. Implications for teaching CS1 and for future research are also considered.},
  address = {Evansville, IN, USA},
  author = {Qualls, Jake A. and Grant, Michael M. and Sherrell, Linda B.},
  issn = {1937-4771},
  issue_date = {May 2011},
  journal = {J. Comput. Sci. Coll.},
  month = {May},
  number = {5},
  numpages = {10},
  pages = {62–71},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {CS1 students' understanding of computational thinking concepts},
  volume = {26},
  year = {2011}
}

@article{merged812,
  abstract = {This panel consists of faculty who jointly worked on a collaborative project connected to an NSF-sponsored interdisciplinary initiative called "Piloting Pathways for Computational Thinking in the Curriculum." Faculty at Towson University from Computer Science, English, Kinesiology, Music, and Sociology jointly formulated courses that involved applying and connecting ideas for analytic and creative purposes across fields. We respectively experimented with identifying concepts and with using these tools in our respective areas or fields; we also worked towards identifying what aspects or features of computational thinking might be generalized for broader educational purposes. The courses included "Everyday Computational Thinking" (Computer Science), "Revolutionary Networks" (Sociology), "Creative Work with Audio and Visual" (Music), "Computational Thinking in the Humanities" (English), and "Developing Life Skills for Weight Management" (Kinesiology). From the perspective of the humanities and music, much was learned by way of the limits of computation as an explanatory model for the expressive dimensions of our fields; that said, much was also learned about how the constraints it presented could enhance and generate new possibilities for analysis and creativity. The more quantitative-based disciplines likewise explored some applications of computational thinking for more dynamic approaches to problem-solving in everyday contexts and lives. The panel will include several faculty involved in the project who will share their experiences and learning outcomes in brief (approximately 10-minute "flash" presentations with lots of handouts), and we will invite audience inquiries about the challenges experienced in collaborating for such an interdisciplinary project and how what we learned will inform future goals and initiatives.},
  address = {Evansville, IN, USA},
  issn = {1937-4771},
  issue_date = {January 2012},
  journal = {J. Comput. Sci. Coll.},
  month = {January},
  number = {3},
  numpages = {2},
  pages = {50–51},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Interdisciplinary experiments in and perspectives on computational thinking},
  volume = {27},
  year = {2012}
}

@inproceedings{merged813,
  address = {New York, NY, USA},
  author = {Curzon, Paul and Peckham, Joan and Taylor, Harriet and Settle, Amber and Roberts, Eric},
  booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/1562877.1562941},
  isbn = {9781605583815},
  keywords = {computational thinking; curriculum; education},
  location = {Paris, France},
  numpages = {2},
  pages = {201–202},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '09},
  title = {Computational thinking (CT): on weaving it in},
  url = {https://doi.org/10.1145/1562877.1562941},
  year = {2009}
}

@inproceedings{merged814,
  abstract = {We describe a three-stage model of computing instruction beginning with a simple, highly scaffolded programming environment (Kodu) and progressing to more challenging frameworks (Alice and Lego NXT-G). In moving between frameworks, students explore the similarities and differences in how concepts such as variables, conditionals, and looping are realized. This can potentially lead to a deeper understanding of programming, bringing students closer to true computational thinking. Some novel strategies for teaching with Kodu are outlined. Finally, we briefly report on our methodology and select preliminary results from a pilot study using this curriculum with students ages 10-17, including several with disabilities.},
  address = {New York, NY, USA},
  author = {Touretzky, David S. and Marghitu, Daniela and Ludi, Stephanie and Bernstein, Debra and Ni, Lijun},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445374},
  isbn = {9781450318686},
  keywords = {Alice; computational thinking; kodu; robotics},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {609–614},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Accelerating K-12 computational thinking using scaffolding, staging, and abstraction},
  url = {https://doi.org/10.1145/2445196.2445374},
  year = {2013}
}

@inproceedings{merged815,
  abstract = {Computational Thinking (CT) has been widely introduced and investigated in recent years, particularly in the U.S. since the born of visual, block-based, drag-drop programming environments such as Kodu, Scratch, Minecraft and App Inventor. Although the user interface is mainly in English, the characteristics of these easy-to-use, game-based, and interactive tools attract many teachers and researchers in the world to pay much attention to the possibilities and opportunities of introducing these tools to students. Recently, some primary school teachers in Hong Kong begin to independently introduce some of these programming tools to students at age 7 - 11 as a part of learning activities in their computer lessons. Their motives are similar but not the same, such as making a fun learning and teaching experience, motivating students for active and collaborative participation, and introducing CT concepts to develop generic skills (e.g. problem solving skills, creativity, and critical thinking). However, there is an absence of well-developed and planned curriculum for "coding education" to introduce computational thinking systematically to students in the local context with expected learning outcomes. Due to the uniqueness of K-12 curriculum in Hong Kong, the existing curriculum model in the U.S. may need to be customized and redesigned to become suitable for integrating into the curriculum in Hong Kong. In this poster, it describes the first proposed coding education curriculum in Hong Kong primary education (Primary 4 to Primary 6) with relevant objectives, structures, contents, and learning outcomes. A new pedagogical design framework for CT is introduced in this poster, which could be generalizable and yet to be evaluated. This new curriculum will serve as the curriculum guide to local teachers, and is the first research initiative of a three-year longitudinal study investigating the impact of CT activities to students particularly in Hong Kong. The experience of this curriculum development for CT concepts in K-12 education can inspire teachers and researchers in other parts of the world when adopting and internationalizing CT activities based on the curriculum model developed under the U.S. education.},
  address = {New York, NY, USA},
  author = {Wong, Gary K.W. and Zhu, Kening and Ma, Xiaojuan and Huen, John},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2850528},
  isbn = {9781450336857},
  keywords = {coding education; computational thinking; international outreach for cs education; k-12 curriculum development},
  location = {Memphis, Tennessee, USA},
  numpages = {1},
  pages = {685},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {The Development of Internationalized Computational Thinking Curriculum in Hong Kong Primary Education (Abstract Only)},
  url = {https://doi.org/10.1145/2839509.2850528},
  year = {2016}
}

@article{merged816,
  abstract = {In an influential 2006 article, Jeanette Wing called for the elaboration of an approach to "computational thinking." Wing argued that computational thinking expresses the importance of computer science to general education, and provides a basis for interdisciplinary collaboration, by setting out the conceptual foundations of computational modeling and reasoning.In this talk, I want to reflect on alternative ways of approaching computational thinking as a site of disciplinary encounter, with a particular focus on the ways that interdisciplinary work might be generative of new forms of computational thinking. This work grows out of a collaboration with colleagues in Australia, whose research is focused on the use of information technology in the cultural practices of indigenous Australian groups, particularly the Yolngu of Northeast Arnhemland. Yolngu epistemology provides an interesting starting point for reconsidering aspects of computational practice, which suggests new perspectives on computational thinking and its practice, and on the possible relationship between computer science and other disciplines.},
  address = {Evansville, IN, USA},
  author = {Dourish, Paul},
  issn = {1937-4771},
  issue_date = {April 2010},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {4},
  numpages = {1},
  pages = {157},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Computational thinking and interdisciplinary encounters: keynote address},
  volume = {25},
  year = {2010}
}

@inproceedings{merged817,
  abstract = {In recent years there have been significant efforts to revamp undergraduate and K-12 curricula to emphasize computational thinking, a term popularized by Jeannette Wing in 2006. We describe work introducing and enhancing computational thinking activities and assessments in the middle- and high-school curriculum at the University of Chicago Lab Schools. In total six courses were altered as a part of the Computational Thinking across the Curriculum Project: middle-school and high-school computer science, and high-school Latin, graphic arts, English, and history. We detail the modifications to the curriculum and discuss the successes and challenges of the project.},
  address = {New York, NY, USA},
  author = {Settle, Amber and Franke, Baker and Hansen, Ruth and Spaltro, Frances and Jurisson, Cynthia and Rennert-May, Colin and Wildeman, Brian},
  booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2325296.2325306},
  isbn = {9781450312462},
  keywords = {computational thinking; computer science; english; graphic arts; high school; history; k-12; latin; middle school},
  location = {Haifa, Israel},
  numpages = {6},
  pages = {22–27},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '12},
  title = {Infusing computational thinking into the middle- and high-school curriculum},
  url = {https://doi.org/10.1145/2325296.2325306},
  year = {2012}
}

@inproceedings{merged818,
  abstract = {To accelerate the adoption of computational thinking (CT), we have developed TuneScope, an online platform for introducing novices to programming in the context of music. TuneScope combines a sound analysis &amp; synthesis tool with Snap!, a computing language developed at the University of California, Berkeley. This demo explores CT concepts such as decomposition, patterns, abstraction, and algorithms in TuneScope while also exploring the creation of four cascading musical components from (1) sequences of notes, (2) musical chords, (3) sampled sounds, and (4) synthesized sounds. The challenge is to design activities that include authentic music learning as well as genuine computational thinking. In this demo, we show concepts around sequence (the order in which musical notes appear in time; and the order of statements in a computer program) and repetition (includes repeats as well as the structure of melodies; and computing loops and recursion). The instructional activities in this demo have been piloted three times in an associated course at the University of Virginia. Data collected from the course suggest a positive effect on both the understanding of CT concepts and the comprehension of music. More detail on TuneScope can be found at https://maketolearn.org/tunescope/.},
  address = {New York, NY, USA},
  author = {Nguyen, N. Rich and Padhye, Harsh and Stein, Eric and Bull, Glen},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499258},
  isbn = {9781450390712},
  keywords = {computational thinking; music; novices; snap; tunescope},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1181},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {TuneScope: Engaging Novices to Computational Thinking through Music},
  url = {https://doi.org/10.1145/3478432.3499258},
  year = {2022}
}

@inbook{merged819,
  abstract = {This paper explores the integration of coding, CT and literacy by describing a study conducted with first and second grade classrooms in Norfolk, Virginia. A total of 667 students and 57 educators from eight elementary schools, as well as 181 students from two comparison schools participated in a curriculum called Coding as Another Language (CAL) that utilizes KIBO robotics, a developmentally appropriate kit which does not require keyboards or screens. CAL positions the teaching of programming as a symbolic system of representation, a tool for creative expression and communication. Thus, research questions regarding the relationship between students' coding and CT outcomes and their literacy skills were explored, as well as teachers' reactions to the experience, in particular regarding the integrating of teaching computer science and literacy in the early grades. Participation in the CAL-KIBO curriculum was associated with improvement in coding and unplugged CT skills. Baseline literacy skills were related to students' acquisition of CT skills. For example, students who had higher literacy scores at the beginning of the term were more successful in CT tasks. Furthermore, although teachers varied in their perceptions of integrating coding and CT with literacy, our findings suggest that these disciplines may share some cognitive and pedagogical overlap that has yet to be extensively explored in the early computing education field.},
  address = {New York, NY, USA},
  author = {Bers, Marina Umaschi and Govind, Madhu and Relkin, Emily},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {9},
  pages = {30–38},
  publisher = {Association for Computing Machinery},
  title = {Coding as another language: computational thinking, robotics and literacy in first and second grade},
  url = {https://doi.org/10.1145/3507951.3519285},
  year = {2022}
}

@article{merged820,
  abstract = {To broaden participation in computing we need to look beyond traditional domains of inquiry and expertise. We present results from a demonstration project in which interactive journalism was used to infuse computational thinking into the standard curriculum and regular classroom experience at a middle school with a diverse population. Outcomes indicate that we were able to develop positive attitudes about computational thinking and programming among students and teachers who did not necessarily view themselves as “math types.” By partnering with language arts, technology and math teachers at Fisher Middle School, Ewing New Jersey, we introduced the isomorphism between the journalistic process and computational thinking to 7th and 8th graders. An intense summer institute, first with the teachers and then with students recruited from the school, immersed them in the “newsroom of the future” where they researched and wrote news stories, shot and edited video, and developed procedural animations in Scratch to support their storylines. An afterschool club sustained the experience. The teachers adapted interactive journalism and Scratch programming to enrich standard language arts curriculum and are infusing computational thinking in classroom experiences throughout the school.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Wolz, Ursula and Stone, Meredith and Pearson, Kim and Pulimood, Sarah Monisha and Switzer, Mary},
  doi = {10.1145/1993069.1993073},
  issue_date = {July 2011},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {K-12 CS Education; Scratch; broadening participation in computing; computational thinking; writing and computing},
  month = {July},
  number = {2},
  numpages = {22},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Expository Writing in the Middle School},
  url = {https://doi.org/10.1145/1993069.1993073},
  volume = {11},
  year = {2011}
}

@inproceedings{merged821,
  abstract = {We describe a framework for implementing computational thinking in a broad variety of general education courses. The framework is designed to be used by faculty without formal training in information technology in order to understand and integrate computational thinking into their own general education courses. The framework includes examples of computational thinking in a variety of general education courses, as well as sample in-class activities, assignments, and other assessments for the courses. The examples in the different courses are related and differentiated using categories taken from Denning Great Principles of Computing, so that similar types of computational thinking appearing in different contexts are brought together. This aids understanding of the computational thinking found in the courses and provides a template for future work on new course materials. Specific examples of computational thinking in the design category are provided in the context of three distinct courses.},
  address = {New York, NY, USA},
  author = {Perkovi\'{c}, Ljubomir and Settle, Amber and Hwang, Sungsoon and Jones, Joshua},
  booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/1822090.1822126},
  isbn = {9781605588209},
  keywords = {computational thinking; general education; great principles of computing},
  location = {Bilkent, Ankara, Turkey},
  numpages = {5},
  pages = {123–127},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '10},
  title = {A framework for computational thinking across the curriculum},
  url = {https://doi.org/10.1145/1822090.1822126},
  year = {2010}
}

@inproceedings{merged822,
  abstract = {This paper describes "Computational Thinking for the Sciences", a 3-day summer workshop for high school science and mathematics teachers. Our workshop emphasizes the deep connections between the natural sciences, mathematics and computer science through activities and simulation development appropriate for scientific explorations. Teachers were exposed to simulation development in VPython, a visual extension to the popular Python programming language. By broadening exposure of computational thinking to the natural sciences and developing activities specifically for science domains, we hope to attract new students into computer science and better prepare natural science students to employ the computational tools they will utilize in the future.},
  address = {New York, NY, USA},
  author = {Ahamed, Sheikh Iqbal and Brylow, Dennis and Ge, Rong and Madiraju, Praveen and Merrill, Stephen J. and Struble, Craig A. and Early, James P.},
  booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1734263.1734277},
  isbn = {9781450300063},
  keywords = {computational thinking; high school mathematics; high school science; k-12 outreach},
  location = {Milwaukee, Wisconsin, USA},
  numpages = {5},
  pages = {42–46},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {Computational thinking for the sciences: a three day workshop for high school science teachers},
  url = {https://doi.org/10.1145/1734263.1734277},
  year = {2010}
}

@inproceedings{merged823,
  abstract = {The purpose of this paper is to present the PhD thesis research plan, which aims to design, integrate and evaluate educational activities mediated by ICT resources and programmable educational robots, in initial education students, obtaining collaborative learning and Training of computational thinking skills. The research will be developed through a mixed methodology, with the intention of being able to carry out a more complete analysis and evaluation of the subject, obtaining data from different sources (teachers, students and coordinators of educational level). Various instruments such as interviews, questionnaires and participant type observation will be used, focusing on teachers and students. In addition, a rubric will be used to evaluate students' performance in the development of learning activities, through the sequential programming of educational robots. The results that will be obtained with this research will allow to carry out a proposal of technological educational action of great quality, based on the benefits and limitations of the integration of ICT resources and programmable Robots, contributing in a significant way to the implementation of new approaches for the Teaching-learning curriculum content from an early age and empowering participants in the development of computational thinking skills and collaborative learning.},
  address = {New York, NY, USA},
  articleno = {103},
  author = {Gonz\'{a}lez, Yen Air Caballero and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel},
  booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3144826.3145450},
  isbn = {9781450353861},
  keywords = {Computational thinking; collaborative learning; programming; robotics; students; teaching},
  location = {C\'{a}diz, Spain},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEEM 2017},
  title = {Development of computational thinking skills and collaborative learning in initial education students through educational activities supported by ICT resources and programmable educational robots},
  url = {https://doi.org/10.1145/3144826.3145450},
  year = {2017}
}

@inproceedings{merged824,
  abstract = {This paper is about the use of live documentation in Computational Thinking Acquisition (CTA) programs with AgentSheets. AgentSheets is a visual programming environment to build games. Based on previous studies showing that semiotic relations among visual game elements could be further explored to the benefit of the learners, we designed PoliFacets, a Web extension to AgentSheets cast as a live conversational document. With it, teachers and learners can follow different threads of conversation about (multiple representations of) game elements and relations between them. We present a qualitative evaluation study of PoliFacets with two experienced AgentSheets instructors and three school teachers trained to coach students in CTA programs. Findings show that although our system has not yet completely fulfilled our design intent, it has led participants to gain relevant insights about their teaching and learning, as well as to articulating doubts and misunderstandings that otherwise could have gone unnoticed.},
  address = {Porto Alegre, BRA},
  author = {Mota, Marcelle Pereira and Faria, Leonardo Serra and de Souza, Clarisse Sieckenius},
  booktitle = {Proceedings of the 11th Brazilian Symposium on Human Factors in Computing Systems},
  isbn = {9788576692621},
  keywords = {agentsheets; computational thinking acquisition; end-user programming; live documentation; metacommunication},
  location = {Cuiaba, Brazil},
  numpages = {10},
  pages = {151–160},
  publisher = {Brazilian Computer Society},
  series = {IHC '12},
  title = {Documentation comes to life in computational thinking acquisition with agentsheets},
  year = {2012}
}

@article{merged825,
  abstract = {There is a growing need to develop courses that demonstrate the articulations between computer science and an array of computing-dependent fields. This hands-on workshop will introduce participants to a model for students and faculty to collaborate across disciplines and with a community organization to develop computational solutions to address complex real-world problems. The strength of this model lies in leveraging existing courses and courseware rather developing new ones. Participants will learn how to develop at their own institutions, similar collaborations that involve computer science, a computing-dependent discipline and a community partner. We will provide access to materials that participants can adapt for their own courses to redesign existing courseware: best practices; pitfalls to be avoided and how to deal with them; instructional materials developed for the courses used in our project; assessment and evaluation instruments developed for the courses used in our project; instructions on adapting the assessment and evaluation instruments for other courses; instructions, documentation, and configuration scripts for using the technology needed for such collaborations. The presenters will share experiences and lead a brainstorming session to design strategies for dealing with challenges and for gaining institutional support for such collaborations. Participants are encouraged to bring their laptops to work on, but this is not required.},
  address = {Evansville, IN, USA},
  author = {Pulimood, S. Monisha and Pearson, Kim and Bates, Diane},
  issn = {1937-4771},
  issue_date = {January 2014},
  journal = {J. Comput. Sci. Coll.},
  month = {January},
  number = {3},
  numpages = {2},
  pages = {9–10},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Refactoring courseware to engage undergraduates in computational thinking across boundaries},
  volume = {29},
  year = {2014}
}

@article{merged826,
  abstract = {Computational thinking knowledge is used to develop solutions for computational problems, such as those found in mathematics and computer science. Over the past several years, workshops on computational thinking and computer science tools have been provided to high school teachers, most recently as part of Google's Computer Science for High School (CS4HS) initiative. The lasting impact of these workshops on the high school teachers and their students after the teacher returns to the classroom is not well known. The computational thinking knowledge and tools of high school teachers in a regional area of the U. S. was assessed during two workshops, one held several months after the other, to determine the utility and benefit, if any, of the workshops for the teachers and their students. The results of this research contribute to understanding the perception of computational thinking and computer science among high school teachers, as well as to the identification of the best tools and resources which high school teachers are most likely to use and which can be used to implement computational thinking in core curriculum standards, including mathematics.},
  address = {Evansville, IN, USA},
  author = {Morreale, Patricia and Goski, Catherine and Jimenez, Luis and Stewart-Gardiner, Carolee},
  issn = {1937-4771},
  issue_date = {June 2012},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {7},
  pages = {151–157},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Measuring the impact of computational thinking workshops on high school teachers},
  volume = {27},
  year = {2012}
}

@article{merged827,
  abstract = {Critical thinking, problem solving, the use of tools, and the ability to consume and analyze information are important skills for the 21st century workforce. This article presents a qualitative case study that follows five undergraduate biology majors in a computer science course (CS0). This CS0 course teaches programming within a data-driven context and is part of a university-wide initiative to improve students' quantitative scholarship. In this course, students learn computing concepts and computational thinking by writing programs in MATLAB that compute with data, by performing meaningful analyses, and by writing about the results. The goal of the study reported here is to better understand the thought processes students use in such a data-driven approach. Findings show that students engage in an ongoing organizational process to understand the structure of the data. The computational and visualization tasks appear to be closely linked, and the visualization component appears to provide valuable feedback for students in accomplishing the programming tasks.},
  address = {New York, NY, USA},
  articleno = {27},
  author = {Yuen, Timothy T. and Robbins, Kay A.},
  doi = {10.1145/2676660},
  issue_date = {February 2015},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational science and science education},
  month = {December},
  number = {4},
  numpages = {19},
  publisher = {Association for Computing Machinery},
  title = {A Qualitative Study of Students' Computational Thinking Skills in a Data-Driven Computing Class},
  url = {https://doi.org/10.1145/2676660},
  volume = {14},
  year = {2014}
}

@inproceedings{merged828,
  abstract = {The main objective of the research is to determine the efficiency of using an environment b-learning in the acquisition of basic skills of programming though customizing the content for each student, to achieve a set of activities that can be used will be designed in the Moodle platform and contribute to teaching an initial programming course, considering three skill levels (basic, intermediate and advanced) of computational thinking of students. A mixed methodology approach will be implemented to achieve the objectives. The quantitative approach, whose characteristics using statistical measure phenomena, experimentation and use cause-effect analysis allow a sequential, deductive and testing process in generating results. The qualitative approach is conducted basically in natural environments and meanings are extracted from data allow a process that context the phenomenon and depth of ideas. To measure the cognitive level of students in computational thinking, instruments will be designed based on the bank of items released by the Computer Olympiad Talent Search in order to have reliable instruments (international proposal), valid (measures learning) and objectives (it focuses on the concept to measure) that they match with contents of subject. The main result is to generate personalized education, a learning experience that contributes to student motivation in tune with the academic goals of initial programming courses.},
  address = {New York, NY, USA},
  author = {L\'{o}pez, Arturo Rojas and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012660},
  isbn = {9781450347471},
  keywords = {computational thinking; computer programming course; curriculum design; educational programming; engineering course; engineering education; higher education; learning programming; programming; programming teaching; students; teaching; work in progress},
  location = {Salamanca, Spain},
  numpages = {7},
  pages = {1139–1145},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Personalized contents based on cognitive level of student's computational thinking for learning basic competencies of programming using an environment b-learning},
  url = {https://doi.org/10.1145/3012430.3012660},
  year = {2016}
}

@article{merged829,
  abstract = {If we are not careful, our fascination with "computational thinking" may lead us back into the trap we are trying to escape.},
  address = {New York, NY, USA},
  author = {Denning, Peter J.},
  doi = {10.1145/1516046.1516054},
  issn = {0001-0782},
  issue_date = {June 2009},
  journal = {Commun. ACM},
  month = {June},
  number = {6},
  numpages = {3},
  pages = {28–30},
  publisher = {Association for Computing Machinery},
  title = {The profession of ITBeyond computational thinking},
  url = {https://doi.org/10.1145/1516046.1516054},
  volume = {52},
  year = {2009}
}

@article{merged830,
  address = {New York, NY, USA},
  author = {Walker, Henry M.},
  doi = {10.1145/2727126},
  issn = {2153-2184},
  issue_date = {March 2015},
  journal = {ACM Inroads},
  keywords = {introductory course; non-majors; pedagogy; programming},
  month = {February},
  number = {1},
  numpages = {4},
  pages = {58–61},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking in a non-majors CS course requires a programming component},
  url = {https://doi.org/10.1145/2727126},
  volume = {6},
  year = {2015}
}

@inproceedings{merged831,
  address = {New York, NY, USA},
  author = {Javidi, Giti},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3255047},
  isbn = {9781450326056},
  location = {Atlanta, Georgia, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Session details: Focus on K-12: outreach and computational thinking},
  url = {https://doi.org/10.1145/3255047},
  year = {2014}
}

@inproceedings{merged832,
  abstract = {To address the critical shortage of students entering computing fields, as well as broaden participation in computing, we present a summer and afterschool program in Interactive Journalism through which middle school students and their teachers develop an appreciation for and competence in computational thinking. We report on the outcomes of our first year in which three middle school language arts teachers, a technology teacher and a guidance counselor collaborate with college faculty to publish a school magazine of the future. Students and their teachers research and conduct interviews to develop news stories that are then presented as story packages with text, video, and procedural animations in Scratch. Results of formal data collection show changes in students' perceptions of what it means to program, as well as their emerging confidence in their ability to design computational solutions and to program.},
  address = {New York, NY, USA},
  author = {Wolz, Ursula and Stone, Meredith and Pulimood, Sarah M. and Pearson, Kim},
  booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1734263.1734345},
  isbn = {9781450300063},
  keywords = {broadening participation in computing; computational thinking; k-12 cs education; scratch; writing and computing},
  location = {Milwaukee, Wisconsin, USA},
  numpages = {5},
  pages = {239–243},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {Computational thinking via interactive journalism in middle school},
  url = {https://doi.org/10.1145/1734263.1734345},
  year = {2010}
}

@article{merged833,
  abstract = {Computational Thinking has emerged as an enduring metaphor in teaching and thinking about Computer Science since Jeanette Wing brought the term to our attention in a 2006 CACM article. Computational thinking involves abstraction, but a definition that is too abstract does not help in explaining computational thinking to someone who doesn't already have an intuitive idea of what it is:},
  address = {Evansville, IN, USA},
  author = {Astrachan, Owen},
  issn = {1937-4771},
  issue_date = {October 2009},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {1},
  numpages = {1},
  pages = {6},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {A new way of thinking about computational thinking},
  volume = {25},
  year = {2009}
}

@inproceedings{merged834,
  abstract = {Modern biology has transformed from an insular entity into an interdisciplinary science, which in turn demands interdisciplinary and cross-disciplinary training for future work force in biology and life sciences. Computational thinking is a way of thinking that uses concepts and methodologies of computing to address questions in a broad range of subjects, and as such, computational thinking offers an important skill set in modern sciences. Despite its importance, the concept of computational thinking has generally been side-stepped in undergraduate biology education. Many students in life sciences are often weak in quantitative/computing skills and tend to avoid computing-orient courses. To address these issues, we incorporated computational thinking into a bioinformatics course for undergraduate life science majors. We developed comprehensive computer laboratory exercises that offer hands-on learning experience for the targeted student pool, and employed peer-assisted collaborative learning environment. Preliminary results of these explorative efforts will be helpful for others to teach computational thinking to biology students.},
  address = {New York, NY, USA},
  author = {Qin, Hong},
  booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1508865.1508932},
  isbn = {9781605581835},
  keywords = {bioinformatics; computational thinking; life sciences},
  location = {Chattanooga, TN, USA},
  numpages = {4},
  pages = {188–191},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '09},
  title = {Teaching computational thinking through bioinformatics to biology students},
  url = {https://doi.org/10.1145/1508865.1508932},
  year = {2009}
}

@inproceedings{merged835,
  abstract = {K-12 classrooms use block-based programming environments (BBPEs) for teaching computer science and computational thinking (CT). To support assessment of student learning in BBPEs, we propose a learning analytics framework that combines hypothesis- and data-driven approaches to discern students' programming strategies from BBPE log data. We use a principled approach to design assessment tasks to elicit evidence of specific CT skills. Piloting these tasks in high school classrooms enabled us to analyze student programs and video recordings of students as they built their programs. We discuss a priori patterns derived from this analysis to support data-driven analysis of log data in order to better assess understanding and use of CT in BBPEs.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi and Bienkowski, Marie and Basu, Satabdi and Eagle, Michael and Diana, Nicholas and Stamper, John},
  booktitle = {Proceedings of the Seventh International Learning Analytics &amp; Knowledge Conference},
  doi = {10.1145/3027385.3029440},
  isbn = {9781450348706},
  location = {Vancouver, British Columbia, Canada},
  numpages = {2},
  pages = {530–531},
  publisher = {Association for Computing Machinery},
  series = {LAK '17},
  title = {A framework for hypothesis-driven approaches to support data-driven learning analytics in measuring computational thinking in block-based programming},
  url = {https://doi.org/10.1145/3027385.3029440},
  year = {2017}
}

@article{merged836,
  abstract = {The process of increasing student exposure to computational thinking in K-12 is complex, requiring systemic change, teacher engagement, and development of signifi cant resources. Collaboration with the computer science education community is vital to this effort.},
  address = {New York, NY, USA},
  author = {Barr, Valerie and Stephenson, Chris},
  doi = {10.1145/1929887.1929905},
  issn = {2153-2184},
  issue_date = {March 2011},
  journal = {ACM Inroads},
  keywords = {K-12 CS Education; K-12 curriculum; computational thinking; cross-disciplinary computing},
  month = {February},
  number = {1},
  numpages = {7},
  pages = {48–54},
  publisher = {Association for Computing Machinery},
  title = {Bringing computational thinking to K-12: what is Involved and what is the role of the computer science education community?},
  url = {https://doi.org/10.1145/1929887.1929905},
  volume = {2},
  year = {2011}
}

@inproceedings{merged837,
  abstract = {General education students can be taught computational thinking skills through courses that marry computer programming with algorithmic art. Algorithmic art is a varied and growing field where images are generated on the computer using mathematical and computer algorithms (see http://processing.org/exhibition/index.html for examples). Visually oriented students may be motivated to learn programming when it is taught in a context that is as much focused on art, artists, and design principles as it is on mathematics and programming. This presentation will include 1) a discussion of the challenges of teaching programming, 2) the role of teaching style, motivation, and programming environment, 3) a summary of common algorithms and their relation to design principles, and 4) examples of artwork that has been created by current artists.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {Orr, Genevieve},
  booktitle = {SIGGRAPH 2009: Talks},
  doi = {10.1145/1597990.1598021},
  isbn = {9781605588346},
  location = {New Orleans, Louisiana},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {SIGGRAPH '09},
  title = {Computational thinking through programming and algorithmic art},
  url = {https://doi.org/10.1145/1597990.1598021},
  year = {2009}
}

@article{merged838,
  abstract = {Systematic endeavors to take computer science (CS) and computational thinking (CT) to scale in middle and high school classrooms are underway with curricula that emphasize the enactment of authentic CT skills, especially in the context of programming in block-based programming environments. There is, therefore, a growing need to measure students’ learning of CT in the context of programming and also support all learners through this process of learning computational problem solving. The goal of this research is to explore hypothesis-driven approaches that can be combined with data-driven ones to better interpret student actions and processes in log data captured from block-based programming environments with the goal of measuring and assessing students’ CT skills. Informed by past literature and based on our empirical work examining a dataset from the use of the Fairy Assessment in the Alice programming environment in middle schools, we present a framework that formalizes a process where a hypothesis-driven approach informed by Evidence-Centered Design effectively complements data-driven learning analytics in interpreting students’ programming process and assessing CT in block-based programming environments. We apply the framework to the design of Alice tasks for high school CS to be used for measuring CT during programming.},
  address = {New York, NY, USA},
  articleno = {14},
  author = {Grover, Shuchi and Basu, Satabdi and Bienkowski, Marie and Eagle, Michael and Diana, Nicholas and Stamper, John},
  doi = {10.1145/3105910},
  issue_date = {September 2017},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Blended learning analytics; K-12 computer science education; block-based programming environments; computational psychometrics; data-driven; evidence-centered design; hypothesis-driven},
  month = {August},
  number = {3},
  numpages = {25},
  publisher = {Association for Computing Machinery},
  title = {A Framework for Using Hypothesis-Driven Approaches to Support Data-Driven Learning Analytics in Measuring Computational Thinking in Block-Based Programming Environments},
  url = {https://doi.org/10.1145/3105910},
  volume = {17},
  year = {2017}
}

@article{merged839,
  abstract = {Even before entering middle school students have been exposed to some of the conceptual methods and skill sets that underlie computational thinking (CT). For example, elementary school aged children begin using problem-solving and abstraction in Mathematics, English and Geography when they study word problems, learn about sentence structures and grammar rules, and work with maps. However, prior to middle school the problem sets tend to be concrete and scaffolded to aid the student in learning the foundations needed to work with complex problems. As children develop their cognitive capacities, they should be able to explore and learn about CT in a more abstract and generalizable fashion. However, when computing technology is added to the design and implementation of a solution it can be overwhelming for those who may not be comfortable turning to technology for answers. For this reason, problem solving can be difficult for young people who haven't learned the role technology may have in their lives now or in the future.},
  address = {Evansville, IN, USA},
  author = {Webb, Heidi},
  issn = {1937-4771},
  issue_date = {January 2013},
  journal = {J. Comput. Sci. Coll.},
  month = {January},
  number = {3},
  numpages = {2},
  pages = {102–103},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Engaging and motivating computing activities with computational thinking concepts you can use},
  volume = {28},
  year = {2013}
}

@article{merged840,
  abstract = {Computational Thinking (CT) is an approach to problem solving that consolidates logic skills with core computer science concepts. This survey paper reviews recent efforts to integrate CT into primary, secondary and post-secondary curricula. The paper should prove beneficial to instructors interested in investigating this important topic.},
  address = {Evansville, IN, USA},
  author = {Qualls, Jake A. and Sherrell, Linda B.},
  issn = {1937-4771},
  issue_date = {May 2010},
  journal = {J. Comput. Sci. Coll.},
  month = {May},
  number = {5},
  numpages = {6},
  pages = {66–71},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Why computational thinking should be integrated into the curriculum},
  volume = {25},
  year = {2010}
}

@inproceedings{merged841,
  abstract = {We describe an innovative educational system designed to, firstly, motivate young people to engage with computational concepts and secondly, provide them with tools to do so in an embodied manner. The interface is designed as a "magic mirror" in which users can, through augmented reality technology, take on the role of a character and control the character's movements via their own movements. They are able to record movements, and using a Wii Remote as a mouse and pointing device, organise these movements into sequences. We are now working on ways in which the recorded movements can be manipulated in ways that foster computational thinking.},
  address = {New York, NY, USA},
  author = {Good, Judith and Romero, Pablo and du Boulay, Benedict and Reid, Henry and Howland, Katherine and Robertson, Judy},
  booktitle = {Proceedings of the 13th International Conference on Intelligent User Interfaces},
  doi = {10.1145/1378773.1378823},
  isbn = {9781595939876},
  keywords = {Embodied interfaces; augmented reality; computational thinking},
  location = {Gran Canaria, Spain},
  numpages = {4},
  pages = {333–336},
  publisher = {Association for Computing Machinery},
  series = {IUI '08},
  title = {An embodied interface for teaching computational thinking},
  url = {https://doi.org/10.1145/1378773.1378823},
  year = {2008}
}

@inproceedings{merged842,
  abstract = {As the theme of the conference indicates, computing is changing and so is its pedagogy. In the meantime, many computer science departments teach computer fluency service courses required by their universities, colleges, or other departments, in which the content of the course becomes highly challenged by institutional constraints (e.g. class size, university computer literacy requirement, etc.). This birds-of-a-feather is designed to gather educators who have been teaching fluency courses or may be teaching such courses in the future, so that they can share their experiences, learn from one another, and discuss the most effective ways of affecting change and delivering the content they deem most appropriate.},
  address = {New York, NY, USA},
  author = {Sobolewska, Monika},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445479},
  isbn = {9781450318686},
  keywords = {computational thinking; computer fluency; computer literacy; curriculum issues; non-majors},
  location = {Denver, Colorado, USA},
  numpages = {1},
  pages = {751},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Logistics of moving from computer fluency to computational thinking (abstract only)},
  url = {https://doi.org/10.1145/2445196.2445479},
  year = {2013}
}

@inproceedings{merged843,
  abstract = {Experience with the first offering of a computational thinking course for computer science (CT4CS) students is reported. The course is grounded in student interaction with fundamental, recurring concepts suggested by comparison with two sets of computer science principles. By using specialized, freely available tools and physical simulations it is possible to provide concrete, tangible learning experiences that neither require knowledge of nor the overhead of programming. Student end-of-term reflections indicate that the course deepened and broadened their understanding of computer science even when they had previously encountered a topic, and improved their computer science vocabulary.},
  address = {New York, NY, USA},
  author = {Kafura, Dennis and Tatar, Deborah},
  booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1953163.1953242},
  isbn = {9781450305006},
  keywords = {CS0; computational thinking; curriculum; pedagogy},
  location = {Dallas, TX, USA},
  numpages = {6},
  pages = {251–256},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '11},
  title = {Initial experience with a computational thinking course for computer science students},
  url = {https://doi.org/10.1145/1953163.1953242},
  year = {2011}
}

@inproceedings{merged844,
  abstract = {A key challenge for the Chinese educational system is the development of a CS1 course for non-major college students that can meet the unique environment in our country. In mainland China, CS1 is required of all freshmen at their first semester, approximately 7 million freshmen per year. We have named this CS1 course "Fundamentals of University Computer Science" to reflect our ambitions to bring our students to the cutting edge of information technology and society. Over the past few years, many Chinese universities have advanced and experimented with their ideas for introducing computational thinking into CS1, one of the most important core courses. In this BOF session, we want share our ideas and concrete solutions and to engage in dialogue with our international colleagues in order to enrich and improve our approach. This BOF Session is sponsored by the ACM China Subcommittee on Education.},
  address = {New York, NY, USA},
  author = {Zhang, Ming and Li, Bo and Lo, Ginnie},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2544246},
  isbn = {9781450326056},
  keywords = {computational thinking; cs1 course; problem solving},
  location = {Atlanta, Georgia, USA},
  numpages = {1},
  pages = {730},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {China's perspective from the viewpoint of computational thinking on CS1 for non-majors (abstract only)},
  url = {https://doi.org/10.1145/2538862.2544246},
  year = {2014}
}

@inproceedings{merged845,
  address = {New York, NY, USA},
  author = {Astrachan, Owen and Hambrusch, Susanne and Peckham, Joan and Settle, Amber},
  booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1508865.1509053},
  isbn = {9781605581835},
  keywords = {computational thinking; curriculum; education},
  location = {Chattanooga, TN, USA},
  numpages = {2},
  pages = {549–550},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '09},
  title = {The present and future of computational thinking},
  url = {https://doi.org/10.1145/1508865.1509053},
  year = {2009}
}

@inproceedings{merged846,
  abstract = {The NSF-funded Northwest Distributed Computer Science Department (NW-DCSD) project brings together 24 multi-disciplinary faculty from 19 diverse colleges and universities in an effort to change the face of computing in the Pacific Northwest region of the United States. We offer an innovative and inclusive vision of computing in the 21st century and foster opportunities for multi-disciplinary and inter-institutional computing and computer science education collaborations. Over the project's first two years, this community has created 9 engaging, easy-to-use learning modules that teach various levels of computational thinking to two different audiences: non-computer science and computer science undergraduate students. This paper presents the development of a community definition of computational thinking, the learning modules, initial findings, unanticipated challenges, and next steps.},
  address = {New York, NY, USA},
  author = {Ater-Kranov, Ashley and Bryant, Robert and Orr, Genevieve and Wallace, Scott and Zhang, Mo},
  booktitle = {Proceedings of the 2010 ACM Conference on Information Technology Education},
  doi = {10.1145/1867651.1867689},
  isbn = {9781450303439},
  keywords = {CPATH; NW-DCSD; computational thinking; computing education modules},
  location = {Midland, Michigan, USA},
  numpages = {6},
  pages = {143–148},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '10},
  title = {Developing a community definition and teaching modules for computational thinking: accomplishments and challenges},
  url = {https://doi.org/10.1145/1867651.1867689},
  year = {2010}
}

@inproceedings{merged847,
  address = {New York, NY, USA},
  author = {Henderson, Peter},
  booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3255310},
  isbn = {1595933611},
  location = {Covington, Kentucky, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '07},
  title = {Session details: Computational thinking},
  url = {https://doi.org/10.1145/3255310},
  year = {2007}
}

@article{merged848,
  address = {New York, NY, USA},
  author = {Henderson, Peter},
  doi = {10.1145/3263098},
  issn = {0097-8418},
  issue_date = {March 2007},
  journal = {SIGCSE Bull.},
  month = {March},
  number = {1},
  publisher = {Association for Computing Machinery},
  title = {Session details: Computational thinking},
  url = {https://doi.org/10.1145/3263098},
  volume = {39},
  year = {2007}
}

@inproceedings{merged849,
  abstract = {This paper describes the development and initial evaluation of a new course ``Introduction to Computational Thinking'' taken by science majors to fulfill a college computing requirement. The course was developed by computer science faculty in collaboration with science faculty and it focuses on the role of computing and computational principles in scientific inquiry. It uses Python and Python libraries to teach computational thinking via basic programming concepts, data management concepts, simulation, and visualization. Problems with a computational aspect are drawn from different scientific disciplines and are complemented with lectures from faculty in those areas. Our initial evaluation indicates that the problem-driven approach focused on scientific discovery and computational principles increases the student's interest in computing.},
  address = {New York, NY, USA},
  author = {Hambrusch, Susanne and Hoffmann, Christoph and Korb, John T. and Haugan, Mark and Hosking, Antony L.},
  booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1508865.1508931},
  isbn = {9781605581835},
  keywords = {computational thinking; computing for scientists; curriculum; multi-disciplinary},
  location = {Chattanooga, TN, USA},
  numpages = {5},
  pages = {183–187},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '09},
  title = {A multidisciplinary approach towards computational thinking for science majors},
  url = {https://doi.org/10.1145/1508865.1508931},
  year = {2009}
}

@inproceedings{merged850,
  address = {New York, NY, USA},
  author = {Rabung, John},
  booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3247314},
  isbn = {9781605581835},
  location = {Chattanooga, TN, USA},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '09},
  title = {Session details: Computational thinking across disciplines},
  url = {https://doi.org/10.1145/3247314},
  year = {2009}
}

@article{merged851,
  address = {New York, NY, USA},
  author = {Rabung, John},
  doi = {10.1145/3264085},
  issn = {0097-8418},
  issue_date = {March 2009},
  journal = {SIGCSE Bull.},
  month = {March},
  number = {1},
  publisher = {Association for Computing Machinery},
  title = {Session details: Computational thinking across disciplines},
  url = {https://doi.org/10.1145/3264085},
  volume = {41},
  year = {2009}
}

@article{merged852,
  abstract = {Visual Sensor Networks (VSNs) are comprised of camera nodes that are capable of acquiring, distributing, and processing images. Thus, providing rich information about a given event. However, image sensing is an extremely powerful electrical consuming mechanism, causing visual sensor networks to indirectly contribute to greenhouse gas emissions. As our society adopts emerging technologies central to the field of Internet of Things (IoTs) such as smart homes and smart surveillance systems, it is imperative to consider energy consumption and efficiency to create environmentally friendly technology. In this study, we will investigate the environmental footprint of visual sensors and develop a program that optimizes object tracking and energy efficiency via computational thinking. The energy consumption of a PixyCam2 will be measured with a multi-meter while performing several algorithms to analyze various metrics central to the visual sensor's functionality.},
  address = {Evansville, IN, USA},
  author = {Brown-Gaines, Tisha},
  issn = {1937-4771},
  issue_date = {October 2021},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {1},
  numpages = {7},
  pages = {71–77},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Visual sensor networks: analysis of environmental impacts via computational thinking},
  volume = {37},
  year = {2021}
}

@inproceedings{merged853,
  abstract = {Computational thinking has been identified as a necessary fundamental skill for all students. University curricula, however, are currently not designed to provide such knowledge to a broad student population. In this paper, we report on our experiences in the development of a model for incorporating computational thinking into the undergraduate, general education curriculum at Towson University. We discuss the model in terms of eliciting faculty interest, institutional support, and positive student response. In the first two years of this NSF-funded three-year project, we have developed, piloted and assessed five computational thinking general education courses - an Everyday Computational Thinking course, and four discipline-specific computational thinking general education courses. Initial assessments show promising and significant student, instructor and administration interest in computational thinking as a basis in courses covering multiple disciplines within the general education curriculum.},
  address = {New York, NY, USA},
  author = {Dierbach, Charles and Hochheiser, Harry and Collins, Samuel and Jerome, Gerald and Ariza, Christopher and Kelleher, Tina and Kleinsasser, William and Dehlinger, Josh and Kaza, Siddharth},
  booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1953163.1953243},
  isbn = {9781450305006},
  keywords = {computational thinking; curriculum design},
  location = {Dallas, TX, USA},
  numpages = {6},
  pages = {257–262},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '11},
  title = {A model for piloting pathways for computational thinking in a general education curriculum},
  url = {https://doi.org/10.1145/1953163.1953243},
  year = {2011}
}

@inproceedings{merged854,
  abstract = {Computational thinking is now included in K-5 classrooms and this has led to a demand for new interactive and collaborative learning tools that engage a younger audience. Block-based programming and educational games have both been shown to be effective at engaging children, however they have limitations with respect to supporting collaborative learning and equitable access. Our goal in designing Run, Llama, Run was to build on the positive aspects of block-based programming and educational games while also addressing these limitations. Furthermore, we are using Run, Llama, Run as a platform to explore the trade-offs between digital and tangible interfaces to understand how best to support equitable access while maintaining learning, engagement, and collaboration.},
  address = {New York, NY, USA},
  author = {Koornneef, Stacey A. and Bradbury, Jeremy S. and Miljanovic, Michael A.},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576339},
  isbn = {9781450394338},
  keywords = {block-based programming; computational thinking; educational games; equitable access; tangible programming},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1395},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Run, Llama, Run: A Computational Thinking Game for K-5 Students Designed to Support Equitable Access},
  url = {https://doi.org/10.1145/3545947.3576339},
  year = {2023}
}

@article{merged855,
  abstract = {Interest in specific college majors begins in high school. The influence of high school math and science teachers is important, both for high school preparation of future computer science undergraduates, and for the understanding and interest in prospective majors high school teachers can encourage in their students. With the simultaneous decline in high school computer science curriculum offerings and undergraduate majors in computer science, an effort has been made to update the perception of computer science and computational thinking among high school teachers by hosting local non-residential summer workshops for high school teachers and their students.Pre- and post- workshop surveys show that the summer workshops have changed the perceptions high school teachers had regarding careers in computer science, resulting in a 50% increase in the likelihood that a high school teacher would recommend computer science, computational science, or information technology to their students as a career. By changing teacher perceptions of computer science and computational thinking, high school teachers are more likely to include computer science as one of the college majors suggested to their students.},
  address = {Evansville, IN, USA},
  author = {Morreale, Patricia and Joiner, David},
  issn = {1937-4771},
  issue_date = {June 2011},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {7},
  pages = {71–77},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Changing perceptions of computer science and computational thinking among high school teachers},
  volume = {26},
  year = {2011}
}

@article{merged856,
  abstract = {Drawing on methods from diverse disciplines---including computer science, education, sociology, and psychology---to improve computing education.},
  address = {New York, NY, USA},
  author = {Guzdial, Mark},
  doi = {10.1145/1378704.1378713},
  issn = {0001-0782},
  issue_date = {August 2008},
  journal = {Commun. ACM},
  month = {August},
  number = {8},
  numpages = {3},
  pages = {25–27},
  publisher = {Association for Computing Machinery},
  title = {EducationPaving the way for computational thinking},
  url = {https://doi.org/10.1145/1378704.1378713},
  volume = {51},
  year = {2008}
}

@inproceedings{merged857,
  abstract = {This paper discusses our ongoing experiences in developing an interdisciplinary general education course called Sound Thinking that is offered jointly by our Dept. of Computer Science and Dept. of Music. It focuses on the student outcomes we are trying to achieve and the projects we are using to help students realize those outcomes. It explains why we are moving from a web-based environment using HTML and JavaScript to Scratch and discusses the potential for Scratch's "musical live coding" capability to reinforce those concepts even more strongly.},
  address = {New York, NY, USA},
  author = {Ruthmann, Alex and Heines, Jesse M. and Greher, Gena R. and Laidler, Paul and Saulters, Charles},
  booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1734263.1734384},
  isbn = {9781450300063},
  keywords = {computer science education; curriculum design; generative music; interdisciplinary courses; musical live coding; performamatics; scratch},
  location = {Milwaukee, Wisconsin, USA},
  numpages = {5},
  pages = {351–355},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {Teaching computational thinking through musical live coding in scratch},
  url = {https://doi.org/10.1145/1734263.1734384},
  year = {2010}
}

@inproceedings{merged858,
  abstract = {The Sol y Agua researcher-practitioner partnership (RPP) project introduces computational thinking (CT) in the middle school of the Paso del Norte region using a linguistically and culturally responsive approach. At the core of this RPP is the Sol y Agua game, a bilingual, culturally- and environmentally-relevant educational game developed at the University of Texas at El Paso to introduce computing and STEM topics in middle school. The Sol y Agua RPP includes some critical areas for a successful RPP, including partnership building and the focus on a linguistically and culturally-responsive pedagogy and content development. We describe our approach to build a sustainable RPP, incorporating bilingual pedagogy, and integrating CT through a culturally- and environmentally-relevant game as part of our RPP experience.},
  address = {New York, NY, USA},
  author = {Akbar, Monika and Mortimer, Katherine and Navarrete, Grecia and Galvan, Stephanie and Molina, George and Reyes, Romelia and Ontiveros, Cynthia and Gray, Scott and Escandon, Sarah and Lyons, Monica and Delgado, Pedro and Medrano, Victor and Kneedler, Haleigh and Benitez, Patricia and Ramirez, Jacob and Vazquez, Jesus and Anderson, Melissa},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499050},
  isbn = {9781450390712},
  keywords = {bpc; computational thinking; ell; pbl; rpp; translanguaging},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1096},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {The Sol y Agua RPP: A Bilingual and Culturally Responsive Approach to Introduce Computational Thinking in Middle School},
  url = {https://doi.org/10.1145/3478432.3499050},
  year = {2022}
}

@inproceedings{merged859,
  abstract = {The shaping of Smart Textile artefacts brings together a variety of learning activities, such as imagining, designing, drawing, constructing, wiring, programming, controlling, testing, debugging and presenting self-made, invented media objects, realized in project- and team based arrangements. A variety of human senses are addressed when pupils develop and sketch their project ideas to be realized. In the paper, we discuss the topic of self-made Smart Textile objects as a learning content for primary school level, towards the development of curriculum modules for project learning in the classroom as well as teacher training. It was developed in the 'Teachers Aids on Creating Contents for Learning Environments' TACCLE3 coding project.},
  address = {New York, NY, USA},
  author = {Reimann, Daniela and Maday, Christiane},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012493},
  isbn = {9781450347471},
  keywords = {art and design based learning; contextualized learning; cross-disciplinary learning; physical computing; smart textile; tangible media; wearables},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {31–35},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Smart textile objects and conductible ink as a context for arts based teaching and learning of computational thinking at primary school},
  url = {https://doi.org/10.1145/3012430.3012493},
  year = {2016}
}

@inproceedings{merged860,
  abstract = {Despite the increasing attention to infusing CT into middle and high school content area classrooms, there is a lack of information about the most effective practices and models to support teachers in their efforts to integrate disciplinary content and CT principles. To address this need, this paper proposes the Code, Connect and Create (3C) professional development (PD) model, which was designed to support middle and high school content area teachers in infusing computational thinking into their classrooms. To evaluate the model, we analyzed quantitative and qualitative data collected from Infusing Computing PD workshops designed for in-service science, math, English language arts, and social studies teachers located in two Southeastern states. Drawing on findings from our analysis of teacher-created learning segments, surveys, and interviews, we argue that the 3C professional development model supported shifts in teacher understandings of the role of computational thinking in content area classrooms, as well as their self-efficacy and beliefs regarding CT integration into disciplinary content. We conclude by offering implications for the use of this model to increase teacher and student access to computational thinking practices in middle and high school classrooms.},
  address = {New York, NY, USA},
  author = {Jocius, Robin and Joshi, Deepti and Dong, Yihuan and Robinson, Richard and Catet\'{e}, Veronica and Barnes, Tiffany and Albert, Jennifer and Andrews, Ashley and Lytle, Nicholas},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366797},
  isbn = {9781450367936},
  keywords = {computational thinking; k-12 computing; professional development; teacher education},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {971–977},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Code, Connect, Create: The 3C Professional Development Model to Support Computational Thinking Infusion},
  url = {https://doi.org/10.1145/3328778.3366797},
  year = {2020}
}

@inproceedings{merged861,
  abstract = {Computational thinking skills will be important for the next generation of students. However, there is a disparity in the populations joining the field. Integrating computational thinking into artistic fields has shown to increase participation in computer science. In this paper, we present our initial design prototype for TunePad, a sound composition tablet application controlled by a block-based programming environment. TunePad is designed to introduce learners to computational thinking and to prepare them for text-based coding environments. From our preliminary testing, with children ages 7-14, we observed that our design actively engages learners and communicates how the programming blocks control the sounds being played. This testing is a prelude to more formal studies as we continue to improve the design and interface of TunePad. With this work, we intend to engage students in computational thinking who may not have otherwise been exposed, giving the opportunity to more people to enter the computer science field.},
  address = {New York, NY, USA},
  author = {Gorson, Jamie and Patel, Nikita and Beheshti, Elham and Magerko, Brian and Horn, Michael},
  booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
  doi = {10.1145/3078072.3084313},
  isbn = {9781450349215},
  keywords = {broadening participation; computational thinking; cs education; music composition; steam},
  location = {Stanford, California, USA},
  numpages = {6},
  pages = {484–489},
  publisher = {Association for Computing Machinery},
  series = {IDC '17},
  title = {TunePad: Computational Thinking Through Sound Composition},
  url = {https://doi.org/10.1145/3078072.3084313},
  year = {2017}
}

@article{merged862,
  abstract = {When middle school students encounter computer models of science phenomenon in science class, how do they think those computer models work? Computer models operationalize real-world behaviors of selected variables, and can simulate interactions between the modeled elements through programmed instructions. This study explores how middle school students think about the high-level semantic meaning of those instructions, which we term rules. To investigate this aspect of students’ computational thinking, we developed the Computational Modeling Inventory and administered it to 253 7th grade students. The Inventory included three computer models that students interacted with during the assessment. In our sample, 99% of students identified at least one key rule underlying a model, but only 14% identified all key rules; 65% believed that model rules can contradict; and 98% could not distinguish between emergent patterns and behaviors that directly resulted from model rules. Despite these misconceptions, compared to the “typical” questions about the science content alone, questions about model rules elicited deeper science thinking, with 2--10 times more responses including reasoning about scientific mechanisms. These results suggest that incorporating computational thinking instruction into middle school science courses might yield deeper learning and more precise assessments around scientific models.},
  address = {New York, NY, USA},
  articleno = {10},
  author = {Wiese, Eliane S. and Linn, Marcia C.},
  doi = {10.1145/3415582},
  issn = {1073-0516},
  issue_date = {April 2021},
  journal = {ACM Trans. Comput.-Hum. Interact.},
  keywords = {Middle school science; computer models; computer models in science},
  month = {April},
  number = {2},
  numpages = {41},
  publisher = {Association for Computing Machinery},
  title = {“It Must Include Rules”: Middle School Students’ Computational Thinking with Computer Models in Science},
  url = {https://doi.org/10.1145/3415582},
  volume = {28},
  year = {2021}
}

@inproceedings{merged863,
  abstract = {In 2018 and 2019, Infusing Computing offered face-to-face summer PD workshops to support middle and high school teachers in integrating computational thinking into their classrooms through week-long summer PD workshops and academic-year support. Due to COVID-19, 151 teachers attended the Summer 2020 PD workshops in a week-long virtual conference format. In this paper, we describe Virtual Pivot: Infusing Computing, which employed emerging technology tools, pre-PD training, synchronous and asynchronous sessions, Snap! pair programming, live support, and live networking. Drawing on findings from participant interviews and post-PD surveys, we argue that three categories of changes (digital tools, formats, and supports for teacher engagement and collaboration) were effective in increasing participants' self-efficacy in teaching CT, supporting collaboration, and enabling participants to design CT-infused content-area lessons. We conclude by discussing how elements of this virtual PD can be replicated to increase teacher and student access to CT practices in middle and high school classrooms},
  address = {New York, NY, USA},
  author = {Jocius, Robin and Joshi, Deepti and Albert, Jennifer and Barnes, Tiffany and Robinson, Richard and Catet\'{e}, Veronica and Dong, Yihuan and Blanton, Melanie and O'Byrne, Ian and Andrews, Ashley},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432558},
  isbn = {9781450380621},
  keywords = {computational thinking; disciplinary teaching; online learning; teacher professional development; virtual spaces},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {1198–1204},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {The Virtual Pivot: Transitioning Computational Thinking PD for Middle and High School Content Area Teachers},
  url = {https://doi.org/10.1145/3408877.3432558},
  year = {2021}
}

@inproceedings{merged864,
  address = {New York, NY, USA},
  articleno = {4},
  author = {Amatulli, Giuseppe and Sethi, Tushar},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365371},
  isbn = {9781450369527},
  keywords = {computational thinking; geo computation courses; learning programming},
  location = {Chicago, IL, USA},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {Geo computation with open-source software under Linux: Hands-on training for computational thinking and skills},
  url = {https://doi.org/10.1145/3356393.3365371},
  year = {2019}
}

@inproceedings{merged865,
  abstract = {FabLearn has primarily been concerned with studies of digital fabrication technologies in education, however, we witness an increased interest in integrating other related topics such as computational thinking, digital design and empowerment as an integrated whole. In this paper, we present a five years design research program for digital fabrication, computational thinking and design, to highlight why the FabLearn community should embrace this wider agenda to accomplish its ultimate goal to encourage a new generation to critically and constructively engage in the design of digital technology. The contribution of this paper is a number of open questions and considerations regarding the scope of European FabLearn research that we hope the community will consider and that might give rise to further discussions.},
  address = {New York, NY, USA},
  articleno = {15},
  author = {Eriksson, Eva and Iversen, Ole Sejer and Baykal, G\"{o}k\c{c}e Elif and Van Mechelen, Maarten and Smith, Rachel and Wagner, Marie-Louise and Fog, Bjarke Vognstrup and Klokmose, Clemens and Cumbo, Bronwyn and Hjorth, Arthur and Musaeus, Line Have and Petersen, Marianne Graves and Bouvin, Niels Olof},
  booktitle = {Proceedings of the FabLearn Europe 2019 Conference},
  doi = {10.1145/3335055.3335070},
  isbn = {9781450362665},
  keywords = {Computational thinking; Design; Education; FabLearn; Making},
  location = {Oulu, Finland},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe '19},
  title = {Widening the scope of FabLearn Research: Integrating Computational Thinking, Design and Making},
  url = {https://doi.org/10.1145/3335055.3335070},
  year = {2019}
}

@article{merged866,
  address = {New York, NY, USA},
  author = {Peckham, Joan},
  doi = {10.1145/3263209},
  issn = {0097-8418},
  issue_date = {September 2009},
  journal = {SIGCSE Bull.},
  month = {August},
  number = {3},
  publisher = {Association for Computing Machinery},
  title = {Session details: Panel: computational thinking: on weaving it in},
  url = {https://doi.org/10.1145/3263209},
  volume = {41},
  year = {2009}
}

@article{merged867,
  address = {New York, NY, USA},
  author = {Ragonis, Noa and Bukai, Ayelet and Hazzan, Orit},
  doi = {10.1145/3545179},
  issn = {2153-2184},
  issue_date = {September 2022},
  journal = {ACM Inroads},
  month = {August},
  number = {3},
  numpages = {7},
  pages = {22–28},
  publisher = {Association for Computing Machinery},
  title = {Selecting examples for CS courses: the case of a computational thinking MOOC},
  url = {https://doi.org/10.1145/3545179},
  volume = {13},
  year = {2022}
}

@inproceedings{merged868,
  address = {New York, NY, USA},
  author = {Peckham, Joan},
  booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3257533},
  isbn = {9781605583815},
  location = {Paris, France},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '09},
  title = {Session details: Panel: computational thinking: on weaving it in},
  url = {https://doi.org/10.1145/3257533},
  year = {2009}
}

@inproceedings{merged869,
  abstract = {Many toys and kits have been developed to help cultivate computational thinking in young children in the past decade. However, a majority of these kits ask children to move a robot/character around a limited space, constraining what could otherwise be generative and creative learning experiences into pre-defined activities and challenges with uniform outcomes. How can we expand what children can program and how they can create code? In this work, we present CodeAttach, a learning kit designed to engage young children in computational thinking through physical play activities. CodeAttach consists of three parts: (1) an interactive hardware device, (2) a mobile application to program the device, and (3) supporting materials for different play activities. With CodeAttach, children can attach the device to the supporting materials or other everyday objects to create their own props for physical play. The device offers different inputs and outputs and supports children to change the rules of existing physical activities or create new activities by programming this device. We outline the principles guiding the design of CodeAttach, its initial development process, and insights from early playtest with young kids and expert researchers.},
  address = {New York, NY, USA},
  author = {Yu, Junnan and Zheng, Clement and Tamashiro, Mariana Aki and Gonzalez-millan, Christopher and Roque, Ricarose},
  booktitle = {Proceedings of the Fourteenth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3374920.3374972},
  isbn = {9781450361071},
  keywords = {coding kit; physical play; young children},
  location = {Sydney NSW, Australia},
  numpages = {7},
  pages = {453–459},
  publisher = {Association for Computing Machinery},
  series = {TEI '20},
  title = {CodeAttach: Engaging Children in Computational Thinking Through Physical Play Activities},
  url = {https://doi.org/10.1145/3374920.3374972},
  year = {2020}
}

@article{merged870,
  abstract = {As a new era in computing emerges, so too must our fundamental thinking patterns.},
  address = {New York, NY, USA},
  author = {Liu, Yuhang and Sun, Xian-He and Wang, Yang and Bao, Yungang},
  doi = {10.1145/3418291},
  issn = {0001-0782},
  issue_date = {May 2021},
  journal = {Commun. ACM},
  month = {April},
  number = {5},
  numpages = {10},
  pages = {66–75},
  publisher = {Association for Computing Machinery},
  title = {HCDA: from computational thinking to a generalized thinking paradigm},
  url = {https://doi.org/10.1145/3418291},
  volume = {64},
  year = {2021}
}

@inproceedings{merged871,
  abstract = {As new initiatives in computational thinking and computer science (CS/CT) are being developed and deployed, it is important to identify and understand the key concepts that are essential for student learning. In this study, we present the phases of construction of a learning trajectory (LT) for Decomposition in the context of CS/CT in K-8 education. From an extensive literature review, 63 learning goals representative of decomposition understanding and practices were identified and synthesized into 13 consensus goals. The focus of this paper is how relationships between these consensus goals were identified and used to place the goals into a learning trajectory. We discuss the theories and frameworks that guided the trajectory's construction as well as the methodology and justifications used to draw pathways through the trajectory in each phase. Finally, we discuss potential uses for the trajectory and suggest further explorations for decomposition in CS/CT.},
  address = {New York, NY, USA},
  author = {Rich, Kathryn M. and Binkowski, T. Andrew and Strickland, Carla and Franklin, Diana},
  booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
  doi = {10.1145/3230977.3230979},
  isbn = {9781450356282},
  keywords = {computational thinking; decomposition; k-8},
  location = {Espoo, Finland},
  numpages = {9},
  pages = {124–132},
  publisher = {Association for Computing Machinery},
  series = {ICER '18},
  title = {Decomposition: A K-8 Computational Thinking Learning Trajectory},
  url = {https://doi.org/10.1145/3230977.3230979},
  year = {2018}
}

@inproceedings{merged872,
  abstract = {Researchers in the past have explored several interactive tools and techniques to teach students abstract concepts of programming and computational thinking. They have explored playful and collaborative way to do so which includes text-based, visual or tangible programming toolkits. In CodeFruits, we are exploring hand gestures as an input interaction mechanism. These hand gestures represent different elements of programming languages such as functions and parameters. We have developed a gesture based interactive game which implicitly helps K-12 students to learn abstract concepts of computational thinking and write a computational code in an easier, playful and engaging way.},
  address = {New York, NY, USA},
  author = {Goyal, Sidhant and Chopra, Simran and Mohanan, Dileep},
  booktitle = {Extended Abstracts Publication of the Annual Symposium on Computer-Human Interaction in Play},
  doi = {10.1145/3130859.3131335},
  isbn = {9781450351119},
  keywords = {computational thinking; games; hand gestures; k-12 students},
  location = {Amsterdam, The Netherlands},
  numpages = {8},
  pages = {291–298},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '17 Extended Abstracts},
  title = {CodeFruits: Teaching Computational Thinking Skills Through Hand Gestures},
  url = {https://doi.org/10.1145/3130859.3131335},
  year = {2017}
}

@inproceedings{merged873,
  abstract = {Computational thinking (CT) has gained wide recognition as an important K-12 educational goal, initially in the context of computer science (CS), and more recently also beyond CS. The development of CT teaching materials and approaches is therefore of prime importance. Here, an online learning platform for CT, named Co-De, is presented. It addresses five major aspects of CT explicitly, in the context of a variety of computational problems. Students using Co-De, work through classes, individually or in teams, doing a mixture of unplugged and online exercises and quizzes, as well as some programming. Teachers can fine-tune the default Co-De learning paths to cater for their specific groups of students and/or specific learning goals. Co-De is implemented on top of the open-source learning platform Moodle. It can be used directly at a central server, or a customised version can be installed and used locally.},
  address = {New York, NY, USA},
  articleno = {32},
  author = {Van de Staey, Zimcke and Verlinde, Tobias and Demoen, Bart and Martens, Bern},
  booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3265757.3265790},
  isbn = {9781450365888},
  keywords = {computational thinking; computing education; learning tools; secondary education},
  location = {Potsdam, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '18},
  title = {Co-de: an online learning platform for computational thinking},
  url = {https://doi.org/10.1145/3265757.3265790},
  year = {2018}
}

@inproceedings{merged874,
  abstract = {Computational thinking has received increased attention over the past several years and is considered by many to be a fundamental and necessary literacy for children. One approach to teaching this skill has been through tangible programming since it facilitates intuitive interaction with children. In this paper, we introduce CodeTrain and CodeBox, two motorized toys whose behavior can be programmed through wooden building blocks without the use of a computer, tablet, or screen-based interface. The goal with both these designs is to foster playful exploration of computational thinking in pre-adolescent children through tangible objects. We describe the design process from the conceptual design to the functional prototype. Furthermore, we present first impressions of the prototypes from a pilot study and highlight some lessons learned from our first iteration.},
  address = {New York, NY, USA},
  author = {Root, Erika and Steinkamp, Maren and Coldewey, Beatrice and Poloczek, Christin and Scharnowski, Frederik and Kettner, Mark and Koelle, Marion and Ananthanarayan, Swamy and Willms, Marlon},
  booktitle = {Proceedings of the 16th International Conference on Mobile and Ubiquitous Multimedia},
  doi = {10.1145/3152832.3156620},
  isbn = {9781450353786},
  keywords = {children; computational thinking; computational toys; playfully interaction; tangible programming},
  location = {Stuttgart, Germany},
  numpages = {6},
  pages = {387–392},
  publisher = {Association for Computing Machinery},
  series = {MUM '17},
  title = {Grasping algorithms: exploring toys that teach computational thinking},
  url = {https://doi.org/10.1145/3152832.3156620},
  year = {2017}
}

@inproceedings{merged875,
  abstract = {Game design appears to be a promising approach to interest K-12 students in Computer Science. Unfortunately, balancing motivational and educational concerns is truly challenging. Over a number of years, we have explored how to achieve a functional balance by creating a curriculum that combines increasingly complex game designs, computational thinking patterns and authoring tools. Scalable Game Design is a research project exploring new strategies of how to scale up from after school and summer programs into required curriculum of public schools through game design approaches. The project includes inner city schools, remote rural areas and Native American communities. A requirement checklist of computational thinking tools regarding curriculum, teacher training, standards and authoring tools has been developed and is being tested with thousands of students.},
  address = {New York, NY, USA},
  author = {Repenning, Alexander and Webb, David and Ioannidou, Andri},
  booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1734263.1734357},
  isbn = {9781450300063},
  keywords = {computational science; computational thinking; game design},
  location = {Milwaukee, Wisconsin, USA},
  numpages = {5},
  pages = {265–269},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {Scalable game design and the development of a checklist for getting computational thinking into public schools},
  url = {https://doi.org/10.1145/1734263.1734357},
  year = {2010}
}

@inproceedings{merged876,
  abstract = {We report the status of the pre-experimental phase of a project called "Combining Computational Thinking Didactics and Software Engineering in K-12" (COCONATS), which aims at combining computational thinking and software engineering didactics in order to facilitate the acquisition of software engineering principles in K-12, while promoting the development of life-skills.},
  address = {New York, NY, USA},
  author = {Colombi, Alessandro and Fronza, Ilenia and Pahl, Claus and Basso, Demis},
  booktitle = {Proceedings of the 19th Annual SIG Conference on Information Technology Education},
  doi = {10.1145/3241815.3241886},
  isbn = {9781450359542},
  keywords = {computational thinking; k-12; software engineering},
  location = {Fort Lauderdale, Florida, USA},
  numpages = {1},
  pages = {162},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '18},
  title = {COCONATS: Combining Computational Thinking Didactics and Software Engineering in K-12},
  url = {https://doi.org/10.1145/3241815.3241886},
  year = {2018}
}

@inproceedings{merged877,
  abstract = {Computational Thinking (CT) is being infused into curricula in a variety of core K-12 STEM courses. As these topics are being introduced to students without prior programming experience and are potentially taught by instructors unfamiliar with programming and CT, appropriate lesson design might help support both students and teachers. "Use-Modify-Create" (UMC), a CT lesson progression, has students ease into CT topics by first "Using" a given artifact, "Modifying" an existing one, and then eventually "Creating" new ones. While studies have presented lessons adopting and adapting this progression and advocating for its use, few have focused on evaluating UMC's pedagogical effectiveness and claims. We present a comparison study between two CT lesson progressions for middle school science classes. Students participated in a 4-day activity focused on developing an agent-based simulation in a block-based programming environment. While some classrooms had students develop code on days 2-4, others used a scaffolded lesson plan modeled after the UMC framework. Through analyzing student's exit tickets, classroom observations, and teacher interviews, we illustrate differences in perception of assignment difficulty from both the students and teachers, as well as student perception of artifact "ownership" between conditions.},
  address = {New York, NY, USA},
  author = {Lytle, Nicholas and Catet\'{e}, Veronica and Boulden, Danielle and Dong, Yihuan and Houchins, Jennifer and Milliken, Alexandra and Isvik, Amy and Bounajim, Dolly and Wiebe, Eric and Barnes, Tiffany},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3319786},
  isbn = {9781450368957},
  keywords = {computational thinking; lesson design; modify-create},
  location = {Aberdeen, Scotland Uk},
  numpages = {7},
  pages = {395–401},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {Use, Modify, Create: Comparing Computational Thinking Lesson Progressions for STEM Classes},
  url = {https://doi.org/10.1145/3304221.3319786},
  year = {2019}
}

@inproceedings{merged878,
  abstract = {Globally, there is a growing interest in preparing students to develop fluency with computing. The K-12 Computer Science Framework states that by the end of 12th grade, students should be able to create computational artifacts through continuous testing and refining of their products considering unique perspectives of peers. It has been suggested that creative project experiences with iteration based on feedback encourage the development of these computational skills. However, traditional classrooms are more focused on getting the correct answer to standardized questions. Countries such as Mongolia may have particular challenges in offering students opportunities to develop projects, due to pressure from standardized exams for college entry and lack of teachers prepared to lead computational project-based learning (Uyanga, 2006). This is an exploratory study of an 8-session/16-hour intervention course that provided 13 high-school students in Mongolia an opportunity to create, share, and iterate on computational projects. Measurements included assessment of student attitudes and evaluated how they viewed their participation and learning in the course through pre- and post-surveys, analyzing their responses with qualitative coding. Results suggest that the opportunity to create projects was novel for these students; attitudes regarding feedback changed, and iteration was viewed as key in creating computational artifacts. The analysis also highlights the urgency of further research on localizing the K-12 Computer Science Framework throughout different countries to foster these skills and developing structures that allow students to embrace the freedom of project-based learning.},
  address = {New York, NY, USA},
  author = {Ulzii-Orshikh, Nasanbayar and Dougherty, John},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372651},
  isbn = {9781450367936},
  keywords = {computational thinking; creativity; feedback; iteration; localization; project-based learning; scratch},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1289},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Iteration with Intention: Project-Based Learning of Computational Thinking},
  url = {https://doi.org/10.1145/3328778.3372651},
  year = {2020}
}

@inproceedings{merged879,
  abstract = {Games have been designed to foster children's computational thinking (CT) skills, which is widely recognized as a key ability that should be mastered in this computing-driven era. Because learning coding skills is cognitively difficult and uninvolving for novices and it is recommended to learn CT concepts first, many educational games have been developed to teach CT in a non-coding environment. However, despite the breadth of such games and the demand for it, little is known about how to design such games or why such games are designed in a particular way. To address this gap, this paper presents a design framework that describes the building blocks for developing (non-coding) gameplay elements in games teaching CT. The framework focuses specifically on computational problem-solving because this is where games can specifically aid with. We illustrate the design framework through LittleWorld, a mobile game that teaches CT concepts through insects.},
  address = {New York, NY, USA},
  articleno = {29},
  author = {Jiang, Xina and Harteveld, Casper and Huang, Xinyuan and Fung, Anthony Y. H.},
  booktitle = {Proceedings of the 14th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3337722.3337768},
  isbn = {9781450372176},
  keywords = {computational problem-solving; computational thinking; educational games; game design; games for teaching CT; preschoolers},
  location = {San Luis Obispo, California, USA},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {FDG '19},
  title = {The computational puzzle design framework: a design guide for games teaching computational thinking},
  url = {https://doi.org/10.1145/3337722.3337768},
  year = {2019}
}

@article{merged880,
  address = {New York, NY, USA},
  author = {Shah, Vipul},
  doi = {10.1145/3343445},
  issn = {0001-0782},
  issue_date = {November 2019},
  journal = {Commun. ACM},
  month = {October},
  number = {11},
  numpages = {2},
  pages = {54–55},
  publisher = {Association for Computing Machinery},
  title = {CSpathshala: bringing computational thinking to schools},
  url = {https://doi.org/10.1145/3343445},
  volume = {62},
  year = {2019}
}

@inproceedings{merged881,
  abstract = {In today's Anthropocene era, human-and-climate induced sustainability challenges threaten the livelihood of vulnerable communities across the planet. To mitigate the risks of sustainability threats, data-and-theory driven scientific models, artistic practices, and environment designs play a critical role. However, these methods alone fail to reach a broader audience and translate into public discourse for participatory collective action. In this paper, we present Beyond Boundaries, a renaissance that re-envisions the relationship between ecological arts and computational thinking to contextualize threats to sustainability at regional and global scales. We establish an integrated framework combining Earth remote sensing satellite time-series, half a decade of ecological arts, and a public exhibition to curate the symbiotic relationship between arts and science. Beyond Boundaries sheds new light on how synergistic associations among disciplines can inspire scientific inquiry, artistic imaginations, and civic engagement-and-discourse for sustainability.},
  address = {New York, NY, USA},
  author = {Gaikwad, Snehalkumar 'Neil' S.},
  booktitle = {Companion Publication of the 2020 Conference on Computer Supported Cooperative Work and Social Computing},
  doi = {10.1145/3406865.3418336},
  isbn = {9781450380591},
  keywords = {and civic engagement; and society; computations; data science; ecological arts; environmental justice; remote sensing; sustainability},
  location = {Virtual Event, USA},
  numpages = {6},
  pages = {257–262},
  publisher = {Association for Computing Machinery},
  series = {CSCW '20 Companion},
  title = {Beyond Boundaries: Towards Symbiotic Relationship Between Ecological Arts and Computational Thinking for Sustainability},
  url = {https://doi.org/10.1145/3406865.3418336},
  year = {2020}
}

@inproceedings{merged882,
  abstract = {Game design activities support young people to acquire Computational Thinking (CT) skills in an entertaining way. While the importance of CT is increasing, we still lack empirical data on how cognitive functions support learning to program. The current study is a step towards bridging this gap. We tested 48 participants aged 10-15 during summer courses to see how programming skills are associated with cognitive processes. Descriptive statistics of gaming and design elements of the participants' final projects were correlated with measures of working memory, creativity, and arithmetic. Results show that different concepts of CT applied in games were associated with separate cognitive measures. The number of design elements (shape and structure of the game, sound, visual design) correlated with both working memory and arithmetic skills; the number of game elements (interactivity, mechanics, dynamics, aesthetics) correlated with creativity; whereas the complexity of the project was only predicted by age. The overall evaluation of the project was associated with age and arithmetic skills. Since the different concepts of CT were predicted by different cognitive skills, the current study provides empirical evidence that CT is not a single homogenous skill, but a set of subskills, with each part loading on different cognitive functions.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Spieler, Bernadette and Kem\'{e}ny, Ferenc and Landerl, Karin and Binder, Bernd and Slany, Wolfgang},
  booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3421590.3421607},
  isbn = {9781450387590},
  keywords = {arithmetic skills; computational thinking skills; creativity; game design strategies; working memory},
  location = {Virtual Event, Germany},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '20},
  title = {The learning value of game design activities: association between computational thinking and cognitive skills},
  url = {https://doi.org/10.1145/3421590.3421607},
  year = {2020}
}

@inproceedings{merged883,
  abstract = {Project Torino is a physical programming environment designed for teaching computational thinking (CT) to school children in the UK, regardless of the level of vision. We introduced Project Torino to children in three schools for the blind in Bangalore, India as a toy for playing with songs, rhymes, and stories. We present the results of 103 semi-structured play sessions spread over three months with 12 children (2 girls, 10 boys) with diverse backgrounds. We found that children progressed from playing with pre-connected examples, to making changes, to actively participating in what items are played. Engaging the children in conversation while they played, we established that the teams had grasped three basic concepts of computational thinking--flow of control, variables, and loops, without any explicit instructions towards learning them. We propose that play-based approaches can be successfully used with low resource overhead to introduce fundamental concepts of CT.},
  address = {New York, NY, USA},
  articleno = {6},
  author = {India, Gesu and Ramakrishna, Geetha and Pal, Joyojeet and Swaminathan, Manohar},
  booktitle = {Proceedings of the 2020 International Conference on Information and Communication Technologies and Development},
  doi = {10.1145/3392561.3394634},
  isbn = {9781450387620},
  keywords = {Assistive Technologies; Education/Learning; Empirical study that tells us about how people use a system; Individuals with Disabilities &amp; User Experience Design},
  location = {Guayaquil, Ecuador},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {ICTD '20},
  title = {Conceptual Learning through Accessible Play: Project Torino and Computational Thinking for Blind Children in India},
  url = {https://doi.org/10.1145/3392561.3394634},
  year = {2020}
}

@inproceedings{merged884,
  abstract = {One way to increase access to education on computing is to integrate computational thinking (CT) into K12 disciplinary courses. However, this challenges teachers to both learn CT and decide how to best integrate CT into their classes. In this position paper, we present PRADA, an acronym for Pattern Recognition, Abstraction, Decomposition, and Algorithms, as a practical and understandable way of introducing the core ideas of CT to non-computing teachers. We piloted the PRADA model in two, separate, week-long professional development workshops designed for in-service middle and high school teachers and found that the PRADA model supported teachers in making connections between CT and their current course material. Initial findings, which emerged from the analysis of teacher-created learning materials, survey responses, and focus group interviews, indicate that the PRADA model supported core content teachers in successfully infusing CT into their existing curricula and increased their self-efficacy in CT integration.},
  address = {New York, NY, USA},
  author = {Dong, Yihuan and Catete, Veronica and Jocius, Robin and Lytle, Nicholas and Barnes, Tiffany and Albert, Jennifer and Joshi, Deepti and Robinson, Richard and Andrews, Ashley},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287431},
  isbn = {9781450358903},
  keywords = {computational thinking; professional development},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {906–912},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {PRADA: A Practical Model for Integrating Computational Thinking in K-12 Education},
  url = {https://doi.org/10.1145/3287324.3287431},
  year = {2019}
}

@inproceedings{merged885,
  abstract = {Bringing Programming to K-12 Education has been a strong tendency in Brazil and in the world. In this work-in-progress, we describe an experience in teacher training with the goal of promoting the practice of programming and the development of computational thinking in students of Brazilian public schools, through an initiative called Programming Literacy. Here we present strategies used in the implementation of the initiative, design of a curricular structure and training program, as well as monitoring and evaluation strategies. The results and findings of the initiative, involving more than 500 students from four cities in 2016, are shared as well as the perspectives on next steps.},
  address = {New York, NY, USA},
  author = {Eloy, Adelmo Antonio da Silva and Martins, Amilton Rodrigues Quadros and Pazinato, Ariane Mileidi and Lukjanenko, Maria de Fatima S. Polesi and Lopes, Roseli de Deus},
  booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
  doi = {10.1145/3078072.3084306},
  isbn = {9781450349215},
  keywords = {computational thinking; computer science education; k-12 education; programming; teacher training},
  location = {Stanford, California, USA},
  numpages = {6},
  pages = {439–444},
  publisher = {Association for Computing Machinery},
  series = {IDC '17},
  title = {Programming Literacy: Computational Thinking in Brazilian Public Schools},
  url = {https://doi.org/10.1145/3078072.3084306},
  year = {2017}
}

@inproceedings{merged886,
  abstract = {In summer 2018, we conducted two week-long professional development workshops for 116 middle and high school teachers interested in infusing computational thinking (CT) into their classrooms. Teachers learned to program in Snap!, connect CT to their disciplines, and create infused CT learning segments for their classes. This paper investigates the extent to which teachers were able to successfully infuse CT skills of pattern recognition, abstraction, decomposition, and algorithms into their learning products.In this work, we analyzed 58 teacher-designed programming products to look for common characteristics, such as project type, intended coding requirements for their students, and code features/functionality. Teacher-created products were classified into five types: animation, interactive story, quiz, intended game, and simulation/exploration tools. Coding requirements varied from using and/or explaining provided code, modifying existing code, programming with starter code, to building entire programs. Products were classified according to the extent to which they involved sprite manipulation, questions/answers, event handling, drawing, and control blocks. We found that teachers from different disciplines created products that vary in type, coding requirements, and features to suit their specific needs. Moreover, we found relationships between discipline, project type, and the required coding teachers expected students to do.Our results inform future Infusing Computing Professional Development (PD) to provide more targeted training to support different teacher needs.},
  address = {New York, NY, USA},
  author = {Dong, Yihuan and Catet\'{e}, Veronica and Lytle, Nicholas and Isvik, Amy and Barnes, Tiffany and Jocius, Robin and Albert, Jennifer and Joshi, Deepti and Robinson, Richard and Andrews, Ashley},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3319772},
  isbn = {9781450368957},
  keywords = {computational thinking; k-12; professional development; programming},
  location = {Aberdeen, Scotland Uk},
  numpages = {7},
  pages = {278–284},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {Infusing Computing: Analyzing Teacher Programming Products in K-12 Computational Thinking Professional Development},
  url = {https://doi.org/10.1145/3304221.3319772},
  year = {2019}
}

@inproceedings{merged887,
  abstract = {We are presenting the results of a study carried out with six primary and secondary schools in Luxembourg, pilots in introducing the Kniwwwelino Classroom kit (KCK) in their teaching of programming and computational thinking to children. The aim of the study was to explore: (1) how teachers appropriate this kind of tool for teaching computational thinking and programming, (2) whether the KCK is suitable for this purpose, and (3) the user experience of the KCK. To these ends, we used several data collection tools through a mainly qualitative exploratory approach: semi-guided interviews, diaries and several questionnaires. We have learned that: (1) the KCK is versatile enough to adapt to different environments, objectives and pedagogical approaches and thus offers a great deal of freedom to teachers, (2) the playful and tangible approach of the KCK seems more adapted to introducing programming and enables pupils to develop problem-solving, collaboration and creativity skills, and (3) if the user experience has been positive for both teachers and students, this first KCK prototype is still addressing intermediate computer-skilled teachers.},
  address = {New York, NY, USA},
  articleno = {6},
  author = {Schwartz, Lou and Maquil, Val\'{e}rie and Johannsen, Laurence and Moll, Christian},
  booktitle = {Proceedings of the 32nd Conference on l'Interaction Homme-Machine},
  doi = {10.1145/3450522.3451250},
  isbn = {9781450383622},
  keywords = {Computational Thinking; Field Studies; Interactive Learning Environments; K-12 Education; Programming},
  location = {Virtual Event, France},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {IHM '21},
  title = {Enseigner la pens\'{e}e informatique avec Kniwwelino : \'{E}tude exploratoire de terrain en milieu scolaire: Teaching Computational Thinking with Kniwwelino: Exploratory Field Study in School Settings},
  url = {https://doi.org/10.1145/3450522.3451250},
  year = {2022}
}

@inproceedings{merged888,
  abstract = {The introduction of computational thinking (CT) and computer science (CS) in the K-12 curricula highlights the need to understand young learners' various perceptions and attitudes towards CT and CS. To address this challenge we draw on the work of Bourdieu's capital and Archer et al.'s science capital to propose a new capital "digital capital" as a theoretical framework. We believe that a study on young people's development of digital capital is long overdue and can give a good indication of pupils' potential for developing CT skills, as well as CS aspirations in the future.},
  address = {New York, NY, USA},
  author = {Vrieler, Tina},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3143782},
  isbn = {9781450353014},
  keywords = {bourdieu; digital capital; science capital},
  location = {Koli, Finland},
  numpages = {2},
  pages = {205–206},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Digital capital: a platform for developing computational thinking},
  url = {https://doi.org/10.1145/3141880.3143782},
  year = {2017}
}

@inproceedings{merged889,
  abstract = {During the 21st century there has been an increasing interest in the field of computational thinking as a consequence of the ever faster technical development. However, educating future generations in programming and computational thinking is not trivial. Many different platforms and teaching approaches can be used for this purpose. Inspired by the UK initiative with BBC micro:bit, this paper strives to identify what may be important to consider when designing teaching materials with the micro:bit for training Swedish primary school pupils' computational thinking skills relating to mathematical and technical school subjects. This has been investigated in an iterative process, by conducting 21 workshops with the goal to support primary school teachers in developing micro:bit teaching materials. The contribution of this paper is the Scope of autonomy model, which is based on the relation between pupils learning potential, their risk of feeling overwhelmed and the amount of choices provided in exercises. The model aim to support teachers in developing material for teaching programming and computational thinking in accordance with the new curriculum.},
  address = {New York, NY, USA},
  author = {Carlborg, Niklas and Tyr\'{e}n, Markus and Heath, Carl and Eriksson, Eva},
  booktitle = {Proceedings of the Conference on Creativity and Making in Education},
  doi = {10.1145/3213818.3213824},
  isbn = {9781450353717},
  keywords = {Autonomy; Computational thinking; Education; Micro:bit; Teaching},
  location = {Trondheim, Norway},
  numpages = {8},
  pages = {37–44},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe'18},
  title = {The Scope of Autonomy Model: Development of Teaching Materials for Computational Thinking in Primary School},
  url = {https://doi.org/10.1145/3213818.3213824},
  year = {2018}
}

@inproceedings{merged890,
  abstract = {This paper describes a design for an immediate immersion of computational thinking into current high school math classrooms in Alabama. Most schools in our region have eliminated computer science classes from the curriculum. Alabama has an existing state initiative to improve mathematics, science and technology education in K-12. The Alabama Math, Science, and Technology Initiative (AMSTI) emphasizes learning by doing, with hands-on, activity based instruction. We have developed an instructional treatment that uses strategically designed computer exercises to push students to form the mental foundation necessary for abstraction and generalization. We selected popular problems from the AMSTI mathematics curriculum and applied our instructional design.The first step we took in implementing our plan for reintroducing computational thinking into the secondary schools was to conduct a workshop for math education leaders. This training was sponsored and supported by AMSTI. Results from the workshop included demonstrating to a select group of math education leaders that computer programming could be easily integrated with the AMSTI math curriculum and could be used to meet the educational goals of the initiative and the educators.},
  address = {New York, NY, USA},
  author = {Jenkins, Janet T. and Jerkins, James A. and Stenger, Cynthia L.},
  booktitle = {Proceedings of the 50th Annual ACM Southeast Conference},
  doi = {10.1145/2184512.2184547},
  isbn = {9781450312035},
  keywords = {Python; abstraction; computational thinking},
  location = {Tuscaloosa, Alabama},
  numpages = {5},
  pages = {148–152},
  publisher = {Association for Computing Machinery},
  series = {ACMSE '12},
  title = {A plan for immediate immersion of computational thinking into the high school math classroom through a partnership with the Alabama math, science, and technology initiative},
  url = {https://doi.org/10.1145/2184512.2184547},
  year = {2012}
}

@inproceedings{merged891,
  abstract = {Scratch is a visual, block-based programming language, adopted as a computational thinking development tool in elementary education among many countries. Thailand has also recently included Scratch as part of the computing science course in its basic education. However, Thailand is facing a shortage of ICT teachers who are skillful in Scratch programming, especially in small provincial schools. This research aims to overcome the shortage by developing ScratchThAI, a Scratch tutorial chatbot. It is designed to assist young learners directly through a messaging platform. By giving supports through a textual conversation, more relevant advice, knowledge, and resources could be provided precisely. Different levels of each computational thinking concept are extracted and evaluated by the designed assessment algorithm. Extra predefined exercises are assigned based on the analyzed learner's strengths and weaknesses in order to actively improving the learner's understanding. Moreover, gamification is incorporated to engage and motivate young learners in computational thinking development.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Katchapakirin, Kantinee and Anutariya, Chutiporn},
  booktitle = {Proceedings of the 10th International Conference on Advances in Information Technology},
  doi = {10.1145/3291280.3291787},
  isbn = {9781450365680},
  keywords = {AI in Education; Computational thinking development; Educational Technology; Game-Based Learning; Personalized Learning; Scratch Tutoring Chatbot; Virtual Scratcher; Virtual Teaching Assistant},
  location = {Bangkok, Thailand},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {IAIT '18},
  title = {An Architectural Design of ScratchThAI: A conversational agent for Computational Thinking Development using Scratch},
  url = {https://doi.org/10.1145/3291280.3291787},
  year = {2018}
}

@inproceedings{merged892,
  abstract = {The increased interest in promoting CS education for all has been coalescing around the idea of "computational thinking." Several framings for promoting computational thinking in K-12 education have been proposed by practitioners and researchers that each place different emphases on either (1) skill and competence building, (2) creative expression and participation, or (3) social justice and ethics. We review each framing and how the framings structure the theory space of computational thinking. We then discuss how CS education can leverage the explanatory potential that each framing offers to the implementation and evaluation of learning, teaching, and tools in computing education. Our goal is to help CS education researchers, teachers, and designers unpack and leverage the complexities of this theory space (rather than ignoring it) while also addressing broader educational concerns regarding diversity, providing new directions for how students and teachers can actively participate in designing their digital futures, and directing current computing education efforts towards a more humanistic orientation.},
  address = {New York, NY, USA},
  author = {Kafai, Yasmin and Proctor, Chris and Lui, Debora},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3339400},
  isbn = {9781450361859},
  keywords = {computational thinking; literacy; pedagogy; programming},
  location = {Toronto ON, Canada},
  numpages = {9},
  pages = {101–109},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {From Theory Bias to Theory Dialogue: Embracing Cognitive, Situated, and Critical Framings of Computational Thinking in K-12 CS Education},
  url = {https://doi.org/10.1145/3291279.3339400},
  year = {2019}
}

@inproceedings{merged893,
  abstract = {This study explores the relationship between computational thinking, teaching programming, and Bloom's Taxonomy. Data is collected from teachers, academics, and professionals, purposively selected because of their knowledge of the topics of problem solving, computational thinking, or the teaching of programming. This data is analysed following a grounded theory approach. A computational thinking taxonomy is developed. The relationships between cognitive processes, the pedagogy of programming, and the perceived levels of difficulty of computational thinking skills are illustrated by a model.Specifically, a definition for computational thinking is presented. The skills identified are mapped to Bloom's Taxonomy: Cognitive Domain. This mapping concentrates computational skills at the application, analysis, synthesis, and evaluation levels. Analysis of the data indicates that abstraction of functionality is less difficult than abstraction of data, but both are perceived as difficult. The most difficult computational thinking skill is reported as decomposition. This ordering of difficulty for learners is a reversal of the cognitive complexity predicted by Bloom's model. The plausibility of this inconsistency is explored.The taxonomy, model, and the other results of this study may be used by educators to focus learning onto the computational thinking skills acquired by the learners, while using programming as a tool. They may also be employed in the design of curriculum subjects, such as ICT, computing, or computer science.},
  address = {New York, NY, USA},
  author = {Selby, Cynthia C.},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818315},
  isbn = {9781450337533},
  keywords = {Bloom's Taxonomy; Computational thinking; pedagogy; programming},
  location = {London, United Kingdom},
  numpages = {8},
  pages = {80–87},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {Relationships: computational thinking, pedagogy of programming, and Bloom's Taxonomy},
  url = {https://doi.org/10.1145/2818314.2818315},
  year = {2015}
}

@inproceedings{merged894,
  abstract = {Increasing the representation of minorities in computer science (CS) has become a national priority. One of the many reasons minority students nationwide choose not to study CS is that they often lack mentors and role models to encourage them early in their learning. In her seminal article, Jeannette Wing argues that computational thinking (CT) is an emerging essential skill that should become an integral part of K-12 education. However, a big issue facing this initiative is that many K-12 teachers find themselves lack (1) relevant materials, (2) systematic training, and (3) a supportive community. The democratization of media, such as photos and videos, has provided a great variety of options to educate a broad audience on myriad topics. In this poster, we will describe the challenges and successes of using animated videos including its beauty, soundness, and utility as critical elements in establishing a strong CT comprehension while engaging K-12 teachers in a non-threatening way. Using a process of iterative design, we have found ways to integrate CT concepts in six non-CS disciplines in the K-12 curriculum. The teachers who have collaborated with us respond positively that this design approach provides them with a greater comprehension of the CT concepts while giving them exciting instructional activities. Therefore, this poster may be of interest to any CS educator who wishes to improve the engagement of K-12 teachers while sustaining a CT training program at their institution.},
  address = {New York, NY, USA},
  author = {Nguyen, N. Rich and Poliakova, Iuliia and Meduri, Sahithi and Hutcheson, Joshua and Ke, Ryan},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293835},
  isbn = {9781450358903},
  keywords = {animated videos; computational thinking; instructional activities; k-12},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1276},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {CodeNC: Integrating Computational Thinking into K-12 Instructional Activities using Animated Videos},
  url = {https://doi.org/10.1145/3287324.3293835},
  year = {2019}
}

@inproceedings{merged895,
  abstract = {The current curricular changes across Europe towards the inclusion of computational thinking through coding in comprehensive schools have prompted new challenges for teachers that may not be confident nor have a scripted pedagogy to teach the core concepts, as well as for students that may have a negative bias towards such subjects. In this poster, we present our exploratory experiences using music improvisation as facilitation medium for presenting computational concepts to students, through a relaxed and anxiety-free atmosphere. We show the results of preliminary experiments in the wild, indicating that the emotional state of the participants is positively enhanced after a short section of music improvisation. Furthermore, we pose open questions to the CSE research community on the value of including short improvisation activities prior teaching programming concepts such as data, sequence, loops and conditionals, which are, oftentimes, perceived as difficult.},
  address = {New York, NY, USA},
  author = {Montero, Calkin Suero and Pihlainen, Kaisa},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3141910},
  isbn = {9781450353014},
  keywords = {comprehensive education; computational thinking; music improvisation},
  location = {Koli, Finland},
  numpages = {2},
  pages = {199–200},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Let's play! music improvisation as a medium to facilitate computational thinking},
  url = {https://doi.org/10.1145/3141880.3141910},
  year = {2017}
}

@inproceedings{merged896,
  abstract = {The creation of computer science tutorials is becoming critically important as hundreds of millions of students each year get their first CS experience through self-directed online activities. Creating a "cliffhanger" activity, with high engagement during and motivation to continue learning post activity, is a balancing act. If tutorials provide too much detailed information, users may be able to follow instructions but can feel overwhelmed or bored. On the other hand, tutorials that do not sufficiently explain crucial steps risk frustrating users who might drop out of the activity. Zones of Proximal Flow (ZPF) tutorials are simple to create and provide a navigation structure of differentiated instruction allowing users to choose appropriate detail based on their self-assessed state of flow, from bored to anxious. Using Retention of Flow analysis, two Hour of Code game design tutorials were analyzed: a sophisticated online tutorial for the creation of Frogger, and a simple ZPF tutorial for the creation of Pac-Man. One hope was that the simple ZPF Pac-Man tutorial would not do much worse than the sophisticated Frogger tutorial, but surprisingly the ZPF Pac-Man tutorial significantly outperformed the Frogger tutorial in terms of student retention. The Pac-Man tutorial also displayed a high student motivation to continue programming past the end of differentiated instruction.},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok and Repenning, Alexander and Savignano, Mark},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287361},
  isbn = {9781450358903},
  keywords = {computational thinking; cyberlearning; exposure; flow; hour of code; retention; retention of flow; tutorial; zone of proximal development; zones of proximal flow},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {428–434},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {The Zones of Proximal Flow Tutorial: Designing Computational Thinking Cliffhangers},
  url = {https://doi.org/10.1145/3287324.3287361},
  year = {2019}
}

@inproceedings{merged897,
  abstract = {This paper introduces Entry, a visual programming application which is developed to facilitate children's computational thinking. As an HTML5-based visual programming platform, it provides children and beginners with an integrated environment in which they not only learn programming in an easy and fun way but also create, post and share their own programs. This will enhance children's computational thinking and is expected to serve as an effective learning tool for the STEAM education. We have held a workshop with 16 elementary school teachers and conducted a preliminary survey to illuminate Entry's 1) potential educational implications on logical thinking, problem solving and creativity, and 2) applicability in the field of education. This paper is expected to contribute to future research on programming education and STEAM education programs for children.},
  address = {New York, NY, USA},
  author = {Han, Ahyoung and Kim, Jihyun and Wohn, Kwangyun},
  booktitle = {Adjunct Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing and Proceedings of the 2015 ACM International Symposium on Wearable Computers},
  doi = {10.1145/2800835.2800871},
  isbn = {9781450335751},
  keywords = {computational thinking; education; visual programming},
  location = {Osaka, Japan},
  numpages = {4},
  pages = {73–76},
  publisher = {Association for Computing Machinery},
  series = {UbiComp/ISWC'15 Adjunct},
  title = {Entry: visual programming to enhance children's computational thinking},
  url = {https://doi.org/10.1145/2800835.2800871},
  year = {2015}
}

@inproceedings{merged898,
  abstract = {We present a new classification method for Bebras tasks based on the ISTE/CSTA operational definition of computational thinking. The classification can be appreciated by teachers without a formal education in informatics and it helps in detecting the cognitive skills involved by tasks, and makes their educational potential more explicit.},
  address = {New York, NY, USA},
  author = {Lonati, Violetta and Malchiodi, Dario and Monga, Mattia and Morpurgo, Anna},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3059009.3072987},
  isbn = {9781450347044},
  keywords = {bebras; computational thinking; computing education},
  location = {Bologna, Italy},
  numpages = {1},
  pages = {366},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {Bebras as a Teaching Resource: Classifying the Tasks Corpus Using Computational Thinking Skills},
  url = {https://doi.org/10.1145/3059009.3072987},
  year = {2017}
}

@inproceedings{merged899,
  abstract = {Educational games have a potentially significant role to play in the increasing efforts to expand access to computer science education. Computational thinking is an area of particular interest, including the development of problem-solving strategies like divide and conquer. Existing games designed to teach computational thinking generally consist of either open-ended exploration with little direct guidance or a linear series of puzzles with lots of direct guidance, but little exploration. Educational research indicates that the most effective approach may be a hybrid of these two structures. We present Dragon Architect, an educational computational thinking game, and use it as context for a discussion of key open problems in the design of games to teach computational thinking. These problems include how to directly teach computational thinking strategies, how to achieve a balance between exploration and direct guidance, and how to incorporate engaging social features. We also discuss several important design challenges we have encountered during the design of Dragon Architect. We contend the problems we describe are relevant to anyone making educational games or systems that need to teach complex concepts and skills.},
  address = {New York, NY, USA},
  articleno = {26},
  author = {Bauer, Aaron and Butler, Eric and Popovi\'{c}, Zoran},
  booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3102071.3102106},
  isbn = {9781450353199},
  keywords = {computational thinking; game-based learning; programming education},
  location = {Hyannis, Massachusetts},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {FDG '17},
  title = {Dragon architect: open design problems for guided learning in a creative computational thinking sandbox game},
  url = {https://doi.org/10.1145/3102071.3102106},
  year = {2017}
}

@inproceedings{merged900,
  abstract = {The CTwins project is a cross-border initiative targeting teachers of subjects other than Computing in the Republic of Ireland and Northern Ireland who want to use technology in the classroom but lack the confidence to do so. It aims to develop confidence in educators' capacity to use computational thinking through a playful and supportive introduction to computer programming. This will be done through paired learning exercises with an output intended to be aesthetically pleasing and fulfilling. Learning will be supported by an online community of practice.The project will be evaluated for its effect on building the confidence in participating educators and the design and resources will be created as a open educational resource.},
  address = {New York, NY, USA},
  author = {Millwood, Richard and Strong, Glenn and Bresnihan, Nina and Cowan, Pamela},
  booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2978249.2978269},
  isbn = {9781450342230},
  keywords = {Computational Thinking; Programming; Teacher Training},
  location = {M\"{u}nster, Germany},
  numpages = {2},
  pages = {106–107},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '16},
  title = {CTWINS: improving Computational Thinking confidence in educators through paired activities},
  url = {https://doi.org/10.1145/2978249.2978269},
  year = {2016}
}

@inproceedings{merged901,
  abstract = {The extensive research in the domain of computational thinking has identified itself as one of the critical skills that needs to be a part of regular K-12 curriculum. However, most of the tangible computational thinking toolkits that are being developed are bulky and expensive to be deployed in classroom environments. In this paper we present Code Bits, a paper based tangible computational thinking toolkit that is inexpensive, portable and scalable. The students create programs using the tangible paper bits on any flat surface and use the Code Bits mobile application to process the code, which runs on any android device with a camera and uses augmented reality based games to improve the computational thinking skills of the students. The toolkit has been designed in way so as to promote collaboration amongst students.},
  address = {New York, NY, USA},
  author = {Goyal, Sidhant and Vijay, Rohan S. and Monga, Charu and Kalita, Pratul},
  booktitle = {Proceedings of the TEI '16: Tenth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/2839462.2856541},
  isbn = {9781450335829},
  keywords = {Augmented Reality; Computational Thinking; K-12 education; Tangible User Interfaces},
  location = {Eindhoven, Netherlands},
  numpages = {7},
  pages = {441–447},
  publisher = {Association for Computing Machinery},
  series = {TEI '16},
  title = {Code Bits: An Inexpensive Tangible Computational Thinking Toolkit For K-12 Curriculum},
  url = {https://doi.org/10.1145/2839462.2856541},
  year = {2016}
}

@article{merged902,
  address = {New York, NY, USA},
  author = {Wiedemann, Kenia and Chao, Jie and Galluzzo, Benjamin and Simoneau, Eric},
  doi = {10.1145/3380956},
  issn = {2153-2184},
  issue_date = {March 2020},
  journal = {ACM Inroads},
  month = {February},
  number = {1},
  numpages = {10},
  pages = {33–42},
  publisher = {Association for Computing Machinery},
  title = {Mathematical modeling with R: embedding computational thinking into high school math classes},
  url = {https://doi.org/10.1145/3380956},
  volume = {11},
  year = {2020}
}

@inproceedings{merged903,
  abstract = {This paper reports on the preliminary results of an ongoing study examining the teaching of new primary school topics based on Computational Thinking in New Zealand. We analyse detailed feedback from 13 teachers participating in the study, who had little or no previous experience teaching Computer Science or related topics. From this we extract key themes identified by the teachers that are likely to be encountered when deploying a new curriculum, including unexpected opportunities for cross-curricula learning, development of students' social skills, and engaging a wide range of students. From here we articulate key concepts and issues that arise in the primary school context, based on feedback during professional development for the study, and direct feedback from teachers on the experience of delivering the new material in the classroom.},
  address = {New York, NY, USA},
  author = {Duncan, Caitlin and Bell, Tim and Atlas, James},
  booktitle = {Proceedings of the Nineteenth Australasian Computing Education Conference},
  doi = {10.1145/3013499.3013506},
  isbn = {9781450348232},
  keywords = {Computational thinking; curriculum; teachers},
  location = {Geelong, VIC, Australia},
  numpages = {10},
  pages = {65–74},
  publisher = {Association for Computing Machinery},
  series = {ACE '17},
  title = {What do the Teachers Think? Introducing Computational Thinking in the Primary School Curriculum},
  url = {https://doi.org/10.1145/3013499.3013506},
  year = {2017}
}

@inproceedings{merged904,
  abstract = {Conventionally creativity is often conceived as an aptitude to be discovered in an individual that cannot be mathematically measured. But the concept of creative thinking as a divergence from a standard "norm" is used in creativity research for the purpose of assessing creativity and is also linked to non-traditional or creative processes that lead to unique and divergent artifacts [1,2]. Using Computational Thinking Pattern Analysis (CTPA)[3], the divergence between implemented computational thinking patterns in a student-created game, and that game's tutorial "norm" is calculated as an indicator of creativity. Through a case study of one teacher using three unique learning conditions, CTPA's computed divergence is explored as a valid measurement of creativity in these student games.},
  address = {New York, NY, USA},
  author = {Bennett, Vicki E. and Koh, KyuHan and Repenning, Alexander},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445302},
  isbn = {9781450318686},
  keywords = {ACM proceedings; computational thinking; computational thinking pattern analysis; creativity measurement; game design},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {359–364},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Computing creativity: divergence in computational thinking},
  url = {https://doi.org/10.1145/2445196.2445302},
  year = {2013}
}

@inproceedings{merged905,
  abstract = {Computational thinking (CT) is key to digital literacy and helps develop problem-solving skills, which are fundamental in modern school. As game design shows potential for teaching CT, metrics like Dr. Scratch emerge that help scholars systematically assess the CT of student-designed games, particularly with Scratch. Compared to other CT metrics, Dr. Scratch scores the CT of Scratch projects automatically and can be used to describe CT development. However, previous research using Dr. Scratch summatively assessed CT, but did not look at CT development. We use Dr. Scratch to assess the CT development of Scratch games designed by 8th-grade students in STEM curricula. We show how CT proficiency in student-designed games develops differently in each CT dimension, where parallelism, synchronization, and logic develop proficiently, while developing abstraction seems hard. We discuss insights into game-based CT development for STEM, and suggest improvements for metric-based CT assessment.},
  address = {New York, NY, USA},
  author = {Troiano, Giovanni Maria and Snodgrass, Sam and Arg\i{}mak, Erin\c{c} and Robles, Gregorio and Smith, Gillian and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
  booktitle = {Proceedings of the 18th ACM International Conference on Interaction Design and Children},
  doi = {10.1145/3311927.3323152},
  isbn = {9781450366908},
  keywords = {Computational thinking; Dr. Scratch; STEM; Scratch; assessment; constructionist learning; game design; metrics},
  location = {Boise, ID, USA},
  numpages = {12},
  pages = {208–219},
  publisher = {Association for Computing Machinery},
  series = {IDC '19},
  title = {Is My Game OK Dr. Scratch? Exploring Programming and Computational Thinking Development via Metrics in Student-Designed Serious Games for STEM},
  url = {https://doi.org/10.1145/3311927.3323152},
  year = {2019}
}

@inproceedings{merged906,
  abstract = {We present a two-part case study to explore how technology toys can promote computational thinking for young children. First, we conducted a formal study using littleBits, a commercially available technology toy, to explore its potential as a learning tool for computational thinking in three different educational settings. Our findings revealed differences in learning indicators across settings. We applied these insights during a teaching project in Cape Town, South Africa, where we partnered with an educational NGO, ORT SA CAPE, to offer enriching learning opportunities for both privileged and impoverished children. We describe our methods, observations, and lessons learned using littleBits to teach computational thinking to children in early elementary school, and discuss how our lab study informed practical work in the developing world.},
  address = {New York, NY, USA},
  author = {Lin, Veronica and Shaer, Orit},
  booktitle = {Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
  doi = {10.1145/2851581.2851589},
  isbn = {9781450340823},
  keywords = {child-computer interaction; computational thinking; education; tangible user interfaces.; youth},
  location = {San Jose, California, USA},
  numpages = {7},
  pages = {655–661},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '16},
  title = {Beyond the Lab: Using Technology Toys to Engage South African Youth in Computational Thinking},
  url = {https://doi.org/10.1145/2851581.2851589},
  year = {2016}
}

@inproceedings{merged907,
  abstract = {The PhD project presented here is concerned with teaching introductory programming to non-STEM students. Particularly students in the field of Information Studies and HCI. The research is carried out through three Teaching and Learning Explorations (TLE - I-III) which are set in an inductive action research approach. Computational thinking plays a significant role in computing education but it is still unclear how it should be interpreted to best serve its purpose. Constructionism and Computational Making seems to be promising frameworks to do this. In regards to specific teaching activities, the translation-grammar method of a structural approach to natural language teaching shows promising results when actualized in a concrete exercise named code-labelling.},
  address = {New York, NY, USA},
  author = {Spangsberg, Thomas Hvid},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3143781},
  isbn = {9781450353014},
  keywords = {computational making; computational thinking; constructionism; non-STEM computing education},
  location = {Koli, Finland},
  numpages = {2},
  pages = {201–202},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Teaching programming to non-STEM novices: a didactical study of computational thinking and non-STEM computing education},
  url = {https://doi.org/10.1145/3141880.3143781},
  year = {2017}
}

@inproceedings{merged908,
  abstract = {We present ENGAGE, a game-based learning environment for teaching computational thinking to middle school students. This project has dual aims: introducing computational thinking practices to students at a young age, and improving computational thinking attitudes among underrepresented students. In pursuit of these two goals, the ENGAGE team has mapped the learning objectives of the AP CS Principles course to the middle school level, and then built an immersive game experience upon that foundation. Students choose computer scientist avatars to represent themselves, and then play in pairs as they investigate a data-related mystery in an underwater research station, solving computational thinking challenges along the way. ENGAGE is currently being implemented as part of a quarterly elective in four middle schools in North Carolina. During the elective, students spend a total of ten classroom sessions playing the game, supplemented by "unplugged" activities that reinforce concepts learned in the game environment. We plan to expand to more middle schools in the 2015-2016 school year. In this demo, members of the SIGCSE community will be able to experience the ENGAGE game for themselves and learn more about its development and future directions. We will also discuss our success in recruiting and teaching the ENGAGE curriculum to middle school teachers who had no prior computer science experience, and the success of those middle school teachers in implementing ENGAGE within their classrooms.},
  address = {New York, NY, USA},
  author = {Boyer, Kristy and Buffum, Philip Sheridan and Culbertson, Kirby and Frankosky, Megan and Lester, James and Martinez-Arocho, Allison and Min, Wookhee and Mott, Bradford and Rodriguez, Fernando and Wiebe, Eric},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691876},
  isbn = {9781450329668},
  keywords = {computational thinking; game-based learning; middle school},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {440},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {ENGAGE: A Game-based Learning Environment for Middle School Computational Thinking},
  url = {https://doi.org/10.1145/2676723.2691876},
  year = {2015}
}

@inproceedings{merged909,
  abstract = {Computational thinking (CT) is increasingly seen as a core literacy skill for the modern world on par with the longestablished skills of reading, writing, and arithmetic. To promote the learning of CT at a young age we capitalized on children's interest in play. We designed RabBit EscApe, a board game that challenges children, ages 610, to orient tangible, magnetized manipulatives to complete or create paths. We also ran an informal study to investigate the effectiveness of the game in fostering children's problemsolving capacity during collaborative game play. We used the results to inform our instructional interaction design that we think will better support the learning activities and help children hone the involved CT skills. Overall, we believe in the power of such games to challenge children to grow their understanding of CT in a focused and engaging activity.},
  address = {New York, NY, USA},
  author = {Apostolellis, Panagiotis and Stewart, Michael and Frisina, Chris and Kafura, Dennis},
  booktitle = {Proceedings of the 2014 Conference on Interaction Design and Children},
  doi = {10.1145/2593968.2610489},
  isbn = {9781450322720},
  keywords = {computational thinking; education; tangible games},
  location = {Aarhus, Denmark},
  numpages = {4},
  pages = {349–352},
  publisher = {Association for Computing Machinery},
  series = {IDC '14},
  title = {RaBit EscAPE: a board game for computational thinking},
  url = {https://doi.org/10.1145/2593968.2610489},
  year = {2014}
}

@inproceedings{merged910,
  abstract = {In Austria Informatics is not taught in primary schools, but the curriculum includes some issues in several subjects that are related to computational thinking. Teachers are not aware that they already teach and use informatics concepts in their daily lessons. Informatics didactics experts and teacher trainers have to inform them and reveal connections between their primary school contents and different informatics concepts. Furthermore, one general educational aim of the curriculum is the acquisition of elementary cultural techniques including a child-friendly approach to modern information and communication technologies (ICT). The aim of this paper is to show how this is possible in practice and lists informatics concepts already "hidden" in the primary school curriculum. It reports on different initiatives that aim at introducing informatics in primary schools as well as a sample project on computational thinking funded by the regional teacher support program Teaching Informatics creatively. The qualitative results of this and other primary school projects show that it is possible and worth integrating informatics already at this early stage.},
  address = {New York, NY, USA},
  author = {Sabitzer, Barbara and Antonitsch, Peter K. and Pasterk, Stefan},
  booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2670757.2670778},
  isbn = {9781450332507},
  keywords = {computational thinking; informatics; primary education},
  location = {Berlin, Germany},
  numpages = {4},
  pages = {108–111},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '14},
  title = {Informatics concepts for primary education: preparing children for computational thinking},
  url = {https://doi.org/10.1145/2670757.2670778},
  year = {2014}
}

@article{merged911,
  abstract = {This article proposes and explores the kinds of computational thinking, creative practices, design activities, and inclusive learning opportunities provided to diverse high school youth when designing integrated systems through simultaneously physically and digitally responsive wearable games and systems. Previous work in this area, conducted by Richard, coined the term “bidirectionally responsive design” (BRD) to describe the design of dual-feedback systems using multiple digital and physical interfaces. BRD also emphasizes using simplified fabrication tools, media and coding platforms, and microcontrollers common in youth content creation communities and makerspaces. This study provides a framework to analyze computational concepts, practices, and perspectives that leverage an integrated systems and multimodal learning approach, such as BRD, adding to, building on, and integrating previous analytic approaches to looking at Scratch coding, media design, physical computing and e-textiles. Using a detailed case study of one team during one of the early workshop iterations, we conduct a multimodal analysis of bidirectionally responsive making activities and discuss the ways that they present novel understanding of integrating diverse interests and encouraging collaborative and distributed computational thinking. We further examine how BRD operationalizes and extends multimodal learning theory by adding tangible and integrative dimensions as additional modalities learners can leverage to facilitate meaning making, metacognition, and agency. We also discuss how designing integrated systems, as facilitated through BRD, provides an opportunity to engage in authentic practices around the design of complex systems.},
  address = {New York, NY, USA},
  articleno = {17},
  author = {Richard, Gabriela T. and Giri, Sagun},
  doi = {10.1145/3243138},
  issue_date = {September 2019},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Education/learning; collaboration; content analysis; creativity support; design research methods; embodied interaction; fashion/clothing; games/play; interview; participatory design; schools/educational setting; sensors; tangible; teens; wearable computers},
  month = {January},
  number = {3},
  numpages = {35},
  publisher = {Association for Computing Machinery},
  title = {Digital and Physical Fabrication as Multimodal Learning: Understanding Youth Computational Thinking When Making Integrated Systems Through Bidirectionally Responsive Design},
  url = {https://doi.org/10.1145/3243138},
  volume = {19},
  year = {2019}
}

@inproceedings{merged912,
  abstract = {Over the years a number of methodologies have been proposed in Software Engineering to deal with systems design. High among them is visual thinking (VT). VT is a well known strategy to foster more ideas and generate consensus within a group. In this paper, we propose the application of VT in the design phase of computational thinking in the K-12 curriculum. The goal is to facilitate the interchange of ideas in a team of students, and assist on orchestrating an all-hands, brainstorming working strategy that ensures that all the participants speak and are listened, and that all the viewpoints are taken into account. We describe the results of an experience of visual thinking applied in the design phase across the K-12 curriculum.},
  address = {New York, NY, USA},
  author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
  booktitle = {Proceedings of the 17th Annual Conference on Information Technology Education},
  doi = {10.1145/2978192.2978220},
  isbn = {9781450344524},
  keywords = {computational thinking; software design; visual thinking},
  location = {Boston, Massachusetts, USA},
  numpages = {5},
  pages = {97–101},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '16},
  title = {Teaching Software Design Engineering Across the K-12 Curriculum: Using Visual Thinking and Computational Thinking},
  url = {https://doi.org/10.1145/2978192.2978220},
  year = {2016}
}

@inproceedings{merged913,
  abstract = {RoboBuilder is a blocks-based, program-to-play game designed to introduce students to core aspects of computational thinking in a fun and engaging environment. The game employs a constructionist design to challenge players to invent and implement strategies to control an on-screen robot using a specially designed visual programming language. During the game, players' robots compete against a series of progressively more challenging opponents in one-on-one battles. Through playing the game, players construct working programs, providing learners with the experience of reifying their own ideas using a computational medium, a practice central to our notion of computational thinking. This poster presents the design rationale for RoboBuilder and discusses key aspects of the game that contribute to giving learners a positive, hands-on introduction to core computational thinking skills including computationally expressing ideas, algorithmic thinking, and debugging.},
  address = {New York, NY, USA},
  author = {Weintrop, David and Wilensky, Uri},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445430},
  isbn = {9781450318686},
  keywords = {computational thinking; design; game-based learning; novice programming environments},
  location = {Denver, Colorado, USA},
  numpages = {1},
  pages = {736},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Robobuilder: a computational thinking game (abstract only)},
  url = {https://doi.org/10.1145/2445196.2445430},
  year = {2013}
}

@inproceedings{merged914,
  abstract = {In recent years, the field of education has challenged researchers and practitioners to incorporate computing as an essential focus of K12 STEM education. Widely recognized as a "basic skill" necessary for economic opportunity and social mobility, integrating computing within K12 STEM supports learners of all ages in applying computational thinking within established and accessible contexts while co-developing practices essential to mathematical and scientific expertise. The EcoMOD project is an example of such an integration. In EcoMOD, immersive virtual environments are blended with interactive computational modeling tools designed specifically for younger children in an attempt to support ecological knowledge, complex causal reasoning and computational creation in third grade students. Our curricular design is grounded in the Science-as-Practice perspective and literature on young children's computing. In this proposal, we present outcomes from early pilot work with 35 third graders across the greater Boston area. This work has implications for designers of educational technologies by illuminating aspects of children's understanding that researchers and designers can leverage to support deeper and earlier understandings of ecological dynamics and computational practices.},
  address = {New York, NY, USA},
  author = {Dickes, Amanda and Metcalf, Shari and Kamarainen, Amy and Reilly, Joe and Brennan, Karen and Grotzer, Tina and Dede, Chris},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162285},
  isbn = {9781450351034},
  keywords = {computational literacy; computational thinking; modeling; programming; science education},
  location = {Baltimore, Maryland, USA},
  numpages = {1},
  pages = {1076},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {EcoMOD: Integrating Computational Thinking into Ecosystems Science Education via Modeling in Immersive Virtual Worlds (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162285},
  year = {2018}
}

@inproceedings{merged915,
  abstract = {In this paper, we present a novel technique for assessing the learning of computational thinking in the early childhood classroom. Students in three second grade classrooms learned foundational computational thinking concepts using ScratchJr and applied what they learned to creating animated collages, stories, and games. They then conducted artifact-based video interviews with each other in pairs using their iPad cameras. As discussed in the results, this technique can show a broad range of what young children learn about computational thinking in classroom interventions using ScratchJr than more traditional assessment techniques. It simultaneously provides a developmentally appropriate educational activity (i.e. peer interviews) for early childhood classrooms.},
  address = {New York, NY, USA},
  author = {Portelance, Dylan J. and Bers, Marina Umaschi},
  booktitle = {Proceedings of the 14th International Conference on Interaction Design and Children},
  doi = {10.1145/2771839.2771894},
  isbn = {9781450335904},
  keywords = {ScratchJr; artifact-based interviews; assessments; coding; computational thinking; early childhood; education; iPad; programming},
  location = {Boston, Massachusetts},
  numpages = {4},
  pages = {271–274},
  publisher = {Association for Computing Machinery},
  series = {IDC '15},
  title = {Code and tell: assessing young children's learning of computational thinking using peer video interviews with ScratchJr},
  url = {https://doi.org/10.1145/2771839.2771894},
  year = {2015}
}

@inproceedings{merged916,
  abstract = {In this paper, we aim to directly measure a CS4HS workshop's participating teachers' ability to synthesize CSTA computational thinking core concepts into actionable lesson plans for courses in their current teaching repertoire. Participants were expected to present a lesson plan on the final day of the workshop, highlighting the integration of their classroom curriculum with computing and computational thinking skills. We present our evaluation rubric, used to rate the teachers effective use of the computational thinking core concepts in their lesson plans, and describe how our method of evaluation may more accurately gauge the overall impact that CS4HS workshops have on their participants.},
  address = {New York, NY, USA},
  author = {Bort, Heather and Brylow, Dennis},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445323},
  isbn = {9781450318686},
  keywords = {CS4HS; K-12 outreach; computational thinking; lesson planning},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {427–432},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {CS4Impact: measuring computational thinking concepts present in CS4HS participant lesson plans},
  url = {https://doi.org/10.1145/2445196.2445323},
  year = {2013}
}

@inproceedings{merged917,
  abstract = {Computational Thinking (CT) is recognised as one of the fundamental skills of all graduates. Nevertheless, some issues can emerge when trying to introduce CT into schools; for example, teachers might not be willing to add topics to their intensive syllabi. Therefore, out-of-school venues such as summer schools can be considered a great opportunity for exposure to CT. Moreover, summer schools allow students to meet first hand researchers and help them pursue their interest far from the regular school climate. High school students in general are very curious for the creation of mobile apps; however, most of them get discouraged because they perceive this activity as a very difficult task. Here we describe the MobileDev summer school, a one-week training and hands-on experience in current topics of software development for mobile devices. The curiosity of the students for developing mobile apps is used to introduce and train CT via programming mobile applications through exercises (also with "pen and paper'") of increasing difficulty. The school was repeated twice at our university and was targeted to a reduced class of students concluding the third and the fourth year of high school. Participants were in total 19 and coming from different types of schools. This paper describes the structure of MobileDev and discusses the results to provide directions for further research.},
  address = {New York, NY, USA},
  author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
  booktitle = {Proceedings of the 16th Annual Conference on Information Technology Education},
  doi = {10.1145/2808006.2808033},
  isbn = {9781450338356},
  keywords = {computational thinking; mobile development; summer school},
  location = {Chicago, Illinois, USA},
  numpages = {6},
  pages = {21–26},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '15},
  title = {Students Want to Create Apps: Leveraging Computational Thinking to Teach Mobile Software Development},
  url = {https://doi.org/10.1145/2808006.2808033},
  year = {2015}
}

@inproceedings{merged918,
  abstract = {Computational thinking is one of the pillars of the ACM-CSTA standards for teaching computer science from kindergarten to college. Our approaches Abenteuer Informatik -- Informatik begreifen (adventures in informatics -- hands on computer science) and Abenteuer Technik are well established in the german-speaking community as means to connect computer science with other subjects and as means of clarifying some prejudices against computer science, especially problematic for establishing computer science as subject in schools.},
  address = {New York, NY, USA},
  author = {Gallenbacher, Jens},
  booktitle = {Proceedings of the 7th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2481449.2481487},
  isbn = {9781450317870},
  keywords = {abenteuer informatik; computational thinking; computer science education; computer science unplugged; curriculum},
  location = {Hamburg, Germany},
  numpages = {2},
  pages = {149–150},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '12},
  title = {Abenteuer informatik: hands-on exhibits for learning about computational thinking},
  url = {https://doi.org/10.1145/2481449.2481487},
  year = {2012}
}

@inbook{merged919,
  abstract = {Although learning to program can improve students' computational thinking skills---specifically, creating and debugging algorithms---we need to determine instructional strategies that foster such skills in young students. We investigated the role of analyzing worked examples that focused on creating and debugging programming algorithms with 28 first and 27 third graders. Students played a tangible, block-based programming game, Coding Awbie, across six, 20-minute sessions and were randomly assigned to also analyze programming worked examples during sessions one to three (immediate group) or sessions four to six (delayed group). To measure changes in creating and debugging algorithms before and after their worked example intervention, students completed a pretest, midtest (after session three), and a posttest. By midtest, students who were in the immediate group wrote significantly more accurate programs, although both groups had similar accuracy when given the chance to debug their programs. By posttest, both groups made significant gains in accuracy of their programs. Overall, analyzing worked examples proved to be a powerful support for students' programming skills in creating and debugging algorithms. However, students' common bugs indicate that additional worked examples should focus on double-counting errors.},
  address = {New York, NY, USA},
  author = {Bofferding, Laura and Kocabas, Sezai and Aqazade, Mahtob and Haiduc, Ana-Maria and Chen, Lizhen},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {11},
  pages = {19–29},
  publisher = {Association for Computing Machinery},
  title = {The effect of play and worked examples on first and third graders' creating and debugging of programming algorithms},
  url = {https://doi.org/10.1145/3507951.3519284},
  year = {2022}
}

@inproceedings{merged920,
  abstract = {Computing education could foster older adults' cognitive abilities and create a community of active lifelong learners. However, older adults are under-represented in computing education. This study examined how to design strategies to broaden participation in computing education for older adults based on andragogy principles. Two case studies focusing on computational thinking plugged and unplugged interventions were designed. The study recruited thirty-four older adults (age 60+). The structural thematic analysis was employed to analyze the qualitative data. The findings of this study revealed that computational thinking unplugged approaches substantially improve older adults' social lives through collaborative learning, and supported their self-regulated learning experiences compared to plugged approaches. Regarding their cognitive improvement, computational thinking plugged activities were shown to impact older adults more, which can spark their interest in computing education. This study contributes to broadening participation in computing education literature by discussing the implications for exploring adult-focused learning principles and strategies.},
  address = {New York, NY, USA},
  author = {Agbo, Friday Joseph and Everetts, Connor},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734757},
  isbn = {9798400706264},
  keywords = {adult education; andragogy principles; broadening participation in computing; computational thinking; lifelong learning},
  location = {Newark, NJ, USA},
  numpages = {8},
  pages = {292–299},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Exploring Andragogy Principles for Broadening Participation in Computing Education for Lifelong Learners},
  url = {https://doi.org/10.1145/3704637.3734757},
  year = {2025}
}

@inproceedings{merged921,
  abstract = {Media-Propelled Computational Thinking (MPCT - pronounced impact) is a course designed to introduce programming in the context of engaging problems in media computation, math, and physics. Programming concepts are introduced as incremental steps needed to solve pragmatic problems students already understand. The problems, graphical API, and hands-on program features are intended to expose fundamental concepts in mathematics and quantitative science.MPCT is offered in an entering students program for freshmen who plan to specialize in a variety of STEM (science, technology, engineering and math) and non-STEM subjects. The curriculum is intended to strengthen student intuition and interest in mathematical modeling and programming by engaging students in the direct manipulation of simple mathematical systems that model and display familiar physical phenomena. MPCT uses programs as concrete and manipulatable examples of fundamental concepts to engage a diverse range of students including women and underrepresented minorities.Variants of MPCT are being developed for high schools, and as a means to introduce computational science to upper division undergraduates studying non-computational STEM disciplines. This paper provides an overview of MPCT and representative problem studies including models of ballistics and resonant systems. The evaluation plan is described and very preliminary results are presented.},
  address = {New York, NY, USA},
  author = {Freudenthal, Eric Andrew and Roy, Mary K. and Ogrey, Alexandria Nicole and Magoc, Tanja and Siegel, Alan},
  booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/1734263.1734276},
  isbn = {9781450300063},
  keywords = {computational thinking; cs-zero; first year programs},
  location = {Milwaukee, Wisconsin, USA},
  numpages = {5},
  pages = {37–41},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '10},
  title = {MPCT: media propelled computational thinking},
  url = {https://doi.org/10.1145/1734263.1734276},
  year = {2010}
}

@inproceedings{merged922,
  abstract = {This paper describes the implementation of information technology problem-solving constructs and scenarios designed to cultivate computational thinking in information technology education at the college level via a course entitled "IT Problem Solving." A project of Broadening Advanced Technological Connections (BATEC), these scenarios were developed by a team of researchers under the auspices of an NSF CPATH grant focusing on adapting Computational Thinking as defined by Jeanette Wing into a more applied framework in partnership with and validated by a broad set of Information Technology (IT) professionals. The methodologies used within this highly successful course at Bunker Hill Community College may be of interest to other departments with existing IT programs that would like to take advantage of the strengths of the problem solving approach.},
  address = {New York, NY, USA},
  author = {L'Heureux, Jaime and Boisvert, Deborah and Cohen, Robert and Sanghera, Kamaljeet},
  booktitle = {Proceedings of the 13th Annual Conference on Information Technology Education},
  doi = {10.1145/2380552.2380606},
  isbn = {9781450314640},
  keywords = {computational thinking; cpath; curriculum development; education; information technology (it); problem solving},
  location = {Calgary, Alberta, Canada},
  numpages = {6},
  pages = {183–188},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '12},
  title = {IT problem solving: an implementation of computational thinking in information technology},
  url = {https://doi.org/10.1145/2380552.2380606},
  year = {2012}
}

@inproceedings{merged923,
  abstract = {Future school science standards, such as the Next Generation Science Standards (NGSS), emphasize the integration of simulation and modeling activities in the classroom environment. The extremes of these activities have two vastly different implementations. On one hand, a teacher can have students experiment on a pre-made simulation associated with the material. On the other hand, students can use, for example, an end-user programming tool to create the simulation from scratch. This allows students to not only experiment on, but also, to model the real world phenomenon being studied- a key component of computational thinking. However, the greater amount of time necessary for student authoring of simulations can make such an approach infeasible in the classroom environment. This paper presents a spectrum of strategies for integrating simulations into class- rooms emphasizing our research at the Scalable Game Design Lab, University of Colorado Boulder as well as research from other entities. Starting at consuming simulations and adding more user interaction and authoring elements begins to provide a gentle slope from consumption towards simulation creation. Results indicate that many of these strategies are quite effective.},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok Ram and Repenning, Alexander and Koh, Kyu Han and Savignano, Mark},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2538950},
  isbn = {9781450326056},
  keywords = {computational thinking; high school computer education; middle school computer education; next generation science standards; simulation and modeling},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  pages = {659–664},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {The consume - create spectrum: balancing convenience and computational thinking in stem learning},
  url = {https://doi.org/10.1145/2538862.2538950},
  year = {2014}
}

@inproceedings{merged924,
  address = {New York, NY, USA},
  author = {Settle, Amber and Goldberg, Debra S. and Barr, Valerie},
  booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2462476.2462511},
  isbn = {9781450320788},
  keywords = {biology; computational thinking; economics; english; humanities; k-12; language arts; science; undergraduate; visual arts},
  location = {Canterbury, England, UK},
  numpages = {2},
  pages = {311–312},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '13},
  title = {Beyond computer science: computational thinking across disciplines},
  url = {https://doi.org/10.1145/2462476.2462511},
  year = {2013}
}

@inproceedings{merged925,
  abstract = {Computational thinking aims to outline fundamental skills from computer science that everyone should learn. These skills include problem formulation, logically organizing data, automating solutions through algorithmic thinking, and representing data through abstraction. One aim of the NSF is to integrate these and other computational thinking concepts into the classroom. This paper introduces a tool called the Simulation Creation Toolkit wherein users apply high-level agent interactions called Computational Thinking Patterns (CTPs) to create simulations. Programming at the Computational Thinking Pattern level allows users to directly create agent interactions in a simulation by employing generic icons acting out a scientific phenomenon they are trying to represent. The Simulation Creation Toolkit aims to preserve the computational thinking benefits of simulation creation while enabling higher-level implementation of agent behaviors. Initial study data collected from sixth grade students with no prior programming experience indicates that students can work the mechanics necessary to create simulations in the classroom environment using the Simulation Creation Toolkit.},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok Ram and Repenning, Alexander and Lewis, Clayton H.},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445346},
  isbn = {9781450318686},
  keywords = {computational thinking; computational thinking patterns; middle school computer education; scalable game design; student observation; university programming education},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {501–506},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {The simulation creation toolkit: an initial exploration into making programming accessible while preserving computational thinking},
  url = {https://doi.org/10.1145/2445196.2445346},
  year = {2013}
}

@article{merged926,
  address = {New York, NY, USA},
  author = {Kafai, Yasmin and Proctor, Chris and Lui, Debora},
  doi = {10.1145/3381887},
  issn = {2153-2184},
  issue_date = {March 2020},
  journal = {ACM Inroads},
  month = {February},
  number = {1},
  numpages = {10},
  pages = {44–53},
  publisher = {Association for Computing Machinery},
  title = {From theory bias to theory dialogue: embracing cognitive, situated, and critical framings of computational thinking in K-12 CS education},
  url = {https://doi.org/10.1145/3381887},
  volume = {11},
  year = {2020}
}

@inproceedings{merged927,
  abstract = {Computational thinking is an essential skill for everyone in today's world. It is a problem solving skill that incorporates problem decomposition, pattern recognition, abstraction, logical and algorithmic thinking. Yet the exposure of students in K-12 curriculum to computational thinking is minimal in most schools. There are various opportunities for computational thinking to be included in almost all content areas in the curriculum. In order for this to be realized, teachers need introduction to the concept of computational thinking and they need to be equipped with tools to provide practices in this concept in the classrooms. Inspired by this idea, we organized a workshop in June 2014 to involve all teachers from all grade levels and all disciplines where we introduced them to the concept of computational thinking and taught them tools such as Scratch, Google Sites, HTML, and AppInventor. The workshop attracted 34 teachers mostly from the Muscogee County School District in Georgia. In this poster we present our recruitment strategy, methodology of our workshop, and results from our pre and post surveys. In particular, we present the influence of our workshop on teachers' views of computational thinking. We also share highlights from the projects that the teachers worked on during the workshop and presented at the end.},
  address = {New York, NY, USA},
  author = {Kurt-Peker, Yesem and Ray, Lydia and Hodhod, Rania and Khan, Shamim},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691906},
  isbn = {9781450329668},
  keywords = {computational thinking; computing in k-12; computing workshop for teachers},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {676},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Computing in the Classroom: A Workshop for Teachers to Infuse Computational Thinking into K-12 Classrooms (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2691906},
  year = {2015}
}

@inproceedings{merged928,
  abstract = {Computational thinking (CT) has been described as an essential capacity to prepare students for computer science, as well as to be productive members of society. But efforts to engage K-12 students in CT are hampered by a lack of definition and assessment tools. In this paper, we describe the first results of a newly created performance assessment tool for measuring CT in middle school. We briefly describe the context for the performance assessment (game-programming courses), the aspects of CT that are measured, the results, and the factors that are associated with performance. We see the development of assessment tools as a critical step in efforts to bring CT to K-12, and to strengthen the use of game programming in middle school. We discuss problems and implications of our results.},
  address = {New York, NY, USA},
  author = {Werner, Linda and Denner, Jill and Campe, Shannon and Kawamoto, Damon Chizuru},
  booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2157136.2157200},
  isbn = {9781450310987},
  keywords = {Alice; assessment; computational thinking; game programming; middle school; pair programming},
  location = {Raleigh, North Carolina, USA},
  numpages = {6},
  pages = {215–220},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '12},
  title = {The fairy performance assessment: measuring computational thinking in middle school},
  url = {https://doi.org/10.1145/2157136.2157200},
  year = {2012}
}

@inproceedings{merged929,
  abstract = {In this paper we describe CTArcade, a web application framework that seeks to engage users through game play resulting in the improvement of computational thinking (CT) skills. Our formative study indicates that CT skills are employed when children are asked to define strategies of common games such as Connect Four. In CTArcade, users can train their own virtual characters while playing games with it. Trained characters then play matches against other virtual characters. Based on reviewing the matches played, users can improve their game character. A basic usability evaluation was performed on the system, which helped to define plans for improving CTArcade and assessing its design goals.},
  address = {New York, NY, USA},
  author = {Lee, Tak Yeon and Mauriello, Matthew Louis and Ingraham, John and Sopan, Awalin and Ahn, June and Bederson, Benjamin B.},
  booktitle = {CHI '12 Extended Abstracts on Human Factors in Computing Systems},
  doi = {10.1145/2212776.2223794},
  isbn = {9781450310161},
  keywords = {computational thinking; learning and games},
  location = {Austin, Texas, USA},
  numpages = {6},
  pages = {2309–2314},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '12},
  title = {CTArcade: learning computational thinking while training virtual characters through game play},
  url = {https://doi.org/10.1145/2212776.2223794},
  year = {2012}
}

@inproceedings{merged930,
  abstract = {The STEM Career Infographic Project (SCIP) was a 4-week exploratory project deployed in an 8th grade classroom at Mountain Vista Middle School (MVMS). SCIP was poised to address the growing focus on STEM fields at MVMS and within the school district. We piloted SCIP in Spring 2014 with six science classes or about 180 students. SCIP allowed for students to explore their own STEM interests, while simultaneously engaging in the 6 Computational Thinking Practices (CTP) outlined by the College Board.Students were required to research a STEM career in-depth, then report on their careers using infographics (CTP #2: Creating Computational Artifacts and CTP #3: Abstracting). We used free and online programs to create the infographics; this provided the students the opportunity to learn software they were not previously exposed to and to explore new communication tools (CTP #1: Connecting Computing and CTP #2: Analyzing Problems and Artifacts). SCIP also provided many occasions for the students to work together by sharing career information or helping each other with the software (CTP #6: Collaborating). At the end of the project the students presented their infographics in front of the class and taught their classmates about their career (CTP #5: Communicating).The project was incredibly successful. The students had a positive affect through the duration of the project and many also expressed an extreme level of interest in doing similar projects in the future. We will be repeating this project in Spring 2015, with a few adaptations and formal evaluation scheme.},
  address = {New York, NY, USA},
  author = {Kos, Brittany Ann and Sims, Elizabeth},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691934},
  isbn = {9781450329668},
  keywords = {computational thinking; computing education; infographics; media-based computing; middle school education; stem education},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {681},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {STEM Ccareers Inforgaphic Project (SCIP): Teaching Media-Based Computational Thinking Practices (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2691934},
  year = {2015}
}

@inproceedings{merged931,
  abstract = {Innovative solutions for complex problems entail diversity of perspectives, and students must learn to integrate concepts from multiple disciplinary areas. Yet, to provide collaborative experiences that cross disciplinary boundaries, educators must navigate numerous administrative and pedagogical challenges. In this hands-on workshop participants will learn how to leverage existing courses for students and faculty to collaborate across disciplines and with a community partner, to develop socially-relevant computational solutions for real-world problems. Participants will also brainstorm ideas on addressing specific challenges at their own institutions. The intended audience is educators interested in engaging their students in deep computational thinking through immersive multidisciplinary collaborative experiences. Registered participants will be reimbursed the workshop registration fee through NSF Award# 1141170. We will additionally offer a stipend to participants who adopt our model, administer assessments and provide us with their results for analysis and inclusion in reports. More information will be available at http://tardis.tcnj.edu/cabect/. Laptop Recommended.},
  address = {New York, NY, USA},
  author = {Pulimood, Sarah Monisha and Pearson, Kim and Bates, Diane C.},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2539016},
  isbn = {9781450326056},
  keywords = {collaboration; community engaged learning; computational thinking},
  location = {Atlanta, Georgia, USA},
  numpages = {1},
  pages = {741},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {CABECT: collaborating across boundaries to engage undergraduates in computational thinking (abstract only)},
  url = {https://doi.org/10.1145/2538862.2539016},
  year = {2014}
}

@inproceedings{merged932,
  abstract = {I present the design of Algo.Rhythm, a tangible computational drum kit with programmable behaviors. By arranging and physically connecting a number of drum-bots, each of them records beat patterns from outside world or its precursor, replays the patterns in selectable ways, and passes the rhythm to its neighbors along the drum-bot's surface in 3D space. The construction of drum-bots and the delivery of the beat patterns provide users a unique opportunity to learn a set of computational concepts like sequential execution, iteration, or forking through composing music.},
  address = {New York, NY, USA},
  author = {Peng, Huaishu},
  booktitle = {Proceedings of the Sixth International Conference on Tangible, Embedded and Embodied Interaction},
  doi = {10.1145/2148131.2148234},
  isbn = {9781450311748},
  keywords = {algorithmic specification; computational thinking; musical instrument; tangible interfaces},
  location = {Kingston, Ontario, Canada},
  numpages = {2},
  pages = {401–402},
  publisher = {Association for Computing Machinery},
  series = {TEI '12},
  title = {Algo.Rhythm: computational thinking through tangible music device},
  url = {https://doi.org/10.1145/2148131.2148234},
  year = {2012}
}

@inproceedings{merged933,
  abstract = {In the 1960s, Papert and his team at the Massachusetts Institute of Technology (MIT) developed Turtle Graphics using the LOGO programming language. Underpinning this development was a profound new philosophy of how learning happens with computers: a microworlds-based approach to learning. The wider aim of this research project is to examine how a microworlds-based approach may be revived in contemporary educational contexts by secondary school teachers in cross-curricular subject areas. It examines the microworld as a tool for secondary level learning at ages eleven-to-fourteen and explores its potential role in making relevant conceptual learning accessible through practical, constructionist approaches in cross-curricular applications.This particular work-in-progress paper reports on a comparative evaluation of a microworlds-based approach to teaching poetic verse in the subject domain of drama. A quasi-experimental design was used in order to measure performance gains in specific aspects of computational thinking and literacy development following the microworld-based intervention. Preliminary data reveals a higher improvement in performance but further qualitative data needs to be collected in order to provide further insight to support the quantitative findings.},
  address = {New York, NY, USA},
  author = {Jenkins, Craig},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818316},
  isbn = {9781450337533},
  keywords = {Computational thinking; literacy; microworlds},
  location = {London, United Kingdom},
  numpages = {4},
  pages = {61–64},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {A Work in Progress Paper: Evaluating a Microworlds-based Learning Approach for Developing Literacy and Computational Thinking in Cross-curricular Contexts},
  url = {https://doi.org/10.1145/2818314.2818316},
  year = {2015}
}

@article{merged934,
  address = {New York, NY, USA},
  author = {Cooper, Stephen and Dann, Wanda},
  doi = {10.1145/2723169},
  issn = {2153-2184},
  issue_date = {March 2015},
  journal = {ACM Inroads},
  keywords = {computational thinking; non-majors; programming},
  month = {February},
  number = {1},
  numpages = {5},
  pages = {50–54},
  publisher = {Association for Computing Machinery},
  title = {Programming: a key component of computational thinking in CS courses for non-majors},
  url = {https://doi.org/10.1145/2723169},
  volume = {6},
  year = {2015}
}

@inproceedings{merged935,
  abstract = {In this paper, we discuss using models and modeling in a new way to teach basic computing to pupils within the K-12 segment. We argue why we believe understanding and creating models are fundamental skills for all pupils as it can be characterized as the skill that enable us to analyze and understand phenomena as well as design and construct artifacts. We also try to characterize the essence of model-based thinking and practice. We propose that a strong focus on the relation between mental models (of real or imaginary systems) and computerized models (embedded in computer-based systems) could provide a new approach to teaching computing. This approach should clarify and make explicit the role of models in computing in connection with other subject areas. We believe that such an approach would strongly broaden the participation in computing, as it will allow more pupils to become active creators with computing.},
  address = {New York, NY, USA},
  author = {Nowack, Palle and Caspersen, Michael E.},
  booktitle = {Proceedings of the 14th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/2674683.2674686},
  isbn = {9781450330657},
  keywords = {modeling; models; practice; teaching; thinking},
  location = {Koli, Finland},
  numpages = {5},
  pages = {147–151},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '14},
  title = {Model-based thinking and practice: a top-down approach to computational thinking},
  url = {https://doi.org/10.1145/2674683.2674686},
  year = {2014}
}

@inproceedings{merged936,
  abstract = {There is a growing need in computer science education to develop courses that demonstrate the articulations between computer science and an array of computing-dependent fields. This poster describes an effort to develop a model for students and faculty to collaborate across disciplines and with a community organization to develop computational solutions to address complex real-world problems. Students in computer science classes are collaborating with students in journalism classes and Habitat for Humanity, to develop a web-based system that manages pollution related data. This is an initiative aimed at empowering citizens in the Trenton area of New Jersey with the opportunity to learn, share, and contribute pollution data while encouraging them to become participants in environmental advocacy and public policy deliberations on these issues. While students focus on the objectives of the individual courses, they are also deeply engaged in the complexities of privacy, security, accessibility of data, user-centered design, etc. as they ponder civic justice issues.},
  address = {New York, NY, USA},
  author = {Qureshi, Shahzore and Estevez, Francisco and Pulimood, Sarah Monisha},
  booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2462476.2465614},
  isbn = {9781450320788},
  keywords = {civic engagement; collaborative learning; information access; user-generated content moderation; web-based database system},
  location = {Canterbury, England, UK},
  numpages = {1},
  pages = {356},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '13},
  title = {Students organizing against pollution: computational thinking across boundaries},
  url = {https://doi.org/10.1145/2462476.2465614},
  year = {2013}
}

@inproceedings{merged937,
  abstract = {Refactoring presents a complex computational challenge, and its learning is intricate, requiring a solid foundation in computational thinking, programming and object-oriented concepts. Moreover, making students realize the importance and benefits of refactoring is also challenging. To address this complexity, we introduce a refactoring teaching method based on Generative Artificial Intelligence (GAI), incorporating single-loop and double-loop learning principles, focusing on fostering deeper and critical learning. We used ChatGPT, a GAI-based tool, and conducted an eight-week mixed-methods study involving 23 computer science undergraduate students. The study involved applying four distinct projects extracted from GitHub, where participants were tasked with identifying code smells and performing the necessary refactoring to improve code quality. The primary focus was on identifying both the positive and negative aspects of the method, as well as delineating the computational thinking characteristics developed during the process. The results indicate that the use of ChatGPT facilitated the learning of refactoring, contributing to the development of numerous computational thinking skills, especially problem formulation, decomposition, and abstraction. Thus, this paper contributes a GAI-based teaching method along with evidence on how it helps students develop refactoring skills.},
  address = {New York, NY, USA},
  author = {Menolli, Andr\'{e} and Strik, Bruno and Rodrigues, Luiz},
  booktitle = {Proceedings of the XXIII Brazilian Symposium on Software Quality},
  doi = {10.1145/3701625.3701681},
  isbn = {9798400717772},
  keywords = {ChatGPT; Computational Thinking; Generative Artificial Intelligence; Higher Education; Refactory; Teaching},
  numpages = {12},
  pages = {563–574},
  publisher = {Association for Computing Machinery},
  series = {SBQS '24},
  title = {Teaching Refactoring to Improve Code Quality with ChatGPT: An Experience Report in Undergraduate Lessons},
  url = {https://doi.org/10.1145/3701625.3701681},
  year = {2024}
}

@inproceedings{merged938,
  abstract = {In this conceptual paper, we argue that recent developments in K-12 programming education are suggestive of what can be called a "social turn", a shift in the field in which learning to code has shifted from being a predominantly individualistic and tool-oriented approach to now one that is decidedly sociologically and culturally grounded in the creation and sharing of digital media. We discuss in detail three dimensions of this social turn (1) from writing code to creating applications, (2) from composing "from scratch" to remixing the work of others, and (3) from designing tools to facilitating communities. These three shifts illustrate how the development of artifacts, tools, and communities of programming lead us to move from computational thinking to computational participation. We draw from examples of past and current research, both inside and outside of school, and situate these developments in the context of current discussions around computational thinking, which has become a driving force in revitalizing programming in K-12 curricula and altogether broadening participation in computing.},
  address = {New York, NY, USA},
  author = {Kafai, Yasmin B. and Burke, Quinn},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445373},
  isbn = {9781450318686},
  keywords = {networked commons; novice programming; tools},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {603–608},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {The social turn in K-12 programming: moving from computational thinking to computational participation},
  url = {https://doi.org/10.1145/2445196.2445373},
  year = {2013}
}

@inproceedings{merged939,
  abstract = {This workshop introduces our elementary school programming curriculum, KELP-CS, and the corresponding programming environment LaPlaya. KELP-CS (Kids Engaged in Learning Programming) is an innovative, modular computational thinking curriculum for 4th-6th grade students. Off-computer activities connect computer science concepts to students' every day experiences. On-computer activities in LaPlaya develop students' computational thinking and programming skills. Finally, an engineering design project allows students to apply these new skills through an open-ended, creative project (e.g. digital storytelling in Module 1, and virtual game in Module 2). LaPlaya is a modified Scratch programming environment tailored to the developmental needs of 4th-6th grade students. In this workshop, we begin by introducing the KELP-CS curriculum; LaPlaya, the development environment used in the on-computer activities; and the resources for teachers embedded in both. Workshop participants will do sample on- and off- computer activities from Module 1 (4th grade) and discuss tips and strategies for teaching computational thinking with this age group. For the second part of the workshop, we provide additional background for participants interested in creating their own curriculum with LaPlaya. This includes how to create projects and their analysis.},
  address = {New York, NY, USA},
  author = {Franklin, Diana and Dwyer, Hilary A.},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2678304},
  isbn = {9781450329668},
  keywords = {computer science education; elementary school; novice programming environments},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {712},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {KELP CS and LaPlaya: A Computational Thinking Curriculum and Development Environment for 4th - 6th Grade (Abstract Only)},
  url = {https://doi.org/10.1145/2676723.2678304},
  year = {2015}
}

@inproceedings{merged940,
  abstract = {This paper presents Frog Pond, an interactive code-first learning environment about biological evolution. We deployed Frog Pond as part of a six-day curricular unit on natural selection implemented in six 7th grade science classes. Here we describe a case study of two students, Charlie and Aaron who participated in the unit. Comparing pre- and post- interviews in which they were asked to design a program for a hypothetical simulation of evolution, we found that both students shifted from an event-based programming approach to a rule-based approach. Both students also drew upon their experience with Frog Pond to explain an evolutionary phenomenon. However, the level of sophistication of the two students' explanations varied along with the aspects of Frog Pond they drew upon. These findings have implications for design improvement to better support students' understanding of evolution.},
  address = {New York, NY, USA},
  author = {Guo, Yu and Wagh, Aditi and Brady, Corey and Levy, Sharona T. and Horn, Michael S. and Wilensky, Uri},
  booktitle = {Proceedings of the The 15th International Conference on Interaction Design and Children},
  doi = {10.1145/2930674.2930724},
  isbn = {9781450343138},
  keywords = {agent-based modeling; code-first learning environment; computational thinking; evolution},
  location = {Manchester, United Kingdom},
  numpages = {9},
  pages = {246–254},
  publisher = {Association for Computing Machinery},
  series = {IDC '16},
  title = {Frogs to Think with: Improving Students' Computational Thinking and Understanding of Evolution in A Code-First Learning Environment},
  url = {https://doi.org/10.1145/2930674.2930724},
  year = {2016}
}

@inproceedings{merged941,
  abstract = {n this paper, we introduce an embodied pedagogical approach for learning computational concepts, utilizing computational practices, and developing computational perspectives. During a five-week pilot, a group of students spent after-school time learning the basic elements of dance and then using them to program three-dimensional characters that could perform. Throughout the pilot, we found students consistently standing up in front of their computers and using their bodies to think through the actuation of their characters. Preliminary results suggest that designing a virtual-physical dance performance is a motivating and engaging social context in which to introduce students, especially girls, to alternative applications in computing.},
  address = {New York, NY, USA},
  author = {Daily, Shaundra B. and Leonard, Alison E. and J\"{o}rg, Sophie and Babu, Sabarish and Gundersen, Kara},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2538917},
  isbn = {9781450326056},
  keywords = {broadening participation; embodiment; virtual environments},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  pages = {91–96},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Dancing alice: exploring embodied pedagogical strategies for learning computational thinking},
  url = {https://doi.org/10.1145/2538862.2538917},
  year = {2014}
}

@inproceedings{merged942,
  abstract = {The goal of the DISSECT program is to integrate computational thinking lessons into general education K-12 classrooms via graduate student/teacher partnerships. The idea of combining the teaching of CT with other disciplines is not new and it has taken shape in a variety of recent efforts in the formal education of youth. What is promising and innovative is the approach as it is implemented in K12 DISSECT classrooms. Through a collaborative teaching partnership, teachers gain a new perspective regarding computer science, and in cooperation with graduate students well-versed in computer science concepts, develop lessons and course modules that serve two purposes: 1.) Address K-12 content standards in core disciplines (e.g., language arts, life science) and 2.) Introduce CT concepts, such as abstraction, algorithms, data analysis and modeling. This poster describes ways computational thinking (CT) is taught in general K-12 classrooms in New Mexico through cooperative teaching. Along with their potential to stimulate interest in computing, these pilot modules were viewed by K12 teachers as enhancing disciplinary course content that teachers are charged with teaching (e.g., middle school science, language arts), deemed vital for sustainability in K12 schools by participating teachers. Preliminary data indicate graduate student and teacher satisfaction with cooperative teaching of CT. Next steps for research will involve student level data collection and analysis.},
  address = {New York, NY, USA},
  author = {Hug, Sarah and Sandry, Josh and Vordermann, Ryan and Pontelli, Enrico and Wright, Ben},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445452},
  isbn = {9781450318686},
  keywords = {computational thinking; k12 outreach},
  location = {Denver, Colorado, USA},
  numpages = {1},
  pages = {742},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {DISSECT: integrating computational thinking in the traditional K-12 curricula through collaborative teaching (abstract only)},
  url = {https://doi.org/10.1145/2445196.2445452},
  year = {2013}
}

@article{merged943,
  abstract = {The composer still composes but also gets to take a programming-enabled journey of musical discovery.},
  address = {New York, NY, USA},
  author = {Edwards, Michael},
  doi = {10.1145/1965724.1965742},
  issn = {0001-0782},
  issue_date = {July 2011},
  journal = {Commun. ACM},
  month = {July},
  number = {7},
  numpages = {10},
  pages = {58–67},
  publisher = {Association for Computing Machinery},
  title = {Algorithmic composition: computational thinking in music},
  url = {https://doi.org/10.1145/1965724.1965742},
  volume = {54},
  year = {2011}
}

@inproceedings{merged944,
  abstract = {Traditional geographical approaches to acquiring new knowledge and understanding problems varies significantly from the primary modus operandi of computational thinking that is practiced by computer scientists. These differences have contributed to a persistent absence of geo computational courses within academic geography departments and an underdeveloped and limited understanding of spatial thinking by computationally-minded scholars.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Sinton, Diana S.},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365370},
  isbn = {9781450369527},
  keywords = {Geographical thinking; coordinates; enumerations; geo computation; spatial relationships; spatial thinking},
  location = {Chicago, IL, USA},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {Observations on the Gaps and Opportunities for Geo computation},
  url = {https://doi.org/10.1145/3356393.3365370},
  year = {2019}
}

@inproceedings{merged945,
  abstract = {Although programming is part of primary school curricula in many countries, barriers persist for elementary students learning programming such as an insufficient understanding of the underlying mathematics, complex concepts, and purpose of programming. These challenges often lead to disinterest. Herein we present an innovative game-design-based programming education tool. Students progressively enhance a classic game, Puyo Puyo, using fundamental programming concepts and selecting the appropriate code. This engaging approach improves students' computational thinking abilities as they transform code into a functional game. Here, we describe the tool's background and structure. Then we detail a workshop using the tool, including analyzing the changes in students' programming skills, computational thinking, and interest in programming. Finally, we summarize the findings and future research directions.},
  address = {New York, NY, USA},
  author = {Tian, Ruochen and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki and Kobayashi, Hiroshi and Tsuji, Ayumi},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635477},
  isbn = {9798400704246},
  keywords = {block-based coding; computational thinking; game elements; k-12 education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1838–1839},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Enhancing Programming Education through Game-Based Learning: Design and Implementation of a Puyo Puyo-Inspired Teaching Tool},
  url = {https://doi.org/10.1145/3626253.3635477},
  year = {2024}
}

@inproceedings{merged946,
  abstract = {Hypothesis formation and testing is central to debugging computer programs or algorithms, and thus considered an essential element of computational thinking (CT) education. To teach this skill to school children, we developed a two-player rule-guessing game called Block-N-Key which involves hypothesis generation and testing to categorise given blocks according to one of many possible rules. In an evaluation of the game with 10 children aged 8-12, participants were able to systematically generate and test hypotheses, indicating the potential usefulness and usability of the game in classroom settings. However, students needed guided instruction on: 1) the generation of complex hypotheses (e.g., using Boolean operations), 2) the use of falsification-not just confirmation-to test hypotheses, and 3) systematicity in keeping track of prior hypotheses and evidence to support limited working memory.},
  address = {New York, NY, USA},
  author = {Agrawal, Shravani and Rallabhandi, Indu and Ragavan, Sruti Srinivasa},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729035},
  isbn = {9798400715679},
  keywords = {computational thinking; cs unplugged; debugging; hypothesis testing; k-12},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {431–437},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {BlockNKey: A Game for Teaching Systematic Hypothesis Testing},
  url = {https://doi.org/10.1145/3724363.3729035},
  year = {2025}
}

@inbook{merged947,
  abstract = {This paper reports on a professional development (PD) effort in which 12 elementary teachers (K-5) in a rural, under-resourced school were equipped with the skills needed to integrate computer science activity into the regular math curriculum. Over the course of a year, the teachers engaged in a week-long summer workshop and monthly follow-up training with in-classroom support as they integrated educational robots into their math curriculum. Surveys, tests, and teacher lesson plans were analyzed to better understand how the PD contributed to teacher's knowledge and skills. Wilcoxon Signed-Rank tests indicated that teacher rankings on their attitudes towards and planning practices with educational robots were statistically significantly higher at the end of the PD. The improvement was further reflected in the quality of their lesson plans. Implications for preparing teachers to use educational robots to teach computer science in elementary mathematics are discussed.},
  address = {New York, NY, USA},
  author = {Kopcha, Theodore J. and Wilson, Cheryl Y. and Yang, Dayae},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {47–54},
  publisher = {Association for Computing Machinery},
  title = {Improving teacher use of educational robotics to teach computer science in K-5 mathematics},
  url = {https://doi.org/10.1145/3507951.3519287},
  year = {2022}
}

@inproceedings{merged948,
  abstract = {Math on a Sphere (MoS) is a newly developed Web-based environment that enables children to imagine, program, and share creative designs on a public spherical display, the "Science on a Sphere" system created by the National Oceanic and Atmospheric Administration (NOAA). The MoS software, similar in spirit to the Logo language, was installed at an exhibit located in the Lawrence Hall of Science at the University of California at Berkeley and at the Fiske Planetarium at University of Colorado, Boulder. Twenty-five children ages 8 to 13 in two cohorts tested the MoS software during a half-day workshop held at the Lawrence Hall. In addition to using the MoS software to create beautiful and original works of art, children also engaged in hands-on crafts and inquiry-based math activities to further promote learning of spherical geometry and computational thinking. MoS software workshop had a positive impact on children's engagement, but had mixed results about their understanding of geometry as evidenced by direct observations and results from pre/post-surveys, which are reported here.},
  address = {New York, NY, USA},
  author = {Hsi, Sherry and Eisenberg, Michael},
  booktitle = {Proceedings of the 11th International Conference on Interaction Design and Children},
  doi = {10.1145/2307096.2307137},
  isbn = {9781450310079},
  keywords = {computational thinking; logo; math on a sphere; public displays; spherical geometry},
  location = {Bremen, Germany},
  numpages = {4},
  pages = {248–251},
  publisher = {Association for Computing Machinery},
  series = {IDC '12},
  title = {Math on a sphere: using public displays to support children's creativity and computational thinking on 3D surfaces},
  url = {https://doi.org/10.1145/2307096.2307137},
  year = {2012}
}

@inbook{merged949,
  abstract = {While understanding in the field of how CT can be used in early childhood is limited, current CT definitions include skills and practices that align with early mathematics and science learning goals outlined in national frameworks (e.g., Head Start Early Learning Outcomes Framework) and state standards. In order to understand which elements of CT align with the abilities and interests of young children and how they can be integrated with early science and math experiences in a mutually supportive manner, we partnered with preschool teachers and families to co-design and pilot test hands-on (unplugged) and digital activities for classrooms and homes.Our collaborative research identified the following CT skills as productive starting points for our co-design work: (1) problem decomposition; (2) algorithmic thinking; (3) abstraction; and (4) testing and debugging. This paper describes our approach to operationalizing CT for early learning and our empirical research around activities designed to understand how CT can be linked with math and science to create powerful learning experiences for preschool learners. Our work involves actively fostering a home-school connection for promoting CT and prioritized designing for activities that fit the ecology of preschool classrooms and homes (with special attention to family activities). With a view to designing equity-oriented experiences, we partnered with preschools serving historically underserved communities, and centered families' funds of knowledge. This paper focuses specifically on the home component of the program and shares data and analyses about children's and parent's experiences at home---which activities were more successful and resonated with children and families, and which specific synergies emerged between CT skills, math and science concepts and practices. Our findings highlight the promise of introducing early CT to support early learning, and especially involving families in the process. Results from our research also identified challenges that should be addressed in future iterations of this design research We believe our family connection activities are not only a unique part of the research but also an exemplar of what should be an essential piece of STEM education for young learners.},
  address = {New York, NY, USA},
  author = {Grover, Shuchi and Dominguez, Ximena and Leones, Tiffany and Kamdar, Danae and Vahey, Phil and Gracely, Sara},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {13},
  pages = {72–84},
  publisher = {Association for Computing Machinery},
  title = {Strengthening early STEM learning by integrating CT into science and math activities at home},
  url = {https://doi.org/10.1145/3507951.3519290},
  year = {2022}
}

@inproceedings{merged950,
  abstract = {A strategy exposing middle school students to computer science through game design appears to be a promising means to mitigate the computer science pipeline challenge. Particularly when short game design activities are integrated into already existing middle school courses, research suggests that game design is effective in broadening participation and motivating large numbers of students, along with large percentages of women and minorities. A study with over 10,000 students is exploring the sustainability of this approach and finding positive responses to inquiries such as these: Do teachers continue to use game design? Can they advance beyond extrinsic rewards such as research stipends? After building one game, do students advance, building more games or even STEM simulations?},
  address = {New York, NY, USA},
  author = {Koh, Kyu Han and Repenning, Alexander and Nickerson, Hilarie and Endo, Yasko and Motter, Pate},
  booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2445196.2445372},
  isbn = {9781450318686},
  keywords = {computational thinking; game design; simulation design; sustainability; zone of proximal flow},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {597–602},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '13},
  title = {Will it stick? exploring the sustainability of computational thinking education through game design},
  url = {https://doi.org/10.1145/2445196.2445372},
  year = {2013}
}

@inproceedings{merged951,
  abstract = {Modeling is a major component of Computer Science (CS) education implemented in K-12. We propose Information Encoding Modeling (IEM) to facilitate the development of modeling competencies, emphasizing semiotic competence and the creative representation of complex information. This research situates IEM within the context of existing modeling techniques, evaluates its application through various examples, and proposes an Encoding Diagram as a key representational tool. We present the potential integration of IEM into CS education to enhance students’ understanding of information encoding and Computational Thinking principles.},
  address = {New York, NY, USA},
  articleno = {28},
  author = {Buttke, Heike and Krugel, Johannes},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678125},
  isbn = {9798400710056},
  keywords = {Computational Thinking; K-12 Education; Modeling; Semiotics},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Information Encoding Modeling in Computer Science Education},
  url = {https://doi.org/10.1145/3677619.3678125},
  year = {2024}
}

@inproceedings{merged952,
  abstract = {Teachers are increasingly integrating computational thinking (CT) into subject-area learning opportunities with the aim to meet both subject-area and CT learning goals. While prior work has identified CT practices synergistic to subject-area learning, less is published about pedagogical frameworks for instructional practices when integrating CT into content area teaching. This poster presents data from educators (teachers and professional developers) about what they find to be crucial factors for designing and implementing CT integrated lessons. Preliminary analysis indicates educators advocate for twenty practices including creating reflection opportunities, actively using CT vocabulary, opportunities for students to practice CT skills, meaningful real-world connections, utilizing scaffolding strategies, explicitly introducing CT practices, clear connections between CT and curricular content, using multiple modalities, and encouraging student discourse.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Dunbar, Kyle M. and Rangel, Alessandra and Ahn, Wanjoo and Yadav, Aman and Jacob, Sharin},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705161},
  isbn = {9798400705328},
  keywords = {K-12; computational thinking; integration; lesson design; pedagogy; teaching practices},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1425–1426},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Design Principles for CT Integrated Lesson Design and Implementation},
  url = {https://doi.org/10.1145/3641555.3705161},
  year = {2025}
}

@inproceedings{merged953,
  abstract = {Over the past ten years, global efforts have promoted computational thinking in K-12 computer science education. With the increasing prevalence of machine learning and artificial intelligence, there is a pressing need to broaden the scope of computational thinking to enable students to become competent, creative, and critical learners. Future digital literacies should encompass an appreciation of the distinctions between machine and human thinking, an awareness of the social aspects of data production, and an understanding of the values, biases, and historical contexts embedded within digital technologies. This opens up new possibilities for teachers and schools to guide students in actively shaping their digital destinies.},
  address = {New York, NY, USA},
  author = {Kafai, Yasmin B.},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
  doi = {10.1145/3576882.3617907},
  isbn = {9798400700484},
  keywords = {artificial intelligence; computing education; k-12; machine learning},
  location = {Hyderabad, India},
  numpages = {2},
  pages = {3–4},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Empowering the Next Generation of Computational Thinkers},
  url = {https://doi.org/10.1145/3576882.3617907},
  year = {2023}
}

@inproceedings{merged954,
  abstract = {With the rapid growth of artificial intelligence, the demand for programming education has surged, yet many young learners struggle with motivation due to the abstract nature of computational concepts. Games, with their engaging and contextual learning features, offer a promising solution. However, a large number of programming games fail to gain widespread adoption because of a disconnect between educational objectives and gameplay, often prioritizing the former at the expense of player engagement. This results in games that are perceived as tedious and lack immersion. To bridge this gap, we propose a framework that integrates game design principles from game flow theory, balancing educational content with engaging gameplay. We illustrate this framework with WannaBone, a programming game that introduces fundamental computational concepts such as loops, conditionals, and public boolean variables. Empirical research with primary school students shows that WannaBone enhances computational thinking, motivation, and game flow. This study provides both theoretical insights and practical guidance for the development of programming games, emphasizing the need to balance educational goals with compelling gameplay.},
  address = {New York, NY, USA},
  author = {Chen, Baijun},
  booktitle = {Proceedings of the 2024 10th International Conference on Communication and Information Processing},
  doi = {10.1145/3708657.3708753},
  isbn = {9798400717444},
  keywords = {Computational thinking; Core game elements; Design framework; Flow experience; Fundamental computational concepts; Learning motivation; Programming games},
  numpages = {8},
  pages = {593–600},
  publisher = {Association for Computing Machinery},
  series = {ICCIP '24},
  title = {Programming Games for Fundamental Computational Concepts: A Technical Design Framework},
  url = {https://doi.org/10.1145/3708657.3708753},
  year = {2025}
}

@inproceedings{merged955,
  abstract = {This study introduces the Concrete Computational Concepts Programming Environments (3CPEs), an innovative approach designed to help elementary students grasp abstract computational concepts through concrete metaphors using tangible and everyday objects. Traditional programming environments for children focus on concrete programming language syntax and semantics yet often fall short in conveying advanced computational concepts. To address this gap, 3CPEs combine the hands-on appeal of computer-science unplugged activities with the versatility of programming environments, using familiar objects and gamified elements to visualize abstract computational and algorithmic ideas. An example is CT (Computational Thinking) Chef, a 3CPEs implementation to enhance elementary students’ understanding of programming concepts. Through design workshops with five elementary programming teachers, we preliminarily identified teaching challenges and evaluated 3CPEs’ efficacy as an educational tool. The feedback underscores CT Chef’s potential in facilitating the teaching of intricate computational concepts for young learners.},
  address = {New York, NY, USA},
  articleno = {13},
  author = {Sung, Ching-Ying and Cherng, Fu-Yin and Chiu, Yi-Lun and Chen, Peng-Hsi and Chen, Bing-Yu},
  booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3613905.3650833},
  isbn = {9798400703317},
  keywords = {Computational Thinking; Concrete Metaphor Design; Elementary Education; Programming Environment},
  location = {Honolulu, HI, USA},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '24},
  title = {3CPEs: Concrete Computational Concepts Programming Environments for Elementary Computer Science Education},
  url = {https://doi.org/10.1145/3613905.3650833},
  year = {2024}
}

@inbook{merged956,
  abstract = {As Computational Thinking (CT) becomes more prevalent in school curricula, it has reached young children, with growing interest in incorporating CT for children in preschool and kindergarten. As more researchers design systems and curricula to teach CT for this age group, there is a need for assessments to better evaluate and compare approaches to teach CT. In this work-in-progress we present activities with 5-6-year-old children from two classrooms. In these classrooms, children participated in educational robotics (ER) activities using a robot that can be programmed through cards placed on the floor for the robot to read as it moves. We developed a test aimed at evaluating children’s ability to program the robot, which we administered after the activities. We discuss lessons learned through the administration of the test, both about the ER activities and the test.},
  address = {New York, NY, USA},
  author = {Bakala, Ewelina and Tejera, Gonzalo and Hourcade, Juan Pablo},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  isbn = {9798400714733},
  numpages = {12},
  pages = {1027–1038},
  publisher = {Association for Computing Machinery},
  title = {Robotito Test in Practice: A Classroom Evaluation},
  url = {https://doi.org/10.1145/3713043.3731526},
  year = {2025}
}

@inproceedings{merged957,
  abstract = {This paper presents a novel pedagogical framework, entitled the Zones of Proximal Flow, which integrates Vygotsky's Zone of Proximal Development theory with Csikszentmihalyi's ideas about Flow. Flow focuses on the individual-- an individual is in Flow when challenges are balanced with skills. The Zone of Proximal Development, on the other hand, brings in a social learning aspect focusing on a student's ability to learn concepts with external support. From our research experiences bringing game and simulation design into middle school classrooms, we attempt to provide students with appropriate challenges using a project-first based approach that aims to keep students in Flow. The project-first approach employs inquiry based scaffolding to guide students, with appropriate support by their teachers, through Vygotsky's Zone of Proximal Development, back in to Csikszentmihalyi's state of Flow for an ideal learning experience. We call this space the Zones of Proximal Flow. Data indicate that the Zones of Proximal Flow approach works, keeping classrooms engaged in the act of game design and enabling students to advance to more complex program creations.},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok R. and Repenning, Alexander and Koh, Kyu Han and Nickerson, Hilarie},
  booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
  doi = {10.1145/2493394.2493404},
  isbn = {9781450322430},
  keywords = {computational thinking; computational thinking patterns; computer science education; flow; scalable game design; simulations; zone of proximal development; zones of proximal flow},
  location = {San Diego, San California, USA},
  numpages = {8},
  pages = {67–74},
  publisher = {Association for Computing Machinery},
  series = {ICER '13},
  title = {The zones of proximal flow: guiding students through a space of computational thinking skills and challenges},
  url = {https://doi.org/10.1145/2493394.2493404},
  year = {2013}
}

@article{merged958,
  abstract = {Introductory coding environments have been used in early education to promote computational thinking, supporting the development of cognitive, critical, and social skills. Many environments focus on individual use, which has limited benefits compared to collaborative learning. In this paper, we present the results of a 10-session study at a local primary school engaging eleven children with visual impairments and three inclusive education teachers in collaborative programming activities. Based on participants' behavior, reactions, and feedback, we contribute an improved understanding of collaborative design in educational settings, focusing on the impact of Goals, Workspace, Interdependence, and Shared Awareness. Our main findings outline how collaboration dynamics can be shaped by asymmetric tasks, workspace proximity, and group awareness. We further discuss factors that led to a lack of investment in the shared goal and instances of unbalanced collaboration, reflecting on challenges and opportunities for designing collaborative inclusive coding kits.},
  address = {New York, NY, USA},
  articleno = {CSCW073},
  author = {Rocha, Filipa and Gon\c{c}alves, David and Pires, Ana Cristina and Nicolau, Hugo and Guerreiro, Tiago},
  doi = {10.1145/3710971},
  issue_date = {May 2025},
  journal = {Proc. ACM Hum.-Comput. Interact.},
  keywords = {accessible; children; collaboration; computational thinking; mixed-visual ability; robot; tangible; visually impaired},
  month = {May},
  number = {2},
  numpages = {22},
  publisher = {Association for Computing Machinery},
  title = {Exploring Collaboration in Programming Activities with Children with Visual Impairments: a 10-Session Study in a School Setting},
  url = {https://doi.org/10.1145/3710971},
  volume = {9},
  year = {2025}
}

@inproceedings{merged959,
  abstract = {Decomposition is a foundational computational thinking construct that is often introduced early as students are learning computer science in the elementary grades. Although decomposition is often described in early computational activities, little research exists about how to teach and assess students’ understanding of decomposition. In this mixed-methods research study, 173 third-grade students from eight elementary school classrooms in the Midwest were taught eight lessons that integrated decomposition as well as other computational thinking practices into their mathematics instruction. They completed a computational thinking assessment after the first four lessons and again after the second four lessons. Analyses included the distribution of correct decomposition item responses, confirmatory factor analysis, and item-level error analysis. Results indicate wide variability in students’ performance on the decomposition assessment items as well as in performance on items contextualized within mathematics. This study highlights the need for additional considerations about assessing computational understanding, implications for assessment within integrated contexts, and the use of paper-and-pencil tests compared to embedded assessments.},
  address = {New York, NY, USA},
  author = {Israel, Maya and Li, Jiehan and Yan, Wei and Elagha, Noor A. and Huggins-Manley, Corinne A. and Luo, Feiya and Franklin, Diana},
  booktitle = {Proceedings of the 2023 ACM Conference on International Computing Education Research - Volume 1},
  doi = {10.1145/3568813.3600143},
  isbn = {9781450399760},
  keywords = {Computational Thinking; Decomposition; Elementary Computer Science; Integration},
  location = {Chicago, IL, USA},
  numpages = {14},
  pages = {222–235},
  publisher = {Association for Computing Machinery},
  series = {ICER '23},
  title = {How are Elementary Students Demonstrating Understanding of Decomposition within Elementary Mathematics?},
  url = {https://doi.org/10.1145/3568813.3600143},
  year = {2023}
}

@inproceedings{merged960,
  abstract = {In March 2020, all elementary, middle, and high schools in Japan were temporarily closed for approximately one month in response to the COVID-19 pandemic. During this interval, we initiated a programming education program for students ranging from elementary to high school, utilizing the metaverse capabilities of Minecraft. The primary participants in this initiative were educators and students from two private programming institutions. Students engaged in a simulated school experience that leveraged Minecraft's command and Redstone based programming functionalities. Furthermore, the collaborative nature of the metaverse enhanced students' programming and computational thinking abilities. This poster will first delineate the distinctive features of Minecraft's programming environment in contrast to visual programming platforms such as Scratch. Subsequently, we will analyze students' experiences within the metaverse, focusing on peer interaction and the enhancement of motivation towards programming. Finally, we will conduct an evaluation and propose directions for future research.},
  address = {New York, NY, USA},
  author = {Sawada, Chiyoko and Terazono, Masafumi and Hagino, Tatsuya and Hattori, Takashi},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705122},
  isbn = {9798400705328},
  keywords = {K-12 education; commands; computational thinking; game elements; metaverse},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1615–1616},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {An Analysis of K-12 Programming Education Utilizing the Minecraft Metaverse Amidst the COVID-19 Pandemic},
  url = {https://doi.org/10.1145/3641555.3705122},
  year = {2025}
}

@inproceedings{merged961,
  abstract = {In recent years, several research projects have introduced elementary school teachers to computational thinking as a first step in familiarizing students with computer science concepts at an early age. A consistent challenge reported in these initiatives is teaching abstraction. This position paper offers preliminary recommendations for abstraction pedagogy in elementary education. These suggestions stem from an analysis of unplugged abstraction examples showcased during a summer institute on computational thinking.By examining commonalities among abstraction examples, key parts of the process of abstraction pertinent to elementary classrooms were identified: (1) the abstraction process is typically performed in reverse since students in elementary school are given abstractions to start with; (2) evaluation of concrete details to support an abstraction is part of the filtering step of abstraction; (3) in the absence of evaluation criteria, pattern recognition can be applied to a set of concrete examples to extract characteristics of an abstraction; and (4) abstractions can be supported by not only concrete details but other abstractions which students will need to develop an understanding of before fully comprehending the initial concept.Preliminary recommendations for abstraction instruction include having students evaluate examples; engaging students in pattern recognition to extract characteristics of an abstraction; developing student fluency in describing abstractions, their supporting examples, and characteristics; and assessing students by asking not only for examples of abstractions, but for their characteristics as well.},
  address = {New York, NY, USA},
  author = {Hung, Eping E. and Vanderberg, Maggie and Krause, Gladys and Skuratowicz, Eva},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630890},
  isbn = {9798400704239},
  keywords = {abstraction; computational thinking; elementary education; professional development; unplugged computational thinking},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {540–546},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Making Abstraction Concrete in the Elementary Classroom},
  url = {https://doi.org/10.1145/3626252.3630890},
  year = {2024}
}

@inproceedings{merged962,
  abstract = {As teacher professional development efforts continue to scale to meet the growing demand for computer science educators, more individuals with little formal preparation in the discipline are seeking training. For this reason, it is important to understand the kinds of questions that these teachers, along with administrators and IT staff, are asking professional development providers. This research examines questions received by Scalable Game Design (SGD), a project that engages students in computing through game and simulation design activities. SGD has provided training for more than 300 teachers since 2009. We have found several dimensions of interest in the question pool. The major categories of questions received are pedagogical, technical, and procedural, and we present a generalizable taxonomy of question types plus specific examples. In addition, question content and questioner roles fluctuate throughout the professional development and classroom implementation cycle, from initial inquiries to requests regarding next steps. Knowledge of these factors can lead to adjustments in training content to reduce questions later on and potentially increase teacher confidence; moreover, this information can inform planning for support resources, an especially important activity when project growth is forecast. We also discuss how our support structures have changed over the life of the project and compare them to two other curriculum initiatives that rely on unique software environments. Our future work will investigate the characteristics of teachers who are asking particular kinds of questions, including their disciplinary backgrounds, experience in the classroom, familiarity with SGD, and instructional environments.},
  address = {New York, NY, USA},
  author = {Nickerson, Hilarie and Bush, Jeffrey and Endo, Yasko Chanoki},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2850575},
  isbn = {9781450336857},
  keywords = {classroom implementation; computational thinking; computer science education; experience report; scalable game design; teacher professional development},
  location = {Memphis, Tennessee, USA},
  numpages = {1},
  pages = {692},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {We Have Questions: Pedagogical, Technical, and Procedural Assistance Requests in a Large Computational Thinking Curriculum Research Project (Abstract Only)},
  url = {https://doi.org/10.1145/2839509.2850575},
  year = {2016}
}

@article{merged963,
  abstract = {Adversarial Thinking (AT) is essential in cybersecurity and computing, promoting strategic thinking and problem-solving by anticipating worst-case scenarios. However, embedding AT in early computing education, especially during the first two years of college, remains underexplored. Introductory programming courses, such as CS 0, lay the groundwork for computational thinking and advanced studies while preparing students for courses like CS 1 and CS 2. Implementing such curricula in resource-limited community colleges, which serve diverse students aiming for workforce entry or transfer to four-year programs, poses unique challenges. Enhancing AT skills among these students provides a competitive edge in the job market and a strong foundation for further studies. This paper explores the integration of AT into CS 0 courses at community colleges, identifying key characteristics and fostering a sense of belonging critical for AT development. The findings offer actionable insights for educators to better prepare students for computing careers and address broader cybersecurity demands.},
  address = {Evansville, IN, USA},
  author = {Serv\'{\i}n, Christian and Childress, J. J. and Karichev, Nadia V.},
  issn = {1937-4771},
  issue_date = {April 2025},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {7},
  numpages = {6},
  pages = {36–41},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Adversarial Thinking: Innovating Contemporary Problem Solving Skills in Computing},
  volume = {40},
  year = {2025}
}

@inproceedings{merged964,
  abstract = {In the context of computational thinking tasks, which often require problem-solving and critical thinking skills, awareness of a partner’s actions can play a significant role in fostering a balanced collaboration. Understanding how awareness influences mixed-visual ability group collaboration in a tangible environment can provide insights into inclusive design for learning environments. To address this issue, we ran a user study where 6 mixed-visual ability pairs engaged in a tangible programming activity. The study had three experimental conditions, representing 3 different levels of awareness. Our findings reveal that while pre-existing power dynamics heavily influenced collaboration, workspace awareness feedback was essential in fostering engagement and improving communication for both children. This paper highlights the need for designing inclusive collaborative programming systems that account for workspace awareness and individual abilities, offering insights into more effective and balanced collaborative environments.},
  address = {New York, NY, USA},
  articleno = {1146},
  author = {Rocha, Filipa and Sim\~{a}o, Hugo and Nogueira, Jo\~{a}o and Neto, Isabel and Guerreiro, Tiago and Nicolau, Hugo},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713610},
  isbn = {9798400713941},
  keywords = {Accessibility; Collaboration; Computational Thinking; Mixed-Visual Ability},
  numpages = {15},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {Awareness in Collaborative Mixed-Visual Ability Tangible Programming Activities},
  url = {https://doi.org/10.1145/3706598.3713610},
  year = {2025}
}

@inproceedings{merged965,
  abstract = {We present a methodology for building objects-to-think-computationally-with and illustrate its application in developing our Escape Machine game. The input mechanism for this game is a tangible state machine built with Posey, our computationally enhanced construction kit. Through manipulating this state machine children create an algorithmic specification for the behavior of both the avatar and its enemies in an attempt to navigate a maze without being eaten. We outline several strategies for success at Escape Machine and discuss how it embeds an important computational thinking concept in interaction with a tangible device.},
  address = {New York, NY, USA},
  author = {Weller, Michael Philetus and Do, Ellen Yi-Luen and Gross, Mark D},
  booktitle = {Proceedings of the 7th International Conference on Interaction Design and Children},
  doi = {10.1145/1463689.1463767},
  isbn = {9781595939944},
  location = {Chicago, Illinois},
  numpages = {8},
  pages = {282–289},
  publisher = {Association for Computing Machinery},
  series = {IDC '08},
  title = {Escape machine: teaching computational thinking with a tangible state machine game},
  url = {https://doi.org/10.1145/1463689.1463767},
  year = {2008}
}

@inproceedings{merged966,
  abstract = {The Flemish Government has imposed a new and challenging set of learning objectives for secondary education. An important part comprises Computational Thinking for 3rd and 4th year students, and Computer Science for students in their 5th and 6th year. Yet, most teachers, who have mostly not been trained to teach these subjects, do not feel confident in programming-related topics. With eTeacher, we take away this burden from the teacher and allow students to work independently and at their own pace. In particular, we present a platform with an integrated course text for Computational Thinking. eTeacher is available on every device, gives automatic code-feedback both content-wise and on programming style and provides exercises of different types and levels. Teachers can monitor their students individually and consult statistics. The platform was extensively evaluated in a pilot at 20 schools.},
  address = {New York, NY, USA},
  author = {Hoobergs, Jesse and van den Berg, Birthe and Schrijvers, Tom},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594152},
  isbn = {9798400701399},
  keywords = {K-12 education; computational thinking; online learning environment},
  location = {Turku, Finland},
  numpages = {2},
  pages = {593–594},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {eTeacher: A Pilot in Flemish Secondary Education},
  url = {https://doi.org/10.1145/3587103.3594152},
  year = {2023}
}

@inproceedings{merged967,
  abstract = {Novice learners initiating computational Thinking face challenges of complexity and have a longer learning curve to understand the interfaces. The contexts in an introductory CT lesson are seldom situated in the learners' real-life. In order to make CT authentic to learners, the environment AuthentiCT has been designed with activities rooted in learners' everyday tasks to make CT skills meaningful. A study with 16 middle-schoolers performing AuthentiCT activities showed that learners found CT relevant and applied problem-solving in similar contexts in their everyday life.},
  address = {New York, NY, USA},
  author = {Satavlekar, Spruha and Mishra, Shitanshu and Iyer, Sridhar},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
  doi = {10.1145/3617650.3624939},
  isbn = {9798400703744},
  keywords = {computational thinking; everyday computing; situated learning},
  location = {Hyderabad, India},
  numpages = {1},
  pages = {205},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {AuthentiCT: Making CT Authentic to Learners},
  url = {https://doi.org/10.1145/3617650.3624939},
  year = {2023}
}

@inproceedings{merged968,
  abstract = {This poster describes the "Computer Science for All Bulldogs (CS4ALL-B) pilot, a 7-week long course taught in Fall 2013 at Opelika Middle School, located in the Auburn- Opelika, Alabama Metropolitan Area (https://cs4allb.eng.auburn.edu). The program marks the first time a formal Computer Science (CS) course has been taught in an Alabama middle school. The CS4ALL-B curriculum builds upon the Auburn University innovative 'three-step' model of K-12 computing and robotics instruction that introduces CS and Computational Thinking (CT) concepts for K-12 students. This model uses programming frameworks such as Kodu, Alice, App Inventor, Lego NXT-G and Tetrix, and Computer Science Unplugged (CSU) activities. While moving between the three steps, students explore the fundamentals of CS/CT concepts. The CS4ALL-B curriculum is structured in four main sections: First, introduction to Kodu for 7th graders and Alice for 8th graders; Second, introduction to CS/CT Concepts; Third, participation in selected CSU activities, then students develop their programs to demonstrate their abilities to design and create Kodu or Alice worlds that implement the concepts learned while participating in CSU activities; Fourth, students build their own course project that includes all concepts and skills grasped throughout their training. This model helps maintain high levels of motivation, concentration, and engagement during the entire course. The results of the pilot assessment, including tools such as traditional written assessments (e.g. quizzes, tests) as well as alternative assessments tools (e.g. projects and blog posts), will be presented. We have found that our methods foster the learners' nascent development in CS.},
  address = {New York, NY, USA},
  author = {Marghitu, Daniela and Thomas, Lavaris and Rawajfih, Yasmeen and Hall, Jillian and Marshall, Andrew},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2544300},
  isbn = {9781450326056},
  keywords = {computational thinking; computer science; middle school formal computer science class},
  location = {Atlanta, Georgia, USA},
  numpages = {1},
  pages = {712},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Kodu alice and computer science unplugged: a model of effective introducing middle school students to computer science and computational thinking (abstract only)},
  url = {https://doi.org/10.1145/2538862.2544300},
  year = {2014}
}

@inproceedings{merged969,
  abstract = {This paper explores the design of computational toys and kits for young children (ages 4-7) as tools for learning integrated mathematical, spatial, and computational thinking concepts. Specifically, we examine how the design features of the toys and kits represent the concepts of rotation on a point and spatial orientation of the agent. We examine toys and kits sold commercially, developed through research, and used in early childhood classrooms. Our findings indicate that the mathematical and spatial concepts are overlooked in some designs. Prior research examined toys for their affordances related to computational thinking, the present study contributes to understanding of how these toys and kits have the potential to foster foundational mathematics and spatial skills. We discuss implications for design of toys and kits as well as recommendations for future research.},
  address = {New York, NY, USA},
  author = {Clarke-Midura, Jody and Shumway, Jessica F. and Ashineh, Anahita and Zandi, Alireza and Clawson, Whitney},
  booktitle = {Proceedings of the 2024 Symposium on Learning, Design and Technology},
  doi = {10.1145/3663433.3663459},
  isbn = {9798400717222},
  keywords = {Orientation; Tangible Coding Toys; Turn Angle; Turtle Geometry},
  location = {Delft, Netherlands},
  numpages = {10},
  pages = {47–56},
  publisher = {Association for Computing Machinery},
  series = {LDT '24},
  title = {What Happened to the Geometry? Examining Spatial and Mathematical Concepts in Computational Toys and Kits for Young Children},
  url = {https://doi.org/10.1145/3663433.3663459},
  year = {2024}
}

@article{merged970,
  abstract = {The search for alternative teaching–learning processes that attract more interest and involvement of young people has inspired the development of a game with a chatbot architecture based on interactive storytelling and multiple learning paths. Thus, we introduce in this article the GameBot ZoAm, developed for the Discord instant messaging and social platform. ZoAm offers a unique learning experience centered around storytelling, focusing on fundamental computing concepts and logical challenges that enhance computational thinking skills. Furthermore, the game also promotes an appreciation for Amazonian culture and folklore, with decision-making with human values. An action research study was conducted involving students from the last years of the end of elementary school. The research utilized a heuristic analysis based on the Gameplay Heuristics (PLAY) by Desurvire and Wiberg (ANO) and the evaluation model proposed by Korhonen and Koivisto (ANO) for mobile devices. The analysis employed a reduced and merged set of heuristics from these models, suited for the GameBot's context, focusing on (I) usability, (II) gameplay and immersion, and (III) mobility. Regarding the reliability coefficient used to evaluate the survey applied to students after playing the GameBot, Cronbach's Alpha and Guttman Lambda-6 (G6(smc)) coefficients were applied. These metrics were chosen to ensure the internal consistency and reliability of survey items, reflecting on how effectively the questions measured the focuses proposed by the heuristic analysis. The findings indicate that the game has the potential to facilitate the assimilation of the integrated concepts and sustain student interest throughout gameplay.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {Pessoa, Larissa and Martins, Lia and Hsu, Meng and de Freitas, Rosiane},
  doi = {10.1145/3657303},
  issn = {1556-4673},
  issue_date = {September 2024},
  journal = {J. Comput. Cult. Herit.},
  keywords = {Conversation simulation applications; computational thinking; educational digital games; narratives and storytelling},
  month = {September},
  number = {3},
  numpages = {21},
  publisher = {Association for Computing Machinery},
  title = {ZoAM GameBot: A Journey to the Lost Computational World in the Amazonia},
  url = {https://doi.org/10.1145/3657303},
  volume = {17},
  year = {2024}
}

@inproceedings{merged971,
  abstract = {This paper shows a way to introduce computational thinking in early childhood teaching based on scientific results within Neurodidactics. This approach offers children to explore and develop their creativity. Aiming to raise the children's interest in STEAM and to prevent prejudices in this field, the educational Robots, Ozobots, can be used in elementary and primary school to tell fairy tales. In order to connect basic computer science concepts by means of Storytelling, a workshop for very young researchers was designed and presented.},
  address = {New York, NY, USA},
  author = {Hinterplattner, Sara and Schmidthaler, Eva and Skog\o{}, Jakob Sebelin and Leitner, Sarah and Sabitzer, Barbara},
  booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
  doi = {10.1145/3629296.3629315},
  isbn = {9798400709111},
  keywords = {Computational thinking; Neurodidactics; STEAM education; STEM education; creativity; educational robots},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {120–126},
  publisher = {Association for Computing Machinery},
  series = {ICETC '23},
  title = {Once Upon a Time there was an Ozobot: Storytelling with Educational Robots},
  url = {https://doi.org/10.1145/3629296.3629315},
  year = {2024}
}

@inproceedings{merged972,
  abstract = {The rising interest of educators, researchers, and policymakers around the world as far as the development of computational thinking skills in compulsory education is concerned is echoed in the plethora of research studies discussed in the pertinent literature. However, the successful injection of computation thinking in formal educational settings demands the construction of developmentally appropriate assessment tools. In this paper, we discuss a novel framework for assessing computational thinking skills in early childhood settings. The proposed framework was employed in a relevant quantitative research study conducted in the city of Heraklion, Crete, from February to June 2019, with a sample of 435 first and second graders and within the context of the Environmental Study course. This paper also provides evidence regarding the examination of age, gender, and learning achievements in the Environmental Study course as predictive factors of one of the core computational thinking competencies, namely algorithmic thinking. The research findings revealed that age and learning achievements in the Environmental Study course constitute predictive factors for algorithmic thinking skills in the first and second grade level of primary school. On the contrary, algorithmic thinking skills are not related to first and second graders’ gender. The results of this study provide a solid background for designing and implementing developmentally appropriate tools for cultivating and assessing computational thinking skills in the early years of schooling.},
  address = {New York, NY, USA},
  author = {Kanaki, Kalliopi and Kalogiannakis, Michail},
  booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
  doi = {10.1145/3568739.3568752},
  isbn = {9781450398091},
  keywords = {Age; Algorithmic thinking; Early childhood education; Gender},
  location = {Hangzhou, China},
  numpages = {6},
  pages = {66–71},
  publisher = {Association for Computing Machinery},
  series = {ICDTE '22},
  title = {Algorithmic thinking in early childhood},
  url = {https://doi.org/10.1145/3568739.3568752},
  year = {2023}
}

@inproceedings{merged973,
  abstract = {In this poster, we describe a theoretical model aimed at developing future human computational thinking in students. We describe a blended pedagogy drawing approaches from multiple disciplines such as social sciences, design, ethics, and computing to develop a new undergraduate introductory programming course. We describe how we introduced this pedagogy in an introductory programming course, taught in a university in India and summarise our preliminary findings.},
  address = {New York, NY, USA},
  author = {Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
  doi = {10.1145/3617650.3624948},
  isbn = {9798400703744},
  keywords = {21st-century skills; CS1; Python programming; critical thinking},
  location = {Hyderabad, India},
  numpages = {1},
  pages = {194},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Making CS Education Relevant to the 21st Century: Blending Critical Thinking into an Introductory Programming Course},
  url = {https://doi.org/10.1145/3617650.3624948},
  year = {2023}
}

@inproceedings{merged974,
  abstract = {Game design is often considered a motivational approach to get young children interested in programming and computational thinking. However, while the idea of game programming may be compelling from an educational point of view, creating games with interesting interactions that are actually fun to play remains challenging. Modern tools aimed at novice programmers should empower their users to create games, such as Pac-Man, that approach or even exceed the gameplay of 1980's arcade games. By adding a high-level AI pathfinding block to the RULER.game tool, 13 students in grades 1-4 attempted to build Pac-Man-like games. The findings suggest that all students were able to create Pac-Man-like games with compelling gameplay interactions, including ghosts finding the shortest path through complex mazes to Pac-Man, multiple ghosts collaborating with each other, and sophisticated game world topologies featuring toroidal portals.},
  address = {New York, NY, USA},
  articleno = {29},
  author = {Repenning, Alexander},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3677646},
  isbn = {9798400710056},
  keywords = {Computer science education; artificial intelligence; computational thinking; mobile programming tools; programming for children},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Escaping the Turing Tar-Pit with AI Programming Blocks},
  url = {https://doi.org/10.1145/3677619.3677646},
  year = {2024}
}

@inproceedings{merged975,
  abstract = {Computational thinking (CT) is considered a necessary skill for the 21st century. Researchers have increasingly focused on how to effectively enhance students’ CT in programming courses. This study proposes a progressive scaffolding approach with flowcharts and visual programming codes applied to a visual programming course based on an open-source hardware platform to improve CT skills and self-efficacy in middle school students. Forty-five middle school students in grades 7 and 8 participated in this study. Both quantitative and qualitative data were collected by using CT tests, scales, and semi-structured interviews. A repeated measures analysis of variance (ANOVA) examined differences in CT skills and self-efficacy on the pre-test, mid-test, and post-test. The results indicated that the progressive scaffolding approach significantly improved middle school students’ CT skills and self-efficacy. These results reveal the effectiveness of the progressive scaffolding approach in improving the computational thinking of middle school students in a visual programming course with an open-source hardware platform, which helps to extend the design of progressive scaffolding.},
  address = {New York, NY, USA},
  author = {Xi, Feifei and Xiao, Tianyu and Li, Xiaofei and Hu, Yafei and Ma, Hongliang},
  booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
  doi = {10.1145/3629296.3629313},
  isbn = {9798400709111},
  keywords = {Computational thinking self-efficacy; Computational thinking skills; Flowchart; Progressive scaffolding approach; Visual programming},
  location = {Barcelona, Spain},
  numpages = {6},
  pages = {107–112},
  publisher = {Association for Computing Machinery},
  series = {ICETC '23},
  title = {The effects of a progressive scaffolding approach on middle school students'computational thinking skills and self-efficacy},
  url = {https://doi.org/10.1145/3629296.3629313},
  year = {2024}
}

@inproceedings{merged976,
  abstract = {Studio K is a game design curriculum constructed to provide middle school students an engaging entry into computer science and programming. Developed at the University of Wisconsin-Madison, the program employs Microsoft's 3D programming environment, Kodu, in tandem with support and analytic tools for facilitators, and an online community that provides players with a support system. These key features are bolstered with incorporation of telemetry data gathered through design sessions that are used to improve site functioning, curriculum relevancy, and administrative tools. This program is applied across contexts, with applications in formal classrooms, informal extracurricular clubs or camps, and alternative learning environments such as library systems or home schools. Studio K provides a well-supported, unique entry into computer science in which programming knowledge becomes a tool that supports learners' goals in designing and developing games.},
  address = {New York, NY, USA},
  author = {Anton, Gabriella and Berland, Matthew},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2544312},
  isbn = {9781450326056},
  keywords = {computer science education; game design},
  location = {Atlanta, Georgia, USA},
  numpages = {1},
  pages = {723},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Studio K: a game development environment designed for gains in computational thinking (abstract only)},
  url = {https://doi.org/10.1145/2538862.2544312},
  year = {2014}
}

@inproceedings{merged977,
  abstract = {As efforts to incorporate Computer Science (CS) and Computational Thinking (CT) into K-12 classrooms continue to expand, there is a growing need for programs that prepare teachers for the effective teaching and integration of CS and CT into their instruction. An ongoing challenge is preparing current and future teachers to develop the skills and confidence needed to teach and integrate CS and CT. Micro-credentials, designed as a short, focused course, offer opportunities for teachers to build skills and confidence through targeted study. This experience report examines a self-paced online micro-credential developed and implemented within a university-based college of education. The micro-credential was designed to equip both pre-service and in-service teachers with the skills and knowledge necessary to teach and integrate CS and CT into K-12 teaching and learning. We describe the micro-credential, including its structure, sequencing, and content. We then present an exploration of teachers' experiences in the micro-credential. Findings from surveys and CS autobiographies show increases in participants' attitudes, beliefs, and perceptions toward the conceptual and technical aspects of teaching CS, with a particular focus on designing clear and actionable plans for integration. The results from this study provide valuable insights for the development of future CS- and CT-focused micro-credentials.},
  address = {New York, NY, USA},
  author = {Zhang, Shan and Hutchins, Nicole M. and Barrett, Joanne R. and Botelho, Anthony F. and Israel, Maya},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701855},
  isbn = {9798400705311},
  keywords = {computational thinking; computer science education; k-12 teacher; micro-credential; teacher preparation},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {1316–1322},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Introducing K-12 Teachers to Computer Science Education through an Online Micro-credential: An Experience Report},
  url = {https://doi.org/10.1145/3641554.3701855},
  year = {2025}
}

@inproceedings{merged978,
  abstract = {The annual Bebras challenge aims to grow students' interest in computer science via engaging problem solving tasks whereas ViLLE is a widely used digital learning environment with a built-in assessment tool and analytics for large number of students. The BeLLE collaboration connects the two by adapting ViLLE's assessment tool in the Bebras challenge. The goal is to analyze the interplay of computer science education and students' computational thinking development in the participating countries. BeLLE welcomes new interested countries to join the collaboration.},
  address = {New York, NY, USA},
  author = {Kaarto, Heidi and Hyyr\"{o}, Heikki and Parviainen, Marika},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594187},
  isbn = {9798400701399},
  keywords = {K-12; assessment; computational thinking; computer science},
  location = {Turku, Finland},
  numpages = {1},
  pages = {669},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {BeLLE: Multinational Research Collaboration on Bebras &amp; ViLLE},
  url = {https://doi.org/10.1145/3587103.3594187},
  year = {2023}
}

@inproceedings{merged979,
  abstract = {Background and Context: Integrated computing (i.e., activities that use computing in non-CS classrooms) increasingly serve as K-12 students’ first encounter with CS in formal education, laying the foundation for future learning and fostering essential computational thinking skills. Objective: This study examined integrated computing activities to identify trends among non-CS topics and programming concepts taught. Method: Using existing, open-source datasets, we analyzed the differences in non-CS topics and programming concepts taught based on each activity’s grade level, programming paradigms, and source (i.e., in-service teachers or researchers/curriculum designers). We also conducted a moderator/mediator analysis to examine how features of the classroom, teacher, and school affected what programming concepts were included in the activities. Findings: Our analysis revealed that integrated computing activities encompass a wide range of non-CS topics from both technical and creative disciplines. This flexibility indicates that computing is being applied across various non-CS topics, not limited to a narrow set of activities. Most importantly, we found significant differences between activities provided by teachers and researchers/designers, including differences in non-CS topics, grade levels, and programming concepts taught in the activities. Implications: These findings suggest that integrated computing activities and curricula created by designers largely do not align with the activities used by teachers in their classrooms. We discuss the strengths and weaknesses of current integrated computing activities as early CS experiences for students and suggestions for future work.},
  address = {New York, NY, USA},
  author = {Margulieux, Lauren E and Rahimi, Masoumeh and Liao, Yin-Chan and Haddadian, Nooshin and Parker, Miranda and Calandra, Brendan},
  booktitle = {Proceedings of the 2025 ACM Conference on International Computing Education Research V.1},
  doi = {10.1145/3702652.3744221},
  isbn = {9798400713408},
  keywords = {CS+X; K-12 computer science education; computational thinking; computing integration; integrated computing},
  numpages = {14},
  pages = {284–297},
  publisher = {Association for Computing Machinery},
  series = {ICER '25},
  title = {Comparisons between and Trends among Integrated Computing Activities Designed by Teachers and Researchers},
  url = {https://doi.org/10.1145/3702652.3744221},
  year = {2025}
}

@inproceedings{merged980,
  abstract = {As Computational Thinking (CT) continues to permeate younger age groups in K-12 education, established CT platforms such as Scratch face challenges in catering to these younger learners, particularly those in the elementary school (ages 6-12). Through formative investigation with Scratch experts, we uncover three key obstacles to children’s autonomous Scratch learning: artist’s block in project planning, bounded creativity in asset creation, and inadequate coding guidance during implementation. To address these barriers, we introduce ChatScratch, an AI-augmented system to facilitate autonomous programming learning for young children. ChatScratch employs structured interactive storyboards and visual cues to overcome artist’s block, integrates digital drawing and advanced image generation technologies to elevate creativity, and leverages Scratch-specialized Large Language Models (LLMs) for professional coding guidance. Our study shows that, compared to Scratch, ChatScratch efficiently fosters autonomous programming learning, and contributes to the creation of high-quality, personally meaningful Scratch projects for children.},
  address = {New York, NY, USA},
  articleno = {649},
  author = {Chen, Liuqing and Xiao, Shuhong and Chen, Yunnong and Song, Yaxuan and Wu, Ruoyu and Sun, Lingyun},
  booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3613904.3642229},
  isbn = {9798400703300},
  keywords = {Children Aged 6-12; Computational Thinking; Large Language Model; Scratch},
  location = {Honolulu, HI, USA},
  numpages = {19},
  publisher = {Association for Computing Machinery},
  series = {CHI '24},
  title = {ChatScratch: An AI-Augmented System Toward Autonomous Visual Programming Learning for Children Aged 6-12},
  url = {https://doi.org/10.1145/3613904.3642229},
  year = {2024}
}

@inproceedings{merged981,
  abstract = {This video-study explored the types of gestures used by students as they engage in learning activities of computational thinking and modeling in Biology. Participants were twenty-eight students (twenty female, eight male) randomly sampled from five different High School Biology classes. Students were given the educational task of modeling protein synthesis in NetLogo. The design was a concurrent mixed-methods study. The study was situated in a constructivist and embodied cognitive perspective. The objective of the study was to develop a taxonomy table of gestures versus elements of computational thinking. Results showed a significant difference in the distribution of gestures across five concepts of computational thinking. Students used gestures adaptively in order to learn concepts of computational thinking. The findings indicate that students benefit from participating in a learning community where gesturing is seen as an important means of engaging with computing. The taxonomy is a first step towards linking computational thinking concepts with gestures as a means of better understanding student's engagement with computing.},
  address = {New York, NY, USA},
  author = {Musaeus, Line Have and Musaeus, Peter},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3430665.3456307},
  isbn = {9781450382144},
  keywords = {computational biology education; computational thinking; computing education; embodied cognition; gestures; mixed-methods study; non-verbal communication},
  location = {Virtual Event, Germany},
  numpages = {7},
  pages = {533–539},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Computing and Gestures in High School Biology Education},
  url = {https://doi.org/10.1145/3430665.3456307},
  year = {2021}
}

@inproceedings{merged982,
  abstract = {Collaborative coding environments foster learning, social skills, computational thinking training, and supportive relationships. In the context of inclusive education, these environments have the potential to promote inclusive learning activities for children with mixed-visual abilities. However, there is limited research focusing on remote collaborative environments, despite the opportunity to design new modes of access and control of content to promote more equitable learning experiences. We investigated the tradeoffs between remote and co-located collaboration through a tangible coding kit. We asked ten pairs of mixed-visual ability children to collaborate in an interdependent and asymmetric coding game. We contribute insights on six dimensions - effectiveness, computational thinking, accessibility, communication, cooperation, and engagement - and reflect on differences, challenges, and advantages between collaborative settings related to communication, workspace awareness, and computational thinking training. Lastly, we discuss design opportunities of tangibles, audio, roles, and tasks to create inclusive learning activities in remote and co-located settings.},
  address = {New York, NY, USA},
  articleno = {606},
  author = {Rocha, Filipa and Correia, Filipa and Neto, Isabel and Pires, Ana Cristina and Guerreiro, Jo\~{a}o and Guerreiro, Tiago and Nicolau, Hugo},
  booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3544548.3581261},
  isbn = {9781450394215},
  keywords = {Accessible; Children; Collaboration; Computational thinking; Mixed-visual ability; Robot; Tangible; Visually impaired},
  location = {Hamburg, Germany},
  numpages = {14},
  publisher = {Association for Computing Machinery},
  series = {CHI '23},
  title = {Coding Together: On Co-located and Remote Collaboration between Children with Mixed-Visual Abilities},
  url = {https://doi.org/10.1145/3544548.3581261},
  year = {2023}
}

@inproceedings{merged983,
  abstract = {Scalable Game Design (SGD) instruction, vetted and researched over more than a decade, enables educators with little or no programming experience to teach students to program games with AgentCubes. SGD has been used successfully with learners from upper elementary grades to high school to motivate and teach computer science and STEM topics, including sophisticated techniques such as Artificial Intelligence.The concepts of Scalable Game Design (SGD), and the tools for Computational Thinking Patterns (CTPs), and Computational Thinking Pattern Assessment (CTPA) are directly applicable to satisfying Upper Elementary and Middle School CS and Science Standards. Common roadblocks teachers encounter with transitioning from game design to simulation programming will be explained with solutions, including classroom management tools, tutorial materials, and pedagogy will be presented.},
  address = {New York, NY, USA},
  author = {Perrone Smith, Corrina and Repenning, Nadia},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3633421},
  isbn = {9798400704246},
  keywords = {computational thinking; computational thinking pattern assessment; computational thinking patterns; cs middle school; cs upper elementary; programming; scalable game design; stem; student motivation},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1904},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Moving Beyond Game Design: Building Teacher Confidence with Scientific Modeling by Transitioning from Game Design to EcoSystem Programming},
  url = {https://doi.org/10.1145/3626253.3633421},
  year = {2024}
}

@inproceedings{merged984,
  abstract = {Students can begin to lose interest in CS as early as 2nd grade, indicating the importance of engaging students in CS as early as possible. This study examined the integration of computational thinking (CT) into literacy activities in early childhood education (K-2). We describe the co-design process of developing computational thinking literacy integrated curriculum for K-2, and preliminary results of K-2 student engagement in CT and literacy activities},
  address = {New York, NY, USA},
  author = {Ottenbreit-Leftwich, Anne and Moore, Tamara J. and Tank, Kristina M. and Kim, Jiyoung and Fagundes, B\'{a}rbara and Chu, Lin and Wafula, Zarina},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576338},
  isbn = {9781450394338},
  keywords = {co-design; computational thinking; early childhood; literacy},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1394},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Rethinking Circle Time: Development of K-2 CT Literacy Integrated Curriculum},
  url = {https://doi.org/10.1145/3545947.3576338},
  year = {2023}
}

@article{merged985,
  abstract = {In this demo, I will present an activity that I use to introduce computational thinking in my non-majors course and outreach talks at high schools. I do this by first talking about what modeling and simulation are and why they are useful. Following this explanation, I introduce a variant of a problem about Alice and Bob. In the original problem, Alice and Bob take turns flipping a coin until one of them gets heads and wins. If Alice goes first, what is the probability that she wins? In class, I introduce this variant of the problem: "Bob suggests to Alice that they play a game. They will take turns flipping a coin until one of them wins by getting heads. The winner will then receive a dollar from the loser. If Bob says he will always let Alice go first, should Alice play the game?" While this problem is trivial for those comfortable with basic probability and familiar with geometric sequences, most of my students who are not computer science majors are not comfortable with math. Thus, I explain that although the problem can be solved with some math, instead we should first model the problem. Once we have modeled the problem, I have my students get some intuition by pairing off and having each pair play the game 20 times. I collect the results and discuss how so few trials are not sufficient to draw conclusions. Finally, I run a simulation that runs the game one million times and demonstrates that Alice should win 2/3 of the time and thus should play the game.},
  address = {Evansville, IN, USA},
  author = {Toth, David},
  issn = {1937-4771},
  issue_date = {June 2010},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {1},
  pages = {73},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Flipping coins: an activity for introducing computational thinking to non-computer science majors: demonstration},
  volume = {25},
  year = {2010}
}

@inproceedings{merged986,
  abstract = {Coding for computer programming is a common way to support and assess computational thinking (CT) skills, a set of problem-solving skills essential for computer science (CS) and STEM more broadly. We designed a coding platform, Fox and Field, to determine what kinds of scaffolds can encourage novice coders to behave more like experts. We compared actions between 221 upper-division undergraduate CS/engineering (expert, n=106) and social science (novice, n=115) majors randomized to scaffolding conditions from four universities in the United States. Overall, experts used statistically significantly more practices aligned with CT skills, such as those that increased code efficiency (e.g., non-right angle turns, loops). This difference disappeared when novices were scaffolded by being told to use fewer codes or by priming with critical features. Both experts and novices were equally likely to be swayed by purposefully distracting features within the platform, such as a drawn path to deflect them from the most efficient solution. Results present initial evidence regarding which features of coding platforms can direct students to exercise CT-linked practices, leading to recommendations regarding platform development to better support learning.},
  address = {New York, NY, USA},
  author = {Zhang, Yifan and Rutherford, Teomara},
  booktitle = {Proceedings of the 2024 International Symposium on Artificial Intelligence for Education},
  doi = {10.1145/3700297.3700345},
  isbn = {9798400707100},
  keywords = {computational thinking; game-based learning; scaffolding},
  numpages = {6},
  pages = {277–282},
  publisher = {Association for Computing Machinery},
  series = {ISAIE '24},
  title = {Scaffolding Expertise: Evaluating Scaffolds for Block-Based Coding Among Experts and Novices},
  url = {https://doi.org/10.1145/3700297.3700345},
  year = {2024}
}

@inproceedings{merged987,
  abstract = {With an ever increasing number of computing initiatives trying to engage and motivate children of all ages, we need to ask ourselves what these initiatives achieve and deliver. We therefore intend to investigate whether participation in a workshop setting changes students' approaches to solving selected computational thinking problems and extends their repertoire of problem-solving strategies. Methods used will include video analysis to collect data on the solutions and strategies, and a design-based research approach to create an effective task design for the workshop activities given to the students.},
  address = {New York, NY, USA},
  author = {Landman, Martina},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594142},
  isbn = {9798400701399},
  keywords = {computational thinking; hands-on activities; problem solving skills; school activities; school workshops; teaching algorithms},
  location = {Turku, Finland},
  numpages = {2},
  pages = {619–620},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Impact and Achievements of School Workshops as a University Outreach Activity in Computer Science},
  url = {https://doi.org/10.1145/3587103.3594142},
  year = {2023}
}

@inproceedings{merged988,
  abstract = {The persistent gender gap in computer science, especially among women from low-income backgrounds, continues to limit diversity and innovation within the technological sector. This underrepresentation also restricts access to career paths that can enhance social mobility, particularly for women in developing countries. Physical computing offers a hands-on approach that can improve programming skills and computational thinking through interaction with tangible hardware. This research focuses on developing a short physical computing workshop tailored to young girls from low-income communities. The study combines education, tangible interfaces, and coding. Through a series of classroom-based studies and laboratory experiments, this PhD work will assess the impact of the workshop on self-efficacy and learning in programming and computational thinking. The anticipated contributions of this research include insights into the effectiveness of tangible, user-friendly physical computing workshops in increasing engagement among underrepresented groups in computer science.},
  address = {New York, NY, USA},
  author = {Vergara, Katherine},
  booktitle = {Companion Proceedings of the 2024 Conference on Interactive Surfaces and Spaces},
  doi = {10.1145/3696762.3698039},
  isbn = {9798400712784},
  keywords = {CS Education; Physical Computing; girls},
  location = {Vancouver, BC, Canada},
  numpages = {3},
  pages = {1–3},
  publisher = {Association for Computing Machinery},
  series = {ISS Companion '24},
  title = {A Physical Computing Workshop to Engage Girls from Low-Income Backgrounds},
  url = {https://doi.org/10.1145/3696762.3698039},
  year = {2024}
}

@inproceedings{merged989,
  abstract = {In this poster, we present our efforts to engage elementary teachers with learning trajectories as a tool for developing both their own and their students' comprehension of computational thinking (CT) and strategies for integrating CT learning in their classroom. Eleven teachers, who voluntarily joined a teacher professional development (PD) program to develop teacher leaders for CT integration in the elementary context, attended a one-day PD session aimed at reviewing their knowledge of CT, participating in CT-infused lessons, and engaging with CT learning trajectories. Over the next year, teachers will participate in monthly virtual PD to continue to grow both their CT content knowledge and pedagogical knowledge. Our goal is to develop these teachers as teacher leaders who will support others as they integrate CT. This poster will show our current progress on CT learning trajectories and teacher leaders' responses to the tool.},
  address = {New York, NY, USA},
  author = {Albert, Jennifer and Joswick, Candace and Joshi, Deepti and Jocius, Robin and Blanton, Melanie and Petrulis, Robert},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635579},
  isbn = {9798400704246},
  keywords = {computational thinking; elementary computer science education; learning trajectories; teacher professional development},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1554–1555},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Elementary Teachers Engaging with Learning Trajectories to Create Professional Learning Goals around Computer Science Integration},
  url = {https://doi.org/10.1145/3626253.3635579},
  year = {2024}
}

@inproceedings{merged990,
  abstract = {While computational thinking has gained popularity in K-12 schools to increase access to computing tools and practices, there is still limited understanding on how to broaden participation of students with disabilities in computational thinking (CT). One approach to increasing access to computing to students with disabilities is to educate future special education teachers to bring CT into their instruction. This study examined the influence of integrating CT into assistive technology course for special education pre-service teachers. Our results suggest that integrating CT into special educa- tion teacher preparation coursework can have a positive impact on how pre-service teachers see the value of bringing computational practices to students with disabilities.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Israel, Maya and Bouck, Emily and Cobo, Alexis and Samuels, John},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
  doi = {10.1145/3478431.3499333},
  isbn = {9781450390705},
  keywords = {computational thinking; pre-service teachers},
  location = {Providence, RI, USA},
  numpages = {6},
  pages = {196–201},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Achieving CSforAll: Preparing Special Education Pre-service Teachers to Bring Computing to Students with Disabilities},
  url = {https://doi.org/10.1145/3478431.3499333},
  year = {2022}
}

@inproceedings{merged991,
  abstract = {Adaptive programming tasks are a promising approach for personalized learning that adapts to each student’s unique needs and abilities. However, developing effective adaptive programming tasks can be challenging, particularly when it comes to selecting the appropriate changes and adapting the difficulty of the exercise. In this paper, we propose a model for tracking student knowledge and adapting programming exercises to guide the selection and implementation of task features. Our model combines aspects of cognitive load, computational thinking and feature-oriented software product line engineering to identify core and optional features, so that they can be used in conjunction to adapt to the specific needs and abilities of each student. We provide an overview over the insights gained from an exploratory study with students. To support the creation process of feature-based programming tasks, we present an approach using a template-based generator.},
  address = {New York, NY, USA},
  author = {Willert, Nico and Eriksson, Janik},
  booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
  doi = {10.1145/3593663.3593677},
  isbn = {9781450399562},
  keywords = {adaptivity; assessment; computational thinking; instructional design},
  location = {Seeon/Bavaria, Germany},
  numpages = {10},
  pages = {246–255},
  publisher = {Association for Computing Machinery},
  series = {ECSEE '23},
  title = {Towards a feature-based didactic framework for generating individualized programming tasks for an e-learning environment},
  url = {https://doi.org/10.1145/3593663.3593677},
  year = {2023}
}

@article{merged992,
  abstract = {The subject of teaching artificial intelligence (AI) in K-12 settings is rapidly expanding and will significantly affect computer education. While AI is currently a required part of computing curricula at universities, there are unique challenges in incorporating AI into K-12 education. The goal of BlueAI is to prepare K-12 educators to use game-based lessons to teach computational thinking, AI, and computer science skills that will interest children while incorporating important environmental and marine science subjects. We conducted assessments where we taught lessons at two different schools, and presented our findings.},
  address = {Evansville, IN, USA},
  author = {Dogan, Gulustan and Sahin, Elif and Wilkinson, Catherine Fay and Moody, Amelia K. and Song, Yang},
  issn = {1937-4771},
  issue_date = {November 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {November},
  number = {5},
  numpages = {11},
  pages = {127–137},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {BlueAI: Designing Artificial Intelligence for Environment Science and Climate Change Learning Experiences for K12 Students},
  volume = {40},
  year = {2024}
}

@inproceedings{merged993,
  abstract = {The purpose of this poster presentation is to demonstrate how we can bring art into computational thinking and computer programming spaces. Op-Artist Bridget Riley used geometrical shapes and patterns to express motion across the canvas. The example of Bridget Riley's art inspired U.S. middle and high school students to express their own artistic motions in unplugged and computer coded learning activities.This interdisciplinary lesson began with introducing Bridget Riley's artwork and how she arranged different triangles to create the illusion of movement [1]. Students then recreated one of her works by drawing triangles on graph paper with pencils, mimicking Riley's black-and-white compositions. After this unplugged activity, students transferred this understanding of drawing different triangles to the computer using JavaScript. Students used the gridlines behind their drawn triangles to map the pixel coordinates on a computer screen. Students used commands such as fill to set the color of the triangles and p5js.com's built-in triangle command to draw the triangles by specifying the (x, y) coordinates of each of the three vertices on the computer screen. Students then customized and expanded their code to express their interests (e.g., by picking different colors or effects) and to make it interactive for the user (e.g., by having the triangles' top vertices move left and right with the cursor of the screen). By the end of the lesson, each student created different works of Bridget Riley inspired art through their written code.},
  address = {New York, NY, USA},
  author = {Dion, Lisa and Neumann, Maureen D.},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3649405.3659486},
  isbn = {9798400706035},
  keywords = {arts integration; computational thinking; computer science education; javascript programming language},
  location = {Milan, Italy},
  numpages = {1},
  pages = {795},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Creating Art with JavaScript: A Bridget Riley Inspired Coding Lesson},
  url = {https://doi.org/10.1145/3649405.3659486},
  year = {2024}
}

@inproceedings{merged994,
  abstract = {There is a growing need for 21st-century workers to be digitally literate and to possess computational thinking and collaborative problem-solving skills. Computer-supported collaborative learning (CSCL) focused on computational thinking can guide students toward the co-development of these skills. In this work, we present our approach to integrating virtual and physical learning modalities into InfuseCS, a CSCL environment. InfuseCS uses problem-based learning scenarios to situate upper elementary school students (ages 8 to 11) in a CSCL setting to foster their computational thinking and science knowledge construction as they collaborate to create digital narratives.},
  address = {New York, NY, USA},
  author = {Monahan, Robert and Vandenberg, Jessica and Gupta, Anisha and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Minogue, James and Oliver, Kevin and Mott, Bradford},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594181},
  isbn = {9798400701399},
  keywords = {CSCL; collaboration; digital narrative; elementary; makerspace},
  location = {Turku, Finland},
  numpages = {1},
  pages = {645},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Multimodal CS Education Using a Scaffolded CSCL Environment},
  url = {https://doi.org/10.1145/3587103.3594181},
  year = {2023}
}

@inproceedings{merged995,
  abstract = {In this poster, we present the design of a browser-based Arduino programming tool, CASMM, to support computational thinking and making in science classrooms. This tool allows for unique integration of research tools, lesson planning, and scaffolding for learning computational thinking concepts and block-based programming. This poster will describe four key features of a block-based LMS: (1) reduced-scoped programming toolbox, (2) block locking, (3) lesson plans and starter code templates; and (4) low-tech code replay for researchers. Through discussion of this tool, we aim to catalyze conversations about integrating new scaffolding techniques into block-based programming environments to better support classroom use and research.},
  address = {New York, NY, USA},
  author = {Gardner-McCune, Christina and Jimenez, Yerika and Magda, David and Kulkarni, Abhishek and Chu, Sharon},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576357},
  isbn = {9781450394338},
  keywords = {arduino; block-based programming environment; computational thinking; computing education; k-12; learning mangement system (lms); programming; scaffolding; science integration},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1414},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Towards an Adaptable Curriculum-Driven Block-based Learning Environment},
  url = {https://doi.org/10.1145/3545947.3576357},
  year = {2023}
}

@inproceedings{merged996,
  abstract = {Computational thinking, in particular its central component algorithmic thinking, is one of the more important skills in the 21st century. Therefore it should be taught at school. This work proposes a low-threshold course to introduce algorithmic thinking to students in lower secondary education using the concept of finite state machines. The course is action-based and transitions from unplugged to plugged and even into the real world while sticking to the same topic and using the same visualisations throughout the entire course. It revolves around a chocolate vending machine, the Choc-Machine, which teaches the basics of finite state machines and eventually enables the students to design and formulate their own algorithms that then drive a physical hardware machine.},
  address = {New York, NY, USA},
  articleno = {25},
  author = {Vielsack, Annika and Klein, Miriam and Niesenhaus, Thomas and Ulbrich, Mattias},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609772},
  isbn = {9798400708510},
  keywords = {algorithmic thinking; automata; chocolate; education; finite state machines; modeling and design; teaching concept},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {The ’Choc-Machine’ - an Introduction to Algorithmic Thinking using Finite State Machines},
  url = {https://doi.org/10.1145/3605468.3609772},
  year = {2023}
}

@article{merged997,
  abstract = {In this opinion piece, we explore the idea that GenAI has the potential to fundamentally disrupt computer science education (CSE) by drawing insights from 10 pedagogical and cognitive theories and models. We highlight how GenAI improves CSE by making educational practices more effective and requires less effort and time, and all at a lower cost, properties that have the potential to make GenAI a disruptive technology for CSE.Each of the 10 theories and models examined serves as a lens through which we observe and interpret the impact of GenAI on CSE. The 10 theories and models are grouped into 3 categories: Learning (Constructivism, Cognitive Load, and Motivation), Pedagogy (Bloom’s Taxonomy, Assessment, Personalization/Diversity/Equity, and Didactic Transposition), and Competencies (the KSA Model, Computational Thinking, and Metacognition).},
  address = {New York, NY, USA},
  articleno = {26},
  author = {Hazzan, Orit and Erez, Yael},
  doi = {10.1145/3732792},
  issue_date = {September 2025},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {GenAI; competencies; computer science education; disruptive technology; learning; pedagogy},
  month = {June},
  number = {3},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  title = {Rethinking Computer Science Education in the Age of GenAI},
  url = {https://doi.org/10.1145/3732792},
  volume = {25},
  year = {2025}
}

@inproceedings{merged998,
  abstract = {The push for computer science education to primary schooling requires training teachers and developing their knowledge to teach computing. However, computing goals within primary schooling need to move away from teaching coding to curricular and pedagogical goals teachers have. In this talk, Dr. Aman Yadav will discuss how to support teachers to see the relevance of computing to their core curriculum and how teachers take advantage of computation to support their core instruction. Using classroom examples from his work with elementary teachers, he will share evidence-based ways to develop teachers’ competencies and skills to integrate computational thinking in their classrooms. Dr. Yadav will also discuss how teachers use computational thinking as a way to explicitly teach metacognitive strategies to their students and improve their core learning outcomes.},
  address = {New York, NY, USA},
  author = {Yadav, Aman},
  booktitle = {Proceedings of the 16th Annual ACM India Compute Conference},
  doi = {10.1145/3627217.3631584},
  isbn = {9798400708404},
  location = {Hyderabad, India},
  numpages = {1},
  pages = {3},
  publisher = {Association for Computing Machinery},
  series = {COMPUTE '23},
  title = {Computing Education for Primary Schooling: Developing Teacher Knowledge},
  url = {https://doi.org/10.1145/3627217.3631584},
  year = {2023}
}

@inproceedings{merged999,
  abstract = {In recent years, a growing number of universities have begun to offer specialized courses as a way to make computer science (CS) more accessible to students with little or no prior CS or programming experience, especially non-CS majors. One of the ways courses have been modified for these students is by supplementing the core problem solving and coding aspects of the curriculum with explicit instruction on computational thinking principles. These "computational thinking" courses are promising in that they ground computational thinking in discipline-specific contexts and emphasize application of computational principles. However, there is little empirical research evaluating the extent to which students learn computational thinking from these courses. The purpose of this study was to evaluate the impact of an online Computational Creativity course on students' computational thinking skills, creative competencies, and self-efficacy. Students in the Computational Creativity course were predominantly non-CS majors, and they completed four Computational Creativity Exercises (CCEs) that have previously been shown to improve learning and achievement. Results indicate that the Computational Creativity course was effective in increasing students' computational thinking knowledge and self-efficacy for applying computational thinking in their fields, but it did not have an impact on students' creative competencies. Additionally, students' reactions to the course and the CCEs were mostly positive. Thus, this study provides initial evidence that non-CS majors can learn computational thinking through the online Computational Creativity course.},
  address = {New York, NY, USA},
  author = {Peteranetz, Markeya S. and Soh, Leen-Kiat and Ingraham, Elizabeth},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287346},
  isbn = {9781450358903},
  keywords = {collaborative learning; computational creativity; computational thinking; creativity; non-majors},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {442–448},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Building Computational Creativity in an Online Course for Non-Majors},
  url = {https://doi.org/10.1145/3287324.3287346},
  year = {2019}
}

@article{merged1000,
  abstract = {The high school preparation of future computer science undergraduates can be varied and depends strongly on the experiences and subject knowledge of their high school teachers. In an effort to connect undergraduate computer science programs to high schools for future student success in college, a public comprehensive university is hosting high school teacher workshops to help teachers enhance their teaching effectiveness. This has established a pathway from the university to the high school. Pre- and post- workshop surveys show that these teacher workshops have changed the perceptions high school teachers had regarding careers in computer science.},
  address = {Evansville, IN, USA},
  author = {Morreale, Patricia and Joiner, David and Chang, George},
  issn = {1937-4771},
  issue_date = {June 2010},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {7},
  pages = {191–197},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Connecting undergraduate programs to high school students: teacher workshops on computational thinking and computer science},
  volume = {25},
  year = {2010}
}

@inproceedings{merged1001,
  abstract = {In 2024, the National Council for Curriculum and Assessment (NCCA) in Ireland released a draft curriculum which intends to introduce Digital Technology (DT) into the Primary School Curriculum. While this is a positive step in terms of Computer Science education pipeline, the teachers who will be charged with delivering this are, for the most part, completely out-of-field and anecdotally are lacking in confidence in delivering DT in the classroom. We are proposing a project to enhance teachers competencies around DT concepts (skills, processes and dispositions). The project plans to develop targeted activities for teachers to deliver DT. These activities will incorporate real-world applications of DT, computational thinking, problem-solving, and creative skills all delivered through play-based pedagogies. To ensure that no teacher or school will be negatively impacted due to technological requirements, AWS In Communities are going to send every Primary School in Ireland a Digital Technology kit comprising of a plugged device and an unplugged computational thinking game.},
  address = {New York, NY, USA},
  author = {Nolan, Keith and O'Farrell, Amanda and Quille, Keith and Nolan, Karen and Faherty, Roisin and Jaiswal, Rajesh and Hensman, Svetlana and Collins, Michael and Harte, Miriam and Becker, Brett A.},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3649405.3659515},
  isbn = {9798400706035},
  keywords = {curriculum change; digital technology; teacher professional development},
  location = {Milan, Italy},
  numpages = {1},
  pages = {823},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Enabling Digital Technology in Primary Schools},
  url = {https://doi.org/10.1145/3649405.3659515},
  year = {2024}
}

@inproceedings{merged1002,
  abstract = {The Remezcla Project draws on youths' natural interest in music to introduce and develop computational thinking skills. BPC of Hispanic students is fostered through culturally relevant pedagogy and informal learning environments. Observations suggest that Remezcla's emphasis on creativity, self-expression, and community building has also resonated positively with students with autism. This experience report is based on two participants with autisms' experience in the 2024 Remezcla Summer Camp. Reflections from the two participants, their parents and the Remezcla staff were used to identify the Program components that gave rise to the participants' CS learning, engagement and sense of belonging.},
  address = {New York, NY, USA},
  author = {Padr\'{o}-Collazo, Pascua and Qui\~{n}ones-P\'{e}rez, Isaris Rebeca and Carroll-Miranda, Joseph},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734780},
  isbn = {9798400706264},
  keywords = {autism; computer science education; culturally relevant pedagogy; inclusion; informal education},
  location = {Newark, NJ, USA},
  numpages = {9},
  pages = {56–64},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {The Harmony of Inclusion: Reflecting on a Culturally Relevant CS Curriculum for Students with Disabilities},
  url = {https://doi.org/10.1145/3704637.3734780},
  year = {2025}
}

@inproceedings{merged1003,
  abstract = {In view of the strong practical characteristics of EDA(Electronic Design Automation) technology and the insufficient integration between courses, the concept and method of CDIO(Conceive, Design, Implement, Operate) are introduced to deepen the reform of blended learning in EDA course . Taking students as the main body to seek solutions to the problem, improve students' ability to solve complex engineering problems. Designing the teaching means of the "EDA Technology" course, and explore its implementation process, teaching measures and evaluation methods. The case study of CDIO teaching shows that the blended teaching method trained the computational thinking, which integrates the dual experience of traditional classroom and online resource, has reasonable assessment standard, and better teaching objectives than the original teaching method, achieving good teaching results, and continuously improving the blended learning effect of EDA technology course. Besides, in the teaching of undergraduate professional courses, teachers can use information technology to reconstruct the precision teaching process, obtain real-time data of the teaching process through the classification and decomposition of teaching objectives, the classification and construction of teaching resources, and the continuous evaluation of learning objects, and implement precise teaching intervention according to the data processing results, so as to maximize the learning effect of students.},
  address = {New York, NY, USA},
  author = {Zhao, Chenguang and Fang, Qizhi and Sun, Yanpeng},
  booktitle = {Proceedings of the 2024 10th International Conference on Education and Training Technologies},
  doi = {10.1145/3661904.3661925},
  isbn = {9798400717895},
  keywords = {Blended Learning; CDIO; Computational Thinking; EDA technology},
  location = {Macau, China},
  numpages = {6},
  pages = {16–21},
  publisher = {Association for Computing Machinery},
  series = {ICETT '24},
  title = {Research and Design of Blended Learning of EDA Technology Course Based on CDIO},
  url = {https://doi.org/10.1145/3661904.3661925},
  year = {2024}
}

@inproceedings{merged1004,
  abstract = {Computational thinking (CT) education reaches only a fraction of young children, in part because CT learning tools often require expensive hardware or fluent literacy. Block-based programming environments address these challenges through symbolic graphical interfaces, but users often need instructor support to advance. Alternatively, voice-based tools provide direct instruction on CT concepts but can present memory and navigation challenges to users. In this work, we present Visual StoryCoder, a multimodal tablet application that combines the strengths of each of these approaches to overcome their respective weaknesses. Visual StoryCoder introduces children ages 5–8 to CT through creative storytelling, offers direct instruction via a pedagogical voice agent, and eases use through a block-like graphical interface. In a between-subjects evaluation comparing Visual StoryCoder to a leading block-based programming app for this age group (N = 24), we show that Visual StoryCoder is more understandable to independent learners, leads to higher-quality code after app familiarization, and encourages personally meaningful projects.},
  address = {New York, NY, USA},
  articleno = {96},
  author = {Dietz, Griffin and Tamer, Nadin and Ly, Carina and Le, Jimmy K and Landay, James A.},
  booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3544548.3580981},
  isbn = {9781450394215},
  keywords = {children; computational thinking; multimodal interface; storytelling},
  location = {Hamburg, Germany},
  numpages = {16},
  publisher = {Association for Computing Machinery},
  series = {CHI '23},
  title = {Visual StoryCoder: A Multimodal Programming Environment for Children’s Creation of Stories},
  url = {https://doi.org/10.1145/3544548.3580981},
  year = {2023}
}

@inproceedings{merged1005,
  abstract = {Block-based programming languages effectively address syntactic difficulties allowing users to more easily create code. Syntactic code support is no doubt a crucial step in enabling the next generation of programmers. However, in what other ways do these tools support the computational thinking (CT) process? For example, how is CT supported in both the semantic and pragmatic levels? Most users do not just want to write code?they want to create interesting artifacts such as video games, simulations, stories and robots. No doubt that users must code to build these artifacts, but just as important, though often overlooked, is that users must also have an understanding of tool affordances to effectively build these artifacts. The position presented in this paper is that the comprehension of affordances is essential to each stage of the computational thinking process. To that end, we introduce the Hourglass Challenge as a way for students to experience affordances through a programming challenge based on mis-aligned tools and problems. The results from a study, with 54 preservice elementary school teachers, indicate that the affordances of tools can have profound consequences on computational thinking. For instance, the affordances various tools provide can be the difference between creating a simulation versus an animation. But just as hammers are not intrinsically better tools than screwdrivers, the contribution of this position paper is not to compare tools, but to promote efforts that enable learners to develop a better understanding of computational thinking tool affordances as essential mediators between problems and tools.},
  address = {New York, NY, USA},
  author = {Repenning, Alexander and Basawapatna, Ashok},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432444},
  isbn = {9781450380621},
  keywords = {affordances; animations; block-based programming; computational thinking; computational thinking tools; simulations},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {267–273},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Smacking Screws with Hammers: Experiencing Affordances of Block-based Programming through the Hourglass Challenge},
  url = {https://doi.org/10.1145/3408877.3432444},
  year = {2021}
}

@inproceedings{merged1006,
  abstract = {Students in social sciences or economics programs with computer science and mathematics components, including data structures and algorithms, often lack theoretical computer science background. In fields such as Economics, Sociology and Politics, CS Theory topics, in particular proofs of impossibility by contradiction concerning algorithmic undecidability, can be useful in understanding the computability (or lack thereof) of concepts such as voting theory, social choice or economic equilibrium. The objective of this paper is to develop an educational approach that can bridge this gap in knowledge of presenting computability topics to students of social sciences and economics during their study of CS subjects in data structures and algorithms. The introduction of Theory of Computation issues around impossibility and undecidability results allows students to acquire computational thinking skills and the ability to reason around paradoxes, with which they can deepen and raise computability questions in later courses on concepts related to social sciences and economics. We have analyzed the performance of students to conclude that the presentation of theoretical computing results of impossibility increases students' academic performance and motivation in their CS education, and their computational view of traditional social sciences and economics problems.},
  address = {New York, NY, USA},
  author = {V\'{\i}rseda, Rafael del Vado},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729030},
  isbn = {9798400715679},
  keywords = {computer science theory; impossibility theorems; undecidability},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {173–179},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {An Educational Approach to Introduce Theory of Computation in Social Sciences and Economics Degrees Using Impossibility},
  url = {https://doi.org/10.1145/3724363.3729030},
  year = {2025}
}

@inproceedings{merged1007,
  abstract = {In response to the evolving digitized society, it is crucial to equip children with essential skills for critically and reflectively navigating this environment. Child-Computer Interaction (CCI) researchers have established rich research to advance educational practices and technology development for computational thinking education and introduced a new concept of computational empowerment. However, the absence of effective formative assessment in the research and practices within computational education hinders the facilitation of continuous learning and the enhancement of computational empowerment. Considering this, this doctoral study will explore the core research question of how to develop formative assessment strategies for computational empowerment through the lens of dialogic learning. The research aims to conceptualize a research-based formative assessment model for educators, formative assessment design principles for computational education toolkits and provide instances through illustrative case studies. The study includes literature reviews, learning intervention case studies and participatory design workshops, stimulating discussions and innovative formative assessment strategies for computational empowerment within the CCI community and among practitioners. This doctoral study addresses the need for effective formative assessment in computational education to understand learning, foster learning and enhance computational empowerment in wider implementation. The practical research outcomes will benefit toolkit designers and educators, while the theoretical contributions aim to fill gaps of formative assessment in CCI research and pedagogies, advancing the broader landscape of computational education.},
  address = {New York, NY, USA},
  author = {Liu, Yu-Yu},
  booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3628516.3659855},
  isbn = {9798400704420},
  keywords = {Computational empowerment; K-12 education; computing education; formative assessment},
  location = {Delft, Netherlands},
  numpages = {4},
  pages = {976–979},
  publisher = {Association for Computing Machinery},
  series = {IDC '24},
  title = {Computational Empowerment in K-12 Education: Formative Assessment Strategies for Educational and Design Practices through Dialogic Learning Approaches},
  url = {https://doi.org/10.1145/3628516.3659855},
  year = {2024}
}

@inproceedings{merged1008,
  abstract = {This SIGCSE poster presents a landscape study of six school districts across six different states in terms of their individual teachers' and administrators' capacity to integrate and implement computational thinking (CT) into their own schools and classrooms. This landscape evaluation represents the baseline start of a wider, four-year national study around district capacity to collaboratively develop consistent and comprehensive K-12 computing pathways for their students and schools. The early landscape work we present here not only represents a starting point for comparing district educators' comprehension of CT (and computer science [CS]), but also acts as an early indicator as to what extent K-12 computing is a school and district-based priority, and to what degree teachers feel they have the capacity to meaningfully implement it. This poster relies on two data sources in a mixed-methods design: Districtwide surveys of teachers and administrators on their familiarity and prioritization of CT, coupled with subsequent hour-long focus group discussions with educators to expand upon their respective district landscape survey responses. Results point to all districts perceiving the broad applicability of CT as a skill set and its integrative potential in a range of subjects. Yet in terms of classroom implementation, teachers find such CT integration decidedly less clear, recognizing it to be a priority but also reporting as less confident about creating their own curricular materials, where CT situates with their district's ongoing initiatives, and where they can find curricular resources and tools specific to their own areas of curricular integration.},
  address = {New York, NY, USA},
  author = {Burke, Quinn and Coenraad, Merijke and Rangel, Alessandra and Dunbar, Kyle and Mills, Kelly},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635569},
  isbn = {9798400704246},
  keywords = {computational thinking; computing pathways; k-12 education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1582–1583},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Integrating &amp; Implementing K-12 Computing Pathways across Six School Districts-Challenges &amp; Opportunities},
  url = {https://doi.org/10.1145/3626253.3635569},
  year = {2024}
}

@inproceedings{merged1009,
  abstract = {To promote inclusion of students with marginalized identities, districts need to develop comprehensive inclusive computing pathways across grade levels. Working in a Research Practice Partnership (RPP), we have co-designed a district-facing toolkit to support the creation of these pathways. In this poster, we present both the CT Pathways Toolkit and results from four districts piloting it. We examine the experiences of the pilot districts and analyze trends in the toolkit's use. This work expands knowledge about building inclusive computing pathways and computational thinking (CT) integration within K-12 schools.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Burke, Quinn and Ruiz, Pati and Mills, Kelly and Roschelle, Jeremy},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499076},
  isbn = {9781450390712},
  keywords = {computational thinking; computing pathways; k-12 education},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1089},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Developing Inclusive Computing with the CT Pathways Toolkit},
  url = {https://doi.org/10.1145/3478432.3499076},
  year = {2022}
}

@inbook{merged1010,
  abstract = {As computing education for children continues to grow, there are increasing calls to go beyond teaching computational thinking to empower children to engage with technology in creative and critical ways. Having an honest and accurate understanding of the nature of computing devices, including those portrayed as smart, could help children with this empowerment goal. Prior research on children’s imaginaries and perceptions of robots has had consistent findings across multiple decades, age groups, and geographies, that center around assigning robots human-like characteristics, including problematic ones, such as gender stereotypes, violence, and lack of human control. In this work, we explore the impact of 15 educational robotics (ER) sessions on 30 kindergarten children’s imaginaries about robots. Prior to ER activities, children’s imaginaries aligned with previous findings, but after the sessions, children were less likely to anthropomorphize robots or assign them gender, and a majority of children envisioned robots under their control.},
  address = {New York, NY, USA},
  author = {Bakala, Ewelina and Pires, Ana Cristina and Gerosa, Anaclara and Tejera, Gonzalo and Hourcade, Juan Pablo},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  isbn = {9798400714733},
  numpages = {12},
  pages = {672–683},
  publisher = {Association for Computing Machinery},
  title = {Moving Beyond Stereotypes: How Kindergarten Robotics Activities Shape Children's Imaginaries About Robots},
  url = {https://doi.org/10.1145/3713043.3727058},
  year = {2025}
}

@inproceedings{merged1011,
  abstract = {Could computational thinking be a strong tool for children to understand complex 21st-century issues? Our knowledge is limited since most designs focus on sequential programming and on the cognitive aspects of computational thinking. This paper discusses a design that integrates ill-structured socio-scientific issues with programming and other computational concepts, in a playful and meaningful context. The design, called ChoiCo (Choices with Consequences), builds on the idea of "integrated affordances" that enables layered computational access, allowing children to be players and designers of choice-driven simulation games. We elaborate on a design-based research that studied children's activity, who progressively played, modified and co-created games that simulated real-world issues. We describe four strategies developed by the children to make sense of the simulated problems through a systems thinking approach. We also discuss how they formulated these strategies by utilizing the affordances of map design, data manipulation and coding.},
  address = {New York, NY, USA},
  author = {Grizioti, Marianthi and Kynigos, Chronis},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3460706},
  isbn = {9781450384520},
  keywords = {block-based programming; computational thinking; game-based learning; real-world problems; simulation games; systems thinking},
  location = {Athens, Greece},
  numpages = {12},
  pages = {363–374},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {Children as players, modders, and creators of simulation games: A design for making sense of complex real-world problems: Children as players, modders and creators of simulation games},
  url = {https://doi.org/10.1145/3459990.3460706},
  year = {2021}
}

@inproceedings{merged1012,
  abstract = {In this paper, we present the design of a "CS0" Computational Thinking course at an Australian regional university, that is also offered to non-enrolled students via the Open Universities Australia network. Unlike many CS0 courses, this targets a predominantly mature age and part-time demographic, although high school leavers are also included. Our design attempts to recognise that computational thinking experiences are increasingly incorporated into school experiences, both through curricula and outreach. Consequently, a CS0 course no longer has the sole purpose of introducing students to computing. It also serves a bridging role, giving a compressed form of outreach and school experiences to adult learners who might have missed them. It also brings brings opportunities to compress the introduction of programming, so that more time can be spent in challenges that stretch students' experience, and in demonstrating its application to areas such as robotics and social AI.},
  address = {New York, NY, USA},
  author = {Billingsley, William and Vitale, Jonathan},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3430665.3456361},
  isbn = {9781450382144},
  keywords = {computational thinking; cs0; online education},
  location = {Virtual Event, Germany},
  numpages = {7},
  pages = {526–532},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {An Accelerated CS0 for Online Mature-Age Part-Time Students},
  url = {https://doi.org/10.1145/3430665.3456361},
  year = {2021}
}

@inproceedings{merged1013,
  abstract = {While the Next Generation Science Standards set an expectation for developing computer science and computational thinking (CT) practices in the context of science subjects, it is an open question as to how to create curriculum and assessments that develop and measure these practices. In this poster, we show one possible solution to this problem: to introduce students to computer science through infusing computational thinking practices ("CT-ifying") science classrooms. To address this gap, our group has worked to explicitly characterize core CT-STEM practices as specific learning objectives and we use these to guide our development of science curriculum and assessments. However, having these learning objectives in mind is not enough to actually create activities that engage students in CT practices. We have developed along with science teachers, a strategy of examining a teacher's existing curricula and identifying potential activities and concepts to "CT-ify", rather than creating entirely new curricula from scratch by using the concept of scale as an "attack vector'' to design science units that integrate computational thinking practices into traditional science curricula. We demonstrate how we conceptualize four different versions of scale in science, 1. Time, 2. Size, 3. Number, and 4. Repeatability. We also present examples of these concepts in traditional high school science curricula that hundreds of students in a large urban US school district have used.},
  address = {New York, NY, USA},
  author = {Bain, Connor and Wilensky, Uri},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372674},
  isbn = {9781450367936},
  keywords = {agent-based modeling; computational thinking; science education},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1361},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Vectors of CT-ification: Integrating Computational Activities in STEM Classrooms},
  url = {https://doi.org/10.1145/3328778.3372674},
  year = {2020}
}

@inproceedings{merged1014,
  abstract = {Our research is based on an innovative approach that integrates computational thinking and creative thinking in computer science courses to improve student learning and performance. Referencing Epstein's Generativity Theory, we designed and deployed Computational Creativity Exercises (CCEs) with linkages to concepts in computer science and computational thinking. Prior studies with earlier versions of the CCEs in CS1 courses found that completing more CCEs led to higher grades and increased learning of computational thinking principles. In this study, we extended the examination of CCEs to by deploying revised CCEs across two lower division (freshmen, sophomore) and three upper division (junior, senior) CS courses. We found a linear "dosage effect" of increasingly higher grades and computational thinking/CS knowledge test scores with completion of each additional CCE. This dosage effect was consistent across lower and upper division courses. Findings supported our contention that the merger of computational and creative thinking can be realized in computational creativity exercises that can be implemented and lead to increased student learning across courses from freshmen to senior level. The effect of the CCEs on learning was independent of student general academic achievement and individual student motivation. If students do the CCEs, they appear to benefit, whether or not they are self-aware of the benefit or personally motivated to do them. Issues in implementation are discussed.},
  address = {New York, NY, USA},
  author = {Shell, Duane F. and Soh, Leen-Kiat and Flanigan, Abraham E. and Peteranetz, Markeya S. and Ingraham, Elizabeth},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3017718},
  isbn = {9781450346986},
  keywords = {CS course achievement; computational thinking; creative thinking},
  location = {Seattle, Washington, USA},
  numpages = {6},
  pages = {543–548},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Improving Students' Learning and Achievement in CS Classrooms through Computational Creativity Exercises that Integrate Computational and Creative Thinking},
  url = {https://doi.org/10.1145/3017680.3017718},
  year = {2017}
}

@inproceedings{merged1015,
  abstract = {In recent years, the interest in Data Science has increased in both industry and academia. Historically, access to this discipline has been redirected to STEM professionals. However, the ubiquity of cloud computing and the simplicity of modern programming languages such as Python and R have enabled non-STEM students and professionals to leverage it especially to analyze data. Similarly, with what has been conveyed with computational thinking in terms of enabling non-STEM students with com technological competencies, this article aims to present a proposal for improving the teaching of data science specifically to non-stem students.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {Barboza, Luiz},
  booktitle = {Proceedings of the 22nd ACM/IEEE Joint Conference on Digital Libraries},
  doi = {10.1145/3529372.3530976},
  isbn = {9781450393454},
  keywords = {computational thinking; data science; non-STEM},
  location = {Cologne, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {JCDL '22},
  title = {Thesis plan: the effect of data science teaching for non-STEM students},
  url = {https://doi.org/10.1145/3529372.3530976},
  year = {2022}
}

@inproceedings{merged1016,
  abstract = {How to measure students' Computational Problem-Solving (CPS) competencies is an ongoing research topic. Prevalent approaches vary by measurement tools (e.g., interactive programming, multiple-choice tests, or programming-independent tests) and task types (e.g., debugging problems or Parson problems). However, few studies have examined the measurement tools of CPS competencies themselves: affordances and limitations of the measurement tools and how they compare, or whether different task types might elicit CPS competencies differently. Research needs to address these questions in order to better understand how to design robust, generalizable, and effective measurement tools for CPS competencies. This paper presents an exploratory study that contributes to this research direction. It is part of a larger international project to develop an open-access formative assessment platform for CPS, which includes a novel authoring tool for a wide range of task types for interactive block-based programming. We used the tool to create an interactive programming experience with multiple task types and gave it to more than 300 secondary school students from different countries. We also administered a validated multiple-choice measurement of Computational Thinking with block-based programs. We focused on task complexity as a characteristic of task type, using a classification scheme based on task design features. Comparing students' performances on tasks of different complexity and using two distinct measurement tools, we found that the multiple-choice measurement only partially predicts performance in the interactive programming task. Additionally, its predictive capacity varies significantly between task types of differing complexity.},
  address = {New York, NY, USA},
  author = {Bumbacher, Engin and Brender, J\'{e}r\^{o}me and Davis, Richard Lee},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635547},
  isbn = {9798400704246},
  keywords = {block-based programming; computational thinking and problem-solving; interactive assessment; k-12 education; mixed-effects models},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1580–1581},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {A Comparative Analysis of Tools &amp; Task Types for Measuring Computational Problem-Solving},
  url = {https://doi.org/10.1145/3626253.3635547},
  year = {2024}
}

@inproceedings{merged1017,
  abstract = {The rise of Large Language Models (LLMs) has sparked discussion in Computer Science Education (CSE) due to their ability to generate code from text prompts. Students may rely on these tools, neglecting core skills like computational thinking and program design. Thus, it’s crucial to responsibly integrate them into computer science courses.To address this, we integrated an open-source Automatic Assessment Tool with GPT, enabling students to receive LLM assistance on their programming assignments. This tool can be adopted and improved by educators, promoting more responsible integration of LLMs in CSE.},
  address = {New York, NY, USA},
  articleno = {52},
  author = {Pereira Cipriano, Bruno and Silva, Miguel and Correia, Rodrigo and Alves, Pedro},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699588},
  isbn = {9798400710384},
  keywords = {automatic assessment tools; feedback; large language models},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {Towards the Integration of Large Language Models and Automatic Assessment Tools: Enhancing Student Support in Programming Assignments},
  url = {https://doi.org/10.1145/3699538.3699588},
  year = {2024}
}

@inproceedings{merged1018,
  abstract = {This basic interpretive qualitative study investigated four students’ debugging behaviors in Zoombinis, a game-based computational thinking (CT) environment. Analysis involved deductive coding of students’ debugging behaviors using videos of students’ computer screens. The findings revealed a range of debugging behaviors and strategies. Findings also indicated that students could articulate an intermediate understanding of debugging as related to the debugging LT [7].},
  address = {New York, NY, USA},
  author = {Yan, Wei and Israel, Maya and Liu, Tongxi},
  booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
  doi = {10.1145/3446871.3469792},
  isbn = {9781450383264},
  keywords = {Computational Thinking; Debugging; elementary education},
  location = {Virtual Event, USA},
  numpages = {2},
  pages = {441–442},
  publisher = {Association for Computing Machinery},
  series = {ICER 2021},
  title = {Elementary Students’ Debugging Behaviors in a Game-based Environment},
  url = {https://doi.org/10.1145/3446871.3469792},
  year = {2021}
}

@inproceedings{merged1019,
  abstract = {This systems short paper presents the design and implementation of an escape room game for practicing computational thinking (CT) skills in the primary school. The game, which can be packed into two small suitcases and set up anywhere, combines physical and virtual elements in order to engage learners into exploring the room. Aural elements with spoken tracks and background soundscape are combined with smart lighting to intensify the immersion. The game’s CT puzzles are modified from Bebras Challenge, and escaping the room requires solving all of them. This paper describes the game disposition and design, the room setup, design and implementation of computational thinking minigames, and the system architecture.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Kahila, Juho and Parkki, Tuomo and Gr\"{o}hn, Anssi and Karvinen, Atte and Telimaa, Elmeri and Riikonen, Pekka and Tiitta, Riku and Haantio, Pasi and Kein\"{a}nen, Anssi and Kerkk\"{a}nen, Tero and Jormanainen, Ilkka and Penttinen, Silja and Tedre, Matti},
  booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3428029.3428063},
  isbn = {9781450389211},
  keywords = {Computational thinking; K-12; escape room; game-based learning; primary school},
  location = {Koli, Finland},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '20},
  title = {Escape Room Game for CT Learning Activities in the Primary School},
  url = {https://doi.org/10.1145/3428029.3428063},
  year = {2020}
}

@inproceedings{merged1020,
  abstract = {The rapid rise of computational technologies has heightened the demand for proficient computer scientists. A strong foundation in Computer Science (CS) and Digital Education (German: Digitale Grundbildung DGB) has become crucial, even for young learners. Despite the growing importance of CS and DGB in Austria, a gap remains in comprehensive understanding among students and educators. This study aims to bridge this gap by making CS accessible to primary school students and teachers. The solution, COOL Lab, is an active learning center offering diverse STEAM (Science, Technology, Engineering, Arts, and Mathematics) programs. These programs facilitate cross-disciplinary education, supported by innovative CS technologies, nurturing computational thinking (CT) as a problem-solving tool, and enhancing digital skills. Focusing on COOL Lab Clubs, tailored for gifted primary school students, specifically the 'Girls* Only IT-Club' and 'Mini Club', this research first introduces these clubs and then presents insights from four club activities, along with methodologies enhancing CS and CT comprehension. Early results from a questionnaire involving 20 participants aged 9-10 were analyzed. At the outset, almost half of the participants, particularly girls, lacked exposure to CT and CS yet showed eagerness to learn. Initial findings of the club evaluations indicate a strong interest in STEM (Science, Technology, Engineering, and Mathematics) as well as CS and a positive response to the COOL Clubs.},
  address = {New York, NY, USA},
  author = {Schwinghammer, Michaela and Milisic, Daniela and Schmidthaler, Eva and Sabitzer, Barbara},
  booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
  doi = {10.1145/3629296.3629358},
  isbn = {9798400709111},
  keywords = {Computer science; STEAM; computational thinking; creativity; digital education; gifted education; primary education},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {384–390},
  publisher = {Association for Computing Machinery},
  series = {ICETC '23},
  title = {"The \"COOL Clubs\": Supporting gifted primary school students in STEAM"},
  url = {https://doi.org/10.1145/3629296.3629358},
  year = {2024}
}

@inproceedings{merged1021,
  abstract = {There is wide-spread agreement that K-12 students need opportunities to explore computer science (CS) concepts and computational thinking within a wide array of disciplines for advancing, broadening, and diversifying the participation in CS. Programs such as "Computer Science for All" were created by the US government to motivate and help students of all ages to engage with CS, which was described as the "new basic skill for economic opportunity and social mobility". However, what is less understood is how to prepare teachers to engage with CS concepts and computational thinking, expanding their specialized and pedagogical content knowledge on these concepts. This study explores this gap in the context of a graduate-level secondary math education methods course in a university environment. To reduce the cognitive load for the teacher candidates as well as their students, we utilize the secondary mathematics curriculum to explore CS concepts infused into mathematics, avoiding at the same time an increase to the teaching hours to the extent that it is detrimental to the existing K-12 curriculum. Our study uses hybrid block-text programming-based teaching modules specifically designed to expose the similarities and the differences between mathematics and CS. We utilize the concept of variable and operations around it to explore how the teacher candidates' conceptions and misconceptions about CS make the understanding of those concepts easy or challenging, and how that affects their ability to incorporate them into their teaching.},
  address = {New York, NY, USA},
  author = {Kalathas, Paris and Parham-Mocello, Jennifer and Elliot, Rebekah and Lockwood, Elise},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
  doi = {10.1145/3478431.3499405},
  isbn = {9781450390705},
  keywords = {computational thinking; computer science; integrated curriculum; interdisciplinary; k-12; math + cs; mathematics; preservice teachers; programming; secondary education; teacher candidates; teacher development; variables},
  location = {Providence, RI, USA},
  numpages = {7},
  pages = {689–695},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Exploring Math + CS in a Secondary Education Methods Course},
  url = {https://doi.org/10.1145/3478431.3499405},
  year = {2022}
}

@inproceedings{merged1022,
  abstract = {Computational thinking is nowadays considered an essential skill in the K-12 educational curriculum. Many tangible computational kits designed for early childhood are either too expensive to benefit a wide range of children or only provide predetermined challenges with limited creative content creation opportunities. In this paper, we investigated low-cost and expressive tangible interfaces that foster computational literacy. We present Draw2Code, a paper-based computational kit for young children to create an interactive AR animation. Children use Draw2Code to make their paper drawing alive as an animated virtual sprite and control it using hand gestures. It exposes children to basic programming concepts through playful and tangible interaction. Results from our initial evaluation with nine child-parent dyads indicate that children ages 5 to 12 successfully used Draw2Code and played with Draw2Code in 33 minutes on average while creating 2 to 5 diverse AR animations based on their ideas. Throughout the session, all children were engaged in computational thinking concepts and practices and learned drawing and gesture-based interactions.},
  address = {New York, NY, USA},
  author = {Im, Hyejin and Rogers, Chris},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3465189},
  isbn = {9781450384520},
  keywords = {Augmented Reality; Computational Thinking; K-12 Education; Tangible User Interfaces},
  location = {Athens, Greece},
  numpages = {6},
  pages = {427–432},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {Draw2Code: Low-Cost Tangible Programming for Creating AR Animations},
  url = {https://doi.org/10.1145/3459990.3465189},
  year = {2021}
}

@inproceedings{merged1023,
  abstract = {In this work, we explore the idea of designing a tool to augment the practice of closed-reading a literary text by employing end-user programming practices. The ultimate goal is to help young humanities students learn and appreciate computational thinking skills. The proposed approach is aligned with other methods of applying computer science techniques to explore literary texts (as in digital humanities) but with original goals and means. An initial design concept has been realised as a probe to prompt the discussion among humanities students and teachers. This short paper discusses the design ideas and the feedback from interviews and focus groups involving 25 participants (10 teachers in different humanities fields and 15 university students in humanities as prospective teachers and scholars).},
  address = {New York, NY, USA},
  articleno = {36},
  author = {Abdollahinami, Sevda and Ducceschi, Luca and Zancanaro, Massimo},
  booktitle = {Proceedings of the 2022 International Conference on Advanced Visual Interfaces},
  doi = {10.1145/3531073.3531128},
  isbn = {9781450397193},
  keywords = {Closed reading; Computational Thinking; Digital Humanities; End-User Development; Natural language processing},
  location = {Frascati, Rome, Italy},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {AVI '22},
  title = {End-user Development and Closed-Reading: an Initial Investigation},
  url = {https://doi.org/10.1145/3531073.3531128},
  year = {2022}
}

@inproceedings{merged1024,
  abstract = {This paper examines the application of Virtual Reality (VR) in com- puter science education through a review of 28 academic papers. The study investigates VR's effectiveness in teaching complex topics such as finite state machines, computational thinking, and algo- rithms. The authors highlight VR's advantages, including immersive learning experiences and intuitive visualization of abstract concepts, while also noting challenges such as high costs and limited acces- sibility. The analysis reveals critical research gaps, including the need to evaluate VR's cost-effectiveness, scalability, integration with AI for adaptive learning, and support for diverse learners. To address these gaps, the paper proposes research questions for future investigations. While underscoring VR's potential to revolutionize computer science education, the study emphasizes the need for further research to optimize its implementation and effectiveness.},
  address = {New York, NY, USA},
  author = {Zabir, Zubair and Tisha, Sirazum Munira},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705267},
  isbn = {9798400705328},
  keywords = {artificial intelligence; computer science education; immersive learning; virtual reality},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1673–1674},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {The Role of Virtual Reality in Enhancing Computer Science Education},
  url = {https://doi.org/10.1145/3641555.3705267},
  year = {2025}
}

@inproceedings{merged1025,
  abstract = {In this paper, we describe a new automated tool to analyze how students create their projects on Scratch 3.0, with the goal of understanding learning trajectories in a way that considers students’ programming processes and practices, moving beyond the analysis of computational thinking concepts as evidence of learning. Drawing on a combination of qualitative video analysis and temporal learning analytics, we also present preliminary data from a pilot study that illustrates some possibilities afforded by this type of analytical tool. We expect that our tool can help researchers to better understand learning in the context of data visualization activities with block-based programming languages by shedding light on processes that are usually invisible and, thus, better support students in their diverse learning pathways.},
  address = {New York, NY, USA},
  author = {Fernandez, Cassia and Freitas, Jo\~{a}o Adriano and Lopes, Roseli de Deus and Blikstein, Paulo},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3529742},
  isbn = {9781450391979},
  keywords = {Scratch; computational thinking; data science; learning analytics; temporal analysis},
  location = {Braga, Portugal},
  numpages = {8},
  pages = {253–260},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {Using video analysis and learning analytics to understand programming trajectories in data science activities with Scratch},
  url = {https://doi.org/10.1145/3501712.3529742},
  year = {2022}
}

@inproceedings{merged1026,
  abstract = {Computer Science has been introduced as a new subject in the compulsory school curriculum in Switzerland. Research on educational robotics has highlighted potentials of using robots as a hands-on tool to foster computational thinking skills. However, to date these kind of activities are not carried out systematically in schools. To support teachers, a teacher community for educational robotics and computer science education ”Roteco” has been established. Teachers can register for free to a digital platform to find classroom-ready activities, news, articles, and information about training and workshops in their region. Roteco further organizes webinars and events to build the community. Within two years, more than 1,400 teachers have joined the community. In this abstract, we present Roteco, our experiences in establishing the community, platform analytics data as well as a short summary of results from two surveys conducted in 2020 with 87 and in 2021 with 48 teachers. Detailed results can be found in the corresponding journal article [11].},
  address = {New York, NY, USA},
  articleno = {18},
  author = {Assaf, Dorit and Reyes Mury, Sophia and Negrini, Lucio and Skweres, Melissa},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556808},
  isbn = {9781450398534},
  keywords = {Educational Robotics; community; computational thinking},
  location = {Morschach, Switzerland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {”Roteco” - a Swiss teacher community for educational robotics},
  url = {https://doi.org/10.1145/3556787.3556808},
  year = {2022}
}

@inproceedings{merged1027,
  abstract = {Abstraction, which is considered the most important computational thinking skill, can be learned from programming or computational thinking learning activities. We implemented a 8-week long course to teach high school students statistics and programming. A pre- and post-test was designed to measure students’ understandings of computing and statistics. This work reports some interesting observations we made on students’ misconception of abstraction while examining students’ responses to test questions.},
  address = {New York, NY, USA},
  author = {Du, Hanxiang and Xing, Wanli and Zhang, Yuanlin},
  booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 2},
  doi = {10.1145/3501709.3544276},
  isbn = {9781450391955},
  keywords = {Abstraction; misconception},
  location = {Lugano and Virtual Event, Switzerland},
  numpages = {2},
  pages = {28–29},
  publisher = {Association for Computing Machinery},
  series = {ICER '22},
  title = {Misconception of Abstraction: When to Use an Example and When to Use a Variable?},
  url = {https://doi.org/10.1145/3501709.3544276},
  year = {2022}
}

@inproceedings{merged1028,
  abstract = {The relevance of computational thinking (CT) in early education is globally recognized, with Uruguay already incorporating it into kindergarten curricula. However, there is a notable disconnect: existing CT tools, primarily devised for small home groups, fall short in larger classroom settings. To bridge this gap, we developed Robotito VPL – an innovative, free, open-source application tailored to teachers with no programming background. Robotito VPL enables teachers to guide young children in CT learning with Robotito, a robot that engages with its surroundings, supporting a playful, hands-on learning experience for children. This paper presents the results of two usability evaluations with seven teachers. We then translated the outcomes of these evaluations into valuable lessons learned and specific design requirements.},
  address = {New York, NY, USA},
  author = {Abelda\~{n}o, Romina and Bakala, Ewelina and Hitta, Santiago and Pires, Ana Cristina},
  booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3628516.3659418},
  isbn = {9798400704420},
  keywords = {Educational robotics; Educators; Mobile Application; Usability},
  location = {Delft, Netherlands},
  numpages = {5},
  pages = {919–923},
  publisher = {Association for Computing Machinery},
  series = {IDC '24},
  title = {"This is like a toy, it already got me": Results of Two Usability Studies of Robotito VPL App with Teachers: Robotito VPL Usability Evaluations},
  url = {https://doi.org/10.1145/3628516.3659418},
  year = {2024}
}

@inproceedings{merged1029,
  abstract = {The introductory course in basics of programming aims to teach second-year political science students the basic skills of applied programming that are crucial for transferring their research ideas into computational models. As one of students' first interactions with computer science concepts, the course assists in overcoming their barriers in programming, and introduces them to ways of applying computational thinking. In addition, the course material can serve as a launching pad for further development in the areas of modelling social problems, its simulations and quantitative analysis. This paper presents course design considerations, shares findings in assignment design, and raises questions to consider when designing CS0 and CS1 courses for social science students.},
  address = {New York, NY, USA},
  author = {Popov, Aleksandr},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576321},
  isbn = {9781450394338},
  keywords = {computational social science; teaching computational thinking},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1376},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Motivation and Practices of Teaching Computational Social Science to Undergraduate Political Science Students},
  url = {https://doi.org/10.1145/3545947.3576321},
  year = {2023}
}

@inproceedings{merged1030,
  abstract = {The emergence of Generative Artificial Intelligence (GenAI) tools broadly, and Large Language Models (LLMs) specifically, are equipping introductory programming instructors with a whole new class of pedagogical tools. While GenAI certainly poses threats to time-honored instructional techniques, it also provides opportunities for new forms of instructional support. In this work, we introduce our strategy for configuring an LLM to serve as a ''rubber duck debugging'' coding assistant to help novice programmers when they encounter difficulties in programming assignments. The key contribution of this work is not in the idea of using LLMs for debugging itself (which has already been demonstrated elsewhere, e.g., [3]) but to demonstrate the ease, flexibility, and pedagogical potential of the strategy. In particular, through carefully crafted prompts and easily accessible platforms, rubber duck LLMs can assist learners with specific questions while also situating those questions alongside larger computer science concepts and computational thinking practices. This work contributes an easily replicated and model-agnostic instructional strategy that productively and responsibly leverages the power of LLMs to assist novice programmers in developing foundational programming skills.},
  address = {New York, NY, USA},
  author = {Gonzalez, Elias and Chan, Joel and Weintrop, David},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705235},
  isbn = {9798400705328},
  keywords = {computer science education; generative ai; introductory programming; large language models},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1463–1464},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Quack! Configuring Large Language Models to Serve as Rubber Duck Coding Assistants},
  url = {https://doi.org/10.1145/3641555.3705235},
  year = {2025}
}

@inproceedings{merged1031,
  abstract = {In Computer Science (CS), modeling with diagrams is a well-known practice to visualize complex software systems or database structures. However, modeling with e.g., entity-relationship diagrams or UML (Unified Modeling Language) is also helpful in other disciplines. In this research, CS models are used as a teaching and learning tool in foreign language acquisition. The field of computer science offers a variety of models that can visualize states, as well as processes and, are therefore very suitable for the different areas of language teaching (e.g., reading, writing, grammar-, or vocabulary acquisition). With CS modeling as a teaching and learning strategy, two main objectives are addressed: enhancing learning and retention and fostering computational thinking skills. This paper presents best practice examples on how to meet these two objectives as well as the results of a crossover study, where we investigated whether vocabulary acquisition is facilitated when it is thematically preorganized in class diagrams. The results illustrate that pupils who studied with the class diagram strategy had significantly higher recall performance than pupils who studied with the list of words. A qualitative analysis of the participants’ feedback after the intervention revealed decisive criteria for their preferences regarding the learning format.},
  address = {New York, NY, USA},
  author = {Rottenhofer, Marina and Leitner, Sandra and Emara, Mona and Sabitzer, Barbara and Rankin, Thomas},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572576},
  isbn = {9781450397766},
  keywords = {computational thinking; computer science-supported learning; digital education; foreign language learning; visualization},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {163–169},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {Vocabulary Acquisition through Computer Science Modeling: A Comparative Study on Visual and Textual Vocabulary Instruction},
  url = {https://doi.org/10.1145/3572549.3572576},
  year = {2023}
}

@article{merged1032,
  abstract = {Objectives. Computer Science (CS) education has become increasingly prevalent in elementary schools because of multiple rationales, such as the importance of computational literacy and the growing demand for CS-related workforce preparation. As elementary CS standards continue to be adopted by many states, more examples and voices from the field may help educators understand what effective computational thinking (CT)/CS integration looks like in practice. Method. We employed a descriptive qualitative approach to study eight award-winning K-8 CS teachers and aimed to answer three research questions: (1) What were elementary CS teachers’ rationales for CT/CS integration? (2) How do elementary CS teachers integrate CT/CS into their classroom practices? (3) What are the needs of CS teachers for meaningful CT/CS integration in elementary schools? Data were collected through interviews, a questionnaire, and artifacts and analyzed using thematic analysis. Findings. Our findings of elementary CS teachers’ rationales for CT/CS integration encompassed its essential nature as a literacy skill, its potential to promote equity in education, and its alignment with standards across various disciplines. To support CT/CS integration at the elementary level, CS teachers described important aspects with examples from their instructional practices: (a) Real-world applications; (b) hands-on activities; (c) strategies to scaffold and guide student learning; (d) collaboration with classroom teachers; and (e) support from professional development (PD). Conclusion. The study results shared CS teachers’ voices from practice and shed light on the urgent need for more support and PD opportunities for both homeroom teachers and CS teachers in elementary schools, as well as the crucial need for multiple levels of support within K-12 school systems. Continuous efforts in creating systematic and sustainable PD plans and supporting collaborative professional communities for teachers within the instructional context are a must to help prepare our elementary students with the essential CS knowledge and skills they need to thrive in this technology-rich society.},
  address = {New York, NY, USA},
  articleno = {43},
  author = {Liao, Yin-Chan and Kim, Jiyoung and Ottenbreit-Leftwich, Anne T. and Karlin, Michael and Guo, Meize},
  doi = {10.1145/3688854},
  issue_date = {December 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; Computer science education; Elementary education; Integrated computing},
  month = {October},
  number = {4},
  numpages = {26},
  publisher = {Association for Computing Machinery},
  title = {Voices of Elementary Computer Science Teachers: Computer Science Integration Rationales and Practices},
  url = {https://doi.org/10.1145/3688854},
  volume = {24},
  year = {2024}
}

@inproceedings{merged1033,
  abstract = {The aim of this poster is to present and discuss a curricular methodology to introduce computability topics to social sciences and economics students during the study of their CS subjects in the first courses. These TCS topics give rise to algorithmic impossibility and computational undecidability results which serve to increase students' motivation in their CSE in relation to their university studies. In addition, it allows them to acquire paradoxical and computational thinking skills, with which to deepen and raise computability questions in later courses. To support the impact of the new methodology with evidence, we have analyzed preliminary student results.},
  address = {New York, NY, USA},
  author = {del Vado V\'{\i}rseda, Rafael},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635481},
  isbn = {9798400704246},
  keywords = {computational economics; impossibility theorems; theoretical computer science; uncomputability; undecidability problems},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1620–1621},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Introducing Theoretical Computer Science Education in Social Sciences and Economics Degrees},
  url = {https://doi.org/10.1145/3626253.3635481},
  year = {2024}
}

@article{merged1034,
  abstract = {Isaac Alpizar-Chacon is an assistant professor in the Software Technology for Learning and Teaching group at the Department of Information and Computing Sciences, Utrecht University. In addition to his primary role, he is also an associate professor at the Instituto Tecnol\'{o}gico de Costa Rica. His research interests focus on the impact of GenAI tools in computing education, the integration of these tools into the classroom, the teaching and learning of computational thinking skills, and knowledge extraction. Dr. Alpizar-Chacon holds a MSc degree in Computer Science from Saarland University (Saarbr\"{u}cken, Germany) and a PhD degree in Information and Computing Sciences from Utrecht University (Utrecht, Netherlands).Homepage: https://isaacalpizar.info/},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Alpizar-Chacon, Isaac},
  doi = {10.1145/3690177.3690180},
  issn = {1931-1745},
  issue_date = {Summer 2024},
  journal = {SIGWEB Newsl.},
  month = {October},
  number = {Summer},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  title = {Extraction of Knowledge Models from Textbooks},
  url = {https://doi.org/10.1145/3690177.3690180},
  volume = {2024},
  year = {2024}
}

@inproceedings{merged1035,
  abstract = {The implementation of computational thinking concepts in primary school curricula usually includes programming activities. As primary school teachers often lack subject knowledge, they may struggle to help students during these programming activities. Additional support can be provided by automated program analysis, for example in terms of hints on conceptual knowledge related to bad coding patterns observed, or procedural hints on how to solve the task at hand. However, care has to be taken since these hints need to balance (1) helping students to perform a specific task successfully, while nevertheless (2) ensuring a learning effect beyond the specific task. To understand the effects of different types of hints we therefore conducted a study with 36 children aged 7–12 in 10 programming courses. After being introduced to basic programming structures in three units, the children were tasked to debug six Scratch programs using different types of hints, where we observed that procedural hints have the strongest impact on performance. In order to examine an impact on the transfer of learned knowledge, we observed the children’s difficulties during the successive fifth unit, in which they created their own projects. The results of the fifth unit show that having received a procedural hint on a specific pattern during the fourth unit leads to slightly fewer bad related code patterns but also to slightly fewer good code patterns. Considering these results together with the subjective perceptions of the children, we can derive insights into how to best support performance and learning using (automated) feedback.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Greifenstein, Luisa and Brune, Markus and Fuchs, Tobias and Heuer, Ute and Fraser, Gordon},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3605498},
  isbn = {9798400708510},
  keywords = {analysis tools; block-based programming feedback; bug patterns; computational thinking; elementary school},
  location = {Cambridge, United Kingdom},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Impact of Hint Content on Performance and Learning: A Study with Primary School Children in a Scratch Course},
  url = {https://doi.org/10.1145/3605468.3605498},
  year = {2023}
}

@inproceedings{merged1036,
  abstract = {Integrating computational thinking (CT) into the learning of school subjects is receiving increased attention. Developing students’ CT skills may not only advance their digital literacy but it may deepen subject specific learning as well. It is therefore interesting to investigate the learning of CT from a multidisciplinary perspective. This study describes the design of a CT integrated lesson for economics in which computer models in spreadsheets are used to simulate monetary policy. The lesson is structured according to the Use-Modify-Create strategy. The aim of this exploratory study is to evaluate the learning outcomes of this CT integrated lesson and students’ attitudes towards such a lesson. For this purpose, students’ exit tickets, feedback forms, supervisor observations and interviews with students have been analyzed. This qualitative analysis revealed that students perceived the lesson as difficult, especially during the Modify and Create phases. In addition, the results suggest that all phases are dependent on taking enough time to finish the Use phase to get familiar with the computational steps. Several suggestions have been given to improve the lesson, for instance, to use a simpler topic of economics. Furthermore, the analysis of students’ attitudes revealed that connections to CT could be made more explicit rather than implicitly embedded in the instructional strategy.},
  address = {New York, NY, USA},
  author = {De Bruin, Lucas and Nijenhuis-Voogt, Jacqueline and Yeni, Sabiha},
  booktitle = {Proceedings of the 11th Computer Science Education Research Conference},
  doi = {10.1145/3569173.3569179},
  isbn = {9781450397476},
  keywords = {CT education; Use-Modify-Create; computational thinking; computer models; economics; spreadsheets},
  location = {Leiden, Netherlands},
  numpages = {8},
  pages = {46–53},
  publisher = {Association for Computing Machinery},
  series = {CSERC '22},
  title = {Integrating CT into economics: Simulating monetary policy through computer models in spreadsheets by using a Use-Modify-Create strategy},
  url = {https://doi.org/10.1145/3569173.3569179},
  year = {2023}
}

@article{merged1037,
  abstract = {Like digital technologies themselves, programming education is embedded in the colonial matrix of power, and access to programming knowledge demands immersion in the epistemologies of the Global North. While there is a growing body of work exploring ways to decolonise programming education, far more needs to be done. Current research focuses on the language of instruction and contextual curricula; outward-facing engagements with decolonisation. However, to move towards digital-decoloniality involves scrutinising how programming knowledge is recontextualised within curricula. Part of the project should be equipping both educators and students with the tools to recontextualise programming itself. To dismantle the colonial logic embedded in programming education, attention must be given to the knowledge formation of the discipline to identify moments of disruption. One such moment is the difficulty students face when recontextualising their mental models of computing, from programming skills to programming concepts. This occurs at the moment of reading, tracing and writing code. Programming requires one to refocus computational thinking and engage with a specific semiotic system, translating the authors’ intention into an executable computational process. Disrupting this moment using the strategies of critical literacies opens computer programming and its resulting code to critical examination, allowing an inward-facing decolonial engagement with the discipline.},
  address = {New York, NY, USA},
  articleno = {54},
  author = {Geyser, Hanli},
  doi = {10.1145/3702332},
  issue_date = {December 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Introductory programming education; critical literacy; decoloniality; digital literacy; digital-colonialism; language},
  month = {December},
  number = {4},
  numpages = {30},
  publisher = {Association for Computing Machinery},
  title = {Decoloniality, Digital-coloniality and Computer Programming Education},
  url = {https://doi.org/10.1145/3702332},
  volume = {24},
  year = {2024}
}

@inproceedings{merged1038,
  abstract = {Motivated by the essential role of music in children's lives, the potential of sound as sensory modality, and the importance of teaching Computational Thinking, there is great pedagogical potential in the integration of musical and computational thinking into "Computational Music Thinking". In this paper we report a pilot study exploring research and design approaches in creating learning environments and tools, which stimulate the interest of children and adolescents for both computer science and music in a sustainable way in the context of creative, self-guided activities. For the purposes of the study, two online tools, AgentCubes online, a 3D game design environment, and Ludosonica, an interactive music composition and performance system, were employed in a series of workshops designed for primary and secondary school children. Results from the study generally confirm the pedagogical potential of Computational Music Thinking and point toward promising future research directions.},
  address = {New York, NY, USA},
  articleno = {21},
  author = {Hug, Daniel and Petralito, Serge and Hauser, Sarah and Lamprou, Anna and Repenning, Alexander and Bertschinger, Didier and St\"{u}ber, Nadine and Cslovjecsek, Markus},
  booktitle = {Proceedings of the 12th International Audio Mostly Conference on Augmented and Participatory Sound and Music Experiences},
  doi = {10.1145/3123514.3123515},
  isbn = {9781450353731},
  keywords = {Computational thinking; STEAM education; music education},
  location = {London, United Kingdom},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {AM '17},
  title = {Exploring Computational Music Thinking in a Workshop Setting with Primary and Secondary School Children},
  url = {https://doi.org/10.1145/3123514.3123515},
  year = {2017}
}

@article{merged1039,
  abstract = {Developing student interest is critical to supporting student learning in computer science. Research indicates that student interest is a key predictor of persistence and achievement. While there is a growing body of work on developing computing identities for diverse students, little research focuses on early exposure to develop multilingual students’ interest in computing. These students represent one of the fastest growing populations in the US, yet they are dramatically underrepresented in computer science education. This study examines identity development of upper elementary multilingual students as they engage in a year-long computational thinking curriculum, and follows their engagement across multiple settings (i.e., school, club, home, community). Findings from pre- and post-surveys of identity showed significant differences favoring students’ experiences with computer science, their perceptions of computer science, their perceptions of themselves as computer scientists, and their family support for computer science. Findings from follow-up interviews and prior research suggest that tailored instruction provides opportunities for connections to out-of-school learning environments with friends and family that may shift students’ perceptions of their abilities to pursue computer science and persist when encountering challenges.},
  address = {New York, NY, USA},
  articleno = {29},
  author = {Jacob, Sharin Rawhiya and Montoya, Jonathan and Nguyen, Ha and Richardson, Debra and Warschauer, Mark},
  doi = {10.1145/3500918},
  issue_date = {September 2022},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computer science; English learner; computational thinking; identity; multilingual},
  month = {September},
  number = {3},
  numpages = {33},
  publisher = {Association for Computing Machinery},
  title = {Examining the What, Why, and How of Multilingual Student Identity Development in Computer Science},
  url = {https://doi.org/10.1145/3500918},
  volume = {22},
  year = {2022}
}

@inproceedings{merged1040,
  abstract = {Logic and formal reasoning are essential skills for programming and computer science. Still, they are challenging to teach due to their abstract nature. This paper explores how Game-Based Learning (GBL) can simplify logic concepts, making them interactive and engaging for young learners. We introduce LogiCraft, an educational framework for co-designing board games that teach propositional logic. The framework includes three illustrative tile-based board games: ¬ SCR∧ BL, Tautoblocks, and Deducto. These games teach propositional logic by merging computational thinking with hands-on gameplay. By integrating syntax and semantics in new ways, ¬ SCR∧ BL focuses on logic formulas construction and truth tables visualization, Tautoblocks introduces more advanced concepts of negation, tautology, and contradiction, and Deducto highlights translation and model-based reasoning. Playtesting sessions with students and teachers suggest that our games can enhance logic skills and promote cooperative learning. Our initial classroom results show potential for broader applications in game-based learning.},
  address = {New York, NY, USA},
  articleno = {73},
  author = {Dobler, Tamara and Galeotti, Lorenzo and van Rozen, Riemer},
  booktitle = {Proceedings of the 20th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3723498.3723848},
  isbn = {9798400718564},
  keywords = {board games; education; game-based learning; propositional logic},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {FDG '25},
  title = {LogiCraft: A Game Modification Framework for Learning Propositional Logic},
  url = {https://doi.org/10.1145/3723498.3723848},
  year = {2025}
}

@inproceedings{merged1041,
  abstract = {Computing education is becoming increasingly important in high schools. Computational modelling is important in computing and many sciences, but there is a lack of research on how teachers should teach computational modelling in high schools. This study was a design-based research study with 86 teachers teaching 12 different subjects at 44 Danish high schools. The study aimed to develop a template to help design and classify didactical questions on computational modelling. Teachers participated in one of two courses on computational modelling. The intervention group (Prog+) included an introduction to agent-based modelling and programming in NetLogo. The comparison group (Prog-) included a general introduction to agent-based modelling. A template consisting of 16 modelling parameters was developed with teachers. Results showed that the template was helpful for teachers to design didactical questions and for the research team to classify the taxonomical levels of these questions. A total of 51 teaching activities were developed by teachers and didactical questions were derived. The strength of this design based research study was that it included a control group and inspired teachers to design and evaluate didactical questions in computational modelling in a wide range of high school subjects. Future studies are needed to evaluate the validity of the template.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Musaeus, Line Have and Caspersen, Michael E. and Musaeus, Peter},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609754},
  isbn = {9798400708510},
  keywords = {Computational modelling; Computational thinking; Design-based research; High school education; K-12 education; Professional development},
  location = {Cambridge, United Kingdom},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {A Template for Teaching Computational Modelling in High School},
  url = {https://doi.org/10.1145/3605468.3609754},
  year = {2023}
}

@inproceedings{merged1042,
  abstract = {Recent years have seen increasing awareness of the need to engage young learners in computational thinking (CT). Integrating digital storytelling, where students create short narratives, and CT offers significant potential for promoting interdisciplinary learning for students; however, it is critical to provide both teachers and students with automated support. A promising approach for enabling support is to leverage advances in Large Language Models (LLMs), which have demonstrated considerable potential for assessing both programming and natural language artifacts. In this work, we investigate the capabilities of LLMs to automatically assess student-created block-based programs developed using a narrative-centered learning environment that engages upper elementary students (ages 9 to 11) in learning CT and physical science through the creation of interactive science narratives. Using the narrative programs created by 28 students, we explore the efficacy of LLMs to assess the programs across two dimensions.},
  address = {New York, NY, USA},
  author = {Gupta, Anisha and Monahan, Robert and Vandenberg, Jessica and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Minogue, James and Oliver, Kevin and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Mott, Bradford},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691089},
  isbn = {9798400706042},
  keywords = {k-12 education; natural language processing},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {318–319},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Leveraging Large Language Models for Automated Assessment of Elementary Students' Block-Based Narrative Programs},
  url = {https://doi.org/10.1145/3649409.3691089},
  year = {2024}
}

@inproceedings{merged1043,
  abstract = {Artificial Intelligence (AI) is becoming a common topic within the computing K-12 curricula worldwide. While much of the focus of research is on the use of Generative AI in and for education, AI as a core subject area is still gaining popularity, with much of this research focusing on content and tools that effectively support the teaching of AI. However, as we grow as a field, there is a need currently unmet to provide foundations (in the form of a block model as there exists for programming) to allow researchers to build strong pedagogies and methodologies from, and even a base to design activities and content. Compounding this, as ethics and its relationship to AI in the K-12 classroom grows stronger, there is a further need to provide scaffolding to educators and researchers not only on traditional AI concepts, but also on how they link with ethical knowledge, skills and dispositions. In this paper, the Human Centered Artificial Intelligence (HCAI) Block Model is developed and introduced. This is a competence-based model to guide effective teaching and learning of Human Centered Artificial Intelligence, as well as research in the K-12 space. The HCAI Block model’s foundation is developed/adapted from the programming Block model and has been adapted and developed using two lenses. The first was through the data science lens through interaction with Computational Thinking 2.0 and competency-based learning. The second lens was through a human-centred lens. The outcome was a ground-up K-12 model where traditional and technical AI concepts have been developed from the start, integrating ethical considerations and human-centred approaches.},
  address = {New York, NY, USA},
  author = {Conway, Brian and Nolan, Keith and Quille, Keith},
  booktitle = {Proceedings of the 2024 Conference on Human Centred Artificial Intelligence - Education and Practice},
  doi = {10.1145/3701268.3701273},
  isbn = {9798400711596},
  keywords = {Block Model; Computational Thinking 2.0; Computing Education; Ethics; Human-Centered AI; Machine Learning},
  numpages = {7},
  pages = {22–28},
  publisher = {Association for Computing Machinery},
  series = {HCAIep '24},
  title = {HCAI Block Model: A competence model for Human Centred Artificial Intelligence at K-12},
  url = {https://doi.org/10.1145/3701268.3701273},
  year = {2024}
}

@inproceedings{merged1044,
  abstract = {This lightning talk describes our current efforts to isolate and identify potential threshold concepts and threshold capabilities which are experienced by intermediate computer science undergraduate students. We are utilizing the theoretical framework as described by Meyer, Land, Bowden, and Baillie. Two of the key identifiable characteristics surrounding a threshold concept are (1) the transformation one undergoes as a result of incorporating the concept into their knowledge and (2) the state of uncertainty (liminality) experienced as the learner develops this understanding. As a result of this transformation and the resultant traversal of a liminal state, elements of an identity are often developed. For the computer science undergraduate, we hypothesize that advanced computational thinking skills are developed along with these transformations leading to the development of a computer scientist identity. Through identification of the threshold concepts/capabilities experienced by intermediate students the potential corollary concepts behind computational thinking may be uncovered as well. The overall project intends to integrate elements of threshold concepts, liminality, and transformative learning to produce a framework through which computational thinking can be probed and students' progression can be better assessed and supported. These efforts are only beginning - curious faculty and students are invited to attend our presentation and consider potential collaborative participation in our endeavors.},
  address = {New York, NY, USA},
  author = {McSkimming, Brian M. and Decker, Adrienne},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499233},
  isbn = {9781450390712},
  keywords = {computational thinking; intermediate students; learning theory; threshold concepts},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1025},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Exploring Threshold Concepts for Intermediate Students},
  url = {https://doi.org/10.1145/3478432.3499233},
  year = {2022}
}

@inproceedings{merged1045,
  abstract = {Learning trajectories are paths that students may follow in order to achieve their learning goals. Although the literature has addressed the subject, little has been done in the way of exploring how to visualize learning trajectories. In this paper, we present three forms of interactive learning trajectories visualizations linked to the context of computational thinking. As the interactions on visualizations involved different aspects, our proposal comprises three layers: the data representation, the reactions to the navigation and data exploration where more details of the data can be seen. Due to visualizations being tightly related to the context from which the data comes, we analyzed the data types available in Code.org, a well-known platform commonly used to teach computational thinking. To assess the three visualizations, we carried out usability and user experience evaluation with 23 Brazilian elementary schools teachers. The results revealed that the three visualizations achieved an average of 72% of overall understanding by the audience. Besides, our findings showed the visualizations were well accepted among the participants. We also found out that the user experience reported by the participants is in some way associated with the level of understanding of the visualizations.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {Vieira, Jos\'{e} M. F. and Zaina, Luciana A. M.},
  booktitle = {Proceedings of the 19th Brazilian Symposium on Human Factors in Computing Systems},
  doi = {10.1145/3424953.3426629},
  isbn = {9781450381727},
  keywords = {computational thinking; learning trajectories; visualizations},
  location = {Diamantina, Brazil},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {IHC '20},
  title = {Representation, navigation and exploration: a three layered approach on learning trajectories},
  url = {https://doi.org/10.1145/3424953.3426629},
  year = {2020}
}

@inproceedings{merged1046,
  abstract = {In this paper, we present a new visual block-based programming system designed for children to process, analyze, and visualize data. We introduce the system and describe how it was used during a series of 7 workshops with 27 children. During the workshops, children played the role of investigators and followed a storyline as part of the system to conduct data analyses to help the story’s protagonist locate a missing family member. We present our findings as a framework of computational data literacy that builds on the dimensions of Computational Thinking proposed by Brennan and Resnick [8], with a focus on aspects that are specific to using programming for data processing, analysis, and visualization. We conclude with a series of recommendations for future designers of systems to support the development of computational data literacy.},
  address = {New York, NY, USA},
  author = {Cheng, Ruijia and Dangol, Aayushi and Ello, Frances Marie Tabio and Wang, Lingyu and Dasgupta, Sayamindu},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589364},
  isbn = {9798400701313},
  keywords = {block-based programming; data literacy; visualization},
  location = {Chicago, IL, USA},
  numpages = {12},
  pages = {100–111},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Concepts, practices, and perspectives for developing computational data literacy: Insights from workshops with a new data programming system},
  url = {https://doi.org/10.1145/3585088.3589364},
  year = {2023}
}

@article{merged1047,
  abstract = {This paper shares the analysis of our quantitative findings regarding the impact of a virtual informal collaborative experiential learning activity on diverse students' computational thinking, critical thinking, and self-efficacy in STEM activities. Designed as part of an ongoing National Science Foundation sponsored project to provide underrepresented minority (URM) students from underserved economic backgrounds with real-world career preparation and technical education across disciplines through collaborative project activities using cutting-edge technologies, the Hackathon for Social Good was implemented during the COVID-19 shutdowns in a New York City community college in lower Manhattan. Students worked in teams to innovate practical solutions to global problems with mentor support from both academia and the tech industry. This intervention drew 36 students from Computer Science, Business, and Sociology classes, who worked with volunteers and alumni during a full-day event in the Fall of 2021, using AI and data science to design culturally sensitive data-driven solutions for real-world problems. The tracks covered the following topics: Zero Hunger, Clean Water, and Sanitation, Green Consumption, Racial Justice, Quality Education, Good Health, and Well Being. The two main objectives of this project are as follows: (1) Design a remote interdisciplinary one-day experiential collaborative learning environment to engage URM teams of students from a community college in applying computational thinking to develop solutions for social good. (2) Conduct research on our intervention to study its effect on students' self-efficacy, as well as their knowledge of, and comfort with, computational thinking, critical thinking, problem-solving, and STEM. The evidence gathered from qualitative and quantitative data indicates that using these mechanisms to infuse CT into student learning across disciplines has several positive outcomes. Students reported increased leadership skills, comfort with teamwork, problem-solving, and critical thinking. A quantitative study specifically showed a positive impact on student confidence in their ability to do CT and improved their sense of efficacy in impacting the world outside of the hackathon.},
  address = {Evansville, IN, USA},
  author = {Azhar, Mohammad Q. and Haynes, Ada and Day, Marisa and Wissinger, Elizabeth},
  issn = {1937-4771},
  issue_date = {April 2023},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {6},
  numpages = {13},
  pages = {72–84},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Implementation and Evaluation of a Virtual Hackathon in an Urban HSI Community College during COVID-19},
  volume = {38},
  year = {2023}
}

@inproceedings{merged1048,
  abstract = {Participation in computer science (CS) education is growing across the K-12 spectrum. This enthusiasm for CS is driven, in part, by the belief that through CS instruction, students will learn computational thinking (CT) skills, which can also be applied to domains outside CS. We add to this literature by examining whether or not there is a relationship between receiving CS instruction and students' academic performance in non-CS subject areas. Using a fixed-effects regression methodology with course-taking records from New York City, we examine the association between CS instruction and course grades for high school students. We find small positive associations between CS instruction and end-of-year grades in English, Math, Science, and Social Studies.},
  address = {New York, NY, USA},
  author = {Crasto, Ethan and Mirakhur, Zitsi},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439578},
  isbn = {9781450380621},
  keywords = {computational thinking; computing education; k-12 course enrollment; student success},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1333},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Computer Science Instruction and Academic Outcomes in Other Subjects},
  url = {https://doi.org/10.1145/3408877.3439578},
  year = {2021}
}

@inproceedings{merged1049,
  abstract = {The lack of gender diversity in the computer science (CS) field and workforce is a well-documented challenge that many, but not all, countries face. Such a challenge may tie to socio-cultural issues that have impacted K-12 CS education, eventually creating a gender gap in CS performance and attitudes. The current study compared American and Indonesian middle school students' computational thinking (CT) skills and CS attitudes. Concurrently, this study also examined whether the items in the instruments we used exhibit country, gender, or prior CS experience measurement biases. A total of 592 American n = 242 and Indonesian n = 350 middle school students took a CT assessment and CS attitudes scale. Differential item functioning (DIF) was used to detect biased items, and a two-way ANOVA was utilized to examine the interaction effects of country and gender in the two constructs. The results showed some items were flagged as having country-specific DIF. The results also indicated that the American students had higher CT scores than Indonesian students. However, Indonesian students obtained higher CS attitudes scores compared to American students. Further results showed a significant gender difference in CS attitudes in the American samples; however, such a significant difference was not found in the Indonesian sample. These findings underscore the importance of a country's socio-cultural context in influencing gender diversity in the CS field.},
  address = {New York, NY, USA},
  author = {Rachmatullah, Arif and Vandenberg, Jessica and Wiebe, Eric},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524790},
  isbn = {9781450392013},
  keywords = {computational thinking; cs attitudes; gender; international study},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {179–185},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Toward More Generalizable CS and CT Instruments: Examining the Interaction of Country and Gender at the Middle Grades Level},
  url = {https://doi.org/10.1145/3502718.3524790},
  year = {2022}
}

@article{merged1050,
  abstract = {Making Computational Thinking relevant to schools.},
  address = {New York, NY, USA},
  author = {Repenning, Alexander and Basawapatna, Ashok},
  doi = {10.1145/3486642},
  issn = {0001-0782},
  issue_date = {November 2021},
  journal = {Commun. ACM},
  month = {October},
  number = {11},
  numpages = {4},
  pages = {30–33},
  publisher = {Association for Computing Machinery},
  title = {Explicative programming},
  url = {https://doi.org/10.1145/3486642},
  volume = {64},
  year = {2021}
}

@inproceedings{merged1051,
  abstract = {This paper describes an educational tool developed to teach coding and computational thinking to children. We designed and implemented an adaptive, interactive learning game application (mobile and web) called "Pixasso". In this application, children will write a simple program to color the 'pixels' of an image. Through the game application, they will learn programming commands, sequencing and debugging. This educational application was built using prevailing research on child centered design knowledge regarding child user interface and experience and aims to help scale initiatives dedicated towards introducing children to computer science at an early age.},
  address = {New York, NY, USA},
  author = {Nandan, Vrinda and Spittlemeister, Andrew and Brubacher, Federico},
  booktitle = {Proceedings of the Seventh ACM Conference on Learning @ Scale},
  doi = {10.1145/3386527.3406747},
  isbn = {9781450379519},
  keywords = {child centered design; coding; computational thinking; educational technology},
  location = {Virtual Event, USA},
  numpages = {4},
  pages = {361–364},
  publisher = {Association for Computing Machinery},
  series = {L@S '20},
  title = {Pixasso: A Development Stage-Based Learning Application for Children},
  url = {https://doi.org/10.1145/3386527.3406747},
  year = {2020}
}

@inproceedings{merged1052,
  abstract = {Digital society demands very qualified professionals ready to this environment challenges. This makes necessary to foster the development of competences related to such context such as Computational Thinking or STEAM related skills. However, this is not an easy task, especially because integrating subjects that covers the necessary topics and competences. New active pedagogical approaches are required and this what RoboSTEAM project provides. The application of Challenge Based Learning and Physical Devices and Robotics facilitate the so named twenty first century skills. The project has been developed by several universities and schools and one of most critical parts was testing the methodology and tools, this was done into pilot phases that are described in the present work. The results show that there are important differences between partners socioeconomical context, but that the outcomes of the project are flexible enough to be applied successfully in any of them.},
  address = {New York, NY, USA},
  author = {Conde, Miguel \'{A}ngel and Fern\'{a}ndez, Camino and Rodr\'{\i}guez-Sedano, Francisco and Gonz\'{a}lez-Barrientos, Covadonga and Ramos, Maria and Jesus, Manuel and Gon\c{c}alves, Jos\'{e} and Reimann, Daniela and Garc\'{\i}a Pe\~{n}alvo, Francisco Jos\'{e} and Jormanainen, Ilkka},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486417},
  isbn = {9781450390668},
  keywords = {Computational Thinking; Evaluation; Physical Devices; Pilots; Robotics; STEAM},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {44–50},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {RoboSTEAM project the pilot phases},
  url = {https://doi.org/10.1145/3486011.3486417},
  year = {2021}
}

@inproceedings{merged1053,
  abstract = {As computing technologies continue to have a greater impact on daily life, it becomes increasingly important for the K-12 education system to prepare students for the computerized world. In this paper, we present the curriculum design, implementation, and results from a one-trimester introductory Python course that is mandatory for all 8th graders in our school district. This course is a crucial component of the K-12 computational thinking pathways we are developing at our school district, which take students from block-based programming and computational thinking (elementary school) to text-based programming and applications of computer science (high school). Our mandatory 8th grade course serves as a bridge between these two components. We present qualitative results that highlight the challenges that arose from teaching a course for all students -- not just those with a prior interest in computing -- and how the instructor overcame those challenges. We also present quantitative results that demonstrate the course's positive impact on students' attitudes towards computer science, their intent to re-engage with computer science in the future, and the gender gap with regards to confidence in computer science.},
  address = {New York, NY, USA},
  author = {Nanavati, Amal and Owens, Aileen and Stehlik, Mark},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366906},
  isbn = {9781450367936},
  keywords = {computational thinking; k-12 computer science education; robotics},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {811–817},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Pythons and Martians and Finches, Oh My! Lessons Learned from a Mandatory 8th Grade Python Class},
  url = {https://doi.org/10.1145/3328778.3366906},
  year = {2020}
}

@article{merged1054,
  abstract = {Research has shown that free-form Game-Design (GD) environments can be very effective in fostering Computational Thinking (CT) skills at a young age. However, some students can still need some guidance during the learning process due to the highly open-ended nature of these environments. Intelligent Pedagogical Agents (IPAs) can be used to provide personalized assistance in real-time to alleviate this challenge. This paper presents our results in evaluating such an agent deployed in a real-word free-form GD learning environment to foster CT in the early K-12 education, Unity-CT. We focus on the effect of repetition by comparing student behaviors between no intervention, 1-shot, and repeated intervention groups for two different errors that are known to be challenging in the online lessons of Unity-CT. Our findings showed that the agent was perceived very positively by the students and the repeated intervention showed promising results in terms of helping students make fewer errors and more correct behaviors, albeit only for one of the two target errors. Building from these results, we provide insights on how to provide IPA interventions in free-form GD environments.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Yal\c{c}\i{}n, \"{O}zge Nilay and Lall\'{e}, S\'{e}bastien and Conati, Cristina},
  doi = {10.1145/3578523},
  issn = {2160-6455},
  issue_date = {September 2023},
  journal = {ACM Trans. Interact. Intell. Syst.},
  keywords = {Pedagogical agent; computational thinking; game design; open-ended learning environments; real-time support},
  month = {September},
  number = {3},
  numpages = {29},
  publisher = {Association for Computing Machinery},
  title = {The Impact of Intelligent Pedagogical Agents’ Interventions on Student Behavior and Performance in Open-Ended Game Design Environments},
  url = {https://doi.org/10.1145/3578523},
  volume = {13},
  year = {2023}
}

@article{merged1055,
  abstract = {Contemporary research has explored educational robotics, but it has not examined the development of computational thinking in the context of programming embodied interactions. Apart from the goal of the robot and how the robot will interact with its environment, another important aspect that should be taken into consideration is whether and how the user will physically interact with the robot. We recruited 36 middle school students to participate in a six-session robotics curriculum in an attempt to expand their learning in computational thinking. Participants were asked to develop interfaces for the remote control of a robot using diverse interaction styles from low-level to high-level embodiment, such as touch, speech, and hand and full-body gestures. We measured students’ perception of computing, examined their computational practices, and assessed the development of their computational thinking skills by analyzing the sophistication of the projects they created during a problem-solving task. We found that students who programmed combinations of low embodiment interfaces or interfaces with no embodiment produced more sophisticated projects and adopted more sophisticated computational practices compared to those who programmed full-body interfaces. These findings suggest that there might be a tradeoff between the appeal and the cognitive benefit of rich embodied interaction with a remotely controlled robot. In further work, educational robotics research and competitions might be complemented with a hybrid approach that blends the traditional autonomous robot movement with student enactment.},
  address = {New York, NY, USA},
  articleno = {40},
  author = {Merkouris, Alexandros and Chorianopoulos, Konstantinos},
  doi = {10.1145/3336126},
  issue_date = {December 2019},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Embodied learning; assessment; children; computational thinking; educational robotics; embodiment; human–robot interaction},
  month = {July},
  number = {4},
  numpages = {19},
  publisher = {Association for Computing Machinery},
  title = {Programming Embodied Interactions with a Remotely Controlled Educational Robot},
  url = {https://doi.org/10.1145/3336126},
  volume = {19},
  year = {2019}
}

@inproceedings{merged1056,
  abstract = {Today the digital society in which we live requires the acquisition of new computer-related skills, such as computational thinking or coding skills, as well as cross-curricular skills, such as communication, collaboration and creativity. Preparing and inspiring educators to discover, learn and contribute to child-centered innovative ideas and emerging technologies is at the heart of our mission. Within the framework of the project, a teacher training concept, a collaboration platform and various pedagogical resources have been developed. The demonstration will present the DNA of the Roteco project, the collaborative platform and its contents and how Roteco is currently supporting its community of educators. Roteco encourages synergies with FabLearn Europe / MakeEd and in the spirit of open-ended exploration encourages the possibilities.},
  address = {New York, NY, USA},
  articleno = {22},
  author = {Negrini, Lucio and Reyes Reyes Mury, Sophia and Skweres, Melissa and Kollegger, Nina},
  booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
  doi = {10.1145/3466725.3466767},
  isbn = {9781450389891},
  keywords = {Coding; Community; Computational thinking; Educational Robotics; FabLearn; Informatic; K-12 education; Programming; STEM education; constructivism; socio-constructivism&nbsp},
  location = {St. Gallen, Switzerland},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe / MakeEd 2021},
  title = {Demonstration of Roteco - the robotic teacher community: An informative, collaborative platform with a unique community ecosystem},
  url = {https://doi.org/10.1145/3466725.3466767},
  year = {2021}
}

@inproceedings{merged1057,
  abstract = {As computer science is integrated into a wider variety of fields, block-based programming languages like Snap!, which assemble code with visual blocks rather than text syntax, are increasingly used to teach computational thinking (CT) to students from diverse backgrounds. Although automated evaluators (autograders) for programming assignments usually focus on runtime efficiency and output accuracy, effective evaluation of a student's CT skills requires assessing coding best practices, such as decomposition, abstraction, and algorithm design. While autograders are commonplace for text languages like Python, we present a machine learning approach to assess how effectively block-based code demonstrates understanding of CT fundamentals. Our dataset consists of Snap! programs written by students new to coding and evaluated by instructors using a CT rubric. We explore how to best transform these programs into low-dimensional features to allow encapsulation and repetition patterns to emerge. Experimentation involves comparing the effectiveness of a suite of clustering models and similarity metrics by analyzing how directly automated feedback correlates to the course staff's manual evaluation. Lastly, we demonstrate the practical application of the autograder in a classroom setting and discuss scalability and feasibility in other domains of CS education.},
  address = {New York, NY, USA},
  author = {Damle, Param and Bull, Glen and Watts, Jo and Nguyen, N. Rich},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576246},
  isbn = {9781450394338},
  keywords = {block-based coding; clustering; computational thinking; machine learning; student assessment; visual programming},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1300},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Automated Structural Evaluation of Block-based Coding Assignments},
  url = {https://doi.org/10.1145/3545947.3576246},
  year = {2023}
}

@inproceedings{merged1058,
  abstract = {North Salem Central School District (North Salem) has worked with researchers as part of a larger Research Practice Partnership (RPP) to design and implement an inclusive PK-12 computing pathway in their district. This poster describes how teachers used Generative AI (GenAI) tools in three areas: (1) the development of sample computational thinking (CT) lesson plans; (2) initial brainstorming; and (3) professional learning.As North Salem reflected on their use of GenAI tools, they named two AI tools specifically: OpenAI's ChatGPT-4 and Bing's Image Creator. Teachers also describe ethical dilemmas that they faced when integrating GenAI tools as well as other concerns that will be described below. This work builds on the growing literature on the use of Generative AI tools to support the day-to-day work of teachers.},
  address = {New York, NY, USA},
  author = {Ruiz, Pati and Rangel, Alessandra and Coenraad, Merijke},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635522},
  isbn = {9798400704246},
  keywords = {K-12 computer science education; ducational equity; formative assessment},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1800–1801},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Using Generative AI to Support PK-12 Teaching and Learning: Developing Sample Lessons and More},
  url = {https://doi.org/10.1145/3626253.3635522},
  year = {2024}
}

@inproceedings{merged1059,
  abstract = {The construction of new engineering disciplines and the “Double Tops” initiative have put forward new requirements for the training of engineering professionals. Taking the course of C language programming as an example, this paper analyzes the pain points in current course teaching, combines the characteristics of students’ learning situation, takes students as the center, and based on the knowledge graph, an effective tool for organizing resources, carries out a modular teaching practice of C language programming design under the constructivist learning paradigm. Integrating the OBE (Outcomes-Based Education) concept into teaching, it enhances students’ practical ability, cultivates their computational thinking, and highlights the training of students’ ability to analyze and solve complex engineering problems and creative thinking. The exploration and practice of this course teaching can provide reference and reference for the teaching design of other programming courses.},
  address = {New York, NY, USA},
  author = {Zhao, Wei and Nie, Zhenhua and Li, Xiaoming},
  booktitle = {Proceedings of the 2024 7th International Conference on Educational Technology Management},
  doi = {10.1145/3711403.3711485},
  isbn = {9798400717468},
  keywords = {Program design; constructivist learning; teaching mode; teaching reform and practice},
  numpages = {5},
  pages = {504–508},
  publisher = {Association for Computing Machinery},
  series = {ICETM '24},
  title = {Teaching Practice of C Language Programming under the Constructivist Learning Paradigm},
  url = {https://doi.org/10.1145/3711403.3711485},
  year = {2025}
}

@inproceedings{merged1060,
  abstract = {Teaching students to become skillful problem solvers is a goal of university education, but it has been difficult to measure such skill or demonstrate the benefits of particular educational experiences. This paper presents a study of college students solving a problem unrelated to their academic majors. The analysis suggests that the educational experiences of Computer Science (CS) students may better train them in problem-solving than the experiences of other majors. In this study, students from a variety of undergraduate majors and grade levels were given a 15-minute problem-solving task embedded in an interactive science simulation. The complex task calls upon many problem-solving practices needed by scientists and engineers in their professions. Although this task has little resemblance to the problems encountered in a computer science course, CS students performed significantly better than students in any other major. In addition, only for CS students was there an indication of improvement in problem-solving from lower to upper grade levels. We propose that general problem-solving and computational thinking share some common practices, such as problem decomposition and comprehensive data collection. Furthermore, we present preliminary evidence that training in computational thinking is transferable to problem-solving tasks across domains and discuss how the unique features of CS programming assignments could be generalized to other science and engineering courses to foster students' general problem-solving skills.},
  address = {New York, NY, USA},
  author = {Salehi, Shima and Wang, Karen D. and Toorawa, Ruqayya and Wieman, Carl},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366808},
  isbn = {9781450367936},
  keywords = {computational thinking; computer science education; problem solving; simulations; student assessment},
  location = {Portland, OR, USA},
  numpages = {6},
  pages = {156–161},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Can Majoring in Computer Science Improve General Problem-solving Skills?},
  url = {https://doi.org/10.1145/3328778.3366808},
  year = {2020}
}

@inproceedings{merged1061,
  abstract = {Abstract:At present, educational researchers are continuously exploring new ways of learner models. To solve the problems of data bias and feature mismatch that may occur in learner modeling on heterogeneous data, this paper uses the method of Multiple Kernel Learning (MKL) to accurately portray the features of learners' thinking skills and construct a classification model for top talents. First, by analyzing the thinking skills that have the greatest impact on top talents, the features of critical thinking skills, logical thinking skills and computational thinking skills are extracted separately. Then, a learner classification model for top talents was constructed by MKL method. Finally, the model was validated on the dataset and compared with the results of single-kernel learning. The experimental results show that the accuracy of the classification model for top talents based on MKL is significantly better than that of ordinary single-kernel learning, which indicates that the method of MKL performs better in the learner classification model.},
  address = {New York, NY, USA},
  author = {Liang, Yuan and Wang, Mei},
  booktitle = {Proceedings of the 2023 6th International Conference on Algorithms, Computing and Artificial Intelligence},
  doi = {10.1145/3639631.3639651},
  isbn = {9798400709203},
  keywords = {Learner Classification; Multiple Kernel Learning; Thinking Skills; Top Talents},
  location = {Sanya, China},
  numpages = {6},
  pages = {113–118},
  publisher = {Association for Computing Machinery},
  series = {ACAI '23},
  title = {Multiple Kernel Learning for Learner Classification},
  url = {https://doi.org/10.1145/3639631.3639651},
  year = {2024}
}

@inproceedings{merged1062,
  abstract = {Contemporary research has introduced educational robotics in the classroom, but there are few studies about the effects of alternative embodied interaction modalities on computational thinking and science education. Twenty-six middle school students were asked to program interfaces for controlling the heading and speed of a robot using two types of embodied interaction modalities. We compared touch and full-body gestures to autonomous control, which does not require any embodied interaction. We assessed the development of their computational thinking skills by analyzing the projects they created during a problem-solving task and examined their understandings of science concepts related to kinematics. We found that novice students preferred full-body interfaces, while advanced students moved to more disembodied and abstract computational thinking. These findings might be applied to focus computing and science education activities to the right age and abilities groups of students.},
  address = {New York, NY, USA},
  author = {Merkouris, Alexandres and Chorianopoulos, Konstantinos},
  booktitle = {Proceedings of the 22nd Pan-Hellenic Conference on Informatics},
  doi = {10.1145/3291533.3291537},
  isbn = {9781450366106},
  keywords = {assessment; children; computational thinking; educational robotics; embodied learning; human-robot interaction},
  location = {Athens, Greece},
  numpages = {5},
  pages = {225–229},
  publisher = {Association for Computing Machinery},
  series = {PCI '18},
  title = {Programming touch and full-body interaction with a remotely controlled robot in a secondary education STEM course},
  url = {https://doi.org/10.1145/3291533.3291537},
  year = {2018}
}

@inproceedings{merged1063,
  abstract = {Engaging in physical computing activities involving both hardware and software provides a hands-on introduction to computer science. The move to remote learning for primary and secondary schools during the 2020-2021 school year due to COVID-19 made implementing physical computing activities especially challenging. However, it is important that these activities are not simply eliminated from the curriculum. This paper explores how a unit centered around students investigating how programmable sensors that can support data-driven scientific inquiry was collaboratively adapted for remote instruction. A case study of one teacher’s experience implementing the unit with a group of middle school students (ages 11 to 14) in her STEM elective class examines how her students could still engage in computational thinking practices around data and programming. The discussion includes both the challenges and unexpected affordances of engaging in physical computing activities remotely that emerged from her implementation.},
  address = {New York, NY, USA},
  author = {Chakarov, Alexandra Gendreau and Bush, Jeffrey and Biddy, Quentin L and Jacobs, Jennifer and Elliott, Colin Hennessy and Sumner, Tamara},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3460711},
  isbn = {9781450384520},
  keywords = {Computational Thinking; Data Science; K-12 Computing Education; Physical Computing},
  location = {Athens, Greece},
  numpages = {7},
  pages = {276–282},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {Challenges and Unexpected Affordances of Physical Computing Going Remote},
  url = {https://doi.org/10.1145/3459990.3460711},
  year = {2021}
}

@inproceedings{merged1064,
  abstract = {We report on a late-breaking project that centralizes the Maker practice of loom-based weaving as a locus for unplugged computational thinking. While unplugged activities are appealing for making computation accessible, they also come with the risk of developing inert knowledge. To address and mitigate that risk, we introduce a new framework that we are developing called "Expansively-framed Unplugged" (EfU) computing education. We report on some initial testing and refinement of a learning sequence that starts with weaving on a loom and ends with optimizing code in Scratch. The testing was done with a school librarian who is will be implementing a coding program with students at a middle school library using this EfU sequence.},
  address = {New York, NY, USA},
  author = {Lee, Victor R. and Vincent, Heidee},
  booktitle = {Proceedings of FabLearn 2019},
  doi = {10.1145/3311890.3311907},
  isbn = {9781450362443},
  keywords = {Computational Thinking; Expansive Framing; Looms; Unplugged; Weaving},
  location = {New York, NY, USA},
  numpages = {4},
  pages = {124–127},
  publisher = {Association for Computing Machinery},
  series = {FL2019},
  title = {An Expansively-framed Unplugged Weaving Sequence Intended to Bear Computational Fruit of the Loom},
  url = {https://doi.org/10.1145/3311890.3311907},
  year = {2019}
}

@inproceedings{merged1065,
  abstract = {Computational toys and apps, or coding kits, are the primary learning media for young children to engage in Computational Thinking concepts and skills. However, how coding kits are designed to welcome children of different genders remains unclear, a critical research gap given that computing is mostly a male-dominated field. Drawing on relevant literature, we develop a framework of gender-related design features in toys (i.e., boy-oriented, girl-oriented, or gender-neutral features) and employ it to examine gender-related design features in commercially available coding kits for young children aged seven and under (N=110). The findings reveal the lopsided gender representation in coding kits, e.g., their physical forms and supported coding activities are predominantly boy-oriented. We discuss design and research implications for coding kits to welcome participation from children of different genders, especially young girls whose preferred design features are underrepresented in current designs.},
  address = {New York, NY, USA},
  articleno = {303},
  author = {Cen, Jingyao and Xu, Tian and Yu, Junnan},
  booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3544548.3581035},
  isbn = {9781450394215},
  keywords = {Coding kits; gendered design features; inclusiveness; young children},
  location = {Hamburg, Germany},
  numpages = {19},
  publisher = {Association for Computing Machinery},
  series = {CHI '23},
  title = {Examining Gender-oriented Design Features in Computational Toys and Kits for Young Children},
  url = {https://doi.org/10.1145/3544548.3581035},
  year = {2023}
}

@inproceedings{merged1066,
  abstract = {This doctoral research aims to address the lack of empirical studies on identifying mental models in primary school students, particularly in relation to programming concepts such as loops and conditionals. The objective is to develop and validate a mental model test and explore its potential in enhancing programming competence. The research will employ a mixed methods approach, utilizing an online questionnaire and interviews with primary school students attending computational thinking courses. The test will be validated by subject matter experts, and its correlation with other instruments will be assessed for criterion validation. Subsequently, the validated test will be implemented within a conceptual change teaching approach to evaluate its applicability and impact through a randomized controlled field trial.},
  address = {New York, NY, USA},
  articleno = {30},
  author = {Kunz, Katrin},
  booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3631802.3631835},
  isbn = {9798400716539},
  keywords = {mental model; mixed methods; test instrument validation},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '23},
  title = {Developing, Validating, and Implementing a Mental Model Test for Primary School Students (Doctoral Consortium)},
  url = {https://doi.org/10.1145/3631802.3631835},
  year = {2024}
}

@inproceedings{merged1067,
  abstract = {During peer-led intensive events (such as hackathons and coding camps), students actively assist others to learn and, in turn, benefit from an effective learning environment. In this paper, we present the results of an observational study, having as a working setting a coding camp based on Computational Thinking (CT), to explore how peer-led coding camps can create a seed effect in young students. In particular, we analyze how a practical approach to convey CT skills motivates and effectively prepares student tutors. Moreover, we compare the previous and next edition of the camp to identify the specific contribution of the tutors. We observed that students benefit in particular from CT perspectives and develop the necessary motivation to eventually serve as tutors, creating a multiplier effect that benefits a larger number of students of future cohorts. Moreover, our results show that student tutors contributed positively to the facilitation of the subsequent edition of the coding camp.},
  address = {New York, NY, USA},
  author = {Fronza, Ilenia and Corral, Luis and Iaccarino, Gennaro and Pahl, Claus},
  booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
  doi = {10.1145/3450329.3476860},
  isbn = {9781450383554},
  keywords = {coding camp; computational thinking; peer-assisted learning},
  location = {SnowBird, UT, USA},
  numpages = {6},
  pages = {117–122},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '21},
  title = {Enabling Peer-Led Coding Camps by Creating a Seed Effect in Young Students},
  url = {https://doi.org/10.1145/3450329.3476860},
  year = {2021}
}

@inproceedings{merged1068,
  abstract = {As reliance on technology increases in practically every aspect of life, all students deserve the opportunity to learn to think computationally from early in their educational experience. To support the kinds of computer science curriculum and instruction that makes this possible, there is an urgent need to develop and validate computational thinking (CT) assessments for elementary-aged students. We developed the Assessment of Computing for Elementary Students (ACES) to measure the CT concepts of loops and sequences for students in grades 3-5. The ACES includes block-based coding questions as well as non-programming, Bebras-style questions. We conducted cognitive interviews to understand student perspectives while taking the ACES. We piloted the assessment with 57 4th grade students who had completed a CT curriculum. Preliminary analyses indicate acceptable reliability and appropriate difficulty and discrimination among assessment items. The significance of this paper is to present a new CT measure for upper elementary students and to share its intentional development process.},
  address = {New York, NY, USA},
  author = {Parker, Miranda C. and Kao, Yvonne S. and Saito-Stehberger, Dana and Franklin, Diana and Krause, Susan and Richardson, Debra and Warschauer, Mark},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432376},
  isbn = {9781450380621},
  keywords = {assessment; computational thinking; elementary education},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {10–16},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Development and Preliminary Validation of the Assessment of Computing for Elementary Students (ACES)},
  url = {https://doi.org/10.1145/3408877.3432376},
  year = {2021}
}

@inproceedings{merged1069,
  abstract = {Adversarial Thinking (AT) is essential in cybersecurity, fostering strategic problem-solving by anticipating worst-case scenarios. However, its integration into early computing education, especially in the first two years, remains underexplored. Introductory courses like CS 0 build foundational skills but are challenging to implement in resource-limited community colleges. Strengthening AT in these students can enhance their workforce readiness and support transfers to four-year programs. Servingness describes how Hispanic-Serving Institutions (HSIs) go beyond merely enrolling Latinx students to address their specific cultural, academic, and social needs. It involves creating inclusive environments where students feel a strong sense of belonging, supported by culturally relevant practices, leadership opportunities, and community engagement. These environments generate feelings of being accepted, valued, and included within a community or group, also called a sense of belonging. This work presents research focused on the incorporation of AT within the first two years of computer science education at community colleges, in particular to a course CS 0. By examining the integration of AT principles in early coursework, the study identifies key characteristics and a sense of belonging that are instrumental in cultivating AT capabilities among students. The findings aim to offer actionable insights for educators in community colleges, enabling them to more effectively prepare students for the complexities of modern computing careers and to address the broader needs of the cybersecurity field. Through this targeted educational approach, students can develop a more robust understanding of adversarial strategies, enhancing their overall computational thinking and problem-solving skills.},
  address = {New York, NY, USA},
  author = {Servin, Christian and Becker, Brett A. and Garcia, Emiliano},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705157},
  isbn = {9798400705328},
  keywords = {CS 1; adversarial thinking; community colleges; sense of belonging; servingness},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1617–1618},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Cultivating Sense of Belonging in Computing Education: Identifying Servingness Traits Among Community College Population},
  url = {https://doi.org/10.1145/3641555.3705157},
  year = {2025}
}

@inproceedings{merged1070,
  abstract = {Many children begin to learn to code in a self-directed context, such as by creating an animation, game or phone app. Recent research has begun to investigate and evaluate the results of this process: children's projects. However, little is known about the different trajectories novices have during the long-term process of self-directed programming learning. Our aim is to identify the existing types of trajectories and be able to determine a specific child's trajectory. If that trajectory does not lead to significant progress or continued motivation, we might be able to nudge them toward a different trajectory.We hypothesized that there may be several main types of trajectories. To explore this, we clustered children's programming progression in order to identify trends. We used a data set of Scratch programs for its large sample size and diverse population [1,3]. We used Dr. Scratch's scoring of computational thinking skills as our initial feature set [2]. Our clustering analysis identified two main groups of users. The first group, 55.8% of users, generally progressed upward over time in their computational thinking skill score. The second group, 44.2% of users, showed little to no improvement over time.These preliminary results raise many questions about these two high-level groupings of trajectories of computational thinking skill demonstration in Scratch projects. In the future we want to further explore the trajectory clusters and what they could mean for supporting self-directed learning of programming.},
  address = {New York, NY, USA},
  author = {Milgram, Aaron and Jain, Shruti and Ichinco, Michelle},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3341207},
  isbn = {9781450361859},
  keywords = {coding; computational thinking; novice programming; programming progression; self-directed learning; time-series clustering},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {311},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {Identifying Learning Trajectories in Self-Directed Programming},
  url = {https://doi.org/10.1145/3291279.3341207},
  year = {2019}
}

@inproceedings{merged1071,
  abstract = {Computer scientists have been working towards a common definition of abstraction; however, the instruction and assessment of abstraction remain categorically under-researched. Abstraction is often cited as a component of computational thinking and can be likened to a higher order thinking skill. Most K-12 educators have studied critical thinking (e.g., Bloom's taxonomy, Marzano &amp; Kendall's new taxonomy) more than computational thinking. Overlapping characteristics of abstraction and critical thinking can provide educators with instructional guidance. The qualitative examination of how teachers determine curriculum, deliver instruction, and design assessments in K-12 computer science education contributes insights into current instructional practices and variables for future quantitative study. The instructional strategies, objectives, and assessments of 12 K-12 computer science teachers from three states in the United States were examined in this descriptive qualitative examination of instruction using thematic coding analysis. The majority of teachers interviewed had little to no professional development regarding teaching abstraction. All teachers in the study were unsure what student abstraction abilities should be according to grade level. Teachers' understanding of abstraction ranged from very little knowledge to very knowledgeable. The majority of teachers interviewed did not assess abstraction intentionally. Teachers described successfully teaching abstraction through multiple instructional practices and spiraling curriculum. This examination of abstraction in K-12 computer science education offers practical descriptive insights and illuminates additional variables for researching the instruction of abstraction qualitatively and quantitatively. Anecdotal instructional successes are included in the results.},
  address = {New York, NY, USA},
  articleno = {9},
  author = {Liebe, Christine and Camp, Tracy},
  booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3364510.3364526},
  isbn = {9781450377157},
  keywords = {abstraction; computational thinking; curriculum; instruction},
  location = {Koli, Finland},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '19},
  title = {An Examination of Abstraction in K-12 Computer Science Education},
  url = {https://doi.org/10.1145/3364510.3364526},
  year = {2019}
}

@inproceedings{merged1072,
  abstract = {With the growing demand for computational skills in the job market, it's imperative that lower secondary school students grasp basic programming concepts such as repetition, modularity, conditionals, and variables. Yet, many students perceive computer science as daunting and irrelevant. Physical computing offers a promising solution to this motivational gap. It enhances intrinsic motivation, self-efficacy, and positive attitudes towards technology. Moreover, they engage students who may not identify as typical programmers and foster essential computational thinking skills.This research investigates the efficacy of employing the same educational robot in different contexts, such as music, images, colors, and simple video games, while teaching basic programming concepts. We call this approach "multi-context physical computing'' to emphasize the focus on the different application scenarios. We believe that this could benefit students for two reasons. Firstly, by presenting the same concept across different contexts, learners can better grasp the essence of the concept, disentangling it from extraneous contextual associations. Secondly, catering to individual interests by offering diverse contexts may enhance motivation, consequently fostering improved learning outcomes, as predicted by the expectancy-value theory.In order to assess the benefits of the multi-context approach on learning outcomes and motivation, we will compare it to a more traditional single-context approach centered on robot locomotion in a randomized controlled study.},
  address = {New York, NY, USA},
  author = {Maximova, Alexandra},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3649405.3659482},
  isbn = {9798400706035},
  keywords = {algorithmic thinking; educational robotics; physical computing; secondary school},
  location = {Milan, Italy},
  numpages = {2},
  pages = {850–851},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Teaching Programming through Multi-Context Physical Computing},
  url = {https://doi.org/10.1145/3649405.3659482},
  year = {2024}
}

@inproceedings{merged1073,
  abstract = {Accessible introductory programming environments are scarce, and their study within ecological settings (e.g., at home) is almost non-existent. We present ACCembly, an accessible block-based environment that enables children with visual impairments to perform spatial programming activities. ACCembly allows children to assemble tangible blocks to program a multimodal robot. We evaluated this approach with seven families that used the system autonomously at home. Results showed that both the children and family members learned from what was an inclusive and engaging experience. Children leveraged fundamental computational thinking concepts to solve spatial programming challenges; parents took different roles as mediators, some actively teaching and scaffolding, others learning together with their child. We contribute with an environment that enables children with visual impairments to engage in spatial programming activities, an analysis of parent-child interactions, and reflections on inclusive programming environments within a shared family experience.},
  address = {New York, NY, USA},
  author = {Rocha, Filipa and Pires, Ana Cristina and Neto, Isabel and Nicolau, Hugo and Guerreiro, Tiago},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3460699},
  isbn = {9781450384520},
  keywords = {Accessible; Children; Collaboration; Computational thinking; Robot; Tangible; Visually impaired},
  location = {Athens, Greece},
  numpages = {12},
  pages = {100–111},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {Accembly at Home: Accessible Spatial Programming for Children with Visual Impairments and their Families},
  url = {https://doi.org/10.1145/3459990.3460699},
  year = {2021}
}

@inproceedings{merged1074,
  abstract = {It is recognized that Computing requires many competencies covering a wide range of domains exhibiting an impressive changing rate. This paper examines three primary competencies, which are: 1) Algorithms, Programming, Data, and Computational Thinking (CT); 2) Networks, Internet and Security; and 3) Ethics. Due to the standards and relationship of competences, the authors categorized, algorithms, programming, data and CT together. Thus, we leveraged national guidelines in Italy, mandatory national computing curriculum in England, and state guidelines in Alabama, USA in conjunction with ACM computing frameworks. The primary lessons learned from comparing computing curricula, and implications for implementing computing education curriculum are discussed.},
  address = {New York, NY, USA},
  author = {Maiorana, Francesco and Csizmadia, Andrew P. and Richards, Gretchen M.},
  booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
  doi = {10.1145/3368308.3415376},
  isbn = {9781450370455},
  keywords = {algorithms; computational thinking; data; ethics; internet; networking; programming; security},
  location = {Virtual Event, USA},
  numpages = {6},
  pages = {242–247},
  publisher = {Association for Computing Machinery},
  series = {SIGITE '20},
  title = {P12 Computing in Italy, England and Alabama, USA},
  url = {https://doi.org/10.1145/3368308.3415376},
  year = {2020}
}

@inproceedings{merged1075,
  abstract = {The Internet of Things (IoT) is an innovation that is rapidly transforming industries from agriculture to medicine, enabling advances such as real-time data monitoring and remote control. However, IoT's infiltration into education has been much slower, and educational tools that embody these features are few and far between. Together with the Chugach School District in Alaska, we investigated methods to teach middle-school aged students how to use IoT to drive change in their communities and collaborate in a digital world, tied to real time environmental data. The objective of this work is to provide rural, K-12 Alaskan students and teachers with opportunities that will help build an understanding of what is happening in their local environments, increase overall scientific and climate literacy, and contribute to community resilience and connectedness. Rural Alaskan students live in some of the most vulnerable regions of the planet, regions that are highly susceptible to the impacts of climate change. In this work-in-progress paper, we first discuss the design and adaptation of Tekniverse, a hardware and software ecosystem that provides a gateway for students to code and connect hardware projects and data. We then discuss the finding of our initial study of Tekniverse as a learning tool for computational thinking, data analysis, and social responsibility in rural and remote areas with students in Alaska. Lastly, we propose future directions for this research and computational collaborative tools.},
  address = {New York, NY, USA},
  author = {Guler, Sibel Deren and Sotelo, Sheryl and Iwabuchi, Masa},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3535291},
  isbn = {9781450391979},
  keywords = {Computational Thinking; IoT Environmental Literacy; Physical Computing},
  location = {Braga, Portugal},
  numpages = {7},
  pages = {583–589},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {Tekniverse: Towards a connected future for sensors, education, and action: Fostering Environmental Literacy with IoT and Physical Computing},
  url = {https://doi.org/10.1145/3501712.3535291},
  year = {2022}
}

@inproceedings{merged1076,
  abstract = {Background and Context. With increasing efforts to bring computing education opportunities into elementary schools, there is a growing need for assessments, with arguments for validity, to support research evaluation at these grade levels. After successfully piloting a 10-question computational thinking assessment (Assessment of Computing for Elementary Students – ACES) for 4th graders in Spring 2020, we used our analyses of item difficulty and discrimination to iterate on the assessment. Objectives. To increase the number of potential items for ACES, we created isomorphic versions of existing questions. The nature of the changes varied from incidental changes that we did not believe would impact student performance to more radical changes that seemed likely to influence question difficulty. We sought to understand the impact of these changes on student performance. Method. Using these isomorphic questions, we created two versions of our assessment and piloted them in Spring 2021 with 235 upper-elementary (4th grade) students. We analyzed the reliability of the assessments using Cronbach’s alpha. We used Chi-squared tests to analyze questions that were identical across the two assessments to form a baseline of comparison and then ran Chi-Squared and Kruskal-Wallis H tests to analyze the differences between the isomorphic copies of the questions. Findings. Both assessment versions demonstrated good reliability, with identical Cronbach’s alphas of 0.868. We found statistically similar performance on the identical questions between our two groups of students, allowing us to compare their performance on the isomorphic questions. Students performed differently on the isomorphic questions, indicating the changes to the questions had a differential impact on student performance. Implications. This paper builds on existing work by presenting methods for creating isomorphic questions. We provide valuable lessons learned, both on those methods and on the impact of specific types of changes on student performance.},
  address = {New York, NY, USA},
  author = {Parker, Miranda C. and Garcia, Leiny and Kao, Yvonne S. and Franklin, Diana and Krause, Susan and Warschauer, Mark},
  booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 1},
  doi = {10.1145/3501385.3543979},
  isbn = {9781450391948},
  keywords = {assessment; computational thinking; elementary education},
  location = {Lugano and Virtual Event, Switzerland},
  numpages = {13},
  pages = {2–14},
  publisher = {Association for Computing Machinery},
  series = {ICER '22},
  title = {A Pair of ACES: An Analysis of Isomorphic Questions on an Elementary Computing Assessment},
  url = {https://doi.org/10.1145/3501385.3543979},
  year = {2022}
}

@inproceedings{merged1077,
  abstract = {Creating games together is both a playful and effective way to develop skills in computational thinking, collaboration, and more. However, game development can be challenging for younger developers who lack formal training. While teenage developers frequently turn to online communities for peer support, their experiences may vary. To better understand the benefits and challenges teens face within online developer communities, we conducted interviews with 18 teenagers who created games or elements in Roblox and received peer support from one or more online Roblox developer communities. Our findings show that developer communities provide teens with valuable resources for technical, social, and career growth. However, teenagers also struggle with inter-user conflicts and a lack of community structure, leading to difficulties in handling complex issues that may arise, such as financial scams. Based on these insights, we propose takeaways for creating positive and safe online spaces for teenage game creators.},
  address = {New York, NY, USA},
  articleno = {691},
  author = {Choi, Yubin and Choi, Jeanne and Seering, Joseph},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713969},
  isbn = {9798400713941},
  keywords = {Roblox; Teenagers; developer communities; developing games; online communities; safety; youth},
  numpages = {18},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {Leveling Up Together: Fostering Positive Growth and Safe Online Spaces for Teen Roblox Developers},
  url = {https://doi.org/10.1145/3706598.3713969},
  year = {2025}
}

@inproceedings{merged1078,
  abstract = {Robots have entered schools and are currently used to achieve different educational goals, as supporting computational thinking, and improving interaction between peers. In this paper we describe 3 uses of robots at schools from European projects practice: we start from telerobotics, where robots are used to support interaction at distance, if students cannot attend lesson. The second example describes how to build an educational pathway with robots to favor inclusion. Then we describe how to use robotics to introduce young students to Embodied Artificial Intelligence. These examples show that robots can be a flexible and effective tool in education as they exploit embodiment.},
  address = {New York, NY, USA},
  author = {Ponticorvo, Michela and Dell'Aquila, Elena},
  booktitle = {Proceedings of the 2024 9th International Conference on Information and Education Innovations},
  doi = {10.1145/3664934.3664940},
  isbn = {9798400716409},
  location = {Verbania, Italy},
  numpages = {6},
  pages = {1–6},
  publisher = {Association for Computing Machinery},
  series = {ICIEI '24},
  title = {Robots at schools: telerobotics, coding and teaching embodied artificial intelligence},
  url = {https://doi.org/10.1145/3664934.3664940},
  year = {2024}
}

@inproceedings{merged1079,
  abstract = {In this paper, we describe the effect of code.org as pre-class resources for flipped learning of Scratch programming education. Pre-class resources are very important for increase the outcome of the flipped learning. These days, there are so many open courseware about coding available for pre-class. The objectives of programming might be to increase the computational thinking for problem solving. In this research, we suggest that flipped learning is very good way to increase the computational thinking for problem solving and code.org is good resource for pre-class.},
  address = {New York, NY, USA},
  author = {Kim, Jeong Ah and Kim, Hee Jin},
  booktitle = {Proceedings of the 9th International Conference on Education Technology and Computers},
  doi = {10.1145/3175536.3175542},
  isbn = {9781450354356},
  keywords = {Flipped learning; Scratch programming; computational thinking; course design; open courseware},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {68–72},
  publisher = {Association for Computing Machinery},
  series = {ICETC '17},
  title = {Flipped Learning of Scratch Programming with code.org},
  url = {https://doi.org/10.1145/3175536.3175542},
  year = {2017}
}

@inproceedings{merged1080,
  abstract = {Worldwide, many countries are implementing Computer Science (CS) and Computational Thinking (CT) instruction at the primary and secondary school level. This push for CS/CT instruction in younger ages increases the need for pedagogical practices, such as learning strategies, that are effective for a wide array of learners. However, research into strategies for young learners is relatively sparse, especially compared with strategies at the university level. This study aims to investigate a commonly used practice at the university level, diagramming, as a potential strategy for students in grades 4-8 (ages 10-15). Our hope is that diagramming can be added to a suite of strategies to support program comprehension in younger learners.},
  address = {New York, NY, USA},
  author = {Salac, Jean},
  booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
  doi = {10.1145/3372782.3407116},
  isbn = {9781450370929},
  keywords = {computational thinking; diagrams; learning strategy; primary/elementary education; program comprehension},
  location = {Virtual Event, New Zealand},
  numpages = {2},
  pages = {322–323},
  publisher = {Association for Computing Machinery},
  series = {ICER '20},
  title = {Diagramming as a Strategy for Primary/Elementary-Age Program Comprehension},
  url = {https://doi.org/10.1145/3372782.3407116},
  year = {2020}
}

@inproceedings{merged1081,
  abstract = {In response to the shortcomings of the SPOC course "Introduction to Computational Thinking" at Beijing University of Civil Engineering and Architecture, the teaching team has transformed and improved the course design and practice based on the existing High quality undergraduate courses in Beijing universities and Beijing Curriculum Ideological and Political Demonstration Course. We aim to maintain consistency and linkage in learning objectives, learning assessments, teaching materials, learning activities, and course technology under the principle of consistent construction. Learning objectives are clearer and more measurable; learning assessment is more scientific, diverse, and reliable; Curriculum resources can meet the needs of students at different levels and majors; learning activities can fully mobilize students' subjective initiative; Curriculum technology helps to achieve learning objectives, and can reflect the characteristics of the discipline, with universality and progressiveness. Through the construction and practice of the FD-QM standard, the course team has established the principles of course standardization, clarified the direction of course material construction, drawn a knowledge graph of course knowledge points, accurately grasped the degree of learning objectives, upgraded the "characteristic" teaching resource library, enhanced student interest, and integrated ideological and political education into the curriculum, ultimately achieving a comprehensive improvement in the quality of course teaching.},
  address = {New York, NY, USA},
  author = {Lv, Cheng},
  booktitle = {Proceedings of the 2024 International Conference on Intelligent Education and Computer Technology},
  doi = {10.1145/3687311.3687374},
  isbn = {9798400709920},
  location = {Guilin, China},
  numpages = {8},
  pages = {348–355},
  publisher = {Association for Computing Machinery},
  series = {IECT '24},
  title = {Course construction based on FD-QM standards and analysis and mining of course data},
  url = {https://doi.org/10.1145/3687311.3687374},
  year = {2024}
}

@inproceedings{merged1082,
  abstract = {How to further increase the programming interest of the C++ course for all freshmen is still a very challenging problem for the time being. The International Collegiate Programming Contest (ICPC) is sponsored by the Association for Computing Machinery (ACM). It is an annual competition designed to showcase college students' innovative ability, team spirit and ability to write programs, and analyze and solve problems under pressure. Aiming at the main problems existing in traditional C++ curriculum teaching, a live code teaching method and an ACM/ICPC innovation model are proposed in this paper that highlights the "student-centered" teaching concept. By taking the "problem-solving" as the main line of teaching, the "live code" as the teaching method, and the informatization teaching as the means, the ACM/ICPC competition promotes the integration of the students' theory and practice. The results of more than ten years of practical teaching show that the proposed live code pedagogy and the ACM/ICPC-based reform have effectively cultivated the students' programming interest and computational thinking, and significantly improved their programming and innovation abilities. At present, the live code teaching method and the ACM/ICPC innovation model have been effectively promoted and applied in the three campuses of our university, as they have a certain leading and exemplary role in cultivating strong professional programming skills, computational thinking, global vision and the all-round development of top-notch innovative talents in the computer field.},
  address = {New York, NY, USA},
  author = {Zheng, Yunping and Sarem, Mudar},
  booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
  doi = {10.1145/3582580.3582629},
  isbn = {9781450398015},
  keywords = {ACM/ICPC; C++; Live code; Online Learning; Teaching method},
  location = {Lincoln, United Kingdom},
  numpages = {6},
  pages = {281–286},
  publisher = {Association for Computing Machinery},
  series = {ICETM '22},
  title = {C++ Teaching Reform and Exploration Based on ACM/ICPC and Live Code},
  url = {https://doi.org/10.1145/3582580.3582629},
  year = {2023}
}

@inproceedings{merged1083,
  abstract = {This paper is a summary of the webinar hold on October 22nd at the “Computational thinking and robotics in education” track in which the LearningML project was presented. The LearningML project aims to bring the fundamentals of Artificial Intelligence (AI) to children and people interested in acquiring knowledge on this subject in an easy way. AI has heavily irrupted in society and everyone is using, more or less consciously, application based on AI. Therefore, some kind of AI literacy is needed if we are to educate critically thinking citizens able to understand technologies that have a relevant impact on their lives. In this presentation we show how LearningML can help us to reach this goal trough programming applications based on Machine Learning (ML), the most prevalent subfield of AI today.},
  address = {New York, NY, USA},
  author = {Rodr\'{\i}guez-Garc\'{\i}a, Juan David and Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
  booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3434780.3436705},
  isbn = {9781450388504},
  keywords = {Artificial intelligence; K-12; assessment; computational thinking; machine learning},
  location = {Salamanca, Spain},
  numpages = {3},
  pages = {18–20},
  publisher = {Association for Computing Machinery},
  series = {TEEM'20},
  title = {Introducing Artificial Intelligence Fundamentals with LearningML: Artificial Intelligence made easy},
  url = {https://doi.org/10.1145/3434780.3436705},
  year = {2021}
}

@inproceedings{merged1084,
  abstract = {This presentation examines the development of computing courses in the Irish school curriculum over a period of some fifty years. It aims to highlight three aspects: the varying rationales (for example, educational or economic) driving the work at different times; the types of course that were proposed and (in some cases) implemented; and the successes and failures experienced along the way. The third aspect, in particular, may offer lessons for other countries seeking to implement computing courses in schools. To frame the analysis, a brief chronological outline is provided here. In the 1970s, the state Department of Education initially offered some programming courses for teachers; a voluntary body, the Computers in Education Society of Ireland, advocated for the introduction of "Computer Studies" as a school subject [1]. Official provision came in the 1980s, with the introduction first of a Computer Studies option in the Mathematics courses for the senior cycle of post-primary education (US grades 11-12), and then of a free-standing subject in the junior cycle [1,2]. However, the increasing availability of educational software, applications packages, and internet access led to a switch in the focus of official policy in the 1990s - from computing to computer applications and the use of IT in teaching and learning - and the computing courses faded out [2]. Following the (re)-emergence of interest in computing / computational thinking in several countries in this century [2,3,4,5], advocacy for suitable courses again grew and the policy thrust changed. Provision is now made at primary and post-primary level, notably with a free-standing Computer Science course figuring in the senior cycle curriculum [2,5]. The author has been involved in advocacy and support for computing in schools throughout the fifty-year period. Thus, she offers a participant's analysis of the motivations, the successes and failures, and the lessons that can be learnt from the Irish story.},
  address = {New York, NY, USA},
  author = {Oldham, Elizabeth},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524817},
  isbn = {9781450392013},
  keywords = {computational thinking; computing education policy; curriculum},
  location = {Dublin, Ireland},
  numpages = {1},
  pages = {1},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Computing in the Irish School Curriculum: What Can We Learn from a Fifty-Year Adventure?},
  url = {https://doi.org/10.1145/3502718.3524817},
  year = {2022}
}

@inproceedings{merged1085,
  abstract = {Computational thinking has become the calling card for re-introducing coding into schools. While much attention has focused on how students engage in designing systems, applications, and other computational artifacts as a measure of success for computational thinking, far fewer efforts have focused on what goes into remediating problems in designing systems and interactions because learners invariably make mistakes that need fixing-or debugging. In this panel, we examine the often overlooked practice of debugging that presents significant learning challenges (and opportunities) to students in completing assignments and instructional challenges to teachers in helping students to succeed in their classrooms. The panel participants will review what we know and don't know about debugging, discuss ways to conceptualize and study debugging, and present instructional approaches for helping teachers and students to engage productively in debugging situations.},
  address = {New York, NY, USA},
  author = {Kafai, Yasmin B. and DeLiema, David and Fields, Deborah A. and Lewandowski, Gary and Lewis, Colleen},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287333},
  isbn = {9781450358903},
  keywords = {computational thinking; computing education; debugging},
  location = {Minneapolis, MN, USA},
  numpages = {2},
  pages = {169–170},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Rethinking Debugging as Productive Failure for CS Education},
  url = {https://doi.org/10.1145/3287324.3287333},
  year = {2019}
}

@inproceedings{merged1086,
  abstract = {Computational thinking learning tools such as Scratch support forms of expressive making that can aid in reflection and understanding complex scientific concepts and systems. However, little research has explored how such computational tools might support forms of emotional literacy such as developing an understanding of emotions. Through an exploratory design with 11 participants, Scratch was used to create models representing participants' emotion knowledge. The overarching research question focused on how might computational tools aid in supporting reflection on emotion knowledge. Analysis of artifacts generated through sketching and Scratch, as well as transcribed design discussions were used as points of data analysis. Drawing on theories of computational thinking and emotional literacy, we present an analysis that highlights the potential for such tools to support certain reflective practices around emotion knowledge.},
  address = {New York, NY, USA},
  author = {Vacca, Ralph},
  booktitle = {Proceedings of the 2019 on Designing Interactive Systems Conference},
  doi = {10.1145/3322276.3322358},
  isbn = {9781450358507},
  keywords = {computational modeling; emotion knowledge; emotion understanding; emotional literacy; mental health; scratch; self-reflection; systems modeling},
  location = {San Diego, CA, USA},
  numpages = {10},
  pages = {849–858},
  publisher = {Association for Computing Machinery},
  series = {DIS '19},
  title = {Exploring the Intersection of Emotional Literacy and Computational Modeling Using Scratch},
  url = {https://doi.org/10.1145/3322276.3322358},
  year = {2019}
}

@inproceedings{merged1087,
  abstract = {As a result of the rapidly changing digital landscape, there is momentum to bring coding to K-12 classrooms in jurisdictions all around the world. A barrier to student learning and success with coding, however, is that many teachers have little or no prior coding experience. Using constructivist grounded theory, this study will seek to understand what experiences in the teacher education course, Computational Thinking in Mathematics and Science Education, affect how preservice teachers perceive coding in teaching and learning about mathematics. Experiences in the course include hands-on activities, readings, tutorials, opportunities for reflection, assignments that require preservice teachers to teach coding to intermediate or senior students, and participation in online discussions. Research questions include 1) What course experiences or other factors affect how preservice teachers come to view coding in teaching and learning mathematics? and 2) How are these views, related to coding in teaching and learning mathematics, translated into their practice teaching?},
  address = {New York, NY, USA},
  author = {Floyd, Lisa Anne},
  booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
  doi = {10.1145/3372782.3407105},
  isbn = {9781450370929},
  keywords = {coding; computational thinking; computer science; k-12 education; pedagogy; teacher educatio},
  location = {Virtual Event, New Zealand},
  numpages = {2},
  pages = {350–351},
  publisher = {Association for Computing Machinery},
  series = {ICER '20},
  title = {The Integration of Coding in Teacher Education Programs: Course Experiences and the Teaching and Learning of Mathematics},
  url = {https://doi.org/10.1145/3372782.3407105},
  year = {2020}
}

@inproceedings{merged1088,
  abstract = {The Municipal Secretary of Education of Rio de Janeiro (SME-Rio), seeking to combat difficulties in the literacy process, school dropout, and learning gap, sought to re-signify the school curriculum of students in the Municipal Education Network with innovative approaches in the process like the maker culture, STEAM, and Education 5.0. In this way, SME-Rio developed the Gin\'{a}sio Experimental Tecnol\'{o}gico (GET) program, where students carry out hands-on activities in the Colaborat\'{o}rio of GET’s program and develop skills, competencies, and curricular components of Integral Education, articulated with the three pillars of the program: Digital Information and Communication Technologies (DICT), Digital Culture, and Computational Thinking. In 2023, a total of 70 school units are expected, and for 2024 a total of 200 schools are projected.},
  address = {New York, NY, USA},
  author = {Okuno, Helder Yukio},
  booktitle = {Proceedings of the 16th International Conference on Theory and Practice of Electronic Governance},
  doi = {10.1145/3614321.3614383},
  isbn = {9798400707421},
  keywords = {Gin\'{a}sio Experimental Tecnol\'{o}gico; Innovation in Education; Public Education Network; Smart Education},
  location = {Belo Horizonte, Brazil},
  numpages = {3},
  pages = {424–426},
  publisher = {Association for Computing Machinery},
  series = {ICEGOV '23},
  title = {Ginasio Experimental Tecnologico (GET): promoting pedagogical innovation and the development of student protagonism integrated into the municipal education network of Rio de Janeiro},
  url = {https://doi.org/10.1145/3614321.3614383},
  year = {2023}
}

@inproceedings{merged1089,
  abstract = {Context-based assignments have been shown as effective and popular for introductory-level computing courses. We study the use of one such context, pencil puzzles (puzzles typically found in newspapers), in upper-level core computing courses. These puzzles are designed to inspire computational thinking, making them a great choice for introductory-level computing assignments, but their fit for upper-level courses is less clear. We collaborated with several instructors of upper-level courses at four institutions, who delivered a pencil-puzzle-based assignment in their course and allowed us to survey their students about their experience. Overall, the students indicated positive perceptions of the assignments. The most varied answers related to implementation aspects of the assignments. To analyze correlations between students' sentiments and their demographic and experiential background, we used mixed-effects regression modeling to analyze this heterogeneous data set. The survey responses were characterized by two dimensions, one roughly corresponding to students' sentiment about the assignment and the other to their technical assessment of the assignment. For the first dimension, we found that the students' self-reported level of preparedness from earlier courses positively correlated with their enjoyment of and satisfaction with the pencil puzzle assignment. The second dimension was correlated with both the level of preparedness as well as the students' self-reported problem solving type: Clarifier, Implementor, Ideator, and Developer. Somewhat surprisingly, the analysis indicated Ideator as being the most positively correlated with the technical aspects of the assignment. Notably, the analysis did not indicate any correlation with students' race or gender in either dimension.},
  address = {New York, NY, USA},
  author = {Brilliantova, Angelina and Vitko, Asya and Bez\'{a}kov\'{a}, Ivona and Butler, Zack},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705225},
  isbn = {9798400705328},
  keywords = {context-based assignments; multi-institutional study; statistical model choice; upper-level core computing courses},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1399–1400},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Pencil Puzzles as a Context in Upper-level Core Computing Courses at Multiple Institutions},
  url = {https://doi.org/10.1145/3641555.3705225},
  year = {2025}
}

@inproceedings{merged1090,
  abstract = {Advancing computational thinking in elementary education has been rapidly gaining attention due to the prospective of developing 21st century skills. However, interventions in this domain risk failure if they do not explicitly address the particular socio-cultural traits of the deployment scenario. This is the case in most countries of Latin America, where computing has not reached a sustainable penetration in K-12 education. In order to bridge this gap, we designed a one-week workshop for advancing computational thinking targeted to 10-12 years old Chilean students with no prior experience in programming. This paper describes our intervention and presents the results of a qualitative study analyzing positive and negative aspects of the experience. Although most participants effectively acquired basic programming skills by the end of the intervention, we also identified several inaccurate views on computing and computer scientists. For instance, computing was mostly perceived as a set of informal experiences rather than a way for enabling creation, automation, and work. The word "hacking" appears to be used as a metaphor for more technical terms, such as "programming" or "algorithm". Finally, negative stereotypical views of computer scientists resulting from the intervention were not as frequent as initial perceptions. These results provide fresh evidence on how to design, adapt, and evaluate computational thinking interventions targeted to K-6 students in Latin America.},
  address = {New York, NY, USA},
  author = {Gutierrez, Francisco J. and Simmonds, Jocelyn and Casanova, Cecilia and Sotomayor, Cecilia and Hitschfeld, Nancy},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159598},
  isbn = {9781450351034},
  keywords = {computational thinking; k-6 education; latin america},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {993–998},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Coding or Hacking? Exploring Inaccurate Views on Computing and Computer Scientists among K-6 Learners in Chile},
  url = {https://doi.org/10.1145/3159450.3159598},
  year = {2018}
}

@inproceedings{merged1091,
  abstract = {Since the release of LLM-based tools such as GitHub Copilot and ChatGPT the media and popular scientific literature, but also journals such as the Communications of the ACM, have been flooded with opinions how these tools will change programming. The opinions range from “machines will program themselves”, to “AI does not help programmers”. Of course, these statements are meant to to stir up a discussion, and should be taken with a grain of salt, but we argue that such unfounded statements are potentially harmful. Instead, we propose to investigate which skills are required to develop software using LLM-based tools. In this paper we report on an experiment in which we explore if Computational Thinking (CT) skills predict the ability to develop software using LLM-based tools. Our results show that the ability to develop software using LLM-based tools can indeed be predicted by the score on a CT assessment. There are many limitations to our experiment, and this paper is also a call to discuss how to approach, preferably experimentally, the question of which skills are required to develop software using LLM-based tools. We propose to rephrase this question to include by what kind of people/programmers, to develop what kind of software using what kind of LLM-based tools.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Jeuring, Johan and Groot, Roel and Keuning, Hieke},
  booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3631802.3631807},
  isbn = {9798400716539},
  keywords = {ChatGPT; Computational thinking skills; LLM-based tools; Software development skills},
  location = {Koli, Finland},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '23},
  title = {What Skills Do You Need When Developing Software Using ChatGPT? (Discussion Paper)},
  url = {https://doi.org/10.1145/3631802.3631807},
  year = {2024}
}

@inproceedings{merged1092,
  abstract = {The emergence of generative artificial intelligence (GenAI) has ignited discussions surrounding its potential to enhance creative pursuits. However, distinctions between children’s and adult’s creative needs exist, which is important when considering the possibility of GenAI for children’s creative usage. Building upon work in Human-Computer Interaction (HCI), fostering children’s computational thinking skills, this study explores interactions between children (aged 7-13) and GenAI tools through methods of participatory design. We seek to answer two questions: (1) How do children in co-design workshops perceive GenAI tools and their usage for creative works? and (2) How do children navigate the creative process while using GenAI tools? How might these interactions support their confidence in their ability to create? Our findings contribute a model that describes the potential contexts underpinning child-GenAI creative interactions and explores implications of this model for theories of creativity, design, and use of GenAI as a constructionist tool for creative self-efficacy.},
  address = {New York, NY, USA},
  articleno = {117},
  author = {Newman, Michele and Sun, Kaiwen and Dalla Gasperina, Ilena B and Shin, Grace Y. and Pedraja, Matthew Kyle and Kanchi, Ritesh and Song, Maia B. and Li, Rannie and Lee, Jin Ha and Yip, Jason},
  booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3613904.3642492},
  isbn = {9798400703300},
  keywords = {Artificial Intelligence; Children; Co-Design; Constructionism; Creativity; Participatory Design},
  location = {Honolulu, HI, USA},
  numpages = {18},
  publisher = {Association for Computing Machinery},
  series = {CHI '24},
  title = {"I want it to talk like Darth Vader": Helping Children Construct Creative Self-Efficacy with Generative AI},
  url = {https://doi.org/10.1145/3613904.3642492},
  year = {2024}
}

@inproceedings{merged1093,
  abstract = {Academic self-concept, motivational beliefs, and attitudes towards a school subject are relevant for learning and educational achievement. A positive self-concept in science and mathematics is argued to motivate students to persist and advance in studying these subjects. In particular, self-concept, motivational beliefs, and attitudes towards STEM domains were found to be predictive of educational achievement. Recently, programming was suggested to be a key competence in education.To assess self-concept, motivational beliefs, and attitudes towards programming, we developed a new questionnaire based on existing scales for mathematics. The new questionnaire assesses the same aspects for programming on seven subscales, such as self-concept, belief about usefulness, and self-reported persistence when working on programming tasks.We conducted a pilot study in which we used this questionnaire to measure self-concept, motivational beliefs, and attitudes towards programming. The study was set in the context of an extracurricular course on computational thinking (CT) for elementary school students between the ages of seven and ten years. Before the start of the course, we assessed all 31 participating students' self-concept, motivational beliefs, and attitudes towards programming using the developed questionnaire and their CT skills using the Computational Thinking test (CTt).Our results confirmed the expected associations between the aspects assessed by our questionnaire. However, we did not find significant associations of questionnaire results and CT skills. Consequently, future research involving a larger sample is needed to better understand the association between children's actual performance and their self-concept, motivational beliefs, and attitudes towards programming.},
  address = {New York, NY, USA},
  articleno = {26},
  author = {Leifheit, Luzia and Tsarava, Katerina and Moeller, Korbinian and Ostermann, Klaus and Golle, Jessika and Trautwein, Ulrich and Ninaus, Manuel},
  booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3361721.3361730},
  isbn = {9781450377041},
  keywords = {computational thinking; computer science education; computing education; computing literacy},
  location = {Glasgow, Scotland, Uk},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '19},
  title = {Development of a Questionnaire on Self-concept, Motivational Beliefs, and Attitude Towards Programming},
  url = {https://doi.org/10.1145/3361721.3361730},
  year = {2019}
}

@inproceedings{merged1094,
  abstract = {The growing development and commercialization of Virtual Reality (VR) allow more children to get access to this technology. VR features a new, more emotional relevant experience with a sense of presence and high interactivity. In this paper, we present VWorld, an immersive VR system designed to boost children's creativity and computational thinking skill. VWorld enables children to create their own virtual world by putting 3D objects on a miniature map, then explore the world and control the chosen objects by constructing program sequences. We present the design and implementation of VWorld system, with the design considerations of children in our VR environment, and conduct the preliminary evaluation and the future plan of the study.},
  address = {New York, NY, USA},
  author = {Jin, Qiao and Liu, Yu and Yuan, Ye and Yarosh, Lana and Rosenberg, Evan Suma},
  booktitle = {Proceedings of the 2020 ACM Interaction Design and Children Conference: Extended Abstracts},
  doi = {10.1145/3397617.3397843},
  isbn = {9781450380201},
  keywords = {children; computational thinking; creation; programming languages; virtual reality},
  location = {London, United Kingdom},
  numpages = {6},
  pages = {235–240},
  publisher = {Association for Computing Machinery},
  series = {IDC '20},
  title = {VWorld: an immersive VR system for learning programming},
  url = {https://doi.org/10.1145/3397617.3397843},
  year = {2020}
}

@inproceedings{merged1095,
  abstract = {Our research is based on an innovative approach that integrates computational thinking and creative thinking in CS1 to improve student learning performance. Referencing Epstein's Generativity Theory, we designed and deployed a suite of creative thinking exercises with linkages to concepts in computer science and computational thinking, with the premise that students can leverage their creative thinking skills to "unlock" their understanding of computational thinking. In this paper, we focus on our study on differential impacts of the exercises on different student populations. For all students there was a linear "dosage effect" where completion of each additional exercise increased retention of course content. The impacts on course grades, however, were more nuanced. CS majors had a consistent increase for each exercise, while non-majors benefited more from completing at least three exercises. It was also important for freshmen to complete all four exercises. We did find differences between women and men but cannot draw conclusions.},
  address = {New York, NY, USA},
  author = {Miller, L. D. and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Hazley, Melissa Patterson},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2538862.2538940},
  isbn = {9781450326056},
  keywords = {CS1; computational thinking; creative thinking},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  pages = {475–480},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '14},
  title = {Integrating computational and creative thinking to improve learning and performance in CS1},
  url = {https://doi.org/10.1145/2538862.2538940},
  year = {2014}
}

@inproceedings{merged1096,
  abstract = {For the past four years, our research group has conducted a series of NSF funded studies on Computational Thinking (CT) involving elementary school students, parents, and teachers. We developed curriculum, trained teachers, observed classrooms, created museum exhibits, followed students and families, explored theory, and utilized the diverse skills of a large multi-disciplinary research group to understand the intersection of STEM, literacy, and CT. As we close out this grant, we are looking to disseminate our findings, share lessons learned about research methods and data collection, and build collaborations for future research.},
  address = {New York, NY, USA},
  author = {Lowe, Tony and Brophy, Sean and Cardella, Monica},
  booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3304221.3325585},
  isbn = {9781450368957},
  keywords = {computational thinking; formal and informal instruction; p-12; professional development},
  location = {Aberdeen, Scotland Uk},
  numpages = {1},
  pages = {312},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '19},
  title = {Findings from a Multi-year Study of CT in K-2 Students in Formal and Informal Settings},
  url = {https://doi.org/10.1145/3304221.3325585},
  year = {2019}
}

@inproceedings{merged1097,
  abstract = {Enhancing school mathematics with Computational Thinking (CT) and programming might be beneficial to student learning in both the fields of computing and mathematics. This doctoral research project aims to explore and enhance the integration of programming and CT within K-12 mathematics education. Through a two-month intervention study in a Norwegian lower secondary school, a highly modified PRIMM (Predict, Run, Investigate, Modify, and Make) framework was employed to teach programming within a lower secondary mathematics course.},
  address = {New York, NY, USA},
  articleno = {39},
  author = {Mathias Str\o{}mnes Nordvoll, Sindre},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699573},
  isbn = {9798400710384},
  keywords = {K-12; PRIMM; computer science education; instructional practices; programming education in mathematics; worked examples},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {The Role of Programming in Lower Secondary Math Education in Probability},
  url = {https://doi.org/10.1145/3699538.3699573},
  year = {2024}
}

@inproceedings{merged1098,
  abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative that elementary computing instruction support a variety of learners. A popular pedagogical approach for this age group is Use--&gt;Modify--&gt;Create, which introduces a concept through a more scaffolded, guided instruction before culminating in a more open-ended project for student engagement. Yet, there is little research on student learning during the Use--&gt;Modify step, nor strategies to promote learning in this step. This paper introduces TIPP&amp;SEE, a metacognitive learning strategy that further scaffolds student learning during this step. Results from an experimental study show statistically-significant performance gains from students using the TIPP&amp;SEE strategy on nearly all assessment questions of moderate and hard difficulty, suggesting its potential as an effective CS/CT learning strategy.},
  address = {New York, NY, USA},
  author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Sanchez, Ashley and Franklin, Diana},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366821},
  isbn = {9781450367936},
  keywords = {computational thinking; elementary education; learning strategy; scratch},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {79–85},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {TIPP&amp;SEE: A Learning Strategy to Guide Students through Use - Modify Scratch Activities},
  url = {https://doi.org/10.1145/3328778.3366821},
  year = {2020}
}

@inproceedings{merged1099,
  abstract = {Computer Science (CS) education is becoming increasingly important in K-12 schooling, with some U.S. states now requiring educators to integrate CS into various disciplinary courses. The CS for Social Studies project supports the integration of CS into Social Studies (SS) classes in rural middle schools. Twenty-five teachers, working mostly in pairs (one SS teacher and one CS or instructional technology teacher), participated in professional learning workshops and received coaching support to design and implement integrated lessons that address both SS and CS learning standards. The current analysis examines the corpus of year-end, project-based integrated CS-SS lessons (n=8), to illuminate how integrated CS-SS lessons can address learning goals across both disciplines. Data sources included teacher-created lesson materials, classroom observations/video, implementation logs, teacher interviews, and student work. Utilizing a framework created to characterize integrated CS-SS lessons, analysis of lessons (as designed and enacted) focuses on three dimensions: (1) depth of CS concepts, (2) integration of CS-SS, and (3) alignment of instructional tools/resources with integration objectives. All lessons addressed standards-aligned CS concepts such as variables, conditionals, branching, and computational thinking skills (e.g., decomposition), and a variety of SS topics including the Civil War, the Great Migration, and personal finance. However, lessons varied in the extent to which they leveraged students' CS knowledge to explicitly enhance SS learning (or vice versa). This analysis suggests there are multiple approaches to using CS concepts to support disciplinary learning, including creating new learning experiences to explore SS content.},
  address = {New York, NY, USA},
  author = {Bernstein, Debra and Hochberg, Eric and Gasca, Santiago and Berson, Michael and Franklin, Kristen and Shank, Perry},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701920},
  isbn = {9798400705311},
  keywords = {curricular integration; grades 5-8/middle school; professional development},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {109–115},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Bridging Disciplines: Integrating Computer Science and Social Studies in Rural Middle Schools},
  url = {https://doi.org/10.1145/3641554.3701920},
  year = {2025}
}

@inproceedings{merged1100,
  abstract = {Introducing elementary students to computer science and computational thinking (CS/CT) can enhance their problem solving skills and enhance their confidence and sense of belonging in computing. Project moveSMART aims to introduce learning activities into elementary classrooms that address computer science concepts in a way that integrates with core curriculum requirements and promotes physical activity. In this paper, we explore an extension to an initial set of Project moveSMART computer science learning activities to introduce elementary students to machine learning concepts in a way that is integrated with required learning objectives covered in a Physical Education course. Specifically, students use the BBC micro:bit and its on board sensors to capture rhythmic movement data, explore and analyze patterns in the data, and use a learned "dance move recognition" application that uses their data in order to learn about machine learning in an age appropriate way. To demonstrate feasibility of supporting dance move recognition on the resource-constrained device, we developed a prototype, which is able to detect 5 different dance moves with a 96.6% accuracy.},
  address = {New York, NY, USA},
  author = {Hunter, Holly and Payton, Jamie and Julien, Christine},
  booktitle = {Proceedings of the Twenty-Fourth International Symposium on Theory, Algorithmic Foundations, and Protocol Design for Mobile Networks and Mobile Computing},
  doi = {10.1145/3565287.3617623},
  isbn = {9781450399265},
  keywords = {activity recognition; broadening participation in computing; computer science education; smart health and well-being; wearable computing},
  location = {Washington, DC, USA},
  numpages = {5},
  pages = {463–467},
  publisher = {Association for Computing Machinery},
  series = {MobiHoc '23},
  title = {Expanding Elementary School Computer Science Education with an Introduction to Machine Learning Through Rhythmic Studies},
  url = {https://doi.org/10.1145/3565287.3617623},
  year = {2023}
}

@inproceedings{merged1101,
  abstract = {Introduction of computational thinking training in early childhood potentiates cognitive development and better prepares children to live and prosper in a future heavily computational society. Programming environments are now widely adopted in classrooms to teach programming concepts. However, these tools are often reliant on visual interaction, making them inaccessible to children with visual impairments. Also, programming environments in general are usually designed to promote individual experiences, wasting the potential benefits of group collaborative activities. We propose the design of a programming environment that leverages asymmetric roles to foster collaborative computational thinking activities for children with visual impairments, in particular mixed-visual-ability classes. The multimodal system comprises the use of tangible blocks and auditory feedback, while children have to collaborate to program a robot. We conducted a remote online study, collecting valuable feedback on the limitations and opportunities for future work, aiming to potentiate education and social inclusion.},
  address = {New York, NY, USA},
  articleno = {67},
  author = {Rocha, Filipa and Guimar\~{a}es, Guilherme and Gon\c{c}alves, David and Pires, Ana Cristina and Abreu, L\'{u}cia Ver\'{o}nica and Guerreiro, Tiago},
  booktitle = {Proceedings of the 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
  doi = {10.1145/3441852.3476553},
  isbn = {9781450383066},
  keywords = {accessible; children; collaboration; robot; tangible; visually impaired},
  location = {Virtual Event, USA},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {ASSETS '21},
  title = {Fostering collaboration with asymmetric roles in accessible programming environments for children with mixed-visual-abilities},
  url = {https://doi.org/10.1145/3441852.3476553},
  year = {2021}
}

@inproceedings{merged1102,
  abstract = {A number of educational jurisdictions in Canada and abroad are integrating coding and computational thinking (CT) concepts into their K-8 curriculum, however; very little investigation has been done comparing these nascent curricular reforms. This study will use qualitative content analysis to investigate the differences and similarities of K-8 coding and CT curriculum by comparing the concepts, themes, goals and objectives found in current documents. The study hopes to shed light on an important and under-addressed area of curriculum studies that will prove important as computer science education plays a bigger role in K-8 education.},
  address = {New York, NY, USA},
  author = {Floyd, Steven},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3339431},
  isbn = {9781450361859},
  keywords = {coding; computational thinking; computer science; curricula; k-12 education; k-8 education},
  location = {Toronto ON, Canada},
  numpages = {2},
  pages = {329–330},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {A Qualitative Content Analysis of K-8 Coding Curriculum},
  url = {https://doi.org/10.1145/3291279.3339431},
  year = {2019}
}

@inproceedings{merged1103,
  abstract = {Data analytics skills are in high demand in a wide variety of professions and data is increasingly present in our everyday lives. Considering this, educators should be equipped to prepare future data scientists, but also data literate citizens. This project engages high school students in the real-world practice of data analytics to promote the public interest. The research team is partnering with a local public STEM high school to design, evaluate, and publicly share an enrichment course that introduces students to data analytics in the context of public health. Integrating data science education and public health will enable students to engage in meaningful data-driven problem solving while promoting civic engagement. A key challenge in introducing data skills in K-12 is addressing barriers to access. To cope with these barriers, the course design incorporates the use of spreadsheets to engage students in computational thinking. This poster will present preliminary assessment results from the 3-week enrichment course conducted in January 2024. This project contributes to the ongoing discussion of K-12 data science education by demonstrating the value of contextualizing data science as a key competency for 21st century public service.},
  address = {New York, NY, USA},
  author = {Nutwell, Emily and Badger, Kelsey and Kulp, Jessica T.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635589},
  isbn = {9798400704246},
  keywords = {civic engagement; data science; public health; public interest technology; spreadsheets},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1764–1765},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Data for Healthy Communities: A Public Interest Pilot Course Designed to Develop K-12 Data Literacy},
  url = {https://doi.org/10.1145/3626253.3635589},
  year = {2024}
}

@inproceedings{merged1104,
  abstract = {We present a qualitative study of a Cypriot summer school where we used the BBC micro:bit to examine gender inclusivity in e-textiles. We employed the Computational Making framework to analyze ethnographic data teaching 24 middle school students, aged 10-15. The study contrasts the challenges faced by students using the micro:bit with those from our team’s previous similar e-textile studies using the LilyPad Arduino. We pinpoint the BBC micro:bit’s limitations from an inclusive design perspective, underscoring the absence of gender-sensitive considerations in its hardware design. The paper presents a critique how upwards of £75 Million were spent deploying the micro:bit without proper user studies of gender equity and e-textiles. We propose design recommendations for future BBC micro:bit versions, advocating for integrating a gender-sensitive participatory design approach to enhance the usability and engagement of computational and creative making with e-textiles for children of all genders.},
  address = {New York, NY, USA},
  articleno = {554},
  author = {Rode, Jennifer Ann and Barkhuus, Louise and Ioannou, Andri},
  booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3613905.3644056},
  isbn = {9798400703317},
  keywords = {BBC micro:bit; Children; Computational Making; Computational Thinking; E-textiles},
  location = {Honolulu, HI, USA},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '24},
  title = {Exploring Gender, Computational Making and E-Textiles using the BBC Micro:bit},
  url = {https://doi.org/10.1145/3613905.3644056},
  year = {2024}
}

@article{merged1105,
  abstract = {During COVID-19, undergraduate students in the urban college in New York City lost opportunities for almost all co-curricular informal learning outside the classroom. This paper describes the design, implementation, and preliminary evaluation of an "Virtual MAKE-A-THON" during 2020 at an urban HSI community college to provide underrepresented minority students a collaborative experiential co-curricular learning activity. Given today's rapid changes in technology, informal learning activities are important tools to bridge gaps with the newly emerging technologies for our undergraduate students. Informal learning activities can be designed to expose students to the new technologies that are not easily accessible within the traditional curriculum of structured, formal classroom learning activities while simultaneously developing their computational thinking, critical thinking, creativity, and soft skills. In addition, little research has been conducted on remote informal experiential learning environments for community college students that incorporate the students into collaborative teams solving challenging real world problems. In this paper, we share the successful implementation and evaluation of a virtual informal collaborative experiential learning activity called MAKE-A-THON during COVID-19 where community college students work in a team to create practical innovative solutions to global problems with mentor support from both academia and industry. The goal of the proposed informal learning model is to provide students real-world career preparation and technical education across disciplines through collaborative project activities while experiencing cutting-edge technologies. This paper will also include the pilot study of the impact on diverse students' computational thinking, critical thinking, creativity, and self-efficacy. The results are from surveys from 31 students participating in this month-long virtual MAKE-A-THON during Fall 2020.},
  address = {Evansville, IN, USA},
  author = {Azhar, Mohammad Q and Haynes, Ada},
  issn = {1937-4771},
  issue_date = {November 2022},
  journal = {J. Comput. Sci. Coll.},
  month = {November},
  number = {5},
  numpages = {10},
  pages = {117–126},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {A Pilot Study of a Virtual Informal Experiential Learning Activity during COVID-19},
  volume = {38},
  year = {2022}
}

@inproceedings{merged1106,
  abstract = {Computational thinking (CT) is viewed as a support structure for educators to develop computational literacies [18][35]. The majority of research around CT practices has focused on decomposition, abstraction, and algorithmic thinking; however, there is little research on debugging and how teachers see the role of debugging in their instruction [4][17]. Given that debugging is viewed as a vital CT skill [38], there is a need to understand how elementary teachers perceive its role in supporting student learning. In this paper, we present results from a study that examined how elementary teachers understood debugging as well as how they saw the role of debugging to support student learning. Our findings indicate that most elementary teachers perceived debugging as a metacognitive support that allowed their students to shift how they approached problem-solving. Our findings also suggest that debugging may be a good starting point to allow elementary teachers to initially latch onto integrating CT. We discuss implications of our findings for integrating CT practices into classroom instruction.},
  address = {New York, NY, USA},
  author = {Macann, Victoria and Yadav, Aman},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
  doi = {10.1145/3576882.3617919},
  isbn = {9798400700484},
  keywords = {computer science education; pre-service teachers; teacher education},
  location = {Hyderabad, India},
  numpages = {7},
  pages = {119–125},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Debugging Beyond the Code: Teachers' Perceptions of Debugging as a CT Practice Impacting Interdisciplinary Teaching and Learning},
  url = {https://doi.org/10.1145/3576882.3617919},
  year = {2023}
}

@inproceedings{merged1107,
  abstract = {Currently Switzerland is going through a major reform in its education system. One of its most ambitious and important goals is the inclusion of Computer Science Education already on the primary school level, an important measure in achieving the establishment of an information society. Such a reform raises questions about the appropriate types of approaches to be developed and employed for an effective implementation of Computer Science Education concepts in Swiss primary schools. To this end, the project "Scalable Game Design Solothurn" was developed and evaluated. This project both trained teachers and exposed students to Computational Thinking concepts through the two Computational Thinking Tools AgentSheets and AgentCubes online. Results show that teaching Computational Thinking through Scalable Game Design is not only feasible on the primary school level but also enjoyable, with AgentSheets and AgentCubes online proving to be sustainable and effective tools for the implementation of Computer Science Education on this school level. Further analysis of the data enables us to make recommendations regarding optimal ways of implementation for the Swiss reality and point towards new research directions.},
  address = {New York, NY, USA},
  author = {Lamprou, Anna and Repenning, Alexander and Escherle, Nora A.},
  booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3059009.3059017},
  isbn = {9781450347044},
  keywords = {computational thinking; computer science education; experience repor; primary schools; professional teacher development},
  location = {Bologna, Italy},
  numpages = {6},
  pages = {218–223},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '17},
  title = {The Solothurn Project: Bringing Computer Science Education to Primary Schools in Switzerland},
  url = {https://doi.org/10.1145/3059009.3059017},
  year = {2017}
}

@inproceedings{merged1108,
  abstract = {In recent years, there has been a growing emphasis on using computational thinking (CT) to teach mathematical concepts. The integration of math+CT enables students to gain a deeper understanding of both mathematical and computer science (CS) concepts. Although numerous professional development programs provide teachers with a solid understanding of CT and methods for integrating it into the curriculum, there has been little research on how teachers apply this knowledge to the design and development of math+CT activities. Moreover, the majority of integrated activities are concentrated in the upper elementary grades, while the early grades (i.e., K-2) remain underexplored. The purpose of this study is to describe how teachers translate their CT knowledge in the collaborative design of an integrated math+CT activity focused on number sense and mathematical operations for grades K-2. Research faculty from the CS and Teacher Education departments designed block-based programming activities for K-2 students to explore and make sense of place value representations of the numbers 1 - 1000. In-service elementary teachers in an online graduate STEM CT course (N = 13) experienced these activities as learners and provided feedback for redesign from their perspectives as classroom teachers. Qualitative analysis of collaborative problem-solving slides and individual reflections revealed how teachers connected their mathematical knowledge for teaching place value to their emergent understanding of CT concepts of abstraction, decomposition, and debugging. This research bridges the gap between enthusiasm for math+CT integration and teacher capacity to use CT to promote creative mathematical thinking and problem-solving in K-2 classrooms.},
  address = {New York, NY, USA},
  author = {Dahshan, Mai and Galanti, Terrie M.},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576268},
  isbn = {9781450394338},
  keywords = {computational thinking; curriculum development; early childhood education; mathematics education; pk-12 cs education; professional development},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1321},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Designing Integrated Math + CT Activities to Promote Sensemaking about Place Value in Grades K-2},
  url = {https://doi.org/10.1145/3545947.3576268},
  year = {2023}
}

@inproceedings{merged1109,
  abstract = {With many school districts nationwide integrating Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial researchers closely inspect the relationship between program expression and student understandings. In this study, we propose and report on our use of Scratch Charades, a game in which students act out Scratch scripts while others build them. The purpose of Scratch Charades is to familiarize students with scripts and blocks without the cognitive overhead of the complex user interface. However, in this study, we also used it to elicit student understandings about Scratch blocks and scripts to design mnemonics to help students debug their code. We propose two building and/or debugging strategies based on our observations.},
  address = {New York, NY, USA},
  author = {Franklin, Diana and Salac, Jean and Thomas, Cathy and Sekou, Zene and Krause, Sue},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366911},
  isbn = {9781450367936},
  keywords = {computational thinking; elementary education; learning strategy; scratch},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {780–786},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Eliciting Student Scratch Script Understandings via Scratch Charades},
  url = {https://doi.org/10.1145/3328778.3366911},
  year = {2020}
}

@inproceedings{merged1110,
  abstract = {There has been a worldwide surge in programming education initiatives for children and teenagers. In Brazil, this trend faces some challenges, namely inadequate infrastructure of most schools, notably public ones, that lack access to computers and tablets, and basic education curricular requirements not contemplating computer science concepts. This article reports on the five-year experience of an outreach project from a public university in Brazil. The project aims to promote computer science education and to teach programming to children and teenagers. Undergraduate engineering students who participate in the project as members engage in activities such as planning the courses and their schedules, creating partnerships with local schools and other educational projects, giving lectures, producing scientific research and educational materials, as well as promoting the project on social media. The courses use free online programming tools, Python, MIT App Inventor, and Arduino to cover fundamental concepts of programming and computational thinking. They vary approaches and tools according to the age range and available technological resources of the target audience. The use of unplugged activities means to assist in learning and to circumvent computer access problems. Furthermore, they serve for introducing basic programming concepts in classes and motivating students with dynamic activities. Over its five-year existence, the project has achieved its purpose, by reaching a total of 2639 students through 45 workshops and 94 courses. It has provided courses in eleven public schools, created two booklets and one app as free educational material, along with presented papers and posters in scientific conferences.},
  address = {New York, NY, USA},
  author = {Branco, Andr\'{e} and Dutra, Claudia and Zumpichiatti, D\'{e}bora and Campos, Francisco Augusto and SantClair, Gabriel and Mello, Jhulian and Moreira, Jo\~{a}o Victor and Godinho, Julia and Marotti, Julia and Gomide, Janaina},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432554},
  isbn = {9781450380621},
  keywords = {computational thinking; computer science education; didactic strategies; k-12; programming},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {411–417},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Programming for Children and Teenagers in Brazil: A 5-year Experience of an Outreach Project},
  url = {https://doi.org/10.1145/3408877.3432554},
  year = {2021}
}

@inproceedings{merged1111,
  abstract = {In this workshop, participants will learn about how to integrate computational thinking and creative thinking activities that have been shown to significantly improve student learning and performance in their classes via rigorous research investigations. In particular, participants will be familiarized with the suite of Computational Creativity Exercises (CCEs) (which are non-programming-based, group-based, active learning exercises), practice hands-on how to complete such an CCE, learn about how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these CCEs. Participants will also learn how to conduct evidence-based educational research studies. Workshop sessions will include presentations, panel-based Q&amp;A, an experience report, breakout group discussions, and hands-on activities. A suite of resources including the survey instruments, CCEs, implementation strategies, and research findings will be shared post-workshop. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop2021.},
  address = {New York, NY, USA},
  author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432486},
  isbn = {9781450380621},
  keywords = {active learning; computational thinking; creative thinking; educational research},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1350},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and An Experience Report},
  url = {https://doi.org/10.1145/3408877.3432486},
  year = {2021}
}

@inproceedings{merged1112,
  abstract = {Artificial Intelligence has rapidly captured-again-the attention of practitioners and the CS Education community. Several initiatives have been spawning to identify effective ways to introduce learners at college and high-school levels to the basics of AI. In this context, we developed Scratch-NB, an extension to the Scratch programming language to equip K-8 learners with foundational tools for developing a Naive-Bayes classifier, explicitly transparenting its internal components. We opted to use Scratch due to its popularity within the CS4All movement and its predominance in schools, and extend the language with a simple implementation of the Naive Bayes classifier as a gateway for introducing basic notions of supervised learning and AI. In this paper, we report the design rationale of our tool and our experience of using it in an informal workshop with children aged 10-12 with no prior knowledge of computational thinking, coding, or AI. The obtained results show that Scratch-NB showed high levels of acceptance among the participants, raised interest in AI, and effectively provided basic foundations, particularly when comparing Scratch-NB with other state-of-the-art tools targeted to this learner group. We argue that our tool has the potential to illuminate further practical and research endeavors when exploring how to effectively introduce younger populations to the foundational notions of AI in practical contexts.},
  address = {New York, NY, USA},
  author = {Quiroz, Patricio and Gutierrez, Francisco J.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630920},
  isbn = {9798400704239},
  keywords = {ai education; classification; k-8 education; naive bayes; scratch},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {1077–1083},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Scratch-NB: A Scratch Extension for Introducing K-12 Learners to Supervised Machine Learning},
  url = {https://doi.org/10.1145/3626252.3630920},
  year = {2024}
}

@inproceedings{merged1113,
  abstract = {With the recent paradigm shift in the teaching of computing and computational thinking skills, schools are engaging pupils as young as five in learning principles and concepts of programming. However, there are still many challenges within primary computing education, including the cost and availability of resources, and teachers' familiarity and/or confidence with these resources. In this paper, we offer an approach that develops a creative story-based pedagogy to address constraints such as these and facilitate the development of lesson plans supporting scaffolding and differentiation. Children's literature is used to introduce concepts such as pattern matching, abstraction and algorithms, along with the three main programming constructs of sequencing, repetition and selection. Through four stages of Read-Act-Model-Program (RAMP), we present a set of unplugged and Scratch-based activities and reflect on the potential impact of this educational opportunity to inspire an early interest in computing.},
  address = {New York, NY, USA},
  articleno = {23},
  author = {Twigg, Sarah and Blair, Lynne and Winter, Emily},
  booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3361721.3362116},
  isbn = {9781450377041},
  keywords = {Children's Literature; Computational Thinking; Pedagogy; Primary; Programming},
  location = {Glasgow, Scotland, Uk},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '19},
  title = {Using children's literature to introduce computing principles and concepts in primary schools: work in progress},
  url = {https://doi.org/10.1145/3361721.3362116},
  year = {2019}
}

@inproceedings{merged1114,
  abstract = {In an undergraduate CS1 course, we designed two projects to help students apply their learning: one in biology and one in chemistry. In this paper, we focus on the biology project, in which students identify and visualize gene mutations using real BRCA1 gene data. The projects received positive feedback, helping students see how coding applies to real-world problems in different scientific fields, understand real-world limitations, and reinforce their programming and problem-solving skills. This multi-context approach ensures a comprehensive understanding of programming concepts and their applications.},
  address = {New York, NY, USA},
  author = {Qin, Meiying and Atallah, Jade and Schroeder, Jonatan and Zhang, Larry Yueli and Kouyoumdjian, Hovig},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3731273},
  isbn = {9798400715693},
  keywords = {biology; computational thinking; context; cs1; project},
  location = {Nijmegen, Netherlands},
  numpages = {2},
  pages = {717–718},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Contextual Learning in CS1: Integrating a Biology Project to Reinforce Core Programming Concepts},
  url = {https://doi.org/10.1145/3724389.3731273},
  year = {2025}
}

@inproceedings{merged1115,
  abstract = {There is growing attention for developing professional learning experiences for content area teachers to infuse computational thinking (CT). However, there is little reporting on how teachers continue to implement the CT lessons once professional development (PD) is over. This study provides initial results on our efforts of building project sustainability through teacher autonomy in designing their own CT infusion projects or PDs for their schools. Our initial analysis indicates the need to continue to build teacher autonomy within the professional learning experiences for developing teacher confidence and sustainability of the project.},
  address = {New York, NY, USA},
  author = {Joshi, Deepti and Jocius, Robin and Blanton, Melanie and Albert, Jennifer and O'Byrne, Ian},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576332},
  isbn = {9781450394338},
  keywords = {computational thinking infusion; cs education; k-12 teacher profession development},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1387},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Project Sustainability through Teacher Autonomy in CT Infusion},
  url = {https://doi.org/10.1145/3545947.3576332},
  year = {2023}
}

@inproceedings{merged1116,
  abstract = {Improving students' abilities of computational thinking and professional problems solving is an urgent issue for non-major students who live in the information age. This paper first analyzes the reasons of the above issue from time gap and guide absence. Constructivism learning theory is then introduced as the guiding principle, and its four core characteristics are elaborated by the computer innovative practice base of East China University of Science and Technology (ECUST). Furthermore, the project based collaborative learning process is illustrated step by step to solve the existed problem. In the end, four years' experimental result shows the method is effective in improving students' abilities of analyzing professional problems, solving professional problem and cultivating computational thinking.},
  address = {New York, NY, USA},
  author = {Wen, Xinxiu and Yang, Zeping and Wang, Zhanquan},
  booktitle = {Proceedings of the 6th International Conference on Information and Education Technology},
  doi = {10.1145/3178158.3178175},
  isbn = {9781450353595},
  keywords = {computational thinking; constructivism; professional problems solving; project based collaborative learning},
  location = {Osaka, Japan},
  numpages = {5},
  pages = {139–143},
  publisher = {Association for Computing Machinery},
  series = {ICIET '18},
  title = {Research on enhancing non-major students' abilities based on constructivism},
  url = {https://doi.org/10.1145/3178158.3178175},
  year = {2018}
}

@inproceedings{merged1117,
  abstract = {Computational Thinking (CT) is a key component of 21st century education. With that visual programming has become a major tool for primary school students to learn programming. In response to the current difficulties of primary school students in transitioning from visual programming learning to C++ programming learning, this paper develops an online programming teaching system based on the Goc programming for primary school students for introductory C++ programming learning (www.51goc.com). The system has the characteristics of visualization of programming results, game-based teaching and service of teaching. The usefulness and reliability of the system has been verified through its implementation in Foshan, Guangdong for nearly three years, which has helped in the teaching of programming.},
  address = {New York, NY, USA},
  author = {Ding, Guozhu and Liu, Jiaxin and Liu, Xuan and Jiang, Tao and Liang, Guanjian},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572589},
  isbn = {9781450397766},
  keywords = {primary school students; teaching system; visualization of programming results},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {245–251},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {Design and Development of a Text Programming Teaching System for Primary school Students},
  url = {https://doi.org/10.1145/3572549.3572589},
  year = {2023}
}

@inproceedings{merged1118,
  abstract = {Computational thinking is gradually being introduced into elementary school curricula, usually accompanied by some form of programming activity. However, even a creative and hands-on activity such as programming Ozobot robots with color codes requires elementary school teachers to provide adequate help. We therefore developed hint cards based on criteria for effective feedback and common color code mode issues. Based on our experience of using the hint cards in 17 workshops in elementary schools with 328 children and 21 educators, we identify how the hint cards (1) address feedback challenges, (2) support learning, and (3) can be adapted for broader use. We find that hint cards provide benefits at the teacher, learner and organizational level, but also identify possible disadvantageous circumstances. Although the hint cards support learning regarding affective, cognitive and meta-cognitive aspects, strategies for adaptation are needed. We discuss how the hint cards can be used in other contexts, and give recommendations on how to use the knowledge of common issues and hint cards for supporting elementary school teachers with teaching programming.},
  address = {New York, NY, USA},
  author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630868},
  isbn = {9798400704239},
  keywords = {feedback; primary school; programming; teacher education},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {408–414},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Hint Cards for Common Ozobot Robot Issues: Supporting Feedback for Learning Programming in Elementary Schools},
  url = {https://doi.org/10.1145/3626252.3630868},
  year = {2024}
}

@article{merged1119,
  abstract = {There is increasing interest in computer science and computing bachelor programs due to the growing importance of technology in the globalized world. Thus, as higher education institutions strive to serve a diverse student demographic, it is salient to gauge their programming abilities to improve guidance on learning processes regarding their initial knowledge state. Despite the availability of certain instruments to measure student programming skills, these are traditionally aimed at younger populations and do not accurately discriminate the different levels of ability among university students. This article introduces a translation into Spanish and validation of an existing English-language aptitude test for computing jobs that can be used to measure the programming abilities of students with no prior experience in the field. Following a cyclic research methodology, two iterations were carried out in this article. First, the aforementioned test was translated and validated via expert judgment and focus groups, in which certain items were removed subsequent to a quantitative analysis. The resultant instrument underwent a second validation using a larger population of students. Analysis conducted after the second iteration showed this instrument to deliver good internal consistency, good difficulty and discrimination indices, and a moderate correlation with the grades of the midterm exam of a programming course undertaken by first year engineering students. This work contributes to both increasing the number of tests available in the Spanish language with which to assess programming abilities, as well as to the broader literature regarding test adaptation, translation and validation.},
  address = {New York, NY, USA},
  articleno = {21},
  author = {V\'{a}squez, Francisco and Calder\'{o}n, Juan Felipe and Meza, Federico and V\'{a}squez, Andrea},
  doi = {10.1145/3579365},
  issue_date = {June 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Programming assessment; assessment; cs1; programming aptitude; quantitative research; validation},
  month = {March},
  number = {2},
  numpages = {20},
  publisher = {Association for Computing Machinery},
  title = {Validation of a Spanish-language Version of a Computer Programming Aptitude Test for First-year University Students},
  url = {https://doi.org/10.1145/3579365},
  volume = {23},
  year = {2023}
}

@inproceedings{merged1120,
  abstract = {Designing computational toys and kits to welcome young children from different genders is essential to broaden participation in computing, as they play a critical role in facilitating children’s development of computational thinking. However, how young learners of different genders are being welcomed by these kits remains unclear. In this paper, we report our in-progress work examining how commercially available coding kits for young children are communicated from a gender perspective. Specifically, we analyzed the gender indications in the product descriptions and advertisement images of 30 kits, revealing a relatively balanced gender representation in images while significantly boy-oriented use of words in product descriptions. Ultimately, we call for attention and actions to more gender-inclusive communication of STEM toys for children.},
  address = {New York, NY, USA},
  author = {Cen, Jingyao and Yu, Junnan},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3593859},
  isbn = {9798400701313},
  keywords = {Coding Kits; Gendered Images; Gendered Language; Inclusiveness; Young Children},
  location = {Chicago, IL, USA},
  numpages = {6},
  pages = {624–629},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Examining Gendered Communications of Coding Kits for Young Children},
  url = {https://doi.org/10.1145/3585088.3593859},
  year = {2023}
}

@inproceedings{merged1121,
  abstract = {Code to Cope is a STEAM curriculum for young adults designed to teach, develop, and encourage coping mechanisms while learning programming with JavaScript. COVID-19 restrictions, such as social distancing and remote learning, disrupted social development and identity formation in young adults, exacerbating mental health issues that remain unaddressed in existing STEAM curriculum. Young adults are vulnerable to psychological distress that adversely affects educational experiences and career path choices. The Code to Cope curriculum was adopted by the creative coding course at Louisiana State University from 2021 to 2022. We conducted interviews with four students in 2021 and empirical studies with 34 students in 2022 to evaluate the effects of the curriculum in terms of code, coping, and creativity. The results of the study show that the Code to Cope curriculum effectively teaches computational thinking, develops self-care practices, and engages and motivates students.},
  address = {New York, NY, USA},
  author = {Nam, Hye Yeon and Webb, Andrew M. and Tucker, Raymond and Harmon, Brendan},
  booktitle = {Proceedings of the 15th Conference on Creativity and Cognition},
  doi = {10.1145/3591196.3593335},
  isbn = {9798400701801},
  keywords = {Code to cope; STEAM education; coping mechanisms; creative coding; self-care},
  location = {Virtual Event, USA},
  numpages = {9},
  pages = {162–170},
  publisher = {Association for Computing Machinery},
  series = {C&amp;C '23},
  title = {Code to Cope: Supporting Self-Care by Integrating Creative Coding and Coping Mechanisms},
  url = {https://doi.org/10.1145/3591196.3593335},
  year = {2023}
}

@inproceedings{merged1122,
  abstract = {Agent-based modeling (ABM) has become a major approach to promote computational thinking and complex systems thinking in K-12 education. However, agent-based programming (ABP), the computational foundation of ABM, is less defined and discussed in previous literature. Summarizing previous studies around ABP from computer science and education, we argued for the potential benefits of introducing ABP to youth. Rooted in the interest development theory, we presented the design of a scaffolded agent-based programming space, the Pocketworld Playground (POP), that aims to engage out-of-school online young learners through developing their interest in ABP. The POP was built in Turtle Universe (TU), the mobile incarnation of NetLogo. Using a mixed-methods approach to analyze log data and artifacts created by learners, we found that POP successfully engaged learners with ABP practices; helped develop situational and individual interest; and contributed to TU’s emerging online community. Finally, we discussed design lessons that could benefit other online learning designers.},
  address = {New York, NY, USA},
  author = {Chen, John and Zhao, Lexie and Horn, Mike and Wilensky, Uri},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589357},
  isbn = {9798400701313},
  keywords = {Agent-based Programming; Agent-based modeling; Computational Literacy; Constructionism; Informal Learning},
  location = {Chicago, IL, USA},
  numpages = {11},
  pages = {267–277},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {The Pocketworld Playground: Engaging Online, Out-of-School Learners with Agent-based Programming},
  url = {https://doi.org/10.1145/3585088.3589357},
  year = {2023}
}

@inproceedings{merged1123,
  abstract = {Introducing algorithmic problem-solving in K-12 beginner programming classes requires scaffolding methods that structure both the selection and sequencing of problems. In response to calls for a stronger emphasis on abstraction-oriented teaching, in this poster a new idea for introducing algorithmic problem-solving is proposed. Students are presented with two structurally equivalent problems, which they must compare and solve concurrently with a common algorithmic solution. Here, the approach and the design of a mixed-methods study investigating its effectiveness are presented.},
  address = {New York, NY, USA},
  author = {Oser, Annika},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730788},
  isbn = {9798400715693},
  keywords = {abstraction; algorithmic problem-solving; computational thinking; equivalent examples; k-12},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {787},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Find One Solution that Solves both Problems! Algorithmic Problem-Solving with Equivalent Examples},
  url = {https://doi.org/10.1145/3724389.3730788},
  year = {2025}
}

@inproceedings{merged1124,
  abstract = {Educators often use computer science education resources to enhance the learning process, which come with a variety of output modalities (e.g., audiovisual, tangible) and coding modalities (e.g., block-based, text-based). While these resources are typically evaluated for their applicability and impact on young populations, they are not often analyzed through a comparison of their coding and output modalities, nor as a whole to each other. In this paper, we conducted BridgeUP STEM, an afterschool CS course for high school women and gender non-conforming individuals aimed at developing their computational thinking skills and exposing them to coding and CS. We collected and analyzed interview data for 16 participants on their experiences within the course and attitudes towards various output and coding modalities. Throughout the study, the students’ reflections on their own learning revealed the affordances and drawbacks of each resource in terms of outputs the resources provided, feedback the students received, and how both affected the students’ troubleshooting. We present these findings and use them to provide recommendations for approaches to teaching computer science.},
  address = {New York, NY, USA},
  articleno = {18},
  author = {Johnson, Michael J. and Baker-Ramos, Rachel and Hovey, Christopher Lynnly and DiSalvo, Betsy},
  booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3631802.3631819},
  isbn = {9798400716539},
  keywords = {afterschool; computer science education; modality; physical computing; screen-based computing},
  location = {Koli, Finland},
  numpages = {14},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '23},
  title = {Keeping Mindful of Modality: A Comparison of Computer Science Education Resources for Learning},
  url = {https://doi.org/10.1145/3631802.3631819},
  year = {2024}
}

@inproceedings{merged1125,
  abstract = {Traditionally, computer science (CS) in the United States has been an elective subject at the high school level. In recent years, however, some school systems have created a CS graduation requirement. Designing a required CS course that meets the needs of anticipated future advancements in the field necessitates exploring the research question, What computing content do high school teachers, college instructors, and computing industry professionals prioritize in a required computer science course for high school students? To better understand what these different groups perceive to be the essential content of a foundational high school CS course, we conducted a series of focus groups. These focus groups explored participants' (n = 21) thinking about what content would be most important to prioritize in a required high school CS course. Transcripts of the focus groups were abductively coded and then analyzed to determine what CS content priorities were identified and what disagreements about priorities exist. We found that participants (1) emphasized CS knowledge and skills, with minimal reference to dispositions, (2) prioritized content similar to that found in current CS standards, (3) developed broad, high-level descriptions of content, (4) identified contextually relevant factors, (5) foregrounded AI both a tool and as a subdomain of CS, and (6) emphasized computational thinking. These findings can inform further research on the design and implementation of a required high school CS course designed to meet the needs of the future as well as to support revisions of CS standards for high school students.},
  address = {New York, NY, USA},
  author = {Smith, Julie M. and Twarek, Bryan and McGill, Monica M.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635554},
  isbn = {9798400704246},
  keywords = {curriculum; focus groups; high school; standards},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1822–1823},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Reimagining CS Courses for High School Students},
  url = {https://doi.org/10.1145/3626253.3635554},
  year = {2024}
}

@inproceedings{merged1126,
  abstract = {Our world is both physical and digital. Students would benefit from understanding how this digital world works, and how algorithms drive it [2]. Students would also benefit from learning computational thinking, and becoming creators and designers of computer systems and applications. These are invaluable skills; not just a means to ensure a skilled workforce [1]. However, diversity, gender balance, and equality are recognized globally as challenges in this field. Looking through a lens filtered on four components: diversity, inclusion, teacher education and professional development, this study will evaluate current Computer Science (CS) learning opportunities in the Irish primary and post-primary curriculum. It aims to identify the opportunities and key factors for the growth and development of CS in Ireland. This research is divided into three phases, influenced by the three components of the CAPE model [3] that underpins this study: Capacity for, Access to, and Participation in CS education. Data will be gathered using various means: focus groups (students, teachers, principals and policymakers), and student questionnaires. The analytic approach is mixed, it involves document, thematic and content analysis. Findings from this study will provide a detailed view of the current landscape relating to CS education in Ireland, particularly its diversity and inclusion. Recommendations on the equitable integration of Computational Thinking/Coding/CS education across the formal education system in Ireland will be provided. This will have implications for educational policy, initial teacher education, and second-level teaching practice in Ireland and beyond.},
  address = {New York, NY, USA},
  author = {Kirwan, Colette and Connolly, Cornelia},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
  doi = {10.1145/3502717.3532127},
  isbn = {9781450392006},
  keywords = {cape model; computer science landscape; diversity; equity.; inclusion},
  location = {Dublin, Ireland},
  numpages = {1},
  pages = {610},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Computer Science Education in Ireland: Capacity, Access and Participation},
  url = {https://doi.org/10.1145/3502717.3532127},
  year = {2022}
}

@inproceedings{merged1127,
  abstract = {Geocomputation is an inherently interdisciplinary topic, combining both geospatial information science (GISc) and computer science (CS). It could be taught by individuals with strong backgrounds in both areas, but it is argued that such individuals are rare and academia is poorly positioned to produce a future generation of such dual-skilled individuals. Interdisciplinary team teaching is presented as an alternative. Hurdles to developing such team-taught classes are identified, and possible ways to overcome them are presented. Finally, a way of restructuring academia to be more supportive of such interdisciplinary team projects is presented.},
  address = {New York, NY, USA},
  articleno = {1},
  author = {Dean, Denis J.},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365368},
  isbn = {9781450369527},
  keywords = {Education; Geospatial information science (GISc); Interdisciplinarity},
  location = {Chicago, IL, USA},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {Some Observations Regarding Geocomputational Teaching through Interdisciplinary Teams},
  url = {https://doi.org/10.1145/3356393.3365368},
  year = {2019}
}

@inproceedings{merged1128,
  abstract = {Students are nowadays being introduced to the digital age as part of their formal education. This includes practical programming skills as well as more conceptual thinking tools developed in the discipline of computer science, sometimes denoted Computational Thinking (CT). The connection between CT and doing programming is sometimes thought of as the connection between theory and practice. The pragmatic thinker Dewey embraced practice in learning and argued that learning and knowing always come from experiencing the world. According to this view, there are no epistemological differences between theory and practice. In computer programming the student's active learning in the form of physical motor movement is important. Using the pragmatic way of analyzing learning to program puts a focus on the situated thinking during the practical programming, which relates to theories about CT. This research is focusing on the practical hands-on part of novice programming and in this aims at getting insights about factors important when learning to program that could inform teachers in the Computer Science classroom.},
  address = {New York, NY, USA},
  author = {von Hausswolff, Kristina},
  booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3141880.3143780},
  isbn = {9781450353014},
  keywords = {computational thinking; computer science education; novice programming; practice; pragmatism},
  location = {Koli, Finland},
  numpages = {2},
  pages = {203–204},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '17},
  title = {Practical thinking in programming education},
  url = {https://doi.org/10.1145/3141880.3143780},
  year = {2017}
}

@inproceedings{merged1129,
  abstract = {In an undergraduate CS1 course, we designed two projects to help students apply their learning: one in biology and one in chemistry. In this paper, we focus on the chemistry project, which centers on cheminformatics, the application of computational methods to analyze and interpret chemical data, which are particularly useful in drug discovery. In this project, students filter drug candidates using the PubChem database. The projects received positive feedback, helping students see how coding applies to real-world problems in different scientific fields, understand real-world limitations, and reinforce their programming and problem-solving skills. This multi-context approach ensures a comprehensive understanding of programming concepts and their applications.},
  address = {New York, NY, USA},
  author = {Qin, Meiying and Kouyoumdjian, Hovig and Schroeder, Jonatan and Zhang, Larry Yueli and Atallah, Jade},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3731272},
  isbn = {9798400715693},
  keywords = {chemistry; computational thinking; context; cs1; project},
  location = {Nijmegen, Netherlands},
  numpages = {2},
  pages = {715–716},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Contextual Learning in CS1: Integrating a Chemistry Project to Reinforce Core Programming Concepts},
  url = {https://doi.org/10.1145/3724389.3731272},
  year = {2025}
}

@inproceedings{merged1130,
  abstract = {With the rapid development of artificial intelligence, big data, and education informatization, information technology education has been playing an important role in improving student's information competences and cultivating student's computational thinking. Information technology teachers can develop professional skills by the observation and analysis of high-quality information technology lessons. Therefore, this study selects a high-quality information technology lesson from the campaign which is held by Ministry of Education, analyzes its teaching behaviors based on improved Flanders Interaction Analysis System(iFIAS), as well as summarizes the key characteristics and problems, aiming to provide references for information technology teachers to improve teaching quality.},
  address = {New York, NY, USA},
  author = {Tang, Wenlu and Cheng, Yun and Ai, Mingying and Yi, Xinyu},
  booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
  doi = {10.1145/3582580.3582637},
  isbn = {9781450398015},
  keywords = {Information technology; analysis of teaching Behavior; high-quality lesson; iFIAS},
  location = {Lincoln, United Kingdom},
  numpages = {6},
  pages = {327–332},
  publisher = {Association for Computing Machinery},
  series = {ICETM '22},
  title = {Case Study on a High-quality Information Technology Lesson Based on iFIAS},
  url = {https://doi.org/10.1145/3582580.3582637},
  year = {2023}
}

@inproceedings{merged1131,
  abstract = {Mathematics is usually taught using a traditional pencil-and-paper approach and frequently lacks real-world contextual referents, leading to a sense of alienation among secondary students and missed opportunities to advance students’ mathematical and computational thinking. In contrast, many real-world problems require mathematical solutions that are often of such a scale that they can only be solved using computational techniques, but require powerful ways of thinking that span the Common Core State Standards (CCSS) for Mathematical Practices (MP) and Computer Science Principles (CSP). We describe here our program that aims at advancing both MPs and CSPs through the introduction of technology and computing into the high school discrete mathematics curriculum. Our goal in the first two years of this new program is to reach a cohort of 40 teachers and 72 students. Using lessons learned from this pilot, we will consider how our program can be scaled up to reach a much larger audience.},
  address = {New York, NY, USA},
  author = {S. Sinkovits, Robert and D. Soto, Osvaldo},
  booktitle = {Practice and Experience in Advanced Research Computing 2020: Catch the Wave},
  doi = {10.1145/3311790.3396620},
  isbn = {9781450366892},
  keywords = {Computational thinking; Jupyter notebooks; STEM education; discrete math; secondary education},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {429–435},
  publisher = {Association for Computing Machinery},
  series = {PEARC '20},
  title = {Introducing Computing and Technology through Problem-Solving in Discrete Mathematics},
  url = {https://doi.org/10.1145/3311790.3396620},
  year = {2020}
}

@inproceedings{merged1132,
  abstract = {What would happen if generalist K-5 teachers had the technical support to build custom digital tools integrating computing concepts across other fields of study? This could open new avenues for students to learn computational thinking, without compromising time spent in other important subject areas. Furthermore, it could grant teachers the same level of creativity in developing computing resources that they have in other curriculum areas, rather than being limited by available resources or by their own lack of expertise. With this poster, we will cover our approach to co-designing digital tools with K-5 teachers for the primary goal of integrating computing concepts into a variety of other subject areas. We reflect on the observations we made throughout the collaboration and how they impacted our approach moving forward. Additionally, we will highlight some of the tools that came out of the collaboration and how co-designing a specialized digital tool from the ground up granted teachers the flexibility to explore ideas beyond integrating computer science concepts, including student accessibility, engagement, and social emotional learning (SEL).},
  address = {New York, NY, USA},
  author = {Berner, Maverick and Berner, Maximus and Ronan, Darcy and Brylow, Dennis},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635617},
  isbn = {9798400704246},
  keywords = {accessibility; k-12 computing education; professional development},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1570–1571},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Co-Designing Integrated CS Curriculum Artifacts with K-5 Classroom Teachers},
  url = {https://doi.org/10.1145/3626253.3635617},
  year = {2024}
}

@article{merged1133,
  abstract = {Computing4Change (C4C) is a competition for students from diverse disciplines and backgrounds to work in teams in applying data analysis and computational thinking to social challenges. Colocated with SC, C4C's new cohort will participate virtually in 2020.},
  address = {New York, NY, USA},
  doi = {10.1145/3440953.3440957},
  issue_date = {October 2020},
  journal = {ACM SIGHPC Connect},
  month = {December},
  number = {1},
  numpages = {1},
  pages = {3},
  publisher = {Association for Computing Machinery},
  title = {Computing4Change selects new cohort},
  url = {https://doi.org/10.1145/3440953.3440957},
  volume = {9},
  year = {2020}
}

@inproceedings{merged1134,
  abstract = {This paper describes the design and classroom implementation of a week-long unit that aims to integrate computational thinking (CT) into middle school science classes using programmable sensor technology. The goals of this sensor immersion unit are to help students understand why and how to use sensor and visualization technology as a powerful data-driven tool for scientific inquiry in ways that align with modern scientific practice. The sensor immersion unit is anchored in the investigation of classroom data where students engage with the sensor technology to ask questions about and design displays of the collected data. Students first generate questions about how data data displays work and then proceed through a set of programming exercises to help them understand how to collect and display data collected from their classrooms by building their own mini data displays. Throughout the unit students draw and update their hand drawn models representing their current understanding of how the data displays work. The sensor immersion unit was implemented by ten middle school science teachers during the 2019/2020 school year. Student drawn models of the classroom data displays from four of these teachers were analyzed to examine students' understandings in four areas: function of sensor components, process models of data flow, design of data displays, and control of the display. Students showed the best understanding when describing sensor components. Students exhibited greater confusion when describing the process of how data streams moved through displays and how programming controlled the data displays.},
  address = {New York, NY, USA},
  author = {Gendreau Chakarov, Alexandra and Biddy, Quentin and Jacobs, Jennifer and Recker, Mimi and Sumner, Tamara},
  booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
  doi = {10.1145/3372782.3406268},
  isbn = {9781450370929},
  keywords = {computational thinking; micro:bit; middle school science; sensors},
  location = {Virtual Event, New Zealand},
  numpages = {11},
  pages = {291–301},
  publisher = {Association for Computing Machinery},
  series = {ICER '20},
  title = {Opening the Black Box: Investigating Student Understanding of Data Displays Using Programmable Sensor Technology},
  url = {https://doi.org/10.1145/3372782.3406268},
  year = {2020}
}

@inproceedings{merged1135,
  abstract = {An introductory CS1 course at universities has to meet different requirements. In addition to computational thinking, students have to learn a programming language and its underlying concepts. Furthermore, they should be educated in different paradigms such as procedural, object-oriented, and functional programming. Industrial-strength languages are optimized towards the requirements of professional software developers and tend to offer an overwhelming and complex set of language constructs. Using such a language in a CS1 course, students find themselves mainly struggling with learning the language, being primarily exposed to simple programs for demonstrating its constructs. In contrast, MuLE is an educational language that supports multiple paradigms with a small set of carefully designed constructs. Using MuLE, beginners may develop programming skills more easily, while they still learn underlying concepts systematically that may be transferred to other languages in their further education.},
  address = {New York, NY, USA},
  author = {D\"{u}mmel, Nikita and Westfechtel, Bernhard and Ehmann, Matthias},
  booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
  doi = {10.1145/3593663.3593666},
  isbn = {9781450399562},
  keywords = {CS1 course; programming language; programming paradigm},
  location = {Seeon/Bavaria, Germany},
  numpages = {10},
  pages = {236–245},
  publisher = {Association for Computing Machinery},
  series = {ECSEE '23},
  title = {A Multi-Paradigm Programming Language for Education},
  url = {https://doi.org/10.1145/3593663.3593666},
  year = {2023}
}

@article{merged1136,
  abstract = {Building basic computational thinking skills is an important goal in courses that introduce computing to students with limited programming background. Among choices of tools and platforms, MIT App Inventor is a popular mobile app development environment particularly suitable for engaging novice learners. Users are able to create their own mobile apps with real-world usefulness without having to deal with difficult language syntax. However, a study of computational thinking assessment showed students had difficulties in learning abstract concepts such as procedure and flow control using App Inventor [1]. Meanwhile, non-CS major students demonstrated a lack of continuous growth in computational thinking skills compared to CS major students [1]. In another recent study [2], students reported increased interests in computing after being exposed to modern responsive web development, but it is unclear if having an HTML/CSS background makes it more effective in learning abstract computational concepts when using App Inventor.},
  address = {Evansville, IN, USA},
  author = {Jin, Karen H.},
  issn = {1937-4771},
  issue_date = {June 2018},
  journal = {J. Comput. Sci. Coll.},
  month = {June},
  number = {6},
  numpages = {3},
  pages = {183–185},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Students' understanding of basic computational concepts in an introduction to mobile development course},
  volume = {33},
  year = {2018}
}

@inproceedings{merged1137,
  abstract = {In this workshop, participants will learn how to integrate into their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing one of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, an experience report, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
  address = {New York, NY, USA},
  author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3367003},
  isbn = {9781450367936},
  keywords = {computational thinking; creative thinking; exercises},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1392},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and an Experience Report},
  url = {https://doi.org/10.1145/3328778.3367003},
  year = {2020}
}

@inproceedings{merged1138,
  abstract = {Computer Science (CS) education at the middle school level using educational games has seen recent growth and shown promising results. Typically these games teach the craft of programming and not the perspectives required for computational thinking, such as abstraction and algorithm design, characteristic of a CS curriculum. This research presents a game designed to teach computational thinking via the problem of minimum spanning trees to middle school students, a set of evaluation instruments, and the results of an experimental pilot study. Results show a moderate increase in minimum spanning tree performance; however, differences between gender, collaboration method, and game genre preference are apparent. Based on these results, we discuss design considerations for future CS educational games focused on computational thinking.},
  address = {New York, NY, USA},
  author = {Horn, Britton and Clark, Christopher and Strom, Oskar and Chao, Hilery and Stahl, Amy J. and Harteveld, Casper and Smith, Gillian},
  booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  doi = {10.1145/2839509.2844656},
  isbn = {9781450336857},
  keywords = {computational thinking; educational games; game design},
  location = {Memphis, Tennessee, USA},
  numpages = {6},
  pages = {576–581},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '16},
  title = {Design Insights into the Creation and Evaluation of a Computer Science Educational Game},
  url = {https://doi.org/10.1145/2839509.2844656},
  year = {2016}
}

@inproceedings{merged1139,
  abstract = {In this paper we discuss design principles, educational goals, implementation issues and practical results of the Codinj laboratory organized at the Genova Science Festival to promote computational thinking to a broad audience via a novel combination of the Pocket Code App and the Scratch 3.0 tool. Inspired by the original Jumanji movie, the entire activity is based on the idea of using coding to help participants in being part, conceptually and physically, of a video game. From an educational perspective, the proposed exercises are aimed at introducing, with a clear goal in mind, basic computational thinking concepts such as the notion of state, instructions, executions, events and concurrency.},
  address = {New York, NY, USA},
  author = {Delzanno, Giorgio and Guerrini, Giovanna and Perotto, Simone and Traverso, Flavio and Mammoliti, Sofia and Staglian\`{o}, Susanna},
  booktitle = {Adjunct Publication of the 28th ACM Conference on User Modeling, Adaptation and Personalization},
  doi = {10.1145/3386392.3399326},
  isbn = {9781450379502},
  keywords = {adaptation; computer science education; personalization},
  location = {Genoa, Italy},
  numpages = {4},
  pages = {151–154},
  publisher = {Association for Computing Machinery},
  series = {UMAP '20 Adjunct},
  title = {Codinji: Welcome to the Coding Jungle!},
  url = {https://doi.org/10.1145/3386392.3399326},
  year = {2020}
}

@inproceedings{merged1140,
  abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative for elementary computing instruction to support a variety of learners. TIPP&amp;SEE is a meta-cognitive learning strategy that scaffolds student learning when learning from example code. Results from a previous study show statistically-significant performance differences favoring students using the TIPP&amp;SEE strategy on a written assessment. In this work, our goal is gain insight as to it why such dramatic learning differences may have occurred. We analyze the students' computational artifacts and TIPP&amp;SEE worksheets. Artifact analysis reveals that students in the TIPP&amp;SEE group are more thorough in their work, completing more elements of the required tasks. In addition, they build open-ended projects with longer scripts that utilize more learned blocks. Worksheet analysis shows that students were highly accurate on some types of questions but largely skipped others. Despite these positive behaviors, there was little statistical correlation between student worksheet correctness, project completion, and written assessment performance. Therefore, while students in the TIPP&amp;SEE group performed actions we believe lead to more success, no individual actions directly explain the results. Like other meta-cognitive strategies, the value of TIPP&amp;SEE may lie in cognitive processes not directly observable, and may vary based upon individual student differences.},
  address = {New York, NY, USA},
  author = {Franklin, Diana and Salac, Jean and Crenshaw, Zachary and Turimella, Saranya and Klain, Zipporah and Anaya, Marco and Thomas, Cathy},
  booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
  doi = {10.1145/3372782.3406257},
  isbn = {9781450370929},
  keywords = {computational thinking; elementary education; learning strategy; scratch},
  location = {Virtual Event, New Zealand},
  numpages = {11},
  pages = {91–101},
  publisher = {Association for Computing Machinery},
  series = {ICER '20},
  title = {Exploring Student Behavior Using the TIPP&amp;SEE Learning Strategy},
  url = {https://doi.org/10.1145/3372782.3406257},
  year = {2020}
}

@inproceedings{merged1141,
  abstract = {This paper presents a study using a robotics platform for teaching computing and cybersecurity concepts to high school students. 38 students attended a week-long camp, starting with projects such as a simulation-only game and a simple autonomous driving program for the robots in order to learn and apply computational thinking (CT) and networking skills. They were then assigned a series of challenges that required developing progressively more advanced cybersecurity measures to protect their robots. This culminated in a final challenge that required implementing defensive measures such as encryption, secure key exchange and sequence numbers. We used an evidence-centered design framework to construct rubrics for grading student work. The pre- and post-test results show that the interventions helped students learn cybersecurity and CT concepts, but they had difficulties with networking concepts. These results correlate with scores from the game and the final challenge. Overall, surveys show that the competition-based robotics learning framework engaged students and supported their overall learning, but our intervention needs to be modified to help students learn networking concepts},
  address = {New York, NY, USA},
  author = {Yett, Bernard and Hutchins, Nicole and Stein, Gordon and Zare, Hamid and Snyder, Caitlin and Biswas, Gautam and Metelko, Mary and L\'{e}deczi, \'{A}kos},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366878},
  isbn = {9781450367936},
  keywords = {block-based programming; computational thinking; computer science education; cybersecurity; networking; robotics},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {1040–1046},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {A Hands-On Cybersecurity Curriculum Using a Robotics Platform},
  url = {https://doi.org/10.1145/3328778.3366878},
  year = {2020}
}

@inproceedings{merged1142,
  abstract = {As many school districts nationwide continue to incorporate Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial that we understand the factors and skills, such as reading and math proficiency, that contribute to the success of younger learners in a computing curriculum and are typically developed at this age. Yet, little is known about the relationship between reading and math proficiency, and the learning of key CS concepts at the elementary level. This study focused on 4th-grade students (ages 9-10) who were taught events, sequence, and repetition through an adaptation of the Creative Computing Curriculum. While all students benefited from access to such a curriculum, there were statistically-significant differences in learning outcomes, especially between students whose reading and math proficiency are below grade-level, and students whose proficiency are at or above grade-level. This performance gap suggests the need for curricular improvement and learning strategies that are CS specific for students who struggle with reading and math.},
  address = {New York, NY, USA},
  author = {Salac, Jean and Thomas, Cathy and Twarek, Bryan and Marsland, William and Franklin, Diana},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366822},
  isbn = {9781450367936},
  keywords = {computational thinking; k-8 education; math proficiency; reading comprehension},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {268–274},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Comprehending Code: Understanding the Relationship between Reading and Math Proficiency, and 4th-Grade CS Learning Outcomes},
  url = {https://doi.org/10.1145/3328778.3366822},
  year = {2020}
}

@inproceedings{merged1143,
  abstract = {Computational Thinking is currently being introduced into formal education in many European countries. This has stimulated research on how to introduce computational thinking and programming in primary school and in early childhood education. This study describes a work in progress that aims to verify the potential of a programmable educational robot, Cubetto, for 5-6 year-old children in enhancing their classroom activities. The study was carried out in two Italian kindergartens (42 children) and one primary school (21 children). Preliminary results show that the efficacy of Cubetto is strongly dependent on the context of use during classroom activities. The degree of children's attention (in terms of duration) depends on the teacher's ability in involving and supporting children during tasks performed with Cubetto.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {Benvenuti, Martina and Chioccariello, Augusto},
  booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3421590.3421619},
  isbn = {9781450387590},
  keywords = {educational robot; kindergarten; primary school; programming},
  location = {Virtual Event, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '20},
  title = {Programming an educational robot with 5-6 year-old children},
  url = {https://doi.org/10.1145/3421590.3421619},
  year = {2020}
}

@inproceedings{merged1144,
  abstract = {Scratch users often struggle to detect and correct 'code smells' (bad programming practices) such as duplicated blocks and large scripts, which can make programs difficult to understand and debug. These 'smells' can be caused by a lack of abstraction, a skill that plays a key role in computer science and computational thinking. We created Pirate Plunder, a novel educational block-based programming game, that aims to teach children to reduce smells by reusing code in Scratch. This work describes an experimental study designed to measure the efficacy of Pirate Plunder with children aged 10 and 11. The findings were that children who played the game were then able to use custom blocks (procedures) to reuse code in Scratch, compared to non-programming and programming control groups.},
  address = {New York, NY, USA},
  author = {Rose, Simon P. and Habgood, M.P. Jacob and Jay, Tim},
  booktitle = {Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3290607.3312871},
  isbn = {9781450359719},
  keywords = {abstraction; computational thinking; computer science education; pirate plunder; scratch; visual programming},
  location = {Glasgow, Scotland Uk},
  numpages = {6},
  pages = {1–6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '19},
  title = {Using Pirate Plunder to Develop Children's Abstraction Skills in Scratch},
  url = {https://doi.org/10.1145/3290607.3312871},
  year = {2019}
}

@inproceedings{merged1145,
  abstract = {If computer science programs face a challenge of convincing students that programming is fun and achievable, they have nothing on mathematics departments who face societal beliefs that math is hard and scary. Several movements in computer science education have focused on broadening participation within computer science and across disciplines. The "CS + X" efforts have focused on helping computer science integrate into other disciplines. The "CS For All" movement has highlighted the importance of providing high quality computing education for all students. Simultaneously, there is increasing attention to the need to provide general education alternatives to college algebra. This paper describes a course designed to combine these goals: a course that uses programming to introduce students to functions, patterns, and spatial and computational thinking in order to meet quantitative reasoning goals set by the university. The course initially used Bricklayer as the programming environment, then transitioned to Processing. Students were successful in writing programs that created art, demonstrated mastery of quantitative literacy, and had improved attitudes following the course. This project suggests that in addition to the creation of introductory computer science classes, courses which embed computer science into disciplinary requirements can be a successful pathway to expand opportunities for students to learn computing.},
  address = {New York, NY, USA},
  author = {Friend, Michelle and Swift, Andrew W. and Love, Betty and Winter, Victor},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569736},
  isbn = {9781450394314},
  keywords = {cs+x; interdisciplinary; mathematics},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {256–262},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {A Wolf in Lamb's Clothing: Computer Science in a Mathematics Course},
  url = {https://doi.org/10.1145/3545945.3569736},
  year = {2023}
}

@inproceedings{merged1146,
  abstract = {Few would argue that modern careers across a wide range of disciplines can be performed in the absence of computing in one form or another. As such, it is becoming increasingly important for our education system to appropriately prepare students for the modern world by integrating computing and computational thinking into how students learn disciplinary content (i.e. disciplines outside of computer science). However, how to best perform this integration is not yet known, nor is there likely to be one ''best'' method. In this session, we will facilitate a discussion of the variety of ways in which post-secondary institutions are actively using computing to support disciplinary learning by highlighting examples while also considering mechanisms not yet explored. We invite anyone who wants to learn more about current efforts, share their own experiences, and contribute ideas for future endeavors. In an effort to maximize the diversity of perspectives in this discussion, we've included discussion leaders who span a variety of roles within curriculum development and classroom instruction and encourage participants from all levels and backgrounds.},
  address = {New York, NY, USA},
  author = {Silvia, Devin W. and Caballero, Marcos D. and Finzell, Thomas and Frisbie, Rachel and Hamerski, Patti and Bolger, Emily and Castle, Sarah and Roca, Rachel and Tourangeau, Paige},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3573341},
  isbn = {9781450394338},
  keywords = {computational literacy; computational thinking; computing education; curriculum design; disciplinary education},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1247},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Computing in Support of Disciplinary Learning},
  url = {https://doi.org/10.1145/3545947.3573341},
  year = {2023}
}

@inproceedings{merged1147,
  abstract = {Our Computer science k-12 education research group the educational toy company Quercetti have been collaborating together to design and manufacture toys that help stimulate and consolidate so-called computational thinking. This approach has been inspired by methods already consolidated in the literature and widespread worldwide such as the Bebras tasks and CS-Unplugged. This paper describes two of these smart toys, their design process, some evaluation’s results, and finally feedback and reviews from buyers. The main activities proposed by these toys leverage visual coding through small colored physical items (e.g., pegs and balls) to deliver the unplugged activities to young users.},
  address = {New York, NY, USA},
  articleno = {26},
  author = {Capecchi, Sara and Gena, Cristina and Lombardi, Ilaria},
  booktitle = {Proceedings of the 2022 International Conference on Advanced Visual Interfaces},
  doi = {10.1145/3531073.3531180},
  isbn = {9781450397193},
  keywords = {CS education; CS unplugged; visual coding},
  location = {Frascati, Rome, Italy},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {AVI '22},
  title = {Visual and unplugged coding with smart toys},
  url = {https://doi.org/10.1145/3531073.3531180},
  year = {2022}
}

@inproceedings{merged1148,
  abstract = {This poster reports on year one of a three-year NSF-funded Research Practitioner Partnership (RPP) to develop a K-8 pipeline for computer science (CS) and computational thinking (CT) education within two rural school districts in Eastern Kentucky : Pikeville Independent School District and Floyd County Schools. Economically devastated by the departure of the coal industry, these communities are committed to developing high-quality computing curricula for all students, beginning in their earliest years. The poster has two components. First, through a mixture of qualitative measures, the poster reports on the genesis and development of the RPP. It focuses on the RPP's origin in leveraging the districts' existing relationship with Pennsylvania's South Fayette School District, which has developed one of the nation's leading programs for teacher professional development (PD) in K-12 computing. The second component of the poster focuses on the development of a series of summer workshops for Kentucky Appalachia K-8 instructors to learn the basics of CS and CT and how to integrate these skills and concepts into existing K-8 coursework. Of course, the RPP faced new challenges with COVID-19 most notably, the need to offer these summer workshops remotely, and adjusting the objectives and research questions accordingly. Through focus groups with the PD instructional team and survey responses from the KY teacher workshop participants, the poster will report on the pedagogical implications of offering teacher PD exclusively online and what the ramifications have been for Pikeville and Floyd County children with the return to school in the Fall of 2020.},
  address = {New York, NY, USA},
  author = {Burke, Quinn and Iwatani, Emi and Ruiz, Pati and Tackett, Traci and Owens, Aileen},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439665},
  isbn = {9781450380621},
  keywords = {computational thinking; educational equity; research practice partnership (rpp); rural education},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1273},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Pivoting in a Pandemic: Transitioning from In-person to Virtual K-8 Computing Professional Development},
  url = {https://doi.org/10.1145/3408877.3439665},
  year = {2021}
}

@inproceedings{merged1149,
  abstract = {Computational Thinking (CT) and related concepts, as programming and algorithmic thinking, have been recently advocated as abilities that are as fundamental as numeracy and literacy, and many countries all over the world are introducing programming activities in education. In Italy, even if the introduction of CT and programming in schools is on the pipeline of policy makers, they have not yet been included in the curriculum guidelines. Consequently, there is a strong case for analyzing how programming can be integrated at early stages into the Italian compulsory education. Starting from the constructivist tradition, a study spanning over several school years has been organized aiming at defining and testing a programming learning path for primary schools. The learning path takes into account children's interests, stimulating their passions and creativity. Students are engaged on projects that are meaningful for them, while teachers take advantage of the situations that spontaneously arise to guide students' attention on specific computational concepts. The learning path is being iteratively refined through a field experiment involving a primary school over a four year period. The study aims to the following questions:• Under which conditions can age-appropriate programming activities, allowing for individual differences in learning styles and approaches, work in primary school?• Which indications can the work performed provide to the sustainability of the programming activities when the researchers' support will come to an end?• Which elements of the study can provide suggestions for a wider introduction of programming in primary schools?Since the study is currently in its third year, this paper addresses the first two research question, while only some initial considerations are provided for the third one.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Chioccariello, Augusto and Bottino, Rosa and Panesi, Sabrina and Freina, Laura},
  booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3421590.3421599},
  isbn = {9781450387590},
  keywords = {computational thinking; primary education; programming},
  location = {Virtual Event, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '20},
  title = {Longitudinal approach for introducing programming in italian primary school},
  url = {https://doi.org/10.1145/3421590.3421599},
  year = {2020}
}

@inproceedings{merged1150,
  abstract = {The Italian Ministry of Education is promoting the introduction of coding and computational thinking at compulsory school level. One of the research initiatives being taken in this regard is "Programming to Learn in Italian Primary School". The project's aim is to develop a vertical curriculum for the introduction of programming in Italian primary schools as a new expressive language for children. All the schoolchildren involved in the project attend a weekly computer lab class held throughout the school year. They work on individual projects during the first half of the year. Then, in the second half of the year, they work in small groups on a common theme that the teacher selects from those studied in class. In this poster, we report the work of a fifth-grade class (24 students -- 7 females and 17 males, aged 10-11) in the 2017-2018 school year. Findings from individual and group Scratch programs produced, self-evaluation questionnaire and semi-structured interviews with the groups are presented.},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Benvenuti, Martina and Chioccariello, Augusto and Giammoro, Giorgia},
  booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3361721.3361732},
  isbn = {9781450377041},
  keywords = {Computational thinking; Primary school; Programming},
  location = {Glasgow, Scotland, Uk},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '19},
  title = {Programming to learn in Italian primary school},
  url = {https://doi.org/10.1145/3361721.3361732},
  year = {2019}
}

@inproceedings{merged1151,
  abstract = {This paper presents a study with kindergarten teachers to assess the advantages, challenges and opportunities of commercial robots to teach computational thinking to young children. Recent studies have highlighted the potential benefits of introducing CT concepts at an early stage. Robots are an engaging and effective educational tool for teaching CT to young children, providing hands-on and interactive learning experiences. Entirely tangible robotic environments have successfully connected the abstract world of CT with the concrete world of preschoolers. Children can program robots by pressing buttons, drawing the path or using code cards. However, there is limited research on the use of commercial robots in preschool classrooms. This research aims to address this gap by investigating preschool teachers’ perspectives on the advantages, challenges, and opportunities associated with using commercial robots in the context of kindergarten classrooms. We contribute with a list of practical, pedagogical and motivational aspects that should be taken into account while evaluating robots and design considerations to build robotic environments for kindergarten classrooms.},
  address = {New York, NY, USA},
  author = {Bakala, Ewelina and Pires, Ana Cristina and Tejera, Gonzalo and Hourcade, Juan Pablo},
  booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
  doi = {10.1145/3582515.3609570},
  isbn = {9798400701160},
  keywords = {Educational robotics; Preschoolers; Teachers’ perspective},
  location = {Lisbon, Portugal},
  numpages = {10},
  pages = {477–486},
  publisher = {Association for Computing Machinery},
  series = {GoodIT '23},
  title = {“It will surely fall”: Exploring Teachers’ Perspectives on Commercial Robots for Preschoolers},
  url = {https://doi.org/10.1145/3582515.3609570},
  year = {2023}
}

@inproceedings{merged1152,
  abstract = {This experience report describes an approach for helping elementary schools integrate computational thinking and coding by leveraging existing resources and infrastructure that do not rely on 1-1 computing. A particular focus is using the school library and media center as a site to complement and enhance classroom instruction on coding. Further, our approach builds upon "unplugged" knowledge and practices that are already familiar to and motivating for students, in this case tabletop board games. Through these games, students can use their prior knowledge and ease with tabletop gaming mechanics to cue relevant ideas for core computational concepts. We describe a model and an instructional unit spanning across classroom and school library settings that builds upon board game play as a source domain for computing knowledge. Building on expansive framing, the model emphasizes instructional linkages being made between one domain (the tabletop board game) and another (specially designed Scratch project shells with partially complete code blocks) such that the reasoning activities and different contexts are seen as instantiations of the same encompassing context. We present the experiences of three elementary school teachers as they implemented the unit in their classrooms and with their school librarian. We also show initial findings on the impact of the unit on student interest (N=87), as measured by pre- and post- surveys. We conclude with lessons learned about ways to improve the unit and future classroom implementations.},
  address = {New York, NY, USA},
  author = {Lee, Victor R. and Poole, Frederick and Clarke-Midura, Jody and Recker, Mimi and Rasmussen, Melissa},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366917},
  isbn = {9781450367936},
  keywords = {computational thinking; cs unplugged; elementary school coding; expansive framing},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {787–793},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Introducing Coding through Tabletop Board Games and Their Digital Instantiations across Elementary Classrooms and School Libraries},
  url = {https://doi.org/10.1145/3328778.3366917},
  year = {2020}
}

@inproceedings{merged1153,
  abstract = {We are developing quilt design generation software for Code Crafters workshops, which aim to broaden public awareness of computational thinking and build links between computer science and quilting. The software generates quilt designs, which will be manipulated and modified by workshop participants. Due to COVID, our workshops will be conducted remotely, so the software has been designed to increase the sense of community by providing opportunities for the types of social interactions that take place in colocated quilting workshops.},
  address = {New York, NY, USA},
  articleno = {56},
  author = {Graves, Jordan and Royer, Karen and Smith, Gillian and Sullivan, Anne},
  booktitle = {Proceedings of the 13th Conference on Creativity and Cognition},
  doi = {10.1145/3450741.3466635},
  isbn = {9781450383769},
  keywords = {Design software; adult education; computational craft; computer science education; generative design; informal science learning; quilting},
  location = {Virtual Event, Italy},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {C&amp;C '21},
  title = {Procedural Patchwork: Community-Focused Generative Design for Quilting},
  url = {https://doi.org/10.1145/3450741.3466635},
  year = {2021}
}

@inproceedings{merged1154,
  abstract = {Games have been used for a few decades in research, formal education, and training of children and adults, and digital games are no strangers to educational uses. After all, everyone likes to play games, so it should stand to reason that educational digital games are going to be a hit. Unfortunately, this is not the case. In fact, educational digital games are often criticized for being too focused on educational content and not enough on engaging, challenging, and entertaining players. Making games for entertainment is difficult and requires multidisciplinary expertise. Making educational games that are engaging and entertaining is also difficult and requires additional input from educators and domain experts, and rigorous evaluation methodologies, all of which must revolve around the players. In this position article, we introduce the early stage “EduGames: Play to Learn” research project aimed at supporting the public in acquiring Critical and Computational Thinking skills to tackle the problem of detecting misinformation, and supporting the game development and research communities in creating and evaluating games that are entertaining and educational. As part of this project, we call for more, and more structured, synergy between academia, educators, and the game development industry.},
  address = {New York, NY, USA},
  author = {Franceschini, Andrea and Rod\`{a}, Antonio},
  booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
  doi = {10.1145/3582515.3609525},
  isbn = {9798400701160},
  keywords = {digital games; entertainment; serious games; video games},
  location = {Lisbon, Portugal},
  numpages = {11},
  pages = {117–127},
  publisher = {Association for Computing Machinery},
  series = {GoodIT '23},
  title = {Play to Learn: from Serious Games to just Games},
  url = {https://doi.org/10.1145/3582515.3609525},
  year = {2023}
}

@inproceedings{merged1155,
  abstract = {Bebras contest has been part of Slovak informatics in schools for 10 years, making contestants familiar with information technologies, computer science concepts and improving their digital skills and computational thinking. In this article we take a look at task group which connects computer science concepts with computational thinking - graph tasks (for example trees, graphs, square grids, graph algorithms...). We focused on the three lowest categories of the Slovak contest, which include pupils of the whole primary school (aged 8 to 15) and analysed the tasks of the last four years. We used both qualitative and quantitative data analysis research methods. Task were divided into subcategories which were further analysed, focusing on identification of the specifics of the tasks in which there were significant differences between boys and girls. Using comparative analysis, it was found that boys are better in tasks with simple (relatively abstract) representation of the structure which is described by a larger amount of text, but the main point of the task is to identify the problem and create or uncover a strategy for finding a solution. Girls' performance is better in tasks that have less text, relatively more complicated representation of the structure and are focused on simple operations at graphs or reading them.},
  address = {New York, NY, USA},
  author = {Budinsk\'{a}, Lucia and Mayerov\'{a}, Karol\'{\i}na},
  booktitle = {Proceedings of the 6th Computer Science Education Research Conference},
  doi = {10.1145/3162087.3162102},
  isbn = {9781450363389},
  keywords = {Bebras contest; computational thinking; gender differences; graph tasks; visual literacy},
  location = {Helsinki, Finland},
  numpages = {8},
  pages = {83–90},
  publisher = {Association for Computing Machinery},
  series = {CSERC '17},
  title = {Graph Tasks in Bebras Contest: What does it have to do with gender?},
  url = {https://doi.org/10.1145/3162087.3162102},
  year = {2017}
}

@article{merged1156,
  abstract = {This experience report shares the teaching methodology of a Functional Programming course (in Haskell) offered amid the Covid-19 pandemic. In addition to highlighting problem-solving and programming from a functional perspective, the course provides a solid example of modern pedagogical elements, including team-based programming, computational thinking, presentation skills, participation and discussion skills, and a sense of accountability. This report presents the methodologies applied to achieve the objectives in a liberal arts setup and discusses the learned lessons that may help an early-career faculty model an intro-programming course.},
  address = {Evansville, IN, USA},
  author = {Hamid, Fahmida},
  issn = {1937-4771},
  issue_date = {April 2022},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {6},
  numpages = {10},
  pages = {36–45},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {A functional programming course in remote learning model: an experience report},
  volume = {37},
  year = {2022}
}

@inproceedings{merged1157,
  abstract = {Given the importance of the introductory programming course (CS1), the Computer Science Education community has devoted a significant effort to generate empirical evidence and propose tools, techniques, and curricular approaches to support students. For instance, Parsons Problems have emerged as one of the preferred scaffolding strategies to help CS1 students get a grasp on programming before being exposed to open write-code assignments. However, prior literature has not given enough attention to those students who fail CS1 and must retake the course. In this paper, we report the results of an exploratory case study aimed at understanding the effectiveness of Parsons Problems as an active scaffolding strategy delivered to CS1 retakers at the University of Chile. In this version of the course, although students were already introduced to computational thinking, program design, and coding (as they were taking CS1 for a second time), it was the first time they were exposed to Parsons Problems. We conducted a follow-up assessment of the students' perceptions throughout the course, employing a combination of focus groups, semi-structured interviews, and end-course surveys. Our results suggest that Parsons Problems are effective for learners beyond the ''novice programmer'' stage (such as the experience of CS1 retakers), highlighting good practices to support the studied group in terms of engagement, performance, and overall student experience.},
  address = {New York, NY, USA},
  author = {Sanhueza, Felipe and Gutierrez, Francisco J. and Vasquez, Andrea},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653590},
  isbn = {9798400706004},
  keywords = {cs1; novice programmers; parsons problems; retakers},
  location = {Milan, Italy},
  numpages = {7},
  pages = {681–687},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Exploring the Acceptance and Effectiveness of Parsons Problems on Scaffolding CS1 Retakers},
  url = {https://doi.org/10.1145/3649217.3653590},
  year = {2024}
}

@inproceedings{merged1158,
  abstract = {Recent years have seen a growing recognition of the importance of enabling K-12 students to engage in computational thinking, particularly in elementary grades where students' dispositions toward STEM are developing. Block-based programming has emerged as an effective tool for engaging these novice learners in computational thinking. At the same time, digital storytelling has emerged as a promising avenue for creating motivating problem-solving scenarios that engage students in science investigations. Although block-based programming and digital storytelling are in many ways synergistic, there is a lingering question of how to design block-based languages at an age-appropriate level to enable effective and engaging storytelling. In this work, we review design principles from prior block-based and digital storytelling systems as well as propose the design of block-based programming language features to enable the creation of rich, interactive science narratives by upper elementary students.},
  address = {New York, NY, USA},
  author = {Smith, Andy and Mott, Bradford and Taylor, Sandra and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372653},
  isbn = {9781450367936},
  keywords = {block-based programming; digital storytelling},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1327},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Designing Block-Based Programming Language Features to Support Upper Elementary Students in Creating Interactive Science Narratives},
  url = {https://doi.org/10.1145/3328778.3372653},
  year = {2020}
}

@inproceedings{merged1159,
  abstract = {School systems globally have begun to integrate computational thinking (CT) practices into elementary teaching and learning standards to provide young students with a comfort for and foundational understanding of computer science. This integration requires educating teachers to develop and implement CT learning opportunities. Our work contributes to best practice by exploring the role language plays in elementary teachers' discussions and development of CT-infused science lessons. To do this, we captured and analyzed the language used by elementary teachers as they spoke and wrote about CT in a multi-week professional development experience during which the teachers created and delivered CT-infused lessons to their students. We determined that teachers exhibited differing CT conceptualizations, which we categorized from broad to narrow. These differences were not, however, observed in either their spoken or written language. While there were instances of teachers using language that mirrored how the facilitators discussed CT, this use did not align with how they conceptualized CT. Our work analyzing connections between CT language use and CT conceptualization suggests that in order to understand how teachers are conceptualizing CT, professional development designers and teacher educators should focus on creating opportunities for teachers to employ CT practices in context rather than relying only on language. We feel this will support a more precise and nuanced engagement with CT.},
  address = {New York, NY, USA},
  author = {Killen, Heather and Coenraad, Merijke and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jan},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372667},
  isbn = {9781450367936},
  keywords = {computational thinking; computational thinking terms; computing across the curriculum; elementary education; jargon; k-8; science inquiry; teacher professional development},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1281},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {"We'll be Scratching all the Time"},
  url = {https://doi.org/10.1145/3328778.3372667},
  year = {2020}
}

@inproceedings{merged1160,
  abstract = {Collaborative mobile augmented reality (MAR) has emerged as a promising tool in the field of education. This technology enables multiple users to interact with digital content overlaid on the physical world through their mobile devices. Collaborative MAR combined with tangible elements enhances learning by integrating physical objects that can be manipulated and interacted with in the augmented reality environment, providing a hands-on and immersive educational experience. This study explores the impact of tangible mobile augmented reality on collaboration and object manipulation. Our goal is to understand how mobile devices’ manipulation affects collocated students' collaboration in tangible MAR in terms of ease of use and collaboration. The study involves participants working in pairs to facilitate collaboration through a MAR game for developing the computational thinking skills of primary school students. Our goal is to compare the perceived behaviors and interactions that emerged in two distinct MAR settings: (1) Stand-mounted device condition, where the device is fixed on a mobile stand, and (2) Hand-held device condition, where the device is held by one of the team's players. The same task is simulated in both settings to allow for direct comparison. The results of this study can help inform the design and development of future MAR systems and provide insights into the potential benefits and challenges in terms of collaboration and object manipulation.},
  address = {New York, NY, USA},
  articleno = {17},
  author = {Gardeli, Anna and Vosinakis, Spyros},
  booktitle = {Proceedings of the 2nd International Conference of the ACM Greek SIGCHI Chapter},
  doi = {10.1145/3609987.3610004},
  isbn = {9798400708886},
  location = {Athens, Greece},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {CHIGREECE '23},
  title = {Exploring the co-manipulation of physical and virtual objects in tangible mobile augmented reality for collaborative learning},
  url = {https://doi.org/10.1145/3609987.3610004},
  year = {2023}
}

@inproceedings{merged1161,
  abstract = {We are a year into the development of a software tool for modeling and simulation (M&amp;S) of 1D and 2D kinematics consistent with Newton's laws of motion. Our goal has been to introduce modeling and computational thinking into learning high-school physics. There are two main contributions from an M&amp;S perspective: (1) the use of conceptual modeling, and (2) the application of Finite State Machines (FSMs) to model physical behavior. Both of these techniques have been used by the M&amp;S community to model high-level "soft systems" and discrete events. However, they have not been used to teach physics and represent ways in which M&amp;S can improve physics education. We introduce the NSF-sponsored STEPP project along with its hypothesis and goals. We also describe the development of the three STEPP modules, the server architecture, the assessment plan, and the expected outcomes.},
  address = {New York, NY, USA},
  author = {Kitagawa, Midori and Fishwick, Paul and Kesden, Michael and Urquhart, Mary and Guadagno, Rosanna and Jin, Rong and Tran, Ngoc and Omogbehin, Erik and Prakash, Aditya and Awaraddi, Priyanka and Hale, Baily and Suura, Ken and Raj, Aniket and Stanfield, James and Vo, Henry},
  booktitle = {Proceedings of the 2019 ACM SIGSIM Conference on Principles of Advanced Discrete Simulation},
  doi = {10.1145/3316480.3325513},
  isbn = {9781450367233},
  keywords = {computational thinking; concept maps; finite state machines; high school; human computer interaction; modeling; physics; programming; scaffolding; simulation; stem.},
  location = {Chicago, IL, USA},
  numpages = {10},
  pages = {127–136},
  publisher = {Association for Computing Machinery},
  series = {SIGSIM-PADS '19},
  title = {Scaffolded Training Environment for Physics Programming (STEPP): Modeling High School Physics using Concept Maps and State Machines},
  url = {https://doi.org/10.1145/3316480.3325513},
  year = {2019}
}

@inproceedings{merged1162,
  abstract = {Dialog with a social pedagogical robot or agent is a powerful way for kids to learn [1, 5] but may limit the formation of an agentic relationship with the technology [9]. One main purpose of conversational agents is to allow the user to have a natural interaction that reduces the need to learn artificial conventions [6], but dialog systems fall short with respect to failure recovery, vocabulary diversity, remembering conversational history, and other measures [2, 3]. Further, Hill et. al. [4] found that people adapt their model of communication to match a chatbot’s in the same way they do with a child or non-native speaker. Thus, users conversing with a pedagogical agent are implicitly trained to shape their behavior to suit the technology rather than shaping the technology. For young learners, particularly among populations that have been historically excluded from technology fields, this limits agency and reinforces marginalizing power structures [9]. This project combines a conversational agent with ideas of agentic engagement to help middle-school-aged children learn computational thinking. Agentic engagement is defined as students’ constructive contribution into the flow of instruction and includes behaviors such as expressing interests, preferences, and opinions. It has been positively correlated to learning performance and motivation [7, 8]. Combined with a culturally responsive curriculum (CRC), agentic engagement may help to foster an agentic relationship with technology. Our system encourages learners to engage agentically by using programming constructs to change the agent’s vocabulary, recognizing the intent behind a user utterance (an invocation), and defining the action the agent will take to respond to an invocation. Students use computational thinking concepts such as pattern recognition, abstraction, and decomposition to convert ideas into commands for the dialog system and to understand which of their ideas can’t be programmed with the technology as presented. They learn both to personalize the system today and to see the agent as a technosocial construct that they can shape in the future.  Programming can be accomplished either using Google’s Blockly visual programming tool (https://developers.google.com/blockly) or through conversation with the agent itself. The agent is embodied as a robot character, so agent actions can be verbal, physical, or both. Through social dialog with the agent, learners reflect on how computational thinking is relevant to themselves and their communities as part of a CRC, building on the work of Stewart et. al. [10]. For example, learners may be asked to reflect on the relationship between greeting behaviors and identity. After designing a greeting interaction, learners program the dialog system to achieve the greeting. Then learners may be asked to imagine how they might hypothetically enhance the dialog system to make it even more capable of implementing their preferences. In parallel to the development of the dialog system and curriculum, we will also adapt Reeve’s agentic engagement instrument [7] for CRC. Our contributions will include this instrument, insights into the relationship between agentic engagement and an agentic relationship with technology, and insights into how a programmable dialog system impacts agentic engagement and learning computational thinking.},
  address = {New York, NY, USA},
  author = {Buddemeyer, Amanda and Hatley, Leshell and Stewart, Angela and Solyst, Jaemarie and Ogan, Amy and Walker, Erin},
  booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
  doi = {10.1145/3446871.3469782},
  isbn = {9781450383264},
  keywords = {agency; agentic engagement; culturally responsive curriculum; dialog systems},
  location = {Virtual Event, USA},
  numpages = {2},
  pages = {423–424},
  publisher = {Association for Computing Machinery},
  series = {ICER 2021},
  title = {Agentic Engagement with a Programmable Dialog System},
  url = {https://doi.org/10.1145/3446871.3469782},
  year = {2021}
}

@inproceedings{merged1163,
  abstract = {To address the challenges of generative AI in CS1 education, especially its misuse by students to bypass coding exercises, which undermines their engagement with foundational learning, CS1 curricula are evolving to emphasize higher-level problem-solving and systems thinking. In response, a novel experiential learning initiative grounded in High-Impact Practices was introduced to a CS1 course over the course of 2 semesters, involving 132 students. This initiative utilized robotics lab assignments to enhance computational thinking across various levels of granularity, from individual functional components to overall system behaviors, bridging conceptual understanding with real-world applications. The approach emphasized project-based learning, extended engagement time, and reflective practices to deepen students' understanding of core computing concepts and scaffold knowledge integration. The curriculum featured both individual and team-based lab assignments to build foundational skills followed by collaborative problem-solving. The initiative's impact was assessed against a control group of 427 students who completed traditional web development lab assignments. Evaluation methods included thematic analyses of student reflections, instructor opinion surveys, and statistical analysis of exam performances across the semester. Results revealed a substantial positive effect on self-efficacy and learning outcomes. Students in the experiential learning group reported increased confidence in applying their computing skills to real-world scenarios, heightened engagement, and greater improvements in technical proficiency. Notably, their exam scores demonstrated a statistically significant improvement compared to the control group. These findings highlight the effectiveness of integrating practical, interactive elements into computer science education to meet the demands of a rapidly evolving technological landscape.},
  address = {New York, NY, USA},
  author = {Borela, Rodrigo and Liding, Zhixian and McDaniel, Melinda},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701810},
  isbn = {9798400705311},
  keywords = {artificial intelligence; collaborative learning; cs1; experiential learning; robotics},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {144–150},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Enhancing CS1 Education through Experiential Learning with Robotics Projects},
  url = {https://doi.org/10.1145/3641554.3701810},
  year = {2025}
}

@inproceedings{merged1164,
  abstract = {Large language models (LLMs) are revolutionizing the field of computing education with their powerful code-generating capabilities. Traditional pedagogical practices have focused on code writing tasks, but there is now a shift in importance towards reading, comprehending and evaluating LLM-generated code. Alongside this shift, an important new skill is emerging -- the ability to solve programming tasks by constructing good prompts for code-generating models. In this work we introduce a new type of programming exercise to hone this nascent skill: 'Prompt Problems'. Prompt Problems are designed to help students learn how to write effective prompts for AI code generators. A student solves a Prompt Problem by crafting a natural language prompt which, when provided as input to an LLM, outputs code that successfully solves a specified programming task. We also present a new web-based tool called Promptly which hosts a repository of Prompt Problems and supports the automated evaluation of prompt-generated code. We deploy Promptly in one CS1 and one CS2 course and describe our experiences, which include student perceptions of this new type of activity and their interactions with the tool. We find that students are enthusiastic about Prompt Problems, and appreciate how the problems engage their computational thinking skills and expose them to new programming constructs. We discuss ideas for the future development of new variations of Prompt Problems, and the need to carefully study their integration into classroom practice.},
  address = {New York, NY, USA},
  author = {Denny, Paul and Leinonen, Juho and Prather, James and Luxton-Reilly, Andrew and Amarouche, Thezyrie and Becker, Brett A. and Reeves, Brent N.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630909},
  isbn = {9798400704239},
  keywords = {ai code generation; artificial intelligence; generative ai; large language models; llms; prompt engineering; prompt problems},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {296–302},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Prompt Problems: A New Programming Exercise for the Generative AI Era},
  url = {https://doi.org/10.1145/3626252.3630909},
  year = {2024}
}

@inproceedings{merged1165,
  abstract = {Educators should provide access to all students with inclusive and equitable computer science (CS) and computational thinking (CT) learning outcomes. Yet access to CS and CT is not always available for students with disabilities. This qualitative cross-case study examined the barriers and strengths three exemplar teachers faced, explored the supports and resources they provided, and presented how these teachers defined successful inclusive CS learning outcomes for their students. The data set included analysis of the semistructured teachers' interviews and teaching materials. The results included seven successful strategies the teachers identified: 1) using physical computing, 2) pair programming, 3)connecting CS and Individual Education Plans (IEP), 4)applying hands-on activities, 5) CT integration, 6) using CS vocabulary, and 7)open-ended pedagogy. Three resources and supports the teacher provided emerged from the data set as follows: 1) accessible instructional materials, 2) projects with multiple entry points, and 3) essential scaffolding supports. Whereas four barriers teachers faced; 1. subject matter, 2) accessible tools, 3) students receiving support, 3) the role of CS in instruction, and 4) the role of time served as additional findings. The results suggested that school-based practitioners, including administrators, can overcome the barriers and promote successful strategies that lead to asset-based CS-inclusion in the classroom.},
  address = {New York, NY, USA},
  author = {Yan, Wei and Bennett, Andrew and Cobo, Alexis and Israel, Maya},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635631},
  isbn = {9798400704246},
  keywords = {accessibility; cs education; inclusion; special education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1863–1864},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {A Cross-Case Analysis of Experienced Educators in CS Inclusion},
  url = {https://doi.org/10.1145/3626253.3635631},
  year = {2024}
}

@inproceedings{merged1166,
  abstract = {Culturally responsive computing scholars often use the metaphor and heuristic of intersectionality to address issues of race and gender in research with Black, Brown, and Indigenous children in U.S. K12 computer science (CS) education. This has led to critical analyses that reveal the inequitable conditions that children of color face in CS education. Intersectionality has also supported curricular innovations and interventions that aim to make CS education more equitable by being responsive to children's identities and communities. However, the concept of class has received less attention than race and gender by culturally responsive computing scholars who draw on intersectionality in their CS education research. How might class fit into intersectional research and theory in culturally responsive computing scholarship? The objective of this paper is to answer this question with a proof-of-concept study that tests the feasibility of what we call worker-driven computing education. We introduce findings from our research and collaborations with current, once, and retired autoworkers in Detroit, Michigan to define the computational thinking idea of automation from their perspectives. Through analyzing qualitative data, a worker-driven definition of automation was developed by drawing on autoworker-expertise about the points of production in the auto-industry. Our findings reveal how this definition focuses on introducing automation in the context of lifelong learning about how to communicate and work across divisions of labor to make workplaces safe, healthy, and efficient.},
  address = {New York, NY, USA},
  author = {Lachney, Michael and Ferguson Bey, Brian and Mouzaoir, Samuela and Robinson, Christa},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630967},
  isbn = {9798400704239},
  keywords = {automation; class; culturally responsive computing; intersectionality; k12 computer science education},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {701–707},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Worker-Driven Computing Education},
  url = {https://doi.org/10.1145/3626252.3630967},
  year = {2024}
}

@inproceedings{merged1167,
  abstract = {As an important means to improve teenagers' computational thinking, programming education has been paid more and more attention. But the traditional teaching mode of programming course is boring and abstract, which makes learners lack motivation and enthusiasm for learning. Therefore, learning methods based on digital games may be a potential optimization strategy. This paper proposes a learning method based on digital games and conducts a quasi-experimental study in a senior high school in China. The experimental group was placed in a learning method based on digital games to evaluate the effectiveness of the proposed learning method and game learning behavior, while the control group used traditional classroom teaching methods for learning. The results showed that the experimental group was better than the control group in learning experience, learning interest, collaborative learning ability and learning performance. It provides a valuable reference for Game-based programming teaching and research.Keywords: Digital game-based learning, Programming education, Teaching process},
  address = {New York, NY, USA},
  author = {Xu, Xiang and Liu, Rui and Chen, Qinqin and Yang, Hairu},
  booktitle = {Proceedings of the 2023 4th International Conference on Education Development and Studies},
  doi = {10.1145/3591139.3591155},
  isbn = {9798400707506},
  location = {Hilo, USA},
  numpages = {6},
  pages = {23–28},
  publisher = {Association for Computing Machinery},
  series = {ICEDS '23},
  title = {A Digital Game-based Learning Approach to Improve Students’ Learning Performance of Senior High School Programming Courses},
  url = {https://doi.org/10.1145/3591139.3591155},
  year = {2023}
}

@inproceedings{merged1168,
  abstract = {The association between mathematics and programming in an educational context is not new. Today, programming has been introduced into curricula worldwide for younger children. In the Swedish case, primary school teachers are expected to integrate programming in mathematics education from autumn 2018. However, Swedish teachers' knowledge of programming and programming didactics is limited. Meanwhile, there is little research on K-9 programming education. This has led to the dilemma that the mathematics teachers have limited support in didactic knowledge and good examples. This study reports on a teacher professional development project in programming. More specifically, teachers used Lesson Study to plan, execute, and evaluate lessons that integrated programming into various school subjects in elementary school. This study analyzed the didactic strategies developed in 10 lesson studies, as well as mapped the opportunities and challenges of pupils' learning in the mathematics subject. The result was the identification of three didactic strategies, which were analog programming, robot programming and block programming, as well as 11 didactic methods applied within these strategies. The paper contributes with examples of the didactic methods that teachers have developed and evaluated using lesson study. The paper further provides insights on how teachers can take progression into account by applying the three didactic strategies. At last but not least, the study shows a great need for teachers to develop computational thinking abilities.},
  address = {New York, NY, USA},
  author = {Ahmed, Gashawa and Nouri, Jalal and Zhang, LeChen and Nor\'{e}n, Eva},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366839},
  isbn = {9781450367936},
  keywords = {compulsory education; computational thinking; didactic strategies; mathematics; programming},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {261–267},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Didactic Methods of Integrating Programming in Mathematics in Primary School: Findings from a Swedish National Project},
  url = {https://doi.org/10.1145/3328778.3366839},
  year = {2020}
}

@inproceedings{merged1169,
  abstract = {This study covers a three-year, longitudinal K–12 outreach initiative that promoted computer science in Ireland from 2017–2020. During the first year, 2017–2018, 2900 students participated in a pilot phase. 7320 students participated in the implementation phase throughout the course of the academic years 2018–2019 and 2019–2020 in 2018. The program consisted of a free, two-hour camp that was delivered on-site at the school and exposed children to a variety of computing topics, including addressing misconceptions about computing, learning how to code, and investigating computational thinking. Schools self-selected, and the initiative reached several schools in every county in Ireland, as well as schools with a wide range of socioeconomic backgrounds and gender diversity. The primary school students’ ages ranged from third class (7–8 years old) to sixth year (17–18 years old) at second level. This paper focuses specifically on the research data collected during the implementation phase (N=1202) from the secondary school students (12 - 18 years old) not enrolled in the formal Leaving Certificate Computer Science subject. Looking at student perceptions of Computer Science and if the outreach positively impacted those perceptions and if it built student interest in pursuing further study in Computer Science.},
  address = {New York, NY, USA},
  articleno = {13},
  author = {Nolan, Karen and Faherty, Roisin and Quille, Keith and Nolan, Keith and O'Farrell, Amanda and Becker, Brett A.},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609758},
  isbn = {9798400708510},
  keywords = {Computer Science Education; Computing Camps Inclusive; Female Student; K-12; Outreach; Perceptions},
  location = {Cambridge, United Kingdom},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {CS Outreach to Inform Secondary School Students' Perceptions of CS: Initial Findings},
  url = {https://doi.org/10.1145/3605468.3609758},
  year = {2023}
}

@inproceedings{merged1170,
  abstract = {Introducing computational thinking in primary school curricula implies that teachers have to prepare appropriate lesson material. Typically this includes creating programming tasks, which may overwhelm primary school teachers with lacking programming subject knowledge. Inadequate resulting example code may negatively affect learning, and students might adopt bad programming habits or misconceptions. To avoid this problem, automated program analysis tools have the potential to help scaffolding task creation processes. For example, static program analysis tools can automatically detect both good and bad code patterns, and provide hints on improving the code. To explore how teachers generally proceed when creating programming tasks, whether tool support can help, and how it is perceived by teachers, we performed a pre-study with 26 and a main study with 59 teachers in training and the LitterBox static analysis tool for Scratch. We find that teachers in training (1) often start with brainstorming thematic ideas rather than setting learning objectives, (2) write code before the task text, (3) give more hints in their task texts and create fewer bugs when supported by LitterBox, and (4) mention both positive aspects of the tool and suggestions for improvement. These findings provide an improved understanding of how to inform teacher training with respect to support needed by teachers when creating programming tasks.},
  address = {New York, NY, USA},
  author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588809},
  isbn = {9798400701382},
  keywords = {assignments; automated feedback; block-based programming; elementary school; litterbox; preservice teacher education; scratch},
  location = {Turku, Finland},
  numpages = {7},
  pages = {471–477},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Exploring Programming Task Creation of Primary School Teachers in Training},
  url = {https://doi.org/10.1145/3587102.3588809},
  year = {2023}
}

@inproceedings{merged1171,
  abstract = {The fundamental of programming course is a professional basic course offered by institutions of higher learning, and C language is usually chosen as the programming language to help cultivate students' comprehensive quality and ability. Taking the fundamental of programming course as an example, aiming at the problems existing in traditional theory teaching and practice teaching, it proposes the theoretical teaching reform that stimulates students' interest in learning and develops the ability of computational thinking, constructs stage and hierarchical practice teaching system, improves continuously teaching methods and introduces the mobile cloud platform to assist teaching. The practice has proved that the students' comprehensive ability has been improved and the teaching effect has been achieved.},
  address = {New York, NY, USA},
  author = {Jin, Lan and Su, Ying},
  booktitle = {Proceedings of the 2018 International Conference on Big Data and Education},
  doi = {10.1145/3206157.3206170},
  isbn = {9781450363587},
  keywords = {comprehensive ability; computational thinking; fundamental of programming; interest in learning; mobile cloud platform; practice teaching system},
  location = {Honolulu, HI, USA},
  numpages = {5},
  pages = {116–120},
  publisher = {Association for Computing Machinery},
  series = {ICBDE '18},
  title = {The Teaching Reform of Integration of Theory and Practice with Interest Leading and Ability Training},
  url = {https://doi.org/10.1145/3206157.3206170},
  year = {2018}
}

@inproceedings{merged1172,
  abstract = {The Idaho Elementary Computer Science (CS) Collaborative (IECC) is a researcher-practitioner partnership dedicated to understanding how to better support the predominately rural districts in Idaho to implement elementary CS education. As part of the IECC's work, we conducted a survey of elementary teachers across the state. This poster will present our initial findings. Two of the research questions we addressed via the survey are: (1) What factors would motivate Idaho elementary teachers to pursue professional development (PD) related to CS? (2) What are elementary teachers' perceptions of the value of connecting CS education to rural community economies and industries? Descriptive analyses of 309 survey responses suggest that about three-quarters of elementary teachers reported that the following factors would be at least somewhat influential in their decisions to pursue CS PD: a K-5 computational thinking requirement, a district-wide CS planning staff, a pathway for elementary teachers to earn a certification in CS teaching, and a way to request CS PD funding. Few (9%) Idaho elementary teachers found that the perception of a disconnect between CS education and rural community interests was a significant barrier to elementary CS education. Even so, over 70% of them were moderately to strongly interested in mechanisms for connecting their CS education efforts to rural community industries through guest speakers and industry partnerships. The poster will discuss the implications of these and other emerging findings from the teacher survey, as well as IECC's related surveys of Idaho district superintendents and elementary school principals.},
  address = {New York, NY, USA},
  author = {Oh, Diana Dajung and Rich, Kathryn M. and Bosch-Wilson, Kathleen L. and Cunningham, Heather L.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635500},
  isbn = {9798400704246},
  keywords = {computer science education; elementary computer science; rural communities},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1768–1769},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Motivating and Increasing the Relevance of Elementary Computer Science in Rural Communities: Exploring Elementary Teacher Perspectives in Idaho},
  url = {https://doi.org/10.1145/3626253.3635500},
  year = {2024}
}

@inproceedings{merged1173,
  abstract = {This paper reports on the first year of teacher PD from an ongoing project designing to integrate computational thinking in middle school mathematics classrooms. The analysis investigates how teachers' prior dispositions toward programming influenced their behaviors in the PD. Two case studies illustrate that teachers' engagement and learning were affected not just by our designs, but also by the knowledge and beliefs teachers brought with them.},
  address = {New York, NY, USA},
  author = {Bell, Amanda},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439567},
  isbn = {9781450380621},
  keywords = {case study; dispositions; professional development; teaching},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1338},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Taking Up Opportunities to Learn in a Computer Science Professional Development for Middle School Teachers},
  url = {https://doi.org/10.1145/3408877.3439567},
  year = {2021}
}

@inproceedings{merged1174,
  abstract = {Bilingual education has described a process called translanguaging by which students use linguistic resources across and beyond multiple named languages to learn. Here, we examine how bilingual learners translanguage while learning computer science. These middle schoolers participated in a curricular intervention which infused computational thinking into their Spanish-English bilingual language arts class. Through a descriptive qualitative methodology, we document classroom moments supporting four claims: 1) students' translanguaging blurs linguistic, disciplinary, and modal boundaries, 2) computational literacies are intertwined with students' other literacies, 3) students' attitudes about language and the contexts around them play a role in their translanguaging, and 4) students translanguage to engage in specific CT practices.},
  address = {New York, NY, USA},
  author = {Vogel, Sara and Hoadley, Christopher and Ascenzi-Moreno, Laura and Menken, Kate},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287368},
  isbn = {9781450358903},
  keywords = {bilinguals; computational literacies; computer science for all; english language learners; middle school; translanguaging},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {1164–1170},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {The Role of Translanguaging in Computational Literacies: Documenting Middle School Bilinguals' Practices in Computer Science Integrated Units},
  url = {https://doi.org/10.1145/3287324.3287368},
  year = {2019}
}

@inproceedings{merged1175,
  abstract = {There is a consensus on integrating computing with STEM teaching in K-12. However, very little is known about the integration. In this paper, we propose a novel framework for integrating science and computational thinking teaching using Logic Programming. We then develop and implement two 8-session integration modules on chemistry and physics for 6th and 7th graders. Pre- and post- tests, class observations and interviews show the feasibility of the framework in terms of 1) development and implementation of the modules, and 2) the students' learning outcomes on science content and Computational Thinking, and their acceptance of the integration.},
  address = {New York, NY, USA},
  author = {Zhang, Yuanlin and Wang, Jianlan and Bolduc, Fox and Murray, William G.},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education},
  doi = {10.1145/3300115.3309512},
  isbn = {9781450362597},
  location = {Chengdu,Sichuan, China},
  numpages = {7},
  pages = {44–50},
  publisher = {Association for Computing Machinery},
  series = {CompEd '19},
  title = {LP Based Integration of Computing and Science Education in Middle Schools},
  url = {https://doi.org/10.1145/3300115.3309512},
  year = {2019}
}

@inproceedings{merged1176,
  abstract = {In fall 2019, the National Science Foundation awarded Southern Oregon University a two-year Computer Science for All Researcher Practitioner Partnership grant focused on integrating computational thinking (CT) into the K'5 instruction of general elementary and elementary bilingual teachers. This experience report highlights the process of transitioning one essential component of the project an elementary teacher summer institute (SI) from in-person to online due to COVID-19. This report covers the approach the team took to designing the SI to work virtually, the challenges encountered, the experiences of the 15 teachers involved through observations and surveys, and the opportunities for refinement. This report will be of potential interest for other computer science (CS) education researchers who also may be working with elementary teachers to incorporate CS and CT activities into their instruction.},
  address = {New York, NY, USA},
  author = {Skuratowicz, Eva and Vanderberg, Maggie and Hung, Eping E. and Krause, Gladys and Bradley, Dominique and Wilson, Joseph P.},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432482},
  isbn = {9781450380621},
  keywords = {covid-19; elementary teachers; integrating computational thinking; teacher professional development; virtual engagement},
  location = {Virtual Event, USA},
  numpages = {7},
  pages = {739–745},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {I Felt Like We Were Actually Going Somewhere: Adapting Summer Professional Development for Elementary Teachers to a Virtual Experience During COVID-19},
  url = {https://doi.org/10.1145/3408877.3432482},
  year = {2021}
}

@inbook{merged1177,
  abstract = {Emerging technologies such as artificial intelligence (AI) and mixed reality (MR) increasingly pervade the world of children, from their schoolwork to leisure activities and social relationships. This has led to Child Computer Interaction (CCI) research supporting children's critical understanding of digital technologies and their ability to influence the design of future digital technologies. Despite these efforts, there are several limitations and challenges in terms of Computational Empowerment (CE) of children. This workshop unites such research 1) to create a shared manifesto for CE of children and 2) to jointly develop a research ‘roadmap’ to push the boundaries of CE of children.},
  address = {New York, NY, USA},
  author = {Iivari, Netta and Iversen, Ole Sejer and Kafai, Yasmin and Antle, Alissa N. and Petersen, Marianne Graves and Kinnula, Marianne and Dindler, Christian and Kayali, Fares and Bonsignore, Elizabeth and Monga, Charu, Ms. and Schaper, Marie-Monique and Sharma, Sumita},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  isbn = {9798400714733},
  numpages = {4},
  pages = {1231–1234},
  publisher = {Association for Computing Machinery},
  title = {Pushing the Boundaries of Computational Empowerment of Children},
  url = {https://doi.org/10.1145/3713043.3734470},
  year = {2025}
}

@inproceedings{merged1178,
  abstract = {With the increased demand for introducing computational thinking (CT) in K-12 classrooms, educational researchers are developing integrated lesson plans that can teach CT fundamentals in non-computing specific classrooms. Although these lessons reach more students through the core curriculum, proper evaluation methods are needed to ensure the quality of the design and integration. As part of a research practice partnership, we work to infuse research-backed curricula into science courses. We find a three-pronged approach of evaluation can help us make better decisions on how to improve experimental curricula for active classrooms. This CEO model uses three data sources (student code traces, exit ticket responses, and field observations) as a triangulated approach that can be used to identify programming behavior among novice developers, preferred task ordering for the assignment, and scaffolding recommendations to teachers. This approach allows us to evaluate the practical implementations of our initiative and create a focused approach for designing more effective lessons.},
  address = {New York, NY, USA},
  author = {Lytle, Nicholas and Catet\'{e}, Veronica and Dong, Yihuan and Boulden, Danielle and Akram, Bita and Houchins, Jennifer and Barnes, Tiffany and Wiebe, Eric},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education},
  doi = {10.1145/3300115.3309527},
  isbn = {9781450362597},
  keywords = {assessment; computational thinking; modeling and simulation},
  location = {Chengdu,Sichuan, China},
  numpages = {7},
  pages = {58–64},
  publisher = {Association for Computing Machinery},
  series = {CompEd '19},
  title = {CEO: A Triangulated Evaluation of a Modeling-Based CT-Infused CS Activity for Non-CS Middle Grade Students},
  url = {https://doi.org/10.1145/3300115.3309527},
  year = {2019}
}

@inproceedings{merged1179,
  abstract = {Researchers and practitioners have worked to bring computer science to all students. However, CS is still an inequitable field. When developing curricula, we must account for the importance of connecting the lives and identities of historically marginalized students with instructional materials. We examine the knowledge and experiences that elementary (age 9-10) students drew upon to implement an open-ended programming assignment about themselves. We coded the Scratch projects of 189 students to investigate what aspects of their lives students reference, and how they use various modalities in Scratch to create digital media products about themselves. In our data, we found that the most common spheres portrayed were identity, hobbies and leisure, and interests. When expressing their identities, students narrated their experiences, expressed consciousness about their skills, connected to the user via their interests, and sometimes discussed equity. Additionally, our findings add to previous literature on Scratch as an effective platform for digital media production. In particular, we found that students used dialogue, images, sound, and the title to represent their spheres of influence through programming multimedia and interactive projects. This work has implications for the development of curricula and teaching guides for upper elementary students courses on computational thinking. Spheres of influence could inform researchers on the most influential aspects of students life in a specific context, providing elements for creating culturally relevant and interest-based materials and lessons.},
  address = {New York, NY, USA},
  author = {Ojeda-Ramirez, Santiago and Tsan, Jennifer and Eatinger, Donna and Jacob, Sharin and Saito-Stehberger, Dana and Franklin, Diana and Warschauer, Mark},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569869},
  isbn = {9781450394314},
  keywords = {digital media; identity; k-5; scratch; spheres of influence},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {333–339},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Describing Elementary Students' Spheres of Influence in Scratch 'About Me' Projects},
  url = {https://doi.org/10.1145/3545945.3569869},
  year = {2023}
}

@inproceedings{merged1180,
  abstract = {According to the characteristics of equal emphasis on both theoretical knowledge and practical technology, this paper discusses the reform of experiment teaching mode in object-oriented programming course. Based on the support of the China University MOOC and PTA platform for program design experiments, a blended teaching mode combined with PBL (Problem-Based Learning), flipped classroom, task driven and online evaluation OJ (Online Judgement) is designed to explore the application of the new practice teaching mode in the course. The course is aiming to develop students' computational thinking skills, which has been proved by practice that the reform has achieved good teaching results. Correspondingly, students' ability of autonomous learning, cooperation, problem solving and creativity have been simultaneously improved.},
  address = {New York, NY, USA},
  author = {Xie, Songhua and Hu, Changkui and Wu, Wei and Fan, Lili and Xiong, Yao and Tao, Jun},
  booktitle = {Proceedings of the 2021 5th International Conference on Education and E-Learning},
  doi = {10.1145/3502434.3502439},
  isbn = {9781450385749},
  keywords = {Blended teaching; Flipped classroom; PBL; Task driven},
  location = {Virtual Event, Japan},
  numpages = {4},
  pages = {125–128},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '21},
  title = {Blended Practical Teaching of Object Oriented Programming Based on PBL and Task Driven},
  url = {https://doi.org/10.1145/3502434.3502439},
  year = {2022}
}

@inproceedings{merged1181,
  abstract = {This document briefly explains the context, motivations, background and research design of a PhD project titled "Developing Teachers as Computational Participants". This PhD project will explore how Australian Primary School teachers learn and teach the core CS skills (computational thinking, computer programming and systems thinking), their experiences implementing lessons that impart these skills and the challenges they encounter when implementing these lessons.},
  address = {New York, NY, USA},
  author = {Hickmott, Daniel},
  booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
  doi = {10.1145/3105726.3105728},
  isbn = {9781450349680},
  keywords = {computational participation; constructionism; primary school; teacher professional development},
  location = {Tacoma, Washington, USA},
  numpages = {2},
  pages = {265–266},
  publisher = {Association for Computing Machinery},
  series = {ICER '17},
  title = {Developing Teachers as Computational Participants},
  url = {https://doi.org/10.1145/3105726.3105728},
  year = {2017}
}

@inproceedings{merged1182,
  abstract = {This demo introduces a hands-on robotics module designed to cultivate AI literacy in elementary students through computational thinking and robotics. Co-designed with 20 elementary school teachers and instructional coaches, the module helps students differentiate between artificial intelligence and human intelligence, focusing on the AI4K12 Big Idea of Perception, and specifically how our senses differ from a robot's sensors. The centerpiece of the curriculum is the "alien planet" task, where students program a robot to explore an unseen planet created by a peer, using its sensors to identify objects like "aliens" (green), "water" (blue), and "unique materials" (red). This activity not only builds critical thinking and problem-solving skills but also introduces foundational AI concepts, such as how machines perceive the world differently than humans. By connecting to other subjects like art (e.g., hue values) and linking to students' real-world experiences, the module offers a truly interdisciplinary and relevant approach to early AI education.},
  address = {New York, NY, USA},
  author = {Hutchins, Nicole M. and Chandler, Latoya and Lin, Yuhan and McKenna, Jason and DeFoe, Aimee and Israel, Maya},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705015},
  isbn = {9798400705328},
  keywords = {artificial intelligence; elementary education; robotics},
  location = {Pittsburgh, PA, USA},
  numpages = {1},
  pages = {1734},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {AI Literacy for Young Learners: A Co-Designed Robotics Unit for Students to Discover the World Beyond Human Senses},
  url = {https://doi.org/10.1145/3641555.3705015},
  year = {2025}
}

@inproceedings{merged1183,
  abstract = {In this workshop, participants will learn how to integrate in their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing two of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, panel-based Q&amp;A, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
  address = {New York, NY, USA},
  author = {Soh, Leen-Kiat and Peteranetz, Markeya S.},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287529},
  isbn = {9781450358903},
  keywords = {computational creativity; computational thinking; creativity},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1237},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises to Improve Student Learning},
  url = {https://doi.org/10.1145/3287324.3287529},
  year = {2019}
}

@inproceedings{merged1184,
  abstract = {Data science is an emerging 21st century literacy that promises to support learning in a wide variety of disciplines, from science, to social science, to the humanities. It also provides an engaging context in which to learn computational thinking skills in existing classroom contexts. For my dissertation research, I will explore whether and how data science can support inquiry-based learning in social studies. I conjecture that data science could provide students with an opportunity to use computational thinking to better understand their social world, while also allowing students to draw from and make sense of their own experiences. I plan to explore this idea by enhancing and evaluating a software tool, Local Ground, and creating a curriculum that helps young people identify and describe salient characteristics of their lived realities, moving from unstructured to structured data representations (e.g., photos to tags to databases). This process may generate a rich, motivating data source to explore subsequent ideas in computational thinking and social science.},
  address = {New York, NY, USA},
  author = {Van Wart, Sarah Jane},
  booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
  doi = {10.1145/2787622.2787751},
  isbn = {9781450336307},
  keywords = {broadening participation; computational thinking; data science education; interdisciplinary approaches},
  location = {Omaha, Nebraska, USA},
  numpages = {2},
  pages = {281–282},
  publisher = {Association for Computing Machinery},
  series = {ICER '15},
  title = {Computer Science Meets Social Studies: Embedding CS in the Study of Locally Grounded Civic Issues},
  url = {https://doi.org/10.1145/2787622.2787751},
  year = {2015}
}

@inproceedings{merged1185,
  abstract = {Educational robotics, in which students program a physical robot to interact with the real world, can provide tangible active learning opportunities that are often linked to increases in student computational thinking, creativity, and motivation. To date, ER has focused on the use of robots to augment learning of adjacent fields (e.g., mathematics, programming, digital media) for K--12 students. As a result, we lack ER guidelines for: (1) supporting college robotics students learning the discipline of robotics itself and (2) college robotics students, who may possess distinct abilities and needs compared to K--12 students. To address this gap, we present a semester-long exploration of a college-levelIntroduction to Robotics course. Through student feedback, we identified three themes: (1) Positive learning opportunities, (2) Dealing with uncertainty, and (3) Successful results with simple solutions. and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time. We detail these themes and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time.},
  address = {New York, NY, USA},
  author = {Ikeda, Bryce and Hoelscher, Janine and Alterovitz, Ron and Szafir, Daniel},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
  doi = {10.1145/3576882.3617928},
  isbn = {9798400700484},
  keywords = {educational robotics (ER); undergraduate introduction to robotics},
  location = {Hyderabad, India},
  numpages = {7},
  pages = {71–77},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Guiding the Development of Undergraduate Educational Robotics},
  url = {https://doi.org/10.1145/3576882.3617928},
  year = {2023}
}

@inproceedings{merged1186,
  abstract = {Decomposition is considered one of the four cornerstones of computational thinking, which is essential to software development [36]. It requires the ability to assess a problem at a high level, develop a strategy to combat it, and then design a solution. Our study focuses on the metacognitive aspect of decomposition. We try to understand the learner's thought process and, specifically, what makes the novice programmer decide to break down a function.Researchers have studied decomposition in introductory programming courses through guided experiments, case studies, and surveys[23,37]. In this work, we follow a different, more scalable approach. We develop an automated system to analyze 45,000 code snapshots from 168 students for a challenging CS1 programming assignment, detect the pivotal moments when they decide to decompose their programs, and identify what drives their decisions from the code. We then classify the students and study the relationship between the different categories, the code complexity, and the time to derive the final solution. We evaluate the impact of decomposition on the student's performance in the assignment and the course exams. Finally, we discuss the implications of our results for computing education.},
  address = {New York, NY, USA},
  author = {Charitsis, Charis and Piech, Chris and Mitchell, John C.},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569763},
  isbn = {9781450394314},
  keywords = {complexity; computing education; cs1; function decomposition; metacognition; program decomposition; student performance},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {1014–1020},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Detecting the Reasons for Program Decomposition in CS1 and Evaluating Their Impact},
  url = {https://doi.org/10.1145/3545945.3569763},
  year = {2023}
}

@inproceedings{merged1187,
  abstract = {Curriculum development is dependent on the following question: What are the learning goals for a specific topic, and what are reasonable ways to organize and order those goals? Learning trajectories (LTs) for computational thinking (CT) topics will help to guide emerging curriculum development efforts for computer science in elementary school. This study describes the development of an LT for Debugging. We conducted a rigorous analysis of scholarly research on K-8 computer science education to extract what concepts in debugging students should and are capable of learning. The concepts were organized into the LT presented within. In this paper, we describe the three dimensions of debugging that emerged during the creation of the trajectory: (1) strategies for finding and fixing errors, (2) types of errors, and (3) the role of errors in problem solving. In doing so, we go beyond identification of specific debugging strategies to further articulate knowledge that would help students understand when to use those techniques and why they are successful. Finally, we illustrate how the Debugging LT has guided our efforts to develop an integrated mathematics and CT curriculum for grades 3-5.},
  address = {New York, NY, USA},
  author = {Rich, Kathryn M. and Strickland, Carla and Binkowski, T. Andrew and Franklin, Diana},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287396},
  isbn = {9781450358903},
  keywords = {computational thinking; debugging; k-8; learning trajectory},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {745–751},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {A K-8 Debugging Learning Trajectory Derived from Research Literature},
  url = {https://doi.org/10.1145/3287324.3287396},
  year = {2019}
}

@inproceedings{merged1188,
  abstract = {This course introduces computational methods in human--computer interaction. Computational interaction methods use computational thinking -- abstraction, automation, and analysis -- to explain and enhance interaction. This course introduces optimization and probabilistic inference as principled methods. Lectures center on hands-on Python programming, interleaving theory and practical examples.},
  address = {New York, NY, USA},
  author = {Williamson, John and Oulasvirta, Antti and Hilliges, Otmar and Kristensson, Per Ola},
  booktitle = {Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3170427.3170654},
  isbn = {9781450356213},
  keywords = {computational interaction; inference; machine learning; optimization},
  location = {Montreal QC, Canada},
  numpages = {4},
  pages = {1–4},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '18},
  title = {Computational Interaction: Theory and Practice},
  url = {https://doi.org/10.1145/3170427.3170654},
  year = {2018}
}

@inproceedings{merged1189,
  abstract = {This course introduces computational methods in human--computer interaction. Computational interaction methods use computational thinking---abstraction, automation, and analysis---to explain and enhance interaction. This course introduces the theory of practice of computational interaction by teaching Bayesian methods for interaction across four wide areas of interest when designing computationally-driven user interfaces: decoding, adaptation, learning and optimization. The lectures center on hands-on Python programming interleaved with theory and practical examples grounded in problems of wide interest in human-computer interaction.},
  address = {New York, NY, USA},
  author = {Kristensson, Per Ola and Banovic, Nikola and Oulasvirta, Antti and Williamson, John},
  booktitle = {Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3290607.3298820},
  isbn = {9781450359719},
  keywords = {computational interaction; inference; machine learning; optimization},
  location = {Glasgow, Scotland Uk},
  numpages = {6},
  pages = {1–6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '19},
  title = {Computational Interaction with Bayesian Methods},
  url = {https://doi.org/10.1145/3290607.3298820},
  year = {2019}
}

@inproceedings{merged1190,
  abstract = {As the demand for computing careers increases, it is important to implement strategies to broaden the participation in computer science for African Americans. Computer science courses and academic pathways are not always offered in secondary schools. Many teachers are not trained in computer science, yet are pushed to incorporate more computing, computational thinking, and computer usage. A qualitative focus group study was implemented to assess the computer science identities of African American teachers and of their respective urban secondary schools serving African American students. Three major codes were identified: district administration of computer and computing implementation, teacher attitudes towards computer science instruction, and teachers' recommendations to improve computer science and computational thinking instruction and outreach for African American secondary school students. Findings can be used to improve computer science and technology rollout programs from county and district administrations, teacher instruction with digital tools, and computer science outreach for African American secondary school students.},
  address = {New York, NY, USA},
  author = {Hampton, Lelia and Cummings, Robert and Gosha, Kinnis},
  booktitle = {Proceedings of the 2019 on Computers and People Research Conference},
  doi = {10.1145/3322385.3322399},
  isbn = {9781450360883},
  keywords = {computing education; computing identity; k-12 education; self-efficacy; sense of belonging; underrepresented minorities},
  location = {Nashville, TN, USA},
  numpages = {7},
  pages = {78–84},
  publisher = {Association for Computing Machinery},
  series = {SIGMIS-CPR '19},
  title = {Improving Computer Science Instruction and Computer Use for African American Secondary School Students: A Focus Group Exploration of Computer Science Identity of African American Teachers},
  url = {https://doi.org/10.1145/3322385.3322399},
  year = {2019}
}

@inproceedings{merged1191,
  abstract = {At the moment, informatics education stretches downward to reach primary education. This article emphasizes computational thinking, focuses upon goals of primary education and unveils how to connect to existing teaching and learning patterns when integrating computational thinking into primary education. Furthermore, a framework is sketched to combine computational thinking with computational doing in a media-reduced way.},
  address = {New York, NY, USA},
  author = {Antonitsch, Peter K. and Gigacher, Cornelia and Hanisch, Liselotte and Sabitzer, Barbara},
  booktitle = {Proceedings of the 8th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2532748.2532763},
  isbn = {9781450324557},
  keywords = {computational thinking; planning; thinking},
  location = {Aarhus, Denmark},
  numpages = {4},
  pages = {118–121},
  publisher = {Association for Computing Machinery},
  series = {WiPSE '13},
  title = {A media-reduced approach towards informatics at primary level},
  url = {https://doi.org/10.1145/2532748.2532763},
  year = {2013}
}

@inproceedings{merged1192,
  abstract = {Nowadays, computational thinking skills are considered as fundamental for our future daily life and many initiatives and tools are created to foster these skills. In this paper, we present the Kniwwelino, a new platform for prototyping physical computing projects based on WiFi. The novelty of our solution lies in the use of a WiFi chip on a small, extendable board, programmable via a block based visual programming language, making the platform compact, low-cost, WiFi enabled, and accessible to children. This paper presents the design rationale and implementation of the platform as well as two simple, example projects making use of the new WiFi-based functionalities.},
  address = {New York, NY, USA},
  author = {Maquil, Val\'{e}rie and Moll, Christian and Schwartz, Lou and Hermen, Johannes},
  booktitle = {Proceedings of the Twelfth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3173225.3173275},
  isbn = {9781450355681},
  keywords = {children.; computational thinking; digital skills; physical computing; prototyping},
  location = {Stockholm, Sweden},
  numpages = {7},
  pages = {94–100},
  publisher = {Association for Computing Machinery},
  series = {TEI '18},
  title = {Kniwwelino: A Lightweight and WiFi Enabled Prototyping Platform for Children},
  url = {https://doi.org/10.1145/3173225.3173275},
  year = {2018}
}

@inproceedings{merged1193,
  abstract = {This paper analyses a novel tangible technology in early childhood environments as a boundary object. Objects in early childhood environments often share space between adults’ and children's objectives. By considering these objects as boundary objects, designers are led to explore how children appropriate objects for playful learning activities beyond adult objectives. This paper discusses Wobblies (see Figure 1), a novel technology probe, to interrogate how a socially-motivated design with conditional and positional interactive behaviour was understandable to children, and how they appropriated the probe in playful activities. We deployed the probe in a rural Australian preschool in a free-play environment. Initial observational findings show that the children understood the procedure of the interactions and moved from exploring to constructive play activities.},
  address = {New York, NY, USA},
  articleno = {55},
  author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
  booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3689050.3705972},
  isbn = {9798400711978},
  keywords = {Computational Thinking; Play; Tangible Technology; Young Children},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {TEI '25},
  title = {Wobblies: Designing Intentional Playthings with Young Children},
  url = {https://doi.org/10.1145/3689050.3705972},
  year = {2025}
}

@inproceedings{merged1194,
  abstract = {This study intends to investigate the present situation of AI curriculum offered for grades K-12. We screened 11 representative countries and areas from six continents and assessed the content of their top K-12 AI courses in terms of teaching content and teaching implementation in order to comprehend the current state of K-12 AI courses in diverse nations. Provide some ideas and suggestions for the development of AI courses for students in grades K-12. (1) Countries may choose AI applications, AI influences in various aspects, AI ethics, machine learning, data, classification, reasoning, Identify, and other content to establish independent AI teaching content standards; or choose programming as the core teaching content/starting point; or integrate programming, data, AI, and other content related to improving students' computational thinking into computer/science/technology courses. (2) Project-based learning is still the primary way of instruction, along with a range of other approaches. There are four categories of available instructional resources, and there is an abundance of them. Most countries emphasize the evaluation of students' abilities and the results achieved in the learning process.},
  address = {New York, NY, USA},
  author = {Zhou, Yujun and Zhan, Zehui and Liu, Lu and Wan, Jiayi and Liu, Simai and Zou, Xuanxuan},
  booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
  doi = {10.1145/3568739.3568796},
  isbn = {9781450398091},
  location = {Hangzhou, China},
  numpages = {7},
  pages = {337–343},
  publisher = {Association for Computing Machinery},
  series = {ICDTE '22},
  title = {International Prospects and Trends of Artificial Intelligence Education: A Content Analysis of Top-level AI Curriculum across Countries},
  url = {https://doi.org/10.1145/3568739.3568796},
  year = {2023}
}

@inproceedings{merged1195,
  abstract = {Many K-12 educators who are new to computer science (CS) may have a lack of confidence or sense of intimidation when starting their CS teaching journey. To mitigate this, Massachusetts DESE contracted CSforMA to create a three-day "Introduction to Computer Science for Educators" workshop (ICSW) focused on CS fundamentals. The ICSW covered grade-level CS terminology and concepts including computational thinking, physical computing, and programming. Evaluation of the ICSW showed 98% of respondents reported increased knowledge of CS. In a survey administered later that summer, 100% of respondents who took the ICSW reported that it helped them better understand curriculum materials. This replicable, scalable, and successful ICSW model could benefit other State DoEs and CS professional development coordinators. This work also shows the benefits of using an external evaluator.},
  address = {New York, NY, USA},
  author = {Menier, Amanda and Moore, Paula and Boisvert, Deborah and Peterfreund, Alan and Sexton, Stacey and Xavier, Jeffrey and Johnston, Brianna},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576306},
  isbn = {9781450394338},
  keywords = {education; k-12 education; professional development},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1362},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Intro to CS for Educators: A Pre-Curricula PD Workshop},
  url = {https://doi.org/10.1145/3545947.3576306},
  year = {2023}
}

@inproceedings{merged1196,
  abstract = {The CSforALL movement to bring computational thinking to K-12 has been a boon for practitioners and language developers. This panel features three educators passionate about a particular lan- guage that has been successful with K-12 audiences. Each will demonstrate their language, describe what makes it unique, and share some of the fun and engaging projects students have created.},
  address = {New York, NY, USA},
  author = {Garcia, Daniel D. and Rogers, Michael P. and Stefik, Andreas},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432570},
  isbn = {9781450380621},
  keywords = {cs0; k-12 cs education; languages; outreach; pre-cs1},
  location = {Virtual Event, USA},
  numpages = {2},
  pages = {760–761},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Fun and Engaging Pre-CS1 Programming Languages},
  url = {https://doi.org/10.1145/3408877.3432570},
  year = {2021}
}

@article{merged1197,
  abstract = {With the pervasiveness of the necessity of computational thinking across fields, more universities are requiring courses that build students' ability to think computationally. Computer Science 1 (CS1) is one such course where computational thinking is required This paper summarizes the work of two CS faculty who co-taught separate sections of CS1 for five semesters. Course modifications were made to augment CS1 with support inside and outside of the classroom for students to be successful. The use of in class tutors and requiring design documents were two of the primary modifications made to the course. A variety of data was collected in areas such as student planning, program design, frustration, and resources used to determine what relationships impact student success. One of the main benefits observed was an increase in the student pass rate.},
  address = {Evansville, IN, USA},
  author = {Jenkins, Janet T. and Terwilliger, Mark G.},
  issn = {1937-4771},
  issue_date = {October 2019},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {4},
  numpages = {9},
  pages = {124–132},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Examining strategies to improve student success in CS1},
  volume = {35},
  year = {2019}
}

@inproceedings{merged1198,
  abstract = {"Making" as a "do-it-yourself" and tinker mentality provides motivating and interdisciplinary ways to experiment and fosters transversal competences such as computational thinking skills. The joint innovation project "Making at School" (https://explore-making.ch; 10/2021 - 9/2023) of the Zurich University of Teacher Education (PHZH), the University of Zurich, and the CreativeLab Zurich is developing various interdisciplinary teacher training courses on Maker-Education for K12-teachers. In addition to a first basic module in spring 2022, advanced modules will be offered in autumn 2022, e.g., Digital Fabrication I (lasercutter, 3D printing) or BioTinkering. Preliminary cardboard and digital versions of a Making planning framework to support teachers in Making are already in development, evaluated, and will be improved using a design research approach together with teachers and (inter-)national experts.},
  address = {New York, NY, USA},
  author = {Spieler, Bernadette and Schifferle, Tobias M. and Dahinden, Manuela},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
  doi = {10.1145/3502717.3532150},
  isbn = {9781450392006},
  keywords = {interdisciplinary teacher training; maker-education; making; steam},
  location = {Dublin, Ireland},
  numpages = {1},
  pages = {624},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {The "Making at School" Project: Planning Interdisciplinary Activities},
  url = {https://doi.org/10.1145/3502717.3532150},
  year = {2022}
}

@inproceedings{merged1199,
  abstract = {To address racial and gender inequality in K12 STEM and computer science education, there needs to be mutli-pronged approach. In addition to the needed work for curricula that is culturally responsive and sustaining, inclusive of all student group, and positively welcomes the identities of historically marginalized people groups, K12 computer science teachers need to be equipped with the training and tools to implement the curricula, pedagogy, and instruction to mitigate the racial and gender gaps in K12 computer science education.  To address racial and gender inequality in K12 STEM and computer science education, there needs to be a multi-pronged approach. In addition to the needed work for curricula that is culturally responsive and sustaining, inclusive of all student groups, and positively welcome the identities of historically marginalized people groups, K12 computer science teachers need to be equipped with the training and tools to implement the curriculum, pedagogy, and instruction to mitigate the racial and gender gaps in K12 computer science education. Professional learning is an oft-used medium by curriculum providers as a means for teachers to adequately use boxed computer science curricula on computer science topics and content only. The panel proposes and will share how to implement culturally responsivesustaining pedagogy within K12 teacher professional learning, the importance of the integration of culturally relevant computational thinking and computer science strategies for K12 teachers, improved understanding of instructional practices that benefit all students in the CS classroom, and equity centered instructional coaching can all greatly improve chances of decreasing racial and gender equity gaps at the K12 level for historically marginalized student groups. Much of the presentation will share current tools and programming available to K12 teachers as well as propose scalable and replicable models for use in in-service teacher education broadly, and in-service computer science and STEM teacher professional learning across the nation.},
  address = {New York, NY, USA},
  author = {White, Shana V. and Scott, Allison and Yadav, Aman and Levitt, Diane},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3631663},
  isbn = {9798400704246},
  keywords = {culturally-responsive computing; equity; k12 computing education; k12 pedagogy and instructional strategies; k12 prefessional development; k12 professional learning},
  location = {Portland, OR, USA},
  numpages = {3},
  pages = {1543–1545},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Equitable Professional Learning for K12 Computer Science Teachers},
  url = {https://doi.org/10.1145/3626253.3631663},
  year = {2024}
}

@inproceedings{merged1200,
  abstract = {Introducing digital literacy to young children develops foundational skills in problem-solving and supports their cognitive development, including critical thinking. However, physical manipulatives for digital literacy are not always designed for early-year environments or specifically for young children. Physical manipulatives can offer developmentally appropriate tools to introduce foundational digital literacy through dynamic system knowledge before children become developmentally ready for more formalised coding activities. This paper presents an initial study in a preschool environment with children (ages 3 – 5 years) using novel physical manipulatives, Embeddables (Fig. 1), in child-led free and guided play activities in a preschool. From our initial analysis of the types of activities the children engaged in, we identify how, firstly, children used the proximal relations to undertake experimental understanding of the devices, which secondly led to using the proximal relationships in their social play, further supported by the scale and feedback of the toys.},
  address = {New York, NY, USA},
  articleno = {69},
  author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
  booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3689050.3706008},
  isbn = {9798400711978},
  keywords = {Computational Thinking; Early Years; Interaction Design; Tangible},
  numpages = {7},
  publisher = {Association for Computing Machinery},
  series = {TEI '25},
  title = {Embeddables: Designing Physical-Digital Manipulatives for Young Children},
  url = {https://doi.org/10.1145/3689050.3706008},
  year = {2025}
}

@inproceedings{merged1201,
  abstract = {A unified understanding of the nature of computation-based education experiment is formed based on education experiment and computational experiment. Through a perspective analysis of the research paradigm of computation-based education experiment, the components of computation-based education experiment are identified, which are computer, network architecture, operating system, high-level programming language, intermediate data processing, external interface, and computational thinking. Their respective features are also described. The forces driving the change of these components are analyzed from two aspects: the change of educational research needs and the development of informatization. Finally, the specific changes of each component are introduced and the nature of change is summarized.},
  address = {New York, NY, USA},
  author = {Meng, Ji},
  booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
  doi = {10.1145/3456887.3456925},
  isbn = {9781450389969},
  location = {Ottawa, ON, Canada},
  numpages = {4},
  pages = {171–174},
  publisher = {Association for Computing Machinery},
  series = {CIPAE 2021},
  title = {The Understanding and Evolution of the Construction Elements of Educational Computing Experiment},
  url = {https://doi.org/10.1145/3456887.3456925},
  year = {2021}
}

@inproceedings{merged1202,
  abstract = {Much of modern biology requires quantitative and computational skills for the proper analysis of large-scale datasets, and there is a recognized need for computational training in undergraduate biology programs. This experience report describes a four-week unit designed to introduce fundamental computer science concepts and molecular biology concepts in an integrated fashion. The unit serves as the first four weeks of an introductory course taught within the Biology Department at an undergraduate institution, and is designed to introduce computational thinking to non-computational science majors. Survey results reveal that the course has attracted students from all years (first years through seniors), the majority of students have been women, and students have large self-perceived learning gains in computer science concepts. The unit shows promise for engaging non-computational students through applications in introductory molecular biology. Materials are available at http://www.reed.edu/biology/courses/bio131/resources.html.},
  address = {New York, NY, USA},
  author = {Ritz, Anna},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159590},
  isbn = {9781450351034},
  keywords = {computational biology; computational thinking; introductory programming; undergraduate education},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {239–244},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Programming the Central Dogma: An Integrated Unit on Computer Science and Molecular Biology Concepts},
  url = {https://doi.org/10.1145/3159450.3159590},
  year = {2018}
}

@inproceedings{merged1203,
  abstract = {In this workshop, we will introduce you to a suite of Computational Creativity Exercises (CCEs) that have been shown to significantly improve student learning and achievement in introductory and advanced CS courses. CCEs address core aspects of computational thinking while exposing students to creative thinking skills, and can be adapted for use in your own courses. Activities such as writing a story in separate chapters and then merging the chapters to form a coherent whole, creating quilt-like patterns with written descriptions, or designing testing strategies for an alien health machine require students to apply computational thinking to unorthodox contexts and situations promoting creative application of CS knowledge and skills. CCEs are group-based, promote active learning, and are designed to foster collaborative problem solving necessary in today's workplace. They require no programming experience making them accessible to students including those with limited CS background and those with interests in non-CS disciplines, which can encourage more diverse participation in computing. Engage in a hands-on demo of a CCE and learn how to adapt CCEs for use in your classes, including technical support from the IC2Think Project team. Learn about the rigorous research studies behind the development, design and administration of these CCEs, including the instruments we used to evaluate the CCEs. Workshop session will include "how-to" presentations, panel-based Q&amp;A, breakout group discussions, and hands-on activities. Let's compute, create, and collaborate!},
  address = {New York, NY, USA},
  author = {Soh, Leen-Kiat and Ingraham, Elizabeth and Shell, Duane F.},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3162348},
  isbn = {9781450351034},
  keywords = {active learning; computational thinking; creative thinking},
  location = {Baltimore, Maryland, USA},
  numpages = {1},
  pages = {1060},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Computational Creativity Exercises for Improving Student Learning and Performance: (Abstract Only)},
  url = {https://doi.org/10.1145/3159450.3162348},
  year = {2018}
}

@inproceedings{merged1204,
  abstract = {Computer Science and programming are being introduced to school curricula in many western countries in an effort to equip students with Computational Thinking skills. However, as these subjects are still relatively new to pre-tertiary education there is much investigation to be done into how best to present these topics and how to prepare teachers. In this study we focus on the presentation of topics relating to computing, Computational Thinking, and Computer Science for primary schools.We analyse English-language curricula that have been published, specifically the English, Australian and CSTA curricula for primary schools. From this we establish the main topics covered, and how they are positioned to be suitable for students from the first year of school to approximately their eighth year.We then report on a pilot study of a curriculum based on Computational Thinking; long term the study will encompass a range of topics and year levels, but the pilot focused on topics suitable for 11 to 12 year old students. Here we detail the design of this part of the curriculum, the manner of its delivery, and the experiences and observations of the generalist teacher who taught the course. Through assessment data, student responses to an attitude survey, and class observations we have evaluated the pilot curriculum. The findings of this study are being used to inform the design of a planned larger scale study.},
  address = {New York, NY, USA},
  author = {Duncan, Caitlin and Bell, Tim},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818328},
  isbn = {9781450337533},
  keywords = {Algorithms; computational thinking; curriculum; primary school; programming},
  location = {London, United Kingdom},
  numpages = {10},
  pages = {39–48},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {A Pilot Computer Science and Programming Course for Primary School Students},
  url = {https://doi.org/10.1145/2818314.2818328},
  year = {2015}
}

@inproceedings{merged1205,
  abstract = {Algorithmic thinking is at the core of computational thinking. Tangible interactive solutions can help children develop algorithmic thinking skills. This paper focusses on exploratory research concerning tangibles for graph algorithmic thinking for primary and middle schools. By following an action-research process, tangibles evolved through prototyping and actions-studies. The paper overviews their evolution and delves into its most recent action: an ecological study with 8 middle school children, and 5 primary school children, using tangibles for graph algorithmic thinking. It ends by reflecting on results and future work.},
  address = {New York, NY, USA},
  author = {Bonani, Andrea and Del Fatto, Vincenzo and Gennari, Rosella},
  booktitle = {Proceedings of the Twelfth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3173225.3173270},
  isbn = {9781450355681},
  keywords = {action research; algorithmic thinking; children; iot; middle school.; primary school; tangible design},
  location = {Stockholm, Sweden},
  numpages = {8},
  pages = {65–72},
  publisher = {Association for Computing Machinery},
  series = {TEI '18},
  title = {The Evolving Design of Tangibles for Graph Algorithmic Thinking},
  url = {https://doi.org/10.1145/3173225.3173270},
  year = {2018}
}

@inproceedings{merged1206,
  abstract = {Student success in introductory computing course continues to be a major challenge. Though there has been much research and innovation in recent years to help reduce high failure rates, a substantial population of students still struggle in a typical CS1 course. In this paper we create an argument of validity of the Placement Skills Inventory (PSIv1). The goal of the PSIv1 is to help advise and place students into an appropriate introductory computing course. While placement exams have been developed in the past, the goal of PSIv1 is to differentiate students who will be successful in a CS1 course and those that would be better served taking a CS0 course as their first computing course. In contrast, traditional placement exams have focused on differentiating students between CS1 and CS2. The PSIv1 is a combination of two instruments, the Computational Thinking Concepts and Skills Test and the Second Computer Science 1 Exam Revised Version 2. These two instruments measure students' computation thinking skills and prior programming knowledge respectively. The PSIv1 was administered to all students enrolled in either a CS0 or CS1 during the first two weeks of the semester. We use Item Response Theory to create an argument of validity of the PSIv1 and look at differences in scores on the PSIv1 based on if a student passed or failed a CS0 and CS1 course. We then used the results to create an advising strategy and criteria to help students decided if they should enroll in a CS0 or CS1 course.},
  address = {New York, NY, USA},
  author = {Bockmon, Ryan and Bourke, Chris},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569738},
  isbn = {9781450394314},
  keywords = {assessment; cs0; cs1; irt; validation},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {39–45},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Validation of the Placement Skill Inventory: A CS0/CS1 Placement Exam},
  url = {https://doi.org/10.1145/3545945.3569738},
  year = {2023}
}

@inproceedings{merged1207,
  abstract = {In recent years, programming courses has been incorporated into academic curriculums. However, as many students encounter setbacks in the learning process, this study introduces the grouping strategies for cooperation learning into programming courses, which is intended to help students improve their learning outcomes and enhance their computational thinking abilities.The subjects were 75 college students from two classes, which were divided into student-selected and heterogeneous groups, and took the experimental programming course for three weeks. The pre-test and post-test learning outcomes were validate by t-test and one-way ANOVA. This experiment aimed to understand the learning outcomes after adopting grouping strategies, as well as the learning outcomes of students with different backgrounds after adopting grouping strategies.The results showed that both student-selected grouping and heterogeneous grouping can improve the learning outcome. The learning outcome with student-selected grouping is business management background &gt; other backgrounds &gt; design background &gt; electrical engineering and computer science background. With heterogeneous grouping, the learning outcome of the design background is close to that of the electrical engineering and computer science background, and there is no significant difference among electrical engineering and computer science, business management, and other learning backgrounds. Thus, the learning outcome with heterogeneous grouping is better than that with student-selected grouping.},
  address = {New York, NY, USA},
  author = {Hsu, Jih-Shih and Tsai, Wen-Lung},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572612},
  isbn = {9781450397766},
  keywords = {cooperative learning; grouping strategies; programming; single-factor experiment design},
  location = {Barcelona, Spain},
  numpages = {10},
  pages = {393–402},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {Influence of Grouping Strategies for Cooperative Learning on the Learning Outcome of Programming Course},
  url = {https://doi.org/10.1145/3572549.3572612},
  year = {2023}
}

@inproceedings{merged1208,
  abstract = {As states are adopting NGSS, engineering is increasingly being integrated in K-12 science education. While middle schools have typically segregated learning by discipline, educators are recognizing the importance of making connections across STEM disciplines. This paper presents robot artifacts built by students in an interdisciplinary middle school curriculum that combines biology, engineering, and computational thinking. In this curriculum, students analyze animals and use them as inspiration to build biomimetic robots - robots inspired by animals. We characterized and classified these artifacts based on their robots' mechanical structure and biomimetic structure and motion.},
  address = {New York, NY, USA},
  author = {Shaw, Fayette and Kshirsagar, Khushbu and Wendell, Kristen and Danahy, Ethan and Bernstein, Debra and Puttick, Gillian and Cassidy, Michael},
  booktitle = {Proceedings of the FabLearn 2020 - 9th Annual Conference on Maker Education},
  doi = {10.1145/3386201.3386213},
  isbn = {9781450375436},
  keywords = {Biomimicry; curriculum; educational robotics; middle school education},
  location = {New York, NY, USA},
  numpages = {6},
  pages = {34–39},
  publisher = {Association for Computing Machinery},
  series = {FabLearn '20},
  title = {Characterizing Student Artifacts in a Multi-disciplinary Biomimicry and Robotics Unit},
  url = {https://doi.org/10.1145/3386201.3386213},
  year = {2021}
}

@inproceedings{merged1209,
  abstract = {Beginner programmers can develop an intuitive understanding of programming by leveraging the motivating field of multimedia to visually inspect outputs and experiment with different ways to solve problems. This paper presents MediaLib, a Python library designed to facilitate multimedia programming and lessen the cognitive load associated with programming for novice programmers. In addition, we designed an official MediaLib website which contains the library itself, two tutorials, and clear documentation. The tutorial clearly presents the learning objectives of each lesson and contains exercises related to MediaLib. We designed these exercises to help students gain knowledge incrementally, without requiring in-depth maths knowledge.},
  address = {New York, NY, USA},
  author = {Wynn, Adam and Wang, Jingyun and Valente, Andrea},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3649405.3659521},
  isbn = {9798400706035},
  keywords = {beginners; computational thinking; library; multimedia programming; programming skills; python; teaching materials},
  location = {Milan, Italy},
  numpages = {2},
  pages = {785–786},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Simplifying Multimedia Programming for Novice Programmers: MediaLib and Its Learning Materials},
  url = {https://doi.org/10.1145/3649405.3659521},
  year = {2024}
}

@inproceedings{merged1210,
  abstract = {Computer Science competencies are becoming increasingly important in our current digitised society. To foster students in Computer Science, different countries have introduced subjects with new educational plans based on Computer Science frameworks, such as the K-12 CS Framework and the Informatics Reference Framework for Schools. Those include, in one way or another, four content areas: data and coding (including data structures and their applications), algorithms (involving variables, loops, and software projects), computers and networks (emphasizing the role of computers in a network and data transmission) and information society and data security (covering topics like asymmetric encryption and personal data protection). Various tests have been developed in the field of Computer Science Education for different age groups, primarily at university level for introductory Computer Science courses, and some for upper secondary school level and below, particularly for Computational Thinking. Given the research context, the objective of this study is to develop a set of items that measures the content knowledge in the four aforementioned areas. Specifically, the study focuses on the educational plan of the Computer Science subject called IMP, which is taught from the 8th to the 10th grade in secondary schools in Baden-W\"{u}rttemberg, Germany. In total, 155 items were evaluated by experts, resulting in a test consisting of 68 items. This poster abstract presents the ongoing progress of the test development.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609778},
  isbn = {9798400708510},
  keywords = {Competency; Computer Science; Content Knowledge; Expert Rating},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Developing a Computer Science Content Knowledge Test for 10th Grade Students},
  url = {https://doi.org/10.1145/3605468.3609778},
  year = {2023}
}

@inproceedings{merged1211,
  abstract = {In 1962, Thomas Kuhn changed our understanding of scientific progress through his explanation of scientific paradigms and attribution of scientific advances to paradigm shifts. According to Kuhn, a discipline's paradigm drives research, provides explanations, and directs the accumulation of discipline-specific knowledge. In 2006 and 2008 Jeanette Wing authored articles that reignited interest in computational thinking (CT) education and CT education research. Wing's articles, arguably, set in place the conceptual foundations of the paradigm currently guiding CT education and paved the way for a fruitful decade of CT education research. We are concerned, however, that the present direction of CT education and research will not support CT as an integral part of K-12 education. In its current form, CT instruction focuses almost exclusively on teaching students to program and isolates CT from disciplinary content; perpetuating the persistent misconception that programming = CT. This approach to CT education may deprive students of the opportunity to adequately develop foundational CT skills (e.g. systems thinking, abstraction and generalization, data collection and utilization, solution evaluation) and may prevent teachers from persistently and meaningfully integrating CT into their curriculum. Through this talk, we identify features of the current CT paradigm, question their alignment with Wing's ideal of "computational thinking for everyone," and propose specific recommendations for expanding the current CT paradigm.},
  address = {New York, NY, USA},
  author = {Kite, Vance and Park, Soonhye and Wiebe, Eric},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293765},
  isbn = {9781450358903},
  keywords = {computational thinking; computational thinking paradigm},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1286},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Recognizing and Questioning the CT Education Paradigm},
  url = {https://doi.org/10.1145/3287324.3293765},
  year = {2019}
}

@book{merged1212,
  abstract = {Data for Healthy Communities (DHC) is a 15-hour high school project that uses spreadsheets and public data to provide an accessible introduction to data science in the broader context of decision making for complex societal problems. Students work with real-world government data in the context of public health and will learn how to use data as evidence to support an argument for investment in their local communities. The no-code interface of spreadsheet software allows students to explore basic computing concepts such as variables and functions while engaging with authentic public health challenges like air quality, health inequity, and environmental burden. The intention is to lower the barrier for students' first introduction to computing and to present options for embedding data science education in a wider variety of curricular areas.The project is scaffolded by skill-building modules that use a mix of lectures, class demonstrations, and labs to guide students through exploring, analyzing, and visualizing data to make an argument. Students then apply these skills in a team-based activity that challenges them to use real neighborhood-level community indicators to create a structured presentation to a city council to advocate for community investment. After the student presentations, it is recommended to hold a class discussion to highlight the complexity of real-world problems where there is no one right answer. Rather, complex problems often require teams to consider several factors to build an argument for a proposed solution.},
  author = {Nutwell, Emily and Badger, Kelsey},
  isbn = {9798400715709},
  numpages = {4},
  title = {Public Data in the Public Interest: A Spreadsheet-Based Project for High School Computing},
  year = {2025}
}

@inproceedings{merged1213,
  abstract = {This year's Snap! 10 release marks a major leap forward, bringing advanced machine learning capabilities directly into the hands of students and educators. Version 10 introduces support for building ML models, including single-layer perceptrons, making it easier than ever for students to explore AI concepts within a block-based environment. These updates are accompanied by the ability to define Snap! primitives using Snap! blocks themselves, empowering users to deeply customize and extend the language.Building on the rich foundation of previous versions, Snap! 10 also includes hundreds of improvements aimed at enhancing both the classroom and the individual learning experience. These include quality-of-life updates such as new debugging tools, dynamic runtime access via the ''this'' reporter, and expanded support for working with dictionaries and APIs.In this demo, we'll showcase the exciting new features in Snap! 10, focusing on how they can be used to engage students in advanced topics like machine learning, data science, and computational thinking. Attendees will learn how to leverage these tools to build custom experiences that meet the evolving needs of their classrooms.},
  address = {New York, NY, USA},
  author = {Phelps, Victoria and Ball, Michael and Garcia, Dan and Garcia, Yuan},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705048},
  isbn = {9798400705328},
  keywords = {ai; block-based programming; llm; metaprogramming; programming paradigms; snap!},
  location = {Pittsburgh, PA, USA},
  numpages = {1},
  pages = {1737},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Snap! 10 --- From Blocks to AI: Empowering Learning with Custom Primitives and Machine Learning},
  url = {https://doi.org/10.1145/3641555.3705048},
  year = {2025}
}

@inproceedings{merged1214,
  abstract = {One of the skills that comprise computational thinking is the ability to read code and reason about the hierarchical relationships between different blocks, expressions, elements, or other types of nodes, depending on the language. In this study, we present three new instruments for assessing different aspects of reading hierarchies in code, including vocabulary, reasoning, and fluency. One of these instruments is Nester, an interactive tool we have designed to elicit mental models about the hierarchical structure of code in computing languages ranging from HTML, CSS, and LaTeX to JavaScript and Lisp. We describe a lab study in which we administered these instruments to 24 participants with varying degrees of web development experience. We report findings from this study, including participants' ability to define, reason about, and manipulate hierarchies in code, and the errors and misconceptions that relate to them. Finally, we discuss avenues for future work.},
  address = {New York, NY, USA},
  author = {Park, Thomas H. and Kim, Meen Chul and Chhabra, Sukrit and Lee, Brian and Forte, Andrea},
  booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2899415.2899435},
  isbn = {9781450342315},
  keywords = {assessment; computational thinking; program comprehension; web development},
  location = {Arequipa, Peru},
  numpages = {6},
  pages = {302–307},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '16},
  title = {Reading Hierarchies in Code: Assessment of a Basic Computational Skill},
  url = {https://doi.org/10.1145/2899415.2899435},
  year = {2016}
}

@inproceedings{merged1215,
  abstract = {CS Unplugged: computing education activities without digital tools have successfully engaged young students in fundamental computing concepts. While CS Unplugged fosters qualities such as collaboration and kinesthetic engagement, it requires significant facilitation and offers little room for students’ experimentation. Addressing these limitations, we augment unplugged activities with tangible computing by designing and evaluating Bit:sort. Bit:sort supports young students’ exploration of sorting algorithms using the micro:bit platform, maintaining the embodied elements of unplugged activities while using tangible computing to direct the activity and provide motivation for collaborative learning. We conducted a study with six groups of 4th-grade students (n=35). Our findings indicate that while students struggle to articulate their problem-solving strategies verbally, they demonstrate algorithmic reasoning through kinesthetic explorations. We discuss the qualities and limitations of augmenting CS Unplugged and propose design guidelines for replugged activities to foster scalable and exploratory learning experiences while maintaining core qualities of the unplugged approach.},
  address = {New York, NY, USA},
  author = {Dybboe, Maja and Kaspersen, Magnus H\o{}holt and Bjerrum, Johanne Birkkj\ae{}r and Petersen, Marianne Graves},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  doi = {10.1145/3713043.3728854},
  isbn = {9798400714733},
  keywords = {CS Unplugged; Computational Thinking; Research Through Design},
  numpages = {15},
  pages = {429–443},
  publisher = {Association for Computing Machinery},
  series = {IDC '25},
  title = {Bit:sort : Bringing Tangible Computing to Computer Science Unplugged to Support Children's Algorithmic Explorations},
  url = {https://doi.org/10.1145/3713043.3728854},
  year = {2025}
}

@inproceedings{merged1216,
  abstract = {Major metropolitan school districts around the United States are implementing computer science in elementary school classrooms as part of the CS for All (CS4All) initiative. Little is known, however, about the success of such a large-scale rollout, especially in terms of equity. In this study we analyze the performance of 4th grade classrooms completing three modules of an introductory computational thinking curriculum, looking at not only overall results but also the variance in performance between high-, mid-, and low-performing schools (as identified by their school report cards). We find that all classrooms are benefiting from the computational thinking (CT) curriculum, making great strides in providing equitable access to CT education. However, statistically-significant differences in performance are present, especially between the high- and low-performing schools, showing that there is still room for improvement in developing strategies and curricula for struggling learners.},
  address = {New York, NY, USA},
  author = {Salac, Jean and White, Max and Wang, Ashley and Franklin, Diana},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287353},
  isbn = {9781450358903},
  keywords = {diversity; k-8 education; scratch},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {1150–1156},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {An Analysis through an Equity Lens of the Implementation of Computer Science in K-8 Classrooms in a Large, Urban School District},
  url = {https://doi.org/10.1145/3287324.3287353},
  year = {2019}
}

@inproceedings{merged1217,
  abstract = {Digital storytelling, which combines traditional storytelling with digital tools, has seen growing popularity as a means of creating motivating problem-solving activities in K-12 education. Though an attractive potential solution to integrating language arts skills across topic areas such as computational thinking and science, better understanding of how to structure and support these activities is needed to increase adoption by teachers. Building on prior research on block-based programming for interactive storytelling, we present initial results from a study of 28 narrative programs created by upper elementary students that were collected in both classroom and extracurricular contexts. The narrative programs are evaluated across multiple dimensions to better understand the types of narrative programs being created by the students, characteristics of the students who created the narratives, and what types of support could most benefit the students in their narrative program construction. In addition to analyzing the student-created narrative programs, we also provide recommendations for promising system-generated and instructor-led supports.},
  address = {New York, NY, USA},
  author = {Vandenberg, Jessica and Gupta, Anisha and Smith, Andy and ElSayed, Rasha and Fox, Kimkinyona and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy and Mott, Bradford},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576345},
  isbn = {9781450394338},
  keywords = {computer science education; game-based learning; k-12 education},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1401},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Supporting Upper Elementary Students in Multidisciplinary Block-Based Narrative Programming},
  url = {https://doi.org/10.1145/3545947.3576345},
  year = {2023}
}

@inproceedings{merged1218,
  abstract = {This poster presents the development and implementation of a 10-day remix-based summer camp curriculum designed to introduce high school students, particularly a multinational cohort of young women, to programming through creative coding. The curriculum integrates music composition using EarSketch and web development with HTML and CSS. The camp aims to inspire participants to gain self-efficacy in programming and motivate them to explore STEM/computing careers. Preliminary results from surveys and interviews indicate increased confidence in programming skills. This ongoing research explores the impact of remixing as a gateway for transitioning into more general-purpose computing domains such as web development.},
  address = {New York, NY, USA},
  author = {Manesh, Daniel and Jelson, Andrew and Altland, Emily and Freeman, Jason and Lee, Sang Won},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705275},
  isbn = {9798400705328},
  keywords = {computational thinking; computer science education},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1535–1536},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Understanding the Effects of Integrating Music Programming and Web Development in a Summer Camp for High School Students},
  url = {https://doi.org/10.1145/3641555.3705275},
  year = {2025}
}

@inproceedings{merged1219,
  abstract = {There is both great hope and concern about the future of Computer Science practice and education concerning the recent advent of large language models (LLMs).We present the first study to extensively evaluate the ability of such a model to solve problems in Computer Science Theory. Specifically, we tested 165 exam-level problems across 16 specific topics related to computer science theory, ranging from preliminary data structures to algorithm design paradigms to theory of computation (automata and complexity). Our results use the recent popular models (GPT-4 and GPT-4o). This is a rapidly evolving field, with model performance continuously improving. We present our results primarily as an indication of what they can already achieve-equivalently how they can already be useful-today, fully expecting them to improve even further in the near future. Our results show that what was very recently a state-of-the-art model (GPT-4) can solve 77% of free-response problems in data structures and algorithms with little to no guidance. The latest model, GPT-4o, can solve around 46% of the Theory of Computation problems we posed, with predictable categories for which problems it could not solve. When broken down by topic, the model can solve 80% of problems in 4 out of the 15 topics and at least half in 8 other topics. Other problems, namely more visual problems, either require more substantial coaching or seem to still be beyond the capabilities of the language model--for now. By understanding the strengths and limitations of these models for solving theory problems, we can open the door to future work, ranging from human educational assessment on the topic to automated tutors for learners of the subject.},
  address = {New York, NY, USA},
  author = {Li, Nero and Broner, Shahar and Kim, Yubin and Mizuo, Katrina and Sauder, Elijah and To, Claire and Wang, Albert and Gila, Ofek and Shindler, Michael},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701946},
  isbn = {9798400705311},
  keywords = {algorithm design techniques; chatgpt; computational thinking; computer-assisted instruction; data structures; generative ai; gpt-4; gpt-4o; large language models},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {659–665},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Investigating the Capabilities of Generative AI in Solving Data Structures, Algorithms, and Computability Problems},
  url = {https://doi.org/10.1145/3641554.3701946},
  year = {2025}
}

@inproceedings{merged1220,
  abstract = {Digital games featuring programmable agents are popular tools for teaching coding and computational thinking skills. However, today's games perpetuate an arguably obsolete relationship between programmable agents and human operators. Borrowing from the field of human-robotics interaction, we argue that collaborative robots, or cobots, are a better model for thinking about computational agents, working directly with humans rather than in place of or at arm's length from them. In this paper, we describe an initial design inquiry into the design of “cobot games”, programmable agent scenarios in which players program an in-game ally to assist them in accomplishing gameplay objectives. We detail three questions that emerged out of this exploration, our present thinking on them, and plans for deepening inquiry into cobot game design moving forward.},
  address = {New York, NY, USA},
  author = {Higashi, Ross and Harpstead, Erik and Solyst, Jaemarie and Kemper, Jonaya and Odili Uchidiuno, Judith and Hammer, Jessica},
  booktitle = {Extended Abstracts of the 2021 Annual Symposium on Computer-Human Interaction in Play},
  doi = {10.1145/3450337.3483472},
  isbn = {9781450383561},
  keywords = {Co-robotic games; Cobots; Games-based learning; Robotics education},
  location = {Virtual Event, Austria},
  numpages = {6},
  pages = {111–116},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '21},
  title = {The Design of Co-Robotic Games for Computer Science Education},
  url = {https://doi.org/10.1145/3450337.3483472},
  year = {2021}
}

@inproceedings{merged1221,
  abstract = {This poster paper presents the operation and the new features of Dr. Scratch, an award-winning gamified web application that allows to perform automatic analysis of Scratch projects to assess the development of computational thinking and detect some bad programming habits that are common in students learning to program in this environment.},
  address = {New York, NY, USA},
  author = {Moreno-Le\'{o}n, Jes\'{u}s and Robles, Gregorio},
  booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2818314.2818338},
  isbn = {9781450337533},
  keywords = {Assessment; Scratch; coding; computational thinking; learning},
  location = {London, United Kingdom},
  numpages = {2},
  pages = {132–133},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '15},
  title = {Dr. Scratch: a Web Tool to Automatically Evaluate Scratch Projects},
  url = {https://doi.org/10.1145/2818314.2818338},
  year = {2015}
}

@inproceedings{merged1222,
  abstract = {While much attention has focused on promoting computational thinking in K-12 CS education, much less attention has been paid to the equally significant dimension of what it means to identify with the discipline. Previous approaches to CS identity have mostly focused on getting students to reveal their identifications in the form of drawings or survey responses, while more recent approaches have started to examine narratives in a field that historically has marginalized women and students of color. My dissertation seeks to broaden participation in computing by creating access for groups who have historically and structurally been excluded from CS. While learning computational skills and designing interactive paper quilts, high school students of color will draw upon their lived experiences to reimagine new connections and stories about CS. Using video observations and field notes, students' reflective worksheets and artifacts, and student interviews, I will explore what happens when youth of color use CS skills and digital technologies to "restory" their CS identities, the kinds of metanarratives about CS and computer scientists youth identify, and what the process of restorying looks like in practice.},
  address = {New York, NY, USA},
  author = {Shaw, Mia S.},
  booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
  doi = {10.1145/3372782.3407114},
  isbn = {9781450370929},
  keywords = {computer science; counter-narratives; equity; identity},
  location = {Virtual Event, New Zealand},
  numpages = {2},
  pages = {344–345},
  publisher = {Association for Computing Machinery},
  series = {ICER '20},
  title = {Restorying through Computational Quilts: A Critical Approach Towards Reimagining Computer Science},
  url = {https://doi.org/10.1145/3372782.3407114},
  year = {2020}
}

@inproceedings{merged1223,
  abstract = {Programming courses can be challenging for first year university students, especially for those without prior coding experience. Students initially struggle with code syntax, but as more advanced topics are introduced across a semester, the difficulty in learning to program shifts to learning computational thinking (e.g., debugging strategies). This study examined the relationships between students' rate of programming errors and their grades on two exams. Using an online integrated development environment, data were collected from 280 students in a Java programming course. The course had two parts. The first focused on introductory procedural programming and culminated with exam 1, while the second part covered more complex topics and object-oriented programming and ended with exam 2. To measure students' programming abilities, 51095 code snapshots were collected from students while they completed assignments that were autograded based on unit tests. Compiler and runtime errors were extracted from the snapshots, and three measures - Error Count, Error Quotient and Repeated Error Density - were explored to identify the best measure explaining variability in exam grades. Models utilizing Error Quotient outperformed the models using the other two measures, in terms of the explained variability in grades and Bayesian Information Criterion. Compiler errors were significant predictors of exam 1 grades but not exam 2 grades; only runtime errors significantly predicted exam 2 grades. The findings indicate that leveraging Error Quotient with multiple error types (compiler and runtime) may be a better measure of students' introductory programming abilities, though still not explaining most of the observed variability.},
  address = {New York, NY, USA},
  author = {\v{S}v\'{a}bensk\'{y}, Valdemar and Pankiewicz, Maciej and Zhang, Jiayi and Cloude, Elizabeth B. and Baker, Ryan S. and Fouh, Eric},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653563},
  isbn = {9798400706004},
  keywords = {computer science education; introduction to programming; introductory programming; novice programming; programming education},
  location = {Milan, Italy},
  numpages = {7},
  pages = {87–93},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Comparison of Three Programming Error Measures for Explaining Variability in CS1 Grades},
  url = {https://doi.org/10.1145/3649217.3653563},
  year = {2024}
}

@inproceedings{merged1224,
  abstract = {While most teachers welcome the idea of learning activities fostering creativity, it is not clear how to effectively scaffold creativity. Without suitable pedagogical approaches, it is difficult to provide appropriate levels of scaffolding. Over-scaffolding, on the one hand, while providing support appreciated especially by less experienced students, leaves little room for creative expression. Under-scaffolding, on the other hand, while fostering more authentic learning opportunities with a high potential for creativity, can lead to student frustration. The Process Artifact Creativity Landscape (PACL) is a framework that helps pre-service teachers scaffold creative projects. PACL consists of a two dimensional space providing four scaffolding approaches offering different tradeoffs between scaffolding and creativity. This paper introduces the PACL framework and outlines experiences with K–6 preservice teachers reasoning about scaffold creative programming projects.},
  address = {New York, NY, USA},
  articleno = {16},
  author = {Repenning, Alexander and Grabowski, Susanne},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3677634},
  isbn = {9798400710056},
  keywords = {Computer science education; computational thinking; creativity; preservice teacher education; scaffolding},
  location = {Munich, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Scaffolding Creative Programming Projects},
  url = {https://doi.org/10.1145/3677619.3677634},
  year = {2024}
}

@inproceedings{merged1225,
  abstract = {The common approach for introducing middle school and high school students to computational thinking and engineering is through programming or robotics activities that were designed without much social context. Therefore, one of the challenges such outreach programs pose is further stereotyping of students who are interested in computer science, by presenting them as people who ought to be hyper-intelligent and very much focused on computers with no social skills. Realizing the above, and wanting to attract a diverse audience to study computer science, we developed a one-day workshop which showcases the interdisciplinary nature of computer science and the various ways computing can help students discover and solve societal problems. We chose multiculturalism, cyber security and air pollution as the context of our computational thinking activities. This paper describes our experiences in developing and teaching the workshops that runs three to five times a year, hosted either in our institute or at local schools. Regardless of students' previous STEM experiences and socioeconomic statuses, both students and teachers reported that the knowledge gained enabled them to either create a computer program or a robot and also led to a better understanding of how computers can be used in daily life. In other words, the workshop successfully opened the minds and perspectives of the middle school and high school students on computer science. Additionally, over time, we also observed an increased number of students and schools participating in such workshops.},
  address = {New York, NY, USA},
  author = {Liesaputra, Veronica and Ramirez-Prado, Guillermo and Barmada, Bashar and Song, Lei},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3366902},
  isbn = {9781450367936},
  keywords = {air pollution; cyber security; introduction to computer science; k-12 education; middle school; multiculturalism; outreach; raspberry pi; social good},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {507–513},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Future-Proofing Kiwi Kids Through the Use of Digital Technology},
  url = {https://doi.org/10.1145/3328778.3366902},
  year = {2020}
}

@inproceedings{merged1226,
  abstract = {C2STEM is a web-based learning environment founded on a novel paradigm that combines block-structured, visual programming with the concept of domain specific modeling languages (DSMLs) to promote the synergistic learning of discipline-specific and computational thinking (CT) concepts and practices. Our design-based, collaborative learning environment aims to provide students in K-12 classrooms with immersive experiences in CT through computational modeling in realistic scenarios (e.g., building models of scientific phenomena). The goal is to increase student engagement and include inclusive opportunities for developing key computational skills needed for the 21st century workforce. Research implementations that include a semester-long high school physics classroom study have demonstrated the effectiveness of our approach in supporting synergistic learning of STEM and CS/CT concepts and practices, especially when compared to a traditional classroom approach. This technology demonstration will showcase our CS+X (X = physics, marine biology, or earth science) learning environment and associated curricula. Participants can engage in our design process and learn how to develop curricular modules that cover STEM and CS/CT concepts and practices. Our work is supported by an NSF STEM+C grant and involves a multi-institutional team comprising Vanderbilt University, SRI International, Looking Glass Ventures, Stanford University, Salem State University, and ETR. More information, including example computational modeling tasks, can be found at C2STEM.org.},
  address = {New York, NY, USA},
  author = {Biswas, Gautam and Hutchins, Nicole and L\'{e}deczi, \'{A}kos and Grover, Shuchi and Basu, Satabdi},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293757},
  isbn = {9781450358903},
  keywords = {computational thinking; cs+x; k12; modeling},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1288},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Integrating Computational Modeling in K-12 STEM Classrooms},
  url = {https://doi.org/10.1145/3287324.3293757},
  year = {2019}
}

@inproceedings{merged1227,
  abstract = {A research-practice partnership (RPP) used a teacher co-design process, supported by equity-focused professional development, to create an elementary-level curriculum that integrates content, practices, and learning progressions from state computing standards with other standards-based curricula. Most district students are part of historically marginalized groups and the RPP chose to develop an equity and inclusion-focused curriculum that would be taught in all elementary classrooms to all students. Twelve teacher teams, supported by researchers and ELL and SPED specialists, designed, piloted, and documented 23 modules of 4-8, 45-minute lessons across K-5. Early adopter teachers followed the pilots and implemented the modules in their classrooms with the goal of facilitating adoption by all elementary classroom teachers. After being interrupted by the pandemic, the RPP developed a strategy where principals in cohorts of schools agreed to collaborate with RPP school-based lead teachers to establish professional learning communities (PLCs) to support classroom implementation of the modules. Eleven schools participated in a 2021-22 cohort and nine more schools joined in 2022-23. Centering equity, PLCs, and quality module documentation and materials are key to sustaining and evolving the CSforAll curriculum. The modules were revised based on feedback obtained from ELL and SPED specialists, early adopters, teacher coordinators, researchers, and district curriculum directors. Using a large data set of meeting and classroom observation records, interviews, field notes, focus groups, surveys, and module documentation, we track the evolution of the curriculum and provide a detailed analysis of one module as an example.},
  address = {New York, NY, USA},
  author = {Adrion, W. Richards and Pekta\c{s}, Emrah},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635495},
  isbn = {9798400704246},
  keywords = {computational thinking; k-5 computer science education; research-practice partnership; teacher preparation},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1548–1549},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Evolution of an Integrated, Elementary CSforAll Curriculum},
  url = {https://doi.org/10.1145/3626253.3635495},
  year = {2024}
}

@inproceedings{merged1228,
  abstract = {This paper presents the Y9 (9th-grade level) project from Beacon School, S\~{a}o Paulo - Brazil, entitled Social Necklace. The main scope was to bring for students’ maker learning, programming literacy, and computational thinking. Through hands-on activities, all students could think, experiment, create, and learn. Fundamental premises to transform them into producers instead of simple technology consumers. During classes, the STEAM and PBL (Project Based Learning) approaches were the basis, which allowed students to choose the theme COVID-19, the driving question: Can technology contribute to helping in the control and prevention of pandemics? And coding and setting a gadget using the BBC Micro:bit, as an answer to the question. The work carried out with the students enabled many dialogues between the different fields of knowledge. Through maker education, it was possible to engage students in learning activities very distinct from traditional education.},
  address = {New York, NY, USA},
  articleno = {12},
  author = {Lemonica Rosa, Rodrigo},
  booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
  doi = {10.1145/3466725.3466737},
  isbn = {9781450389891},
  keywords = {Programming Literacy; Social Necklace Project; bit},
  location = {St. Gallen, Switzerland},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe / MakeEd 2021},
  title = {Social Necklace Project: A student-made gadget to help people during the COVID19 pandemic},
  url = {https://doi.org/10.1145/3466725.3466737},
  year = {2021}
}

@inproceedings{merged1229,
  abstract = {This paper summarizes the results of a research project to broaden access to computing. The project is aimed at improving the attitudes and computational thinking skills for African American elementary school children in the 3rd to 5th grades and to understand their difficulties in reasoning about code. This was done within the context of a five-week summer camp. There were 40 children of whom about half were females. Along with instruction, we used a custom video game to teach code tracing. We used video game data and pre and posttests to assess students' performance. Qualitative and quantitative results from our mixed method design show cognitive and affective improvements as well as improvements in computational thinking skills. The data we collected also highlighted potential common mistakes that elementary school children might make as they attempt to reason about code. It shows the potential in games to motivate code understanding practice and improve learning. SIGCSE '19, February 27-March 2, 2019, Minneapolis, MN, USA © 2019 Copyright is held by the owner/author(s). ACM ISBN 978-1-4503-5890-3/19/02. https://doi.org/10.1145/3287324.3293715},
  address = {New York, NY, USA},
  author = {Nche, Olivia},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293715},
  isbn = {9781450358903},
  keywords = {broadening participation; code tracing; computational thinking; integrative approach; problem solving; video game},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1296},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Engaging African American Elementary School Children in Code Understanding},
  url = {https://doi.org/10.1145/3287324.3293715},
  year = {2019}
}

@inproceedings{merged1230,
  abstract = {This poster focuses on a pilot engagement activity implemented in 2024 with students ranging in age from elementary to early high school at a rural tribal school in the Midwest. Students worked in small groups on creative STEM activities designed to be empathy-driven, collaborative, and personally meaningful. Two of the activities are the focus of this poster, Avatar Making, and Sphero Bots, both of which aimed to foster empathy, critical thinking, and computational exploration among the K-12 student participants who were attending a summer enrichment program at the school. In Avatar Making, students worked in groups to create an avatar who was a fictional character representing the experiences and feelings of a new student at their school. The Sphero Bots activity introduced coding and simple robotics through a visual coding interface and an analog obstacle course design. The activity was designed to encourage iteration, experimentation, and teamwork while allowing space for artistic expression. This poster provides observations from the pilot activities and early evidence of how such engagement work may be a useful method to nurture technical and social-emotional skills among similar students in other educational settings. The design strategies utilized highlight the potential of combining creative tools with STEM-focused content to support inclusive, student-centered learning. Questions for further research have been developed based on the pilot study.},
  address = {New York, NY, USA},
  author = {Shamsunder Aragula, Punya and Gali, Anjali and Elman Zarecor, Kimberly},
  booktitle = {Proceedings of the 2025 Conference on Creativity and Cognition},
  doi = {10.1145/3698061.3734389},
  isbn = {9798400712890},
  keywords = {Collaborative Problem-Solving; Community-Centered Education; Computational Thinking; Creative Learning; Empathy-Based Design},
  numpages = {5},
  pages = {472–476},
  publisher = {Association for Computing Machinery},
  series = {C&amp;C '25},
  title = {Promoting Collaboration and Empathy in an Arts-Based STEM Engagement Pilot with K-12 Tribal Students},
  url = {https://doi.org/10.1145/3698061.3734389},
  year = {2025}
}

@inproceedings{merged1231,
  abstract = {Today, Spanish universities are already adapted to the Common European Higher Education Area, which is based on the acquisition of competences by the student. Nevertheless, while the acquisition of specific competences is well assumed by the different subjects of each degree, the same is not true for cross-curricular competences. More specifically, in most engineering studies, these competences are developed indirectly through elective subjects or other complementary training activities. The main objective of this work is to design a prototype of a low-cost and open-access exoskeleton that can be used in different engineering degrees for the acquisition of cross-curricular competences. Once this prototype has been designed, we propose to use it in a practice to be carried out in the laboratory following the project-based learning methodology from a STEAM approach. With the use of a robotics kit and a project-based learning methodology, we achieve the goals of educational robotics and computational thinking in a higher education environment.},
  address = {New York, NY, USA},
  author = {Lozano-Arias, Jes\'{u}s and Rodr\'{\i}guez-Sedano, Francisco J. and Gonz\'{a}lez-Alonso, Mar\'{\i}a-Inmaculada and Conde, Miguel \'{A}ngel},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486418},
  isbn = {9781450390668},
  keywords = {Cross-curricular competences; STEAM education; engineering education; exoskeleton},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {51–57},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Using Educational Robotic Exoskeleton for the Acquisition of Cross-Curricular Competences in Higher Education},
  url = {https://doi.org/10.1145/3486011.3486418},
  year = {2021}
}

@inproceedings{merged1232,
  abstract = {Several institutions have recently introduced Introduction to Data Science courses that involve a substantial programming component and do not require CS1 as a prerequisite. Programming and computational thinking are central to the emerging discipline of data science, and so there is overlap between traditional CS1 courses and Introduction to DS.Partly because of the evident societal significance of data science and because data science does not have the problematic reputation of computer science, Intro to DS can attract new and diverse audiences that may not have been interested in taking CS1.We explore Intro to DS as a possible alternative path into computing: what are the learning goals in Intro to DS that involve programming and/or computational thinking? How generalizable are the problems students solve in Intro to DS to what students would encounter in future studies? Is it feasible for students to pursue a data science sequence rather than CS1-CS2 and be prepared for a career that uses data science? To what extent can a pathway through a data science sequence diversify the population of students who graduate from degree programs in computer science and data science?We survey the Introduction to Data Science courses offered in North American post-secondary education, and focus on a data science sequence that uses the R programming language and does not require CS1 at an R1 institution as a case study.},
  address = {New York, NY, USA},
  author = {Guerzhoy, Michael},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3341203},
  isbn = {9781450361859},
  keywords = {cs1; data science; diversity; women in computer science},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {303},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {Introduction to Data Science as a Pathway to Further Study in Computing},
  url = {https://doi.org/10.1145/3291279.3341203},
  year = {2019}
}

@inproceedings{merged1233,
  abstract = {In popularizing computational thinking, Wing notes that 'abstraction is described as underlying computational thinking and computational thinking is described as fundamental to computing.' Emerging curricular now require educators to incorporate computational thinking and abstraction into their teaching. Many refer to Piaget's work as evidence of an age-related ceiling preventing younger pupils from being able to abstract. However, more recent evidence suggests that pupils use elements of abstraction in their general process of learning, and that the skill of abstraction can be explicitly taught. We draw on personal classroom experience to illustrate the points made in the literature. Common classroom activities such as using labelled diagrams, concept maps and storyboards are aligned to features of abstraction. We argue that abstraction can and should be taught to young pupils.},
  address = {New York, NY, USA},
  author = {Waite, Jane and Curzon, Paul and Marsh, William and Sentance, Sue},
  booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/2978249.2978272},
  isbn = {9781450342230},
  keywords = {Abstraction; design; graph; storyboard; visualisation},
  location = {M\"{u}nster, Germany},
  numpages = {2},
  pages = {112–113},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '16},
  title = {Abstraction and common classroom activities},
  url = {https://doi.org/10.1145/2978249.2978272},
  year = {2016}
}

@inproceedings{merged1234,
  abstract = {CS0 and CS1 courses are becoming an essential part of many social science programs, including sociology and political science. This particular assignment was designed as part of the 'Basics of Programming in Python' course for undergraduate political science students. The course aims not only to prepare students for the unified programming exam, but also to apply concepts of computational thinking in the context of political science problems. By linking these fields, students learn to overcome inner barriers in coding and explore the potential of computational social science methods for both academic path and career.  This project seeks such a connection between subjects of political science major as Comparative Electoral Systems and Quantitative Methods of Political Research, and concepts of computer science. Students process the generated votes, applying critical thinking to identify spoilt ballots, and then formulate rules for counting votes (First-past-the-post, Borda count, Condorcet winner criterion) in algorithmic form. Optionally, a short essay can be added in which students are asked to speculate about political leanings, the transitivity of preferences and the advantages/disadvantages of particular electoral systems based on analyses of the data in the assignment. As the result, students not only develop hard skills in programming, but most importantly conceptualize complicated topics through the prism of their specialization, fostering the ability to see the connections between these fields and understand how they can work together to address complex real-world scenarios.},
  address = {New York, NY, USA},
  author = {Popov, Aleksandr},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635336},
  isbn = {9798400704246},
  keywords = {computational social science; teaching computational thinking},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1915},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Simulating Election Votes},
  url = {https://doi.org/10.1145/3626253.3635336},
  year = {2024}
}

@inproceedings{merged1235,
  abstract = {GitHub Copilot is an artificial intelligence tool for automatically generating source code from natural language problem descriptions. Since June 2022, Copilot has officially been available for free to all students as a plug-in to development environments like Visual Studio Code. Prior work exploring OpenAI Codex, the underlying model that powers Copilot, has shown it performs well on typical CS1 problems thus raising concerns about its potential impact on how introductory programming courses are taught. However, little is known about the types of problems for which Copilot does not perform well, or about the natural language interactions that a student might have with Copilot when resolving errors. We explore these questions by evaluating the performance of Copilot on a publicly available dataset of 166 programming problems. We find that it successfully solves around half of these problems on its very first attempt, and that it solves 60% of the remaining problems using only natural language changes to the problem description. We argue that this type of prompt engineering, which we believe will become a standard interaction between human and Copilot when it initially fails, is a potentially useful learning activity that promotes computational thinking skills, and is likely to change the nature of code writing skill development.},
  address = {New York, NY, USA},
  author = {Denny, Paul and Kumar, Viraj and Giacaman, Nasser},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569823},
  isbn = {9781450394314},
  keywords = {artificial intelligence; cs1; foundation models; github copilot; introductory programming; large language models; openai},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {1136–1142},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Conversing with Copilot: Exploring Prompt Engineering for Solving CS1 Problems Using Natural Language},
  url = {https://doi.org/10.1145/3545945.3569823},
  year = {2023}
}

@inproceedings{merged1236,
  abstract = {This work presents an experimental analysis of first-grade students' block-based programming trajectories. These trajectories consist of edit-level program snapshots that capture learners' problem-solving processes in a navigational microworld. Our results highlight the potential of this fine-grained data capture. Snapshot frequencies in trajectories collected before and after a coding intervention showcase the collective progress of the learners. Graph visualizations, in which nodes represent snapshots and directed edges code edits, highlight strategies, pitfalls and debugging procedures. Individual programming trajectories shed light on details of learners' problem-solving processes that less granular analysis would conceal. Various works in the field of Learning Analytics research show the usefulness of collecting fine-grained process data that proceed from programming activities. However, how to analyze this data is still an open question and research on the subject is in an experimental phase. We contribute to this experimentation by analyzing and discussing results collected from 30 first-grade students in a pretest-posttest study.},
  address = {New York, NY, USA},
  author = {Pozzan, Gabriele and Padova, Costanza and Montuori, Chiara and Arf\'{e}, Barbara and Vardanega, Tullio},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653586},
  isbn = {9798400706004},
  keywords = {block-based programming; computational thinking; learning analytics; programming trajectories},
  location = {Milan, Italy},
  numpages = {7},
  pages = {143–149},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Experimental Analysis of First-Grade Students' Block-Based Programming Problem Solving Processes},
  url = {https://doi.org/10.1145/3649217.3653586},
  year = {2024}
}

@inproceedings{merged1237,
  abstract = {Integrated computing uses computing tools and concepts to support learning in other disciplines while giving all students opportunities to experience computer science. Integrated computing is often motivated as a way to introduce computing to students in a low-stakes environment, reducing barriers to learning computer science, often especially for underrepresented groups. This study explored integrated computing activities implemented in US schools to examine which programming and CT concepts they teach and whether those concepts differed across contexts. We gathered data on 262 integrated computing activities from in-service K-12 teachers and 20 contextual factors related to the classroom, the teacher, and the school. Our analysis revealed that programming and CT concepts were inversely related to five contextual factors, such that factors predicting more CT concepts also predicted fewer programming concepts. These factors reflected school resources, such that wealthier schools used activities with more CT concepts and fewer programming concepts. In addition, factors related to underrepresented groups often related to fewer concepts being taught in activities. School racial composition was the only factor of the 20 that had a relationship with both types of concepts in the same direction-students from underrepresented groups used activities with fewer CT and programming concepts. Our findings suggest that, although integrated computing can potentially introduce computing to a broader audience, we must evaluate what these activities are teaching and to whom. Another primary contribution of this work is an open-access dataset about integrated computing activities, the concepts that they teach, and the contextual factors around their use.},
  address = {New York, NY, USA},
  author = {Rahimi, Masoumeh and Margulieux, Lauren E. and Anderson, Erin},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701817},
  isbn = {9798400705311},
  keywords = {computational thinking; computing integration; cs+x; integrated computing; k-12 computer science education; survey},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {931–937},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {CS Concepts and Contextual Factors in Integrated Computing Activities in U.S. Schools},
  url = {https://doi.org/10.1145/3641554.3701817},
  year = {2025}
}

@inbook{merged1238,
  abstract = {Programming education for children can be traced back to 1967 and is now widely popular in developed countries, while China's programming education for children is still in the primary stage of development. Analyses of domestic and international literature and case studies show that programming education is strategically important for the country's technological future. Despite the challenges of resource constraints and students' varying programming levels, subject-integrated teaching of programming courses can also be successfully conducted through flexible research design and perseverance. There are shortcomings in existing research, such as the lack of empirical evidence and a sound evaluation system. Future research should strengthen interdisciplinary collaboration and explore teaching models adapted to rural educational environments.},
  address = {New York, NY, USA},
  author = {Fu, Jiahui and Chen, Lin and Su, Peici and Lu, Jiabao and Jiang, Xiaoli},
  booktitle = {Proceedings of the 2024 2nd International Conference on Information Education and Artificial Intelligence},
  isbn = {9798400711732},
  numpages = {5},
  pages = {716–720},
  publisher = {Association for Computing Machinery},
  title = {A Review of Research on Children's Programming in the Countryside},
  url = {https://doi.org/10.1145/3724504.3724621},
  year = {2025}
}

@inproceedings{merged1239,
  abstract = {Computing is a large and growing presence in society in 2020, and like many others, we see a strong demand from non-computing majors for "CS For All" courses. Unlike many others, we do not feel that putting traditional programming first is the best way to do this. Instead, we are rethinking the way we introduce computing to allow a broad audience to engage with this discipline.Any computational problem we might tackle requires that we explicitly think about the data involved to solve the problem. Likewise, many computational problems potentially have deep implications for the effect of emerging technologies on society including complex racial and social justice issues. When training novice computer scientists, too often the focus is on learning to write code, but not on explicitly learning computational thinking (data-first, declarative) and how to spot, analyze, and mitigate the ethical implications of potential computing solutions. When teaching those from other disciplines about computer science, the importance of learning to write code is diminished still further, relative to skills in computational thinking and in reasoning about ethical issues in computing and emerging technologies.},
  address = {New York, NY, USA},
  author = {Rentz, Zach and Clements, John and Wood, Zo\"{e} and Keen, Aaron},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3432495},
  isbn = {9781450380621},
  keywords = {CS4all; data-first; declarative; ethics; introduction to computational thinking},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1353},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {Before You Write Code ... Putting Data and Ethics at the Center of Introductory Computing},
  url = {https://doi.org/10.1145/3408877.3432495},
  year = {2021}
}

@inproceedings{merged1240,
  abstract = {While the scientific community is learning more about the novel Coronavirus and its associate disease, Covid-19, it is important to begin efforts to educate students on the disease, how it is transmitted, and the possible steps we as societies and individuals can take to combat the spread. To this end, we adapted an existing computational thinking curriculum originally designed to teach students about how infectious diseases are spread by having them build a model within the block-based programming environment, Cellular. This new curriculum introduces relevant scientific terms and tasks student to program an increasingly complex model ending the activity by choosing which risk-reduction strategy to employ.},
  address = {New York, NY, USA},
  articleno = {36},
  author = {Catet\'{e}, Veronica and Lytle, Nicholas and Boulden, Danielle and Hinckle, Madeline and Wiebe, Eric and Barnes, Tiffany},
  booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3421590.3421624},
  isbn = {9781450387590},
  location = {Virtual Event, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '20},
  title = {A block-based modeling curriculum for teaching middle grade science students about Covid-19},
  url = {https://doi.org/10.1145/3421590.3421624},
  year = {2020}
}

@inproceedings{merged1241,
  abstract = {Broadening participation in computer science (CS) for primary/elementary students is a growing movement, spurred by computing workforce demands and the need for younger students to develop skills in problem solving and critical/computational thinking. However, offering computer science instruction at this level is directly related to the availability of teachers prepared to teach the subject. Unfortunately, there are relatively few primary/elementary school teachers who have received formal training in computer science, and they often self-report a lack of CS subject matter expertise. Teacher development is a key factor to address these issues, and this paper describes professional development strategies and empirical impacts of a summer institute that included two graduate courses and a series of Saturday workshops during the subsequent academic year. Key elements included teaching a high-level programing language (Python and JavaScript), integrating CS content and pedagogy instruction, and involving both experienced K-12 CS teachers and University faculty as instructors. Empirical results showed that this carefully structured PD that incorporated evidence-based elements of sufficient duration, teacher active learning and collaboration, modeling, practice, and feedback can successfully impact teacher outcomes. Results showed significant gains in teacher CS knowledge (both pedagogy and content), self-efficacy, and perception of CS value. Moderating results -- examining possible differential effects depending on teacher gender, years of teaching CS, and geographic locale -- showed that the PD was successful with experienced and less experienced teachers, with teachers from both rural and urban locales, and with both males and females.},
  address = {New York, NY, USA},
  author = {Nugent, Gwen and Chen, Keting and Soh, Leen-Kiat and Choi, Dongho and Trainin, Guy and Smith, Wendy},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524771},
  isbn = {9781450392013},
  keywords = {k-8 education; research; teacher professional development},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {540–546},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Developing K-8 Computer Science Teachers' Content Knowledge, Self-efficacy, and Attitudes through Evidence-based Professional Development},
  url = {https://doi.org/10.1145/3502718.3524771},
  year = {2022}
}

@inproceedings{merged1242,
  abstract = {No matter whether young or old, almost everyone likes to play games. Even though digital games have the opportunity to motivate students and foster digital skills, games in an educational context are typically described as a minor matter in class. However, games can provide an environment to work intensively on and consolidate topics from the classroom. Especially if students have the task of developing a game themselves, it is necessary to work on the topic in depth while the content is learned and anchored playfully. As part of the COOL Informatics project, which had the goal of spreading digital education and programming in the educational sector, a Game Design Challenge was launched. In this challenge, pupils, and teachers from all over Austria were invited to develop their own educational games. It is planned to relaunch the Game Design Challenge in 2021 with the goal that more and more students can be introduced to the basics of Computational Thinking.},
  address = {New York, NY, USA},
  author = {H\"{o}rmann, Corinna and Rottenhofer, Marina and Groher, Iris and Sabitzer, Barbara},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460074},
  isbn = {9781450383974},
  keywords = {digital education; game design; programming; stem},
  location = {Virtual Event, Germany},
  numpages = {1},
  pages = {644},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Let the Games Begin - Inviting Young Learners to Code},
  url = {https://doi.org/10.1145/3456565.3460074},
  year = {2021}
}

@inproceedings{merged1243,
  abstract = {The widespread establishment of computational thinking in school curricula requires teachers to introduce children to programming already at primary school level. As this is a recent development, primary school teachers may neither be adequately prepared for how to best teach programming, nor may they be fully aware why they have to do so. In order to gain a better understanding of these questions, we contrast insights taken from practical experiences with the anticipations of teachers in training. By surveying 200&nbsp;teachers who have taught programming at primary schools and 97&nbsp;teachers in training, we identify relevant challenges when teaching programming, opportunities that arise when children learn programming, and strategies how to address both of these in practice. While many challenges and opportunities are correctly anticipated, we find several disagreements that can inform revisions of the curricula in teaching studies to better prepare primary school teachers for teaching programming at primary schools.},
  address = {New York, NY, USA},
  articleno = {10},
  author = {Greifenstein, Luisa and Gra\ss{}l, Isabella and Fraser, Gordon},
  booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3488042.3488048},
  isbn = {9781450384889},
  keywords = {Programming education; primary school; teacher survey.},
  location = {Joensuu, Finland},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '21},
  title = {Challenging but Full of Opportunities: Teachers’ Perspectives on Programming in Primary Schools},
  url = {https://doi.org/10.1145/3488042.3488048},
  year = {2021}
}

@inproceedings{merged1244,
  abstract = {We present a model for enhancing an introductory computer science course for non-majors through the use of the Arduino platform. We have developed and tested curricular modules and associated hands-on laboratories for this model. The use of the highly visual and interactive Arduino system has improved students' learning experiences, enabling them to apply and relate fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to real-world problems. Assessment results show that the approach has been effective. We present the curricular modules, our experiences using them, as well as assessment results.},
  address = {New York, NY, USA},
  author = {Russell, Ingrid and Rosiene, Carolyn Pe and Gold, Aaron},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372595},
  isbn = {9781450367936},
  keywords = {active learning; non-majors; undergraduate instruction},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1309},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {A CS Course for Non-Majors Based on the Arduino Platform},
  url = {https://doi.org/10.1145/3328778.3372595},
  year = {2020}
}

@inproceedings{merged1245,
  abstract = {We present a new technology-based paradigm to support embodied mathematics educational games, using wearable devices in the form of SmartPhones and SmartWatches for math learning, for full classes of students in formal in-school education settings. The Wearable Learning Games Engine is web based infrastructure that enables students to carry one mobile device per child, as they embark on math team-based activities that require physical engagement with the environment. These Wearable Tutors serve as guides and assistants while students manipulate, measure, estimate, discern, discard and find mathematical objects that satisfy specified constraints. Multi-player math games that use this infrastructure have yielded both cognitive and affective benefits. Beyond math game play, the Wearable Games Engine Authoring Tool enables students to create games themselves for other students to play; in this process, students engage in computational thinking and learn about finite-state machines. We present the infrastructure, games, and results for a series of experiments on both game play and game creation.},
  address = {New York, NY, USA},
  author = {Arroyo, Ivon and Micciollo, Matthew and Casano, Jonathan and Ottmar, Erin and Hulse, Taylyn and Rodrigo, Ma. Mercedes},
  booktitle = {Proceedings of the Annual Symposium on Computer-Human Interaction in Play},
  doi = {10.1145/3116595.3116637},
  isbn = {9781450348980},
  keywords = {computational thinking; educational games; embodied cognition; mathematics; tutoring systems; wearable learning},
  location = {Amsterdam, The Netherlands},
  numpages = {12},
  pages = {205–216},
  publisher = {Association for Computing Machinery},
  series = {CHI PLAY '17},
  title = {Wearable Learning: Multiplayer Embodied Games for Math},
  url = {https://doi.org/10.1145/3116595.3116637},
  year = {2017}
}

@inproceedings{merged1246,
  abstract = {We present a curricular model for introducing data analytics concepts into an introductory computer science course for non-majors. This is accomplished through the design and implementation of hands-on laboratories projects using the Python programming language and associated tools. While introducing students to an important research area, we believe the use of these projects improves students' learning experiences, enabling them to apply and relate fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to data analytics problems. We present the curricular modules, as well as preliminary experiences using them.},
  address = {New York, NY, USA},
  author = {Russell, Ingrid and Duan, Zhuojun and Jung, Andrew},
  booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/3341525.3393963},
  isbn = {9781450368742},
  keywords = {data analytics; non-majors; undergraduate instruction},
  location = {Trondheim, Norway},
  numpages = {1},
  pages = {551},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '20},
  title = {Introducing Data Analytics Concepts in a CS Course for Non-Majors},
  url = {https://doi.org/10.1145/3341525.3393963},
  year = {2020}
}

@inproceedings{merged1247,
  abstract = {Game design is emerging in contemporary education, especially in constructionist curricula for student-centered and discovery learning. While previous work focused on assessing how complementary skills (e.g., computational thinking) develop through game design, few have attempted to assess the very games designed by students. Here, we show preliminary results on using the Triadic Game Design (TGD) model to assess the elements that may constitute a ”balanced” student-designed game in the context of constructionist learning. Our results show that TGD is viable to carry out such assessment. We conclude by discussing the limitations of our approach and propose directions for future work.},
  address = {New York, NY, USA},
  articleno = {88},
  author = {Troiano, Giovanni Maria and Schouten, Dylan and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
  booktitle = {Proceedings of the 15th International Conference on the Foundations of Digital Games},
  doi = {10.1145/3402942.3403010},
  isbn = {9781450388078},
  keywords = {Game-based learning; Scratch; constructionism; game design},
  location = {Bugibba, Malta},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {FDG '20},
  title = {All Good Things Come in Threes: Assessing Student-Designed Games via Triadic Game Design},
  url = {https://doi.org/10.1145/3402942.3403010},
  year = {2020}
}

@inproceedings{merged1248,
  abstract = {There has been increasing attention paid to the necessity of Computational Thinking (CT) and CS education in recent years. To address this need, a broad spectrum of animation programming environments and games have been created to engage learners. However, most of these tools are designed for the touchpad/mouse and keyboard, and few have been evaluated to assess their efficacy in developing CT/programming skills. This is problematic when trying to understand the validity of such designs for CS education, and whether there are alternative approaches that may prove more effective. My dissertation work helps address this problem. After creating a framework based on a meta-review that carefully dissects embodiment strategies in learning games, I am building and evaluating tangible and augmented reality versions of a CT game. I plan to examine how these different forms of physical interaction help to facilitate and enhance meaning-making during the learning process, and whether/how they improve related learning factors such as self-belief and enjoyment.},
  address = {New York, NY, USA},
  author = {Melcer, Edward},
  booktitle = {Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
  doi = {10.1145/3027063.3027129},
  isbn = {9781450346566},
  keywords = {computational thinking; educational games; embodied cognition; embodied interaction; physical embodiment; programming},
  location = {Denver, Colorado, USA},
  numpages = {6},
  pages = {301–306},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '17},
  title = {Moving to Learn: Exploring the Impact of Physical Embodiment in Educational Programming Games},
  url = {https://doi.org/10.1145/3027063.3027129},
  year = {2017}
}

@inproceedings{merged1249,
  abstract = {Learning tasks designed with social or educational robots are becoming increasingly commonplace, with emerging methodologies being proposed regarding the design of interaction patterns for child-robot-interaction (cHRI). Yet, technological limitations remain a strong barrier to the implementation of fully autonomous robot tutoring systems. In addition, there is currently no research on how social and educational robots might be combined when designing learning tasks. Consequently, in this paper we describe the design and pilot testing of a (semi) autonomous learning task designed with a social robot (NAO) and educational robot (Cozmo) targeted at children’s computational thinking skills. Preliminary data from a pilot phase with 53 children is promising, and results are discussed with regards to identified challenges. Several solutions are proposed in the context of designing interactions for cHRI.},
  address = {New York, NY, USA},
  author = {Stower, Rebecca and Kappas, Arvid},
  booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3459990.3465210},
  isbn = {9781450384520},
  keywords = {autonomous interaction; child-robot-interaction; education; educational robots; learning; pilot study; social robots; user testing},
  location = {Athens, Greece},
  numpages = {5},
  pages = {542–546},
  publisher = {Association for Computing Machinery},
  series = {IDC '21},
  title = {CozmoNAOts: Designing an Autonomous Learning Task with Social and Educational Robots},
  url = {https://doi.org/10.1145/3459990.3465210},
  year = {2021}
}

@inproceedings{merged1250,
  abstract = {States are moving to adopt Computer Science (CS) education standards to help K-12 teachers adapt and integrate computing /computational thinking (CT) concepts into the curriculum. These approaches also rely heavily on training current and pre-service teachers and creating opportunities to learn CS while also managing the rigors of their education career. This poster presents elements of the collaboration between the Department of CS and Department of Teaching and Learning at Montclair State University (MSU) to bring CS to pre- and in-service educators. Here we will highlight our curriculum work and professional development (PD) series. The New Jersey (NJ) Department of Education has adopted CS Education standards for K-12 and distinctly funded curriculum development and faculty formation programs. MSU has built programs that support teachers through PD experiences in CT and CS. In the 10-month period ending March 2023, we will offer 30 PD opportunities for a CS and CS education. To date, more than 200 educators have received PD to address their educational needs regarding CS curricula.},
  address = {New York, NY, USA},
  author = {Herbert, Katherine G. and Anu, Vaibhav K. and Sultana, Kazi Zakia and Robila, Stefan and Ryan Miller, Jesse and Hagiwara, Sumi and Goldstein, Rebecca A. and Marlowe, Thomas},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576329},
  isbn = {9781450394338},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1384},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Professional and Capacity Building in K-12 Computer Science Education: A Multi-Faceted Approach},
  url = {https://doi.org/10.1145/3545947.3576329},
  year = {2023}
}

@inproceedings{merged1251,
  abstract = {Tangential to the efforts to bring computer science (CS) into K-12 education, there has been increasing recognition of the critical role of data science (DS) in preparing future citizens to be able to gather, analyze, and represent data. With only 51% of K-12 schools offering CS, however, and the critical need for students to engage in DS practices, there is the need to examine ways to integrate DS in other subjects. Our study explores the current landscape of DS in methods and content courses within preservice teacher pathways. This poster outlines a study in its preliminary stages that explores how faculty teaching math, science, and social studies methods and content courses in colleges of education: a) define DS, b) conceptualize DS as related to their course content, c) make connections between DS, CS, and/or computational thinking (CT). Taking a participatory design approach, this study will also explore research-based approaches to building the capacity of preservice faculty in DS to advance the practice of teaching CS in a scalable way to expand access in equitable ways to CS and CT.},
  address = {New York, NY, USA},
  author = {Mak, Janice and Rosato, Jennifer and Hosten, Melissa},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576264},
  isbn = {9781450394338},
  keywords = {data science; k-12 education; pre-service programs; teacher education},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1317},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Data Science Landscape in Preservice Teacher Education},
  url = {https://doi.org/10.1145/3545947.3576264},
  year = {2023}
}

@inproceedings{merged1252,
  abstract = {Algorithmic thinking is a central concept in the context of computational thinking, and it is commonly taught by computer programming. A recent trend is to introduce basic programming concepts already very early on at primary school level. There are, however, several challenges in teaching programming at this level: Schools and teachers are often neither equipped nor trained appropriately, and the best way to move from initial “unplugged” activities to creating programs on a computer is still a matter of open debate. In this paper, we describe our experience of a project aiming at supporting local primary schools in introducing children to programming concepts using Ozobot robots. These robots have two distinct advantages: First, they can be programmed with and without computers, thus helping the transition from unplugged programming to programming with a computer. Second, they are small and easy to transport, even when used together with tablet computers. Although we learned in our outreach events that the use of Ozobots is not without challenges, our overall experience is positive and can hopefully support others in setting up first encounters with programming at primary schools.},
  address = {New York, NY, USA},
  articleno = {23},
  author = {K\"{o}rber, Nina and Bailey, Lisa and Greifenstein, Luisa and Fraser, Gordon and Sabitzer, Barbara and Rottenhofer, Marina},
  booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3481312.3481347},
  isbn = {9781450385718},
  keywords = {Ozobots; Primary School Programming; Programming Education},
  location = {Virtual Event, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '21},
  title = {An Experience of Introducing Primary School Children to Programming using Ozobots (Practical Report)},
  url = {https://doi.org/10.1145/3481312.3481347},
  year = {2021}
}

@inproceedings{merged1253,
  abstract = {Maker-centered learning environments with their media- and tool-rich open spaces are suggested to foster a variety of important skills such as collaboration, problem-solving, digital literacy, computational thinking etc. Many initiatives emerged that brought Making closer to students of compulsory education in the last couple of years. Many of these initiatives exist in informal learning settings, such as after-school programs, summer camps, optional courses in schools, libraries, museums etc. Currently, Making has not been established broadly in formal education. This is, however, necessary if a greater variety of students is aimed to be reached. In this workshop, teachers that are interested in Making will meet other teachers that act as early adopters. Our panel members already introduced Making in their classrooms and will speak of their experiences. The aim is to collect best practices and recommended courses of action for anyone that aims at introducing Making in their school.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Assaf, Dorit and Oh, Yungjin and Str\"{a}ssle, Sabrina},
  booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
  doi = {10.1145/3466725.3466765},
  isbn = {9781450389891},
  keywords = {Compulsory education; Formal education; Maker-centered learning; Makerspace; Making; STEM education; computer science education},
  location = {St. Gallen, Switzerland},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe / MakeEd 2021},
  title = {Incorporating Maker-Centered Learning in Formal Education: A workshop from teachers for teachers},
  url = {https://doi.org/10.1145/3466725.3466765},
  year = {2021}
}

@inproceedings{merged1254,
  abstract = {Computer Science Unplugged activities have been shown to be successful in increasing student interest in computer science when used in outreach and after school events. There is less research available on adapting these extra-curricular activities for use in a classroom setting, where there are more students and the activities must support educational goals, not just changes in attitude. We describe our work in updating several existing CS Unplugged activities as well as introducing some new activities for use in an American middle school classroom. One challenge when using CS Unplugged activities is to determine what, if anything, students are learning. In this paper we detail one approach that links the updated activities to computational thinking skills, then incorporates worksheets where students illustrate their understanding.},
  address = {New York, NY, USA},
  author = {Rodriguez, Brandon and Rader, Cyndi and Camp, Tracy},
  booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2899415.2899465},
  isbn = {9781450342315},
  keywords = {classroom assessment; computational thinking; cs unplugged},
  location = {Arequipa, Peru},
  numpages = {6},
  pages = {95–100},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '16},
  title = {Using Student Performance to Assess CS Unplugged Activities in a Classroom Environment},
  url = {https://doi.org/10.1145/2899415.2899465},
  year = {2016}
}

@inproceedings{merged1255,
  abstract = {As computer science education is incorporated into the United States educational system, it is imperative that children, educators, and caregivers understand the requisite competencies called "computational thinking" (CT). CT has advanced since first described by Wing in 2006 as an algorithmic problem-solving approach. For three years, the INSPIRE Research Institute for Pre-College Engineering (INSPIRE) has studied integrated science, technology, engineering, mathematics, and computational thinking (STEM+C) learning for K-2 aged children, in both formal and informal settings. At the project's origin, the team focused on characterizing and operationalizing the CT competencies. Our studies then followed how children, instructors, and families engaged in the CT competencies within school and out-of-school. As the project evolved, our team created curricula to be used in K-2 classrooms, activities for out-of-school settings, a summer training for educators, a CT exhibit at a small Midwestern science center, and facilitated a field trip for elementary students. Our poster presents findings from all stages of our NSF-funded STEM+C project. For classroom settings, we report discoveries from integrated STEM+C curricula development and children's CT capabilities and engagement within the classroom and during homeschooling. For informal settings, we report children's abilities to engage in CT when engaging with a specially designed CT exhibit and an open-ended problem-solving task. We also discuss our data management for our project. Finally, we report the lessons and implications of CT for K-2 ask a viable skill for computer science education. For additional info ideas, handouts will be given during poster presentation.},
  address = {New York, NY, USA},
  author = {Dandridge, Tikyna M. and Ehsan, Hoda and Gajdzik, Elizabeth and Lowe, Tony and Ohland, Carson and Yeter, Ibrahim H. and Brophy, Sean and Cardella, Monica E.},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293870},
  isbn = {9781450358903},
  keywords = {computational thinking; integrated stem+c},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1280},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Integrated STEM+C learning for K-2 aged children: CT competencies as a precursor to K-2 computer science education},
  url = {https://doi.org/10.1145/3287324.3293870},
  year = {2019}
}

@inproceedings{merged1256,
  abstract = {Quantum computers are becoming a reality. The advantage of quantum computing is that it has the potential to solve computationally complex problems in a fixed amount time, independent of the size of the problem. However, the kinds of problems for which these computers are a good fit, and the ways to express those problems, are substantially different from the kinds of problems and expressions used in classical computing. Quantum annealers, in particular, are currently the most promising and available quantum computing devices in the short term. However, they are also the most foreign compared to classical programs, as they require a different kind of computational thinking.  In order to ease the transition into this new world of quantum computing, we present a novel quantum approach to a well-known software problem: code clone detection. We express code clone detection as a subgraph isomorphism problem that is mapped into a quadratic optimization problem, and solve it using a DWave quantum annealing computer. We developed a quantum annealing algorithm that compares Abstract Syntax Trees (AST) and reports an energy value that indicates how similar they are.    The motivation behind this research goes well beyond code duplicate detection: our approach paves the way into how to express software engineering problems as optimization problems that can be solved by quantum annealers.},
  address = {New York, NY, USA},
  author = {Jhaveri, Samyak and Krone-Martins, Alberto and Lopes, Cristina V.},
  booktitle = {Proceedings of the 2023 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
  doi = {10.1145/3622758.3622889},
  isbn = {9798400703881},
  keywords = {Quadratic Unconstrained Discrete Optimization (QUDO); Quantum Computing; Quantum-Based Code Clone Detection; Subgraph Isomorphism},
  location = {Cascais, Portugal},
  numpages = {18},
  pages = {32–49},
  publisher = {Association for Computing Machinery},
  series = {Onward! 2023},
  title = {Cloning and Beyond: A Quantum Solution to Duplicate Code},
  url = {https://doi.org/10.1145/3622758.3622889},
  year = {2023}
}

@inproceedings{merged1257,
  abstract = {Within Computer science and Software engineering, the prevalence of students with a diagnosis of autism spectrum disorder is relatively high. Ideally, education should be inclusive, with which we mean that education must be given in such a way that additional support is needed as little as possible.In this paper, we present an overview on what is known about the cognitive style of autistic individuals and compare that cognitive thinking style with computational thinking, thinking as an engineer, and with academic thinking. We illustrate the cognitive style of autistic students with anecdotes from our students.From the comparison, we derive a set of guidelines for inclusive education, and we present ideas for future work.},
  address = {New York, NY, USA},
  author = {Stuurman, Sylvia and Passier, Harrie J.M. and Geven, Fr\'{e}d\'{e}rique and Barendsen, Erik},
  booktitle = {Proceedings of the 8th Computer Science Education Research Conference},
  doi = {10.1145/3375258.3375261},
  isbn = {9781450377171},
  keywords = {Autism; Cognitive thinking style; Inclusive education},
  location = {Larnaca, Cyprus},
  numpages = {11},
  pages = {15–25},
  publisher = {Association for Computing Machinery},
  series = {CSERC '19},
  title = {Autism: Implications for Inclusive Education with respect to Software Engineering},
  url = {https://doi.org/10.1145/3375258.3375261},
  year = {2020}
}

@inproceedings{merged1258,
  abstract = {Teachers are increasingly integrating game design and simulation creation projects as part of their classroom curricula. These projects have many benefits including motivating students in STEM activities and exposing students to computational thinking - a key part of upcoming science standards. However, barriers still exist to project-based computer science in a lab environment. One major issue is that, as students are creating their projects, it is extremely difficult for teachers to know how every student is progressing through a given activity and how to keep every student engaged. This paper introduces a Cyberlearning system entitled REACT (Real-Time Evaluation and Assessment of Computational Thinking) that is an initial step towards giving teachers quickly discernible real-time data corresponding to each student project. REACT provides teachers with a sortable dashboard, consisting of data from each student, that shows the characters students created and used to populate their game or simulation world as well as the semantic meaning behind what students have programmed. A feasibility test with four middle school classrooms shows that REACT helps teachers formatively assess students and provide targeted instruction to struggling individuals. Furthermore, teachers showed excitement at the summative and student self-assessment capabilities of REACT, and every teacher independently stated they would use the REACT system in subsequent end-user programming units.},
  address = {New York, NY, USA},
  author = {Basawapatna, Ashok Ram and Repenning, Alexander and Koh, Kyu Han},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2677269},
  isbn = {9781450329668},
  keywords = {assessment tools; computational thinking; cyberlearning; end-user game and simulation design; formative assessment; k-12 computer science education; summative assessment},
  location = {Kansas City, Missouri, USA},
  numpages = {6},
  pages = {12–17},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {Closing The Cyberlearning Loop: Enabling Teachers To Formatively Assess Student Programming Projects},
  url = {https://doi.org/10.1145/2676723.2677269},
  year = {2015}
}

@inproceedings{merged1259,
  abstract = {Problem. Educational research identifies answerable questions, but often does not address the problems K-12 teachers identify as important. Further, academic research findings can be difficult for teachers to apply to their practices and unique contexts. Currently, little research exists on the lived experiences of primary and secondary instructors who teach computer science (CS) or computational thinking (CT) and also on the specific problems of practice teachers face when teaching CS. Research Question. What problems of practice do K-12 teachers face when teaching CS/CT?Method. Data for this qualitative study was collected using an online questionnaire distributed to teachers internationally. CS/CT teachers responded to an open-ended prompt asking for problems related to teaching CS. The data was analyzed using descriptive first-round coding and focused second-round coding. Validity was established through collaborative coding. Analysis was theorized using locus of control. Findings. Problems with students encompassed behavioral, cognitive, and attitudinal issues, as well as lack of home support or resources. Teachers identified many problems of policy notably stemming from lack of resources or support from administrators. A smaller number of challenges, such as lack of content knowledge, were situated within teachers themselves. While some problems such as student motivation are general, a number of responses identified unique challenges in CS education compared to other disciplines. Implications. Identifying problems faced by teachers can guide professional development offerings, help researchers develop studies that would result in meaningful improvement to CS education, and suggest policy decisions which would result in better outcomes for students.},
  address = {New York, NY, USA},
  articleno = {8},
  author = {Friend, Michelle and Mcgill, Monica and Reinking, Anni},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3564738},
  isbn = {9781450396165},
  keywords = {K-12; problems of practice; teachers},
  location = {Koli, Finland},
  numpages = {13},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Solve This! K-12 CS Education Teachers’ Problems of Practice},
  url = {https://doi.org/10.1145/3564721.3564738},
  year = {2022}
}

@article{merged1260,
  abstract = {Which pedagogical techniques better engage computer science (CS) students in computing for social good? We examine this question with students enrolled in classes using the Collaborating Across Boundaries to Engage Undergraduates in Computational Thinking (CABECT) pedagogical model, that pairs CS and non-CS courses with a community partner to propose solutions to a local problem. Pre- and post-tests of self-assessed concerns about civic responsibility, global responsibility, and local civic efficacy were administered to the students in a three-year long pedagogical experiment, which paired five CS courses with five journalism courses. While CS students were not statistically different from their journalism peers in pre-test measures of social and global responsibility, they lagged behind in local efficacy. In the posttest, CS students had significantly increased their sense of local efficacy to the extent that they were statistically indistinguishable from journalism students. Community-engaged learning projects, such as the one in the CABECT model, show great potential for attracting students to computing for social good.},
  address = {New York, NY, USA},
  author = {Pulimood, S. Monisha and Pearson, Kim and Bates, Diane},
  doi = {10.1145/3447892.3447900},
  issn = {0095-2737},
  issue_date = {February 2020},
  journal = {SIGCAS Comput. Soc.},
  keywords = {civic engagement; community-engaged learning; computing for social good},
  month = {January},
  number = {1},
  numpages = {2},
  pages = {21–22},
  publisher = {Association for Computing Machinery},
  title = {Encouraging CS students to compute for social good through collaborative, community-engaged projects},
  url = {https://doi.org/10.1145/3447892.3447900},
  volume = {49},
  year = {2021}
}

@inproceedings{merged1261,
  abstract = {During the summer of 2009, an Alice camp was taught to gifted students in our region. The following year our department secured an NSF CPATH Grant for Computational Thinking, grant number 0939106. In 2010 we hosted two weeks of our Adventures with Alice Programming and Computational Thinking camp, the first week with middle school students and the second with high school students. In both 2011 and 2012, we hosted one week of a combined middle school/high school camp. A general description of what we did in the camp will also be part of the poster presentation along with what we believe worked well and what could be improved.},
  address = {New York, NY, USA},
  articleno = {16},
  author = {Van Camp, Robert},
  booktitle = {Proceedings of Alice Symposium on Alice Symposium},
  doi = {10.1145/2532333.2532345},
  isbn = {9781450322508},
  keywords = {Alice; Camps; Computational Thinking; K-12 Education},
  location = {Durham, NC, USA},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {ALICE '13},
  title = {Alice Summer Camps: Evaluating Multiple Formats},
  url = {https://doi.org/10.1145/2532333.2532345},
  year = {2013}
}

@inproceedings{merged1262,
  abstract = {As one of the fastest growing populations in the K-12 public school system, multilingual learners (MLs), particularly those from Hispanic and/or Latinx backgrounds, represent the future workforce of the nation [1, 2, 10, 12]. Yet, they are drastically underrepresented in STEM, including computer science (CS) fields and little is known about effective ways to teach computational skills to MLs at the elementary school level [1, 3, 5, 9]. This three-year collaborative project,&nbsp;funded by the&nbsp;National Science Foundation, aims to develop linguistically inclusive integrated computer science (CS) curricula using educational robotics for elementary students in grades 3-5. More specifically, in this project, we integrate CS with mathematics, science, and English language arts to extend all elementary students’ exposure to meaningful and relevant CS experiences [4, 8, 11]. The integrated units incorporate a range of linguistically inclusive pedagogical strategies and language scaffolds to engage MLs in language-rich CS experiences, provide them with equitable learning opportunities, and support their development of computational thinking skills. The units are designed using Predict-Run-Investigate-Modify-Make (PRIMM) and TIPP pedagogical frameworks [6, 7] to scaffold students’ learning of CT concepts and promote CS learning. The project will utilize a design-based research framework gathering classroom-based data, assessment data, and interviews with teachers and students. The central research questions explore how participation in the project influences elementary teachers’ CS teaching efficacy beliefs and identity positionings as teachers of CS and MLs. The research questions related to students include how the participation in the integrated units impacts students’ CS skills, views of computer scientists, and computer scientist identity. We are in the process of providing professional development programs for teachers. At the beginning and end of the PD program, we will gather data from participant teachers. In the following academic semester, the participant teachers will be expected to implement the curricular materials in their own classrooms. Prior and subsequent to the class implementations, the data will be collected from students to examine the effect of curricular units.},
  address = {New York, NY, USA},
  author = {Yesilyurt, Ezgi and Turgut, Refika and Kaya, Erdogan and Sahin, Burak and Sahin, Elif Adibelli and Deniz, Hasan},
  booktitle = {Proceedings of the 2023 ACM Conference on International Computing Education Research - Volume 2},
  doi = {10.1145/3568812.3603480},
  isbn = {9781450399753},
  keywords = {Educational Robotics; Elementary Education; K-12 CS education; Multilingual Learners},
  location = {Chicago, IL, USA},
  numpages = {2},
  pages = {44–45},
  publisher = {Association for Computing Machinery},
  series = {ICER '23},
  title = {Multilingual Elementary School Students' Computer Science and STEM Learning through Robotics},
  url = {https://doi.org/10.1145/3568812.3603480},
  year = {2023}
}

@inproceedings{merged1263,
  abstract = {The technology sector remains one of the fastest growing industries across the nation and continues to rapidly permeate all facets of society. The next generation of the computing workforce must be equipped with the skills to examine how existing systems exacerbate inequities, while developing the competencies to build new, more equitable innovations. To enable this shift, computer science (CS) instruction needs to develop not only students' computing identities and computational thinking, but also critical thinking and ethical reasoning. Educators are key to this transformation, yet little is known about the landscape of K-12 CS educators and how equipped they are to provide equitable CS instruction. To understand the challenges that CS educators face and identify the supports and resources to more effectively equip them to serve a diverse student body, these panelists launched a national landscape survey. This panel of experts from the Kapor Center and the Computer Science Teachers Association will reflect on the survey findings and lead a discussion with the audience about the implications of the data on the future of educational policy, practice, and research to better support CS educators to build more equitable classroom spaces.},
  address = {New York, NY, USA},
  author = {Davis, Kalisha and Twarek, Bryan and Becton-Consuegra, Dinah and Koshy, Sonia},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499229},
  isbn = {9781450390712},
  keywords = {cs education policy; cs education research; culturally-responsive computing; equity; k-12 computing education; professional development},
  location = {Providence, RI, USA},
  numpages = {2},
  pages = {1041–1042},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {The Needs of K-12 Computer Science Educators towards Building an Inclusive Classroom: Implications for Policy, Practice, and Research},
  url = {https://doi.org/10.1145/3478432.3499229},
  year = {2022}
}

@inproceedings{merged1264,
  abstract = {Across the globe, Computer Science Education has grown tremendously over the past decade to teach primary and secondary students computing ideas and tools. From integrating computational thinking in disciplines to teaching computer science as a stand alone subject, models for teacher preparation range from one and done professional learning workshops to full certificate and licensure programs. The group will focus on providing a landscape of how CS teachers are prepared academically in various countries and make evidence-based recommendations for how teachers should be educated to develop knowledge and skill to teach computer sci- ence. The working group will also discuss how to develop these knowledge systems while promoting instruction that is equitable and centers students in the classroom. In addition, the working group will focus on new directions in computing education (such as, artificial intelligence and machine learning) and their implica- tions for teacher preparation. We will bring together a group of international computer science education scholars who have been engaged in teacher preparation. In addition to what knowledge teachers need to teach CS, we will also focus on how the field is preparing teachers to think critically about AI/ML and the role of computer science in the design of technology tools to achieve goals while mitigating potential societal harms.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Connolly, Cornelia and Berges, Marc and Chytas, Christos and Franklin, Crystal and Hij\'{o}n-Neira, Raquel and Leftwich, Anne and Marguliex, Lauren and Macann, Victoria and Warner, Jayce R.},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
  doi = {10.1145/3502717.3532166},
  isbn = {9781450392006},
  keywords = {computer science education; pre-service teachers; teacher education},
  location = {Dublin, Ireland},
  numpages = {2},
  pages = {568–569},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Models for Computer Science Teacher Preparation: Developing Teacher Knowledge},
  url = {https://doi.org/10.1145/3502717.3532166},
  year = {2022}
}

@article{merged1265,
  abstract = {Integrated computing curricula combine learning objectives in computing with those in another discipline, like literacy, math, or science, to give all students experience with computing, typically before they must decide whether to take standalone CS courses. One goal of integrated computing curricula is to provide an accessible path to an introductory computing course by introducing computing concepts and practices in required courses. This study analyzed integrated computing curricula to determine which CS practices and concepts are taught, how extensively the curricula are taught, and, by extension, how they might prepare students for later computing courses. The authors conducted a content analysis to examine primary and lower secondary (i.e., K-8) curricula that are taught in non-CS classrooms, have explicit CS learning objectives (i.e., CS+X), and that took 5+ hours to complete. Lesson plans, descriptions, and resources were scored based on frameworks developed from the K-12 CS Framework, including programming concepts, non-programming CS concepts, and CS practices. The results found that curricula most extensively taught introductory concepts and practices, such as sequences, and rarely taught more advanced content, such as conditionals. Students who engage with most of these curricula would have no experience working with fundamental concepts, like variables, operators, data collection or storage, or abstraction in the context of a program. While this focus might be appropriate for integrated curricula, it has implications for the prior knowledge that students should be expected to have when starting standalone computing courses.},
  address = {New York, NY, USA},
  articleno = {35},
  author = {Margulieux, Lauren E. and Liao, Yin-Chan and Anderson, Erin and Parker, Miranda C. and Calandra, Brendan D.},
  doi = {10.1145/3664825},
  issue_date = {September 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {CS+X; Integrated computing; K-12 computer science education; computational thinking; content analysis; curricula analysis; primary school computer science education},
  month = {August},
  number = {3},
  numpages = {23},
  publisher = {Association for Computing Machinery},
  title = {Intent and Extent: Computer Science Concepts and Practices in Integrated Computing},
  url = {https://doi.org/10.1145/3664825},
  volume = {24},
  year = {2024}
}

@inproceedings{merged1266,
  abstract = {The rollout of computer science education has been dependent on a patchwork of uncoordinated professional learning experiences. This has left some schools serving students from underrepresented groups without an articulated, rigorous, joyful K-12 CS education. Based on our work with four urban schools serving such students, we propose that an ecosystem of support that prepares every administrator and teacher to include CS in every student's education with a whole school approach and sustained professional learning, is one way to assure an equitable, sustainable CS education. We propose changes in policy to scaffold such an ecosystem.},
  address = {New York, NY, USA},
  author = {Levitt, Diane and Ray, Meg},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656092},
  isbn = {9798400706264},
  keywords = {K-5 computer science education; computational agency; computational thinking; content coaching; equity; justice-centered computing; teacher professional development},
  location = {Atlanta, GA, USA},
  numpages = {5},
  pages = {254–258},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Ecosystems That Build Equitable, K-5 Sustainable Computer Science Education},
  url = {https://doi.org/10.1145/3653666.3656092},
  year = {2024}
}

@inproceedings{merged1267,
  abstract = {Based on the existing research on AI music performance, this paper introduces the concept of artificial intuitive music performance from the professional perspective of music performance, so that AI music performance has the characteristics of humanization, and provides a promising research framework and path for researchers and learners. In this paper, some concepts, theories and research methods are introduced, the relational mapping-inversion principle of artificial intuitive music performance is proposed, and the learning mechanism of music perception and memory is described from the perspective of the performer's performance thinking and form. The research shows that through the hyper-cyclic learning process of artificial intuitive performance, an intuitive performance called performance attractor can be formed. At the same time, it is suggested that in the AI performance system, combining the characteristics of music performance theory, music type database, music structure database, and music formalization aesthetic database should be established. In addition, this artificial intuitive music performance system is also a music performance teaching system. Through the self-learning process of the system, it can simulate various styles of classical music and modern music, providing a new environment and platform for music learning and appreciation.},
  address = {New York, NY, USA},
  author = {He, Yumeng and Hou, Lei},
  booktitle = {Proceedings of the 2025 International Conference on Digital Education and Information Technology},
  doi = {10.1145/3732299.3732327},
  isbn = {9798400713248},
  keywords = {Artificial intelligence; artificial intuition; music performance; perception and memory; research characteristics and trends},
  numpages = {6},
  pages = {142–147},
  publisher = {Association for Computing Machinery},
  series = {DEIT '25},
  title = {New Thinking on Music Performance Teaching System Based on Artificial Intuition},
  url = {https://doi.org/10.1145/3732299.3732327},
  year = {2025}
}

@inproceedings{merged1268,
  abstract = {In August 2011, Google Chairman Eric Schmidt came to Scotland and expressed great concern at the state of Computer Science (CS) education in the UK's schools. This was a timely intervention: in Scotland, a new national curriculum is providing an opportunity to cement CS and computational thinking firmly within the curriculum and reverse a recent decline in uptake. To support teachers delivering this new curriculum and to provide students with an experience of CS that is accessible and exciting, the Royal Society of Edinburgh (RSE) and British Computer Society (BCS) have commissioned three extensive resources that seek to deliver CS in a way that is relevant to students' own digital lives. These use a range of pedagogical approaches to teach computational thinking and enable meaningful interdisciplinary learning -- a cornerstone of Scotland's new curriculum.},
  address = {New York, NY, USA},
  author = {Scott, Jeremy},
  booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
  doi = {10.1145/2462476.2465574},
  isbn = {9781450320788},
  keywords = {computational thinking; computer science; education; programming; secondary school},
  location = {Canterbury, England, UK},
  numpages = {1},
  pages = {315},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '13},
  title = {The royal society of Edinburgh/British computer society computer science exemplification project},
  url = {https://doi.org/10.1145/2462476.2465574},
  year = {2013}
}

@inproceedings{merged1269,
  abstract = {MIST, the Mathematical Image Synthesis Toolkit, is an open-source, Web-based graphics application in which students develop skills in computational thinking and deepen their understanding of mathematical functions through creative play in making images. Using a drag-and-drop interface, students build functions that describe animated abstract images. These functions combine a few basic images (e.g., a horizontal blend, a vertical blend, and a time-based blend) using mathematical operators whose semantics are based on corresponding points in each image (e.g., MIST includes models for adding and multiplying colors). Students develop a variety of skills in computational thinking by using the small set of images and operations to develop complex images, not only images that the system challenges them to make but also images that they find themselves inspired to create and even images that their peers challenge them to build. MIST also incorporates a community of artists/learners. Images created in MIST are available to other MIST users to comment on and remix (provided the designer permits reuse). MIST community members may also create challenges for other community members and can curate "galleries" of images they find particularly engaging, interesting, or even useful as challenges for others. Users can also share their images via Facebook or "tweet" their recent creations. We find that this additional community further encourages students to develop new and interesting images.},
  address = {New York, NY, USA},
  author = {Fordham, Eileen and Freger, Halley and Hinchman-Dominguez, Amanda and Mitchell, Alexander and Rebelsky, Daniel and Tsou, Victoria and Wheeler, Earnest and Wolter, Zoe and Rebelsky, Samuel A.},
  booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/2676723.2691878},
  isbn = {9781450329668},
  keywords = {animation; computational thinking; functional programming; open source; social media; web software},
  location = {Kansas City, Missouri, USA},
  numpages = {1},
  pages = {599},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '15},
  title = {MIST, The Mathematical Image Synthesis Toolkit},
  url = {https://doi.org/10.1145/2676723.2691878},
  year = {2015}
}

@inproceedings{merged1270,
  abstract = {While preparing students for careers upon graduation, faculty often have to manage the priorities of bridging the gap between the level of student preparation and the expected level of preparedness. The prioritization of these tasks is influenced by discipline and industry specific guidelines and does not always align with the experience of students at Historically Black College and Universities (HBCU) and Minority Serving Institutions (MSI). The Association of Computing Machinery (ACM) 2013 Computer Science Curricula guidelines highlight version control as one of many core tools in the Social Issues and Professional Practice (SP) Knowledge Area students should experience in their upper-level software engineering courses. Research has demonstrated that at this level, students receive exposure to the tool but are not able to gain sufficient mastery of the tool. Other researchers have advocated for version control being introduced earlier in the computer science curricula. There is limited research that indicates that this particular tool improves the learning outcomes for students or significantly complements the other ACM Knowledge Areas. This presentation seeks to challenge the notion that the use of version control systems improves HBCU students' computational thinking (CT) skills and in turn prepares them for careers beyond graduation. It is important to note, there is no research that directly addresses the use of version control in predominately African American classrooms.},
  address = {New York, NY, USA},
  author = {Johnson, Andrea E.},
  booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3408877.3439658},
  isbn = {9781450380621},
  keywords = {computing education; github; programming education; version control systems},
  location = {Virtual Event, USA},
  numpages = {1},
  pages = {1331},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '21},
  title = {To GitHub or Not to GitHub?},
  url = {https://doi.org/10.1145/3408877.3439658},
  year = {2021}
}

@inproceedings{merged1271,
  abstract = {In this paper, we present a complete platform for an innovative way to teach mathematics. The platform is composed of a serious game to help children to understand fractions, and a web portal that allows teachers to configure exercises involving fractions, but also to design completely new exercises using a very simple block-based programming language. In this way our tool can be used by primary school teachers as an help to teach mathematics, but also secondary or high schools teachers to teach students computational thinking and basic skills of programming languages.},
  address = {New York, NY, USA},
  author = {Gaggi, Ombretta and Petenazzi, Giulia},
  booktitle = {Proceedings of the 5th EAI International Conference on Smart Objects and Technologies for Social Good},
  doi = {10.1145/3342428.3342666},
  isbn = {9781450362610},
  keywords = {Block-based language; Mobile Applications; Serious Games; Teaching Mathematics},
  location = {Valencia, Spain},
  numpages = {6},
  pages = {37–42},
  publisher = {Association for Computing Machinery},
  series = {GoodTechs '19},
  title = {A digital platform for teaching mathematics},
  url = {https://doi.org/10.1145/3342428.3342666},
  year = {2019}
}

@inproceedings{merged1272,
  abstract = {Over the past five years, there has been a major push to develop the computational thinking skills of K-12 students. Tools such as Scratch, Alice, and Kodu have been developed to engage students in learning to program through the creation of computational artifacts (e.g., games, animations, and stories). However, less is known about how elementary and middle school children reason about program behavior. Such skills are useful for reading and adapting others programs, locating possible sources of bugs, and predicting program behavior given code snippets (i.e., mental simulation). The goal of this poster is to measure and track the development of students' ability to reason about programs using Teague &amp; Lister's Neo-Piagetian classification of novice programmers: Sensorimotor, Preoperational Thinkers, and Concrete Operational Thinkers. We operationalize Teague and Lister's category descriptions by creating a criterion for each category. This classification has helped us characterize students' mastery of strategies for reasoning about the lawful behavior of programs using a Kodu curriculum. In particular, this categorization was used to differentiate students' reasoning styles using data from two studies having 20 and 19 students each. We found strong consistency in the results across both studies. Through analysis and categorization of student responses, most students fall into the preoperational thinker category. Within this category, we found a diversity of mastery patterns that help us understand where students face challenges in reasoning about programs.},
  address = {New York, NY, USA},
  author = {Aggarwal, Ashish},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3022469},
  isbn = {9781450346986},
  keywords = {K-12; computational thinking; kodu; lawfulness; mental simulation; neo-piagetian; reasoning ability},
  location = {Seattle, Washington, USA},
  numpages = {2},
  pages = {745–746},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Neo-Piagetian Classification of Reasoning Ability and Mental Simulation in Microsoft's Kodu Game Lab},
  url = {https://doi.org/10.1145/3017680.3022469},
  year = {2017}
}

@inproceedings{merged1273,
  abstract = {Investigating the current college computer-common class teaching in South China University of Technology (SCUT), it's indicated that although the online and offline blended teaching was practiced, there's still a lack of classroom interaction and hierarchical teaching. So high-quality teaching needs a reform of teaching mode urgently. In order to improve the teaching quality of computer-common class, an online and offline blended teaching mode with the integration of three supports, three concepts and three stages is proposed, analyzing the characteristics of learners and constructing online courses. The three concepts are "student-centered", "teaching practice as the key point" and " focusing on students' learning process " respectively. With the supports of teaching, management and evaluation, a three-stage teaching process is designed, which consists of pre-class preparation, the teaching activities based on flipped classroom and the evaluation. This study took the course: "Multimedia Technology and Application (MTA)", as an example to carry out this blended teaching mode in SCUT from 2017 to 2019. The results implied that this model had promoted students' participation and interest in learning, improved the achievement of course objectives and teaching quality, and boost students' computational thinking ability and information literacy.},
  address = {New York, NY, USA},
  author = {Guo, Fen and Bing Yu, Jun and Xin Liu, Xin and Xu, Ke},
  booktitle = {Proceedings of the 6th International Conference on Information and Education Innovations},
  doi = {10.1145/3470716.3470718},
  isbn = {9781450389488},
  keywords = {blended teaching; flipped classroom; online and offline},
  location = {Belgrade, Serbia},
  numpages = {6},
  pages = {6–11},
  publisher = {Association for Computing Machinery},
  series = {ICIEI '21},
  title = {The Construction and Practice of the Blended Teaching Mode on College Computer-common Courses},
  url = {https://doi.org/10.1145/3470716.3470718},
  year = {2021}
}

@article{merged1274,
  abstract = {In this interview, computer scientist Catherine McGeoch demystifies quantum computing and introduces us to a new world of computational thinking.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Tichy, Walter},
  doi = {10.1145/3084688},
  issue_date = {July 2017},
  journal = {Ubiquity},
  month = {July},
  number = {July},
  numpages = {20},
  publisher = {Association for Computing Machinery},
  title = {Is quantum computing for real? an interview with Catherine McGeoch of D-Wave Systems},
  url = {https://doi.org/10.1145/3084688},
  volume = {2017},
  year = {2017}
}

@inproceedings{merged1275,
  abstract = {Making programmable physical artefacts and prototypes has inherent value for Research-through-Design (RtD) based HCI. Furthermore, the abstractions and representations within RtD and programming are vastly different, such as between observations, storyboards and the code. Studies have shown that the program of an artefact influences the RtD outcome, but there is also a disconnect between the observations of use and the abstractions involved in the programming. How can we program an artefact so that the code can be created, modified and reflected upon based on directly observable and non-technical abstractions? In this paper we present Storycoding, a computational-thinking based method for programming that focuses on bridging the representational abstractions. Using Storycoded artefacts, we examine programming in light of RtD. We discuss how Storycoding enables programming that is directly observable between the use and the abstractions, being respectful towards RtD. Finally, we conclude with implications towards HCI research and practice.},
  address = {New York, NY, USA},
  author = {Mikkonen, Jussi and Fyhn, Christina},
  booktitle = {Proceedings of the 2020 ACM Designing Interactive Systems Conference},
  doi = {10.1145/3357236.3395555},
  isbn = {9781450369749},
  keywords = {artefact behaviour; computational behaviour; human-computer interaction; programming; research through design},
  location = {Eindhoven, Netherlands},
  numpages = {15},
  pages = {441–455},
  publisher = {Association for Computing Machinery},
  series = {DIS '20},
  title = {Storycoding - Programming Physical Artefacts for Research Through Design},
  url = {https://doi.org/10.1145/3357236.3395555},
  year = {2020}
}

@inproceedings{merged1276,
  abstract = {Basic computational thinking, so necessary in today's society, can be learned in an engaging way with the use of educational robots. In order to reach very diverse groups of people, educational robots need to be simple, scalable and low cost.Inspired by the success of the LOGO project, we have developed the Phogo pedagogical platform, built around a low cost robot (less than $80) capable of tracing its path with a marker pen. We also present a high-level Python-based control library that allows for transparent and easy wireless communication with the robots. The approach was tested in an informal workshop with a group of teenagers without any previous self-conscious computational knowledge. As the students were attracted by the robot and the simple approach, they were able to gain some insight about abstract programming concepts such as variables, functions, and flow control structures. The majority of the students were people with physical, cognitive or intellectual disabilities and they were able to follow, enjoy and learn as any other student making this an accessible activity to everyone.Finally, we summarize our efforts documenting and publishing the Phogo system as open-source in order to promote its use in future workshops.},
  address = {New York, NY, USA},
  author = {Gonzalez-Sacristan, Carlos and Garcia-Saura, Carlos and Molins-Ruano, Pablo},
  booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3012430.3012498},
  isbn = {9781450347471},
  keywords = {3d-printing; LOGO; Python; computational thinking; educational robots; low cost; open-source; robotic platform},
  location = {Salamanca, Spain},
  numpages = {5},
  pages = {67–71},
  publisher = {Association for Computing Machinery},
  series = {TEEM '16},
  title = {Phogo: A low cost, engaging and modern proposal to learn how to program},
  url = {https://doi.org/10.1145/3012430.3012498},
  year = {2016}
}

@inproceedings{merged1277,
  abstract = {Non-programmers, in particular, those who identify as female or gender-diverse, experience many factors that hinder their ultimate interest, participation, and success in programming. Prior work has delved into the problem of underrepresentation in STEM and specifically in Computing Education to uncover the barriers impacting these groups. Yet, attraction and retention remains a challenge. I argue that while formal learning pathways are critical to increasing participation of diverse learners, it is also integral to provide informal and non-formal learning opportunities as well. My research uses mixed-methods within a design-based research approach to offer and evaluate an active learning beginners' programming workshop called Code For Her. The workshop is designed to introduce females and gender-diverse individuals to web development. My goal is to analyze participants' experiences and progress within a trajectory framework, producing a narrative of their behaviors and attitudes over both short-term and longer-term intervals. In a pilot study of the workshop design, I observed increases in self-efficacy and positive attitudes, as well as changes in ways of thinking about computing. I note that the brief exposure of a workshop may seed understanding and skills in computation, but is not likely to convert non-programmers into programmers. Instead, I am exploring a new construct - computational grounding - that refers to participants' enhanced orientation toward computing-related behaviors. I will operationalize and study this construct using the workshop activities, thereby enhancing discussions of computational thinking.},
  address = {New York, NY, USA},
  author = {Pena, Joslenne},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
  doi = {10.1145/3291279.3339444},
  isbn = {9781450361859},
  keywords = {coding workshop; gender; informal learning; non-programmers},
  location = {Toronto ON, Canada},
  numpages = {2},
  pages = {347–348},
  publisher = {Association for Computing Machinery},
  series = {ICER '19},
  title = {Seeding the Computational Skills of Diverse Non-programmers through Non-formal Workshops},
  url = {https://doi.org/10.1145/3291279.3339444},
  year = {2019}
}

@inproceedings{merged1278,
  abstract = {Indonesia has always failed in its PISA international assessment. Although there have been improvement efforts, it has not shown a significant increase in score. The latest PISA results still put Indonesia at its lowest. The OECD as the organizer of PISA encourages curriculum changes to Indonesia in order to create a quality of international level education. In this era of globalization, education requires innovation to develop the necessary competencies in the global world. The purpose of this research describes several curriculum innovations for elementary school and junior high school based on several research, expert opinion and world experience. This research uses library research method. The data is compiled, analyzed, and concluded so as to get an overview of curriculum innovations that are in accordance with the development in the disruptive era without forgetting to be the nation that upholds religion and character. This research proposes several curriculum innovations that can be done, namely simplification of curriculum, implementing disruptive education, improving innovation skill, applying education technology widely, applying PISA assessment in daily evaluation, strengthening religious education and character and applying scientific and computational thinking. So, with this curriculum innovation, it will have a positive impact on the development of Indonesian education.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Andi Rachman, Taofik and Latipah, Euis and Zaqiah, Qiqi Yuliati and Erihadiana, Mohamad},
  booktitle = {Proceedings of the 5th International Conference on Learning Innovation and Quality Education},
  doi = {10.1145/3516875.3516899},
  isbn = {9781450386920},
  keywords = {Curriculum innovation; Indonesian education; PISA; disruptive education},
  location = {Surakarta, Indonesia},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {ICLIQE '21},
  title = {Curriculum Innovation to Improve Indonesian Education in PISA International Assessment in Disruptive Education Era},
  url = {https://doi.org/10.1145/3516875.3516899},
  year = {2022}
}

@inproceedings{merged1279,
  abstract = {This study investigated patterns in the development of computational thinking practices in the context of the Exploring Computer Science (ECS) program, a high school introductory CS course and professional development program designed to foster deep engagement through equitable inquiry around CS concepts. Past research indicates that the personal relevance of the ECS experience influences students' expectancy-value towards computer science. Expectancy-value is a construct that is predictive of career choices. We extended our research to examine whether expectancy-value influences the development of computational thinking practices. This study took place in the context of two ECS implementation projects across two states. Twenty teachers, who implemented ECS in 2016-17, participated in the research. There were 906 students who completed beginning and end of year surveys and assessments. The surveys included demographic questions, a validated expectancy-value scale, and questions about students' course experiences. The assessments were developed and validated by SRI International as a companion to the ECS course. Overall, student performance statistically increased from pretest to posttest with effect size of 0.74. There were no statistically significant differences in performance by gender or race/ethnicity. These results are consistent with earlier findings that a personally relevant course experience positively influences students' expectancy for success. These results expanded on prior research by indicating that students' expectancy-value for computer science positively influenced student learning.},
  address = {New York, NY, USA},
  author = {McGee, Steven and McGee-Tekula, Randi and Duck, Jennifer and McGee, Catherine and Dettori, Lucia and Greenberg, Ronald I. and Snow, Eric and Rutstein, Daisy and Reed, Dale and Wilkerson, Brenda and Yanek, Don and Rasmussen, Andrew M. and Brylow, Dennis},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159529},
  isbn = {9781450351034},
  keywords = {computer science assessment; computer science attitudes; computer science teaching practices; expectancy-value-cost; exploring computer science; high school computer science},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {50–55},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {Equal Outcomes 4 All: A Study of Student Learning in ECS},
  url = {https://doi.org/10.1145/3159450.3159529},
  year = {2018}
}

@inproceedings{merged1280,
  abstract = {Divergent thinking has been linked to creative processes leading to innovative artifacts. Measuring creative divergence can be difficult. Across the USA, the Scalable Game Design (SGD) Project includes thousands of student participants building their own games through learning computational thinking (CT). To evaluate these games, a technique, the Computational Thinking Pattern Analysis (CTPA) [1], was developed, refined and used successfully. Under three different learning conditions, divergence was computed through CTPA, and then analyzed and explored as an indication of creativity.},
  address = {New York, NY, USA},
  author = {Koh, Kyu Han and Bennett, Vicki and Repenning, Alexander},
  booktitle = {Proceedings of the 8th ACM Conference on Creativity and Cognition},
  doi = {10.1145/2069618.2069694},
  isbn = {9781450308205},
  keywords = {computational thinking; computational thinking pattern analysis.; creativity measurement; game design},
  location = {Atlanta, Georgia, USA},
  numpages = {2},
  pages = {357–358},
  publisher = {Association for Computing Machinery},
  series = {C&amp;C '11},
  title = {Computing indicators of creativity},
  url = {https://doi.org/10.1145/2069618.2069694},
  year = {2011}
}

@inproceedings{merged1281,
  abstract = {This workshop will address the theme of open resources for learning. A small series of case studies at the intersection between the world of education, technology, and making will be presented with the aim of discussing the opportunities and challenges of open source materials for practitioners. The case studies consist of projects developed across different European countries, focused on different aspects of learning and dedicated to different school levels. Nevertheless, these projects share the use of open source resources and the aim of contributing with materials and examples to the resources available for educators and designers. The workshop will combine the case studies presentations with a round table.},
  address = {New York, NY, USA},
  author = {Lupetti, Maria Luce and Cangiano, Serena and Ermacora, Gabriele and Russo, Ludovico Orlando and Riesen, Cristina},
  booktitle = {Proceedings of the Conference on Creativity and Making in Education},
  doi = {10.1145/3213818.3213844},
  isbn = {9781450353717},
  keywords = {Computational thinking; digital fabrication; learning through play; open-source; reflective thinking},
  location = {Trondheim, Norway},
  numpages = {2},
  pages = {116–117},
  publisher = {Association for Computing Machinery},
  series = {FabLearn Europe'18},
  title = {Open resources for thinking with computational artefacts at school},
  url = {https://doi.org/10.1145/3213818.3213844},
  year = {2018}
}

@inproceedings{merged1282,
  abstract = {Digitization is becoming part of almost everyone's life, ranging from smartphones and tablets, smart devices automatically collecting information, to tools and scripting languages that are widely available and easy to use. This has recently been reflected in various university curricula, where courses such as computational thinking, and basic programming classes are now included in a broader range of (non-computer-science) programs. However, these programs often face challenges in such courses due to their diverse student body, with students often lacking profound digital competencies and technical background. While gender diversity aspects have been broadly studied in the past, other diversity dimensions such as ethnicity, age, or educational background have largely been neglected thus far. In this paper, we report on our experiences in teaching an introductory programming course to first-year Business Informatics bachelor students. After undergoing fundamental changes in our teaching concepts and the provided learning material, we explore what diversity factors play an important role when teaching programming to non-computer science students, and how diversity is perceived by lecturers and tutors. Our analysis confirms that a collaborative teaching concept positively supports female students and students with language barriers.},
  address = {New York, NY, USA},
  author = {Groher, Iris and Vierhauser, Michael and Sabitzer, Barbara and Kuka, Lisa and Hofer, Alexander and Muster, David},
  booktitle = {Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: Software Engineering Education and Training},
  doi = {10.1145/3510456.3514155},
  isbn = {9781450392259},
  keywords = {diversity dimensions; introductory programming},
  location = {Pittsburgh, Pennsylvania},
  numpages = {11},
  pages = {102–112},
  publisher = {Association for Computing Machinery},
  series = {ICSE-SEET '22},
  title = {Exploring diversity in introductory programming classes: an experience report},
  url = {https://doi.org/10.1145/3510456.3514155},
  year = {2022}
}

@inproceedings{merged1283,
  abstract = {In order to create early exposure and to guide more talent into computing, computer science was included in K-12 education as a new subject area in many states. Although each state has different educational goals, computer science curriculum standards ensure equality among the states, especially in guiding teaching and accessing students' achievements. In this study, we applied content analysis to investigate the published computer science standards to examine: (1) How did computer science standards fit within the whole curriculum? (2) What concepts were covered in the computer science standards in the U.S.? The results showed four approaches to housing computer science in the whole curriculum. The Computer Science Teachers Association Computer Science framework was broadly adopted. Moreover, three major concepts, computer literacy, digital citizenship, and computational thinking, were additionally emphasized at the state standard level. This study fundamentally reported K-12 CS promotion in the U.S. through an academic standard scope, which directs K-12 CS teaching and learning. Additionally, this study prompted a conversation of preparing for different kinds of computing skills at the K-12 level in the U.S. among the policy makers and scholars},
  address = {New York, NY, USA},
  articleno = {6},
  author = {Guo, Meize and Ottenbreit-Leftwich, Anne},
  booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
  doi = {10.1145/3421590.3421594},
  isbn = {9781450387590},
  keywords = {K-12 computer science; computer science concepts; computer science education; curriculum standards},
  location = {Virtual Event, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '20},
  title = {Exploring the K-12 computer science curriculum standards in the U.S},
  url = {https://doi.org/10.1145/3421590.3421594},
  year = {2020}
}

@inproceedings{merged1284,
  abstract = {Studying computer programming helps children develop computational thinking, a problem-solving methodology that can be transferred to solve everyday problems. Additionally, exposing children to an advanced computational concept of search algorithm allows them to see how different problem-solving techniques are designed to tackle more challenging tasks, and improve their ability to solve problems. We present a block-based programming game called Tuk Tuk for children in kindergarten level (junior version), and elementary and middle school level (standard version). With Tuk Tuk, learners create a computer program in a block-based language to control a car to complete a given task, earn money, reach the next level, and unlock new coding blocks. By completing each task, learners will learn important computational concepts and algorithms, a basis of computational thinking, such as conditionals, iterations, depth-first search (DFS) and breadth-first search (BFS).},
  address = {New York, NY, USA},
  author = {Koracharkornradt, Chonnuttida},
  booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
  doi = {10.1145/3078072.3091990},
  isbn = {9781450349215},
  keywords = {block-based programming; game},
  location = {Stanford, California, USA},
  numpages = {4},
  pages = {725–728},
  publisher = {Association for Computing Machinery},
  series = {IDC '17},
  title = {Tuk Tuk: A Block-Based Programming Game},
  url = {https://doi.org/10.1145/3078072.3091990},
  year = {2017}
}

@inproceedings{merged1285,
  abstract = {This workshop introduces participants to SciGirls Code, a unique, connected learning model for engaging middle school girls in computer science (CS) in out of school time. The pilot project, which ran nationally at 16 sites across the United States in 2017-18, included: three curriculum strands (mobile apps, robotics, and e-textiles); role model training for female technology professionals; professional development for informal STEM educators; and a research study that investigates the ways in which learning experiences impact the development of girls' computational thinking as well as their interest and attitudes toward computer science. Workshop participants will learn best strategies for engaging girls in CS and see how those strategies play out in a creative robotics activity using Hummingbird robots. (See https://sites.google.com/tpt.org/scigirlscode/robotics/12-hummingbird-art-bot.)},
  address = {New York, NY, USA},
  author = {Freese, Joan and Benedict, Heather and Carter, Sarah and Hessen, Katie and Karl, Rita and Peterson, Karen and Scharber, Cassandra},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287552},
  isbn = {9781450358903},
  keywords = {app development; broadening participation; computational thinking; connected learning; curriculum; e-textiles; gender equity; middle school; professional development; robotics; role models},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1238},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {SciGirls Code: Creative Robotics for Tween Girls in Out of School Time},
  url = {https://doi.org/10.1145/3287324.3287552},
  year = {2019}
}

@inproceedings{merged1286,
  abstract = {Tangible interfaces have become integral to human-computer interaction, especially in educational settings that offer engaging ways for learners to interact with digital technology. This paper explores the landscape of tangible interfaces for computational tinkering—tools and interfaces that empower learners to engage with computational experiences in a playful and open-ended format. In this preliminary work for the Graduate Student Consortium, I examine a set of these projects through the lenses of context, tangibility, expressivity, and materiality, and seek to develop a rich classification and research goals from the insights. This paper also presents two of my projects in this space.},
  address = {New York, NY, USA},
  articleno = {125},
  author = {Ranjan, Krithik},
  booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
  doi = {10.1145/3689050.3704795},
  isbn = {9798400711978},
  keywords = {Children; Computational Tinkering; Open-ended learning; TUI; Tangible Interaction; Tinkering},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {TEI '25},
  title = {Tangible Interfaces for Computational Tinkering},
  url = {https://doi.org/10.1145/3689050.3704795},
  year = {2025}
}

@inproceedings{merged1287,
  abstract = {The goal of teaching everyone computing (explicitly including programming) predates the definition of the computer science (CS) major and even the prospect of a software development career. At the University of Michigan, we are creating courses for non-CS majors which are grounded in the computational practices of liberal arts and sciences faculty. These courses have no connection to the CS major curriculum or software development jobs. We focus here on two of the themes that those faculty valued (Computing for Expression and Computing for Justice) and the introductory courses that we designed around each theme. The courses emphasize gaining broad perspectives of computing, which serve the study of multiple disciplines. Student activities include readings, writing essays, classroom discussion, and open-ended programming homework assignments. This experience report describes our design process, the Creative Expression and Social Justice courses, and an initial evaluation of our design. Most of the programming assignments were written in the block-based programming language Snap!, with some in-class exercises using teaspoon languages. Several units ended with an ebook assignment to connect the Snap! programming to equivalent programs in Python, Processing, and SQL. Interview and survey findings suggest that students found this sequence and the courses useful, despite not counting toward a CS major or focusing on early software development skills. Students described usefulness in terms of developing general computing knowledge, preparation for a range of future careers, and introducing them to other course choices.},
  address = {New York, NY, USA},
  author = {Guzdial, Mark and Nelson-Fromm, Tamara},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701896},
  isbn = {9798400705311},
  keywords = {computational literacy; computational science; computational thinking; critical computing; cs for all; digital humanities; liberal arts and sciences},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {423–429},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Designing Courses for Liberal Arts and Sciences Students Contextualized around Creative Expression and Social Justice},
  url = {https://doi.org/10.1145/3641554.3701896},
  year = {2025}
}

@inproceedings{merged1288,
  abstract = {Robotics in education has special relevance in current digital society where students should know how to deal with technology. In this paper, it is presented an educational experiment in the mobile robotics domain. The referred experiment was part of a summer camp, which took place at the Polytechnic Institute of Bragan\c{c}a Portugal, being its technological aspects related with mobile robotics. Other than the technological aspects, the students participated in many different cultural and social activities, having the opportunity to know the city of Bragan\c{c}a and also to know different persons, mainly students, professors, researchers and laboratory technicians. The applied approach in the summer camp was a challenge based learning methodology, being involved in the experiment 3 professors, 4 monitors, working with a group of 16 secondary school students. The described experiment was planned as an activity of the RoboSTEAM - Integrating STEAM and Computational Thinking development by using robotics and physical devices ERASMUS+ Project.},
  address = {New York, NY, USA},
  author = {Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e} and Brito, Thadeu and Brancali\~{a}o, Laiany and Camargo, Caio and Oliveira, Vitor and Conde, Miguel \'{A}.},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362910},
  isbn = {9781450371919},
  keywords = {Challenge Based Learning; Erasmus; Robotics; Summer camp},
  location = {Le\'{o}n, Spain},
  numpages = {8},
  pages = {36–43},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Educational Robotics Summer Camp at IPB: A Challenge based learning case study},
  url = {https://doi.org/10.1145/3362789.3362910},
  year = {2019}
}

@inproceedings{merged1289,
  abstract = {The DIVAS (Digital Imaging and Vision Applications in Science) project addresses workforce challenges in science, technology, engineering, and mathematics by creating a pedagogical and programmatic "on-ramp" that empowers natural science majors to engage in authentic computational problems as members of skilled, professional teams. We are developing and testing institutional practices and curricular innovations that engage and train STEM undergraduate students to use Python programming, and image processing in particular, in their undergraduate research projects. Students are recruited into the DIVAS program in the first semester of their first year. DIVAS scholars and other participating students can experience a variety of interventions including: 1) a one-credit DIVAS seminar exploring several imaging and computing topics; 2) image capture and analysis modules in introductory- or upper-level biology and chemistry courses; 3) a week-long, intensive coding bootcamp that introduces bash, git, Python programming, and the OpenCV image processing library; 4) pair programming exercises to solve genuine morphometric and colorimetric problems; 5) an extended summer research project involving image processing; and 6) weekly code reviews to check on progress and provide guidance. The DIVAS projects measures the impact of these interventions on students' self-reported efficacy in using computation to solve problems, their attitudes towards computation, and their computational thinking skills, using both established and newly developed instruments. Our first year results show that multiple interventions have had significant positive impact on students' self-efficacy and interest in using computing in their future careers, and certain computational thinking skills.},
  address = {New York, NY, USA},
  author = {Meysenburg, Mark and Durham Brooks, Tessa and Burks, Raychelle and Doyle, Erin and Frey, Timothy},
  booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3159450.3159537},
  isbn = {9781450351034},
  keywords = {assessment; outreach; undergraduate instruction},
  location = {Baltimore, Maryland, USA},
  numpages = {6},
  pages = {777–782},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '18},
  title = {DIVAS: Outreach to the Natural Sciences through Image Processing},
  url = {https://doi.org/10.1145/3159450.3159537},
  year = {2018}
}

@inproceedings{merged1290,
  abstract = {Different paradigms are used to study socioeconomic dynamics of the software development process. The study seeks to examine the software development process at the project, firm national, and international level. Three paradigms are selected to pursue this examination: 1) dialectical and historical materialism; 2) computational thinking; and 3) system dynamics. This approach of employing multiple paradigms is designed to develop a comprehensive but cohesive presentation of possible software production scenarios.},
  address = {New York, NY, USA},
  author = {Trimble, John and Keeling, Harry},
  booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
  doi = {10.1145/2513456.2513500},
  isbn = {9781450321129},
  keywords = {computational thinking; information systems; materialism; software development; system dynamics},
  location = {East London, South Africa},
  numpages = {6},
  pages = {341–346},
  publisher = {Association for Computing Machinery},
  series = {SAICSIT '13},
  title = {Comparative paradigms in the examination of software production},
  url = {https://doi.org/10.1145/2513456.2513500},
  year = {2013}
}

@inproceedings{merged1291,
  abstract = {With an increase in the use of block-based programming environments in k-12 curriculum, the need for accessibility exists in order to serve all students. Accessible block-based systems are in their infancy. Such systems would provide students with visual impairments the opportunity to learn programming and take part in computational thinking activities using the same systems that are found appealing to most sighted learners. However, with the presence of these systems little is known about their long-term use in the educational milieu. As a result, we conducted a survey with twelve teachers of students with visual impairments to learn about the use of these systems in teaching their students and to understand the barriers that students face in the learning process. Our study reveals that only one block-based programming environment is common among teachers and that several challenges exist. These challenges range from limited learners’ preparedness through difficulties editing and navigating code, to ineffective system feedback.},
  address = {New York, NY, USA},
  articleno = {73},
  author = {Mountapmbeme, Aboubakar and Ludi, Stephanie},
  booktitle = {Proceedings of the 22nd International ACM SIGACCESS Conference on Computers and Accessibility},
  doi = {10.1145/3373625.3417998},
  isbn = {9781450371032},
  keywords = {Block-based programming; challenges; programming; visually impaired},
  location = {Virtual Event, Greece},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {ASSETS '20},
  title = {Investigating Challenges Faced by Learners with Visual Impairments using Block-Based Programming/Hybrid Environments},
  url = {https://doi.org/10.1145/3373625.3417998},
  year = {2020}
}

@inproceedings{merged1292,
  abstract = {We describe a new introductory CS curriculum for middle schools that focuses on teaching CS concepts using the instructions and rules for playing simple, physical games. We deliberately avoid the use of technology and, in particular, programming, and we focus on games, such as tossing a coin to see who goes first and playing Tic-Tac-Toe. We report on middle-school students' understanding of basic CS concepts and their experiences with the curriculum.After piloting the curriculum in 6th and 7th grade electives, we found that students liked the curriculum and using games, while some other students reported struggling with the technical content in the algorithm unit and vocabulary across the curriculum. Overall, students gained an understanding of abstraction and representation, and most students could define an algorithm and recognize a condition. However, they could not correctly organize the instructions of an algorithm. Our results suggest that the non-coding, game-based curriculum engaged middle school students in basic CS concepts at the middle school level, but we believe there is room for improvement in delivering technical content and vocabulary related to algorithms.},
  address = {New York, NY, USA},
  author = {Parham-Mocello, Jennifer and Erwig, Martin and Niess, Margaret and Weber, Jason and Smith, Madelyn and Berliner, Garrett},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3545945.3569883},
  isbn = {9781450394314},
  keywords = {computational thinking; cs education; games; middle school; unplugged},
  location = {Toronto ON, Canada},
  numpages = {7},
  pages = {444–450},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Putting Computing on the Table: Using Physical Games to Teach Computer Science},
  url = {https://doi.org/10.1145/3545945.3569883},
  year = {2023}
}

@inproceedings{merged1293,
  abstract = {Computational tools, and the computational thinking (CT) involved in their use, are pervasive in science, supporting and often transforming scientific understanding. Yet, longstanding disparities in access to learning opportunities means that CT's growing role risks deepening persistent inequities in STEM [2]. To address this problem, our team developed and studied two 10-lesson instructional units for middle school science classrooms, each designed to challenge persistent barriers to equitable participation in STEM. The units aim to position coding as a tool for doing science, and ultimately, encourage a broader range of students, and females in particular, to identify as programmers. Students who participated (n=391) in a recent study of the units demonstrated statistically significant learning gains, as measured on an external assessment of CT. Learning gains were particularly pronounced for female students. Findings suggest that students can develop CT through instruction that foregrounds science, and in ways that lead to more equitable outcomes.},
  address = {New York, NY, USA},
  author = {Greenwald, Eric and Krakowski, Ari},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372632},
  isbn = {9781450367936},
  keywords = {broadening participation; coding to learn; computational science},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1336},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Coding Science Internships: Broadening Participation in Computer Science by Positioning Coding as a Tool for Doing Science},
  url = {https://doi.org/10.1145/3328778.3372632},
  year = {2020}
}

@inproceedings{merged1294,
  abstract = {As education researchers, policymakers, and industry leaders recognize the importance of computing, many coding kits (toys and apps) have emerged to help young children learn to code at home. However, how parents perceive and support their children's use of the kits at home are less understood. In this study, we performed semi-structured interviews with eighteen parents who obtained coding kits for their young children for home use. The results show parents expected their kids to have fun and meaningful interactions with the kits. In supporting the play, parents took on various roles, mostly acting as spectator, scaffolder, and teacher. While parents perceived benefits of coding kits like a changed perspective on coding, they also reported concerns, such as their limited programming knowledge to provide help. Finally, we reflect on design and research implications to develop coding kits that consider parents' perspectives and important roles in supporting young children's exploration with computational thinking.},
  address = {New York, NY, USA},
  author = {Yu, Junnan and Bai, Chenke and Roque, Ricarose},
  booktitle = {Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3313831.3376130},
  isbn = {9781450367080},
  keywords = {coding toys and kits; educational technology; informal learning; parent roles; parents' perspectives; young children},
  location = {Honolulu, HI, USA},
  numpages = {14},
  pages = {1–14},
  publisher = {Association for Computing Machinery},
  series = {CHI '20},
  title = {Considering Parents in Coding Kit Design: Understanding Parents' Perspectives and Roles},
  url = {https://doi.org/10.1145/3313831.3376130},
  year = {2020}
}

@inproceedings{merged1295,
  abstract = {Parallel and distributed computing (PDC) has become pervasive in all aspects of computing, so it is essential that students include parallelism and distribution in the computational thinking that they apply to problem solving, from the beginning of their computing education. With all computing devices that students use having multiple cores as well as a GPU in many cases, many students' favorite applications use multiple cores and/or distributed processors. However, we are still teaching them to solve problems using only sequential thinking. Why?This hands-on tutorial will demonstrate how easy it is to open students' eyes to exploiting concurrency in problem solving. You will participate in plugged and unplugged activities that will help students to recognize examples of PDC concepts and concurrency in the world around them. We introduce plugged and unplugged curriculum modules that have been successfully integrated in existing computing classes at multiple institutions. We will also discuss recent efforts at integrating AI methods, including LLMs, into introductory classes.A laptop capable of running a C/C++ compiler, a Java virtual environment, and a Python interpreter is needed to fully participate in activities. However, attendees may learn the core concepts without a laptop. The activities and curriculum modules have been used successfully to teach PDC concepts in early computing courses and will be available after the workshop. Participants will receive a stipend of 400 to defray their cost of registration and one-night hotel stay. The CDER center will also have a booth in the exhibition hall for additional support.},
  address = {New York, NY, USA},
  author = {Sussman, Alan and Prasad, Sushil and Bunde, David P. and Spacco, Jaime and Gannod, Gerald and Crockett, April Renee and Vaidyanathan, Ramachandran},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3704769},
  isbn = {9798400705328},
  keywords = {acm/ieee-cs/aaai computer science curricula; ai; computing education; cs1/ cs2; early computing class; hpc education; pdc education; undergraduate instruction},
  location = {Pittsburgh, PA, USA},
  numpages = {1},
  pages = {1775},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Modernizing the CS Introductory Sequence with Parallel and Distributed Computing (and some AI)},
  url = {https://doi.org/10.1145/3641555.3704769},
  year = {2025}
}

@inproceedings{merged1296,
  abstract = {SciGirls Code is a project which used the principles of connected learning with 16 STEM outreach partners to provide 160+ middle school girls with computational thinking (CT) and coding skills within informal education spaces. Programs completed 3 curricular strands (Mobile Apps, Robotics, E-Textiles) between September 2017-May 2018. SciGirls Code integrates a computational participation framework with connected learning. The research study investigates the ways in which computational learning experiences impact girls' development of CT; interest and attitudes toward computer science; and their understanding of how participation in technology creation impacts themselves and the world around them. This study utilizes an interpretive multi-site case study design. There are multiple data sources with different data collected at focal and participating sites. The seven (7) focal cases represent an array of settings (rural, suburban, urban) as well as a variety of programming contexts (museums, community centers, after school). The remaining nine (9) sites comprise the participating cases. Notably, interviews (in-person) from focal sites and shorts (videos) from participating sites were collected at three moments in the programming (beginning, middle, end) to document changes in understandings and skills. Content analysis was conducted, and further triangulated in teams, to develop themes for each case and cross-case comparison. Thus far, the study has found that a connected learning approach boosted the development of middle school girls' CT skills, positively impacted attitudes towards computing pathways/careers, and increased understandings of computational participation.},
  address = {New York, NY, USA},
  author = {Scharber, Cassandra and Chang, Yu-Hui and Barksdale, Sarah and Peterson, Lana and Constantine, Angelina and Sivaraj, Ramya and Englund, Jennifer},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3293800},
  isbn = {9781450358903},
  keywords = {case studies; computational participation; computational thinking; connected learning; gender},
  location = {Minneapolis, MN, USA},
  numpages = {1},
  pages = {1273},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {SciGirls Code: Computational Participation for Middle School Girls},
  url = {https://doi.org/10.1145/3287324.3293800},
  year = {2019}
}

@inproceedings{merged1297,
  abstract = {Given a growing concern about the lack of ethical consideration in the Artificial Intelligence (AI) field, many have begun to question how dominant approaches to the disciplinary education of computer science (CS)---and its implications for AI---has led to the current "ethics crisis". However, we claim that the current AI ethics education space relies on a form of "exclusionary pedagogy," where ethics is distilled for computational approaches, but there is no deeper epistemological engagement with other ways of knowing that would benefit ethical thinking or an acknowledgement of the limitations of uni-vocal computational thinking. This results in indifference, devaluation, and a lack of mutual support between CS and humanistic social science (HSS), elevating the myth of technologists as "ethical unicorns" that can do it all, though their disciplinary tools are ultimately limited. Through an analysis of computer science education literature and a review of college-level course syllabi in AI ethics, we discuss the limitations of the epistemological assumptions and hierarchies of knowledge which dictate current attempts at including ethics education in CS training and explore evidence for the practical mechanisms through which this exclusion occurs. We then propose a shift towards a substantively collaborative, holistic, and ethically generative pedagogy in AI education.},
  address = {New York, NY, USA},
  author = {Raji, Inioluwa Deborah and Scheuerman, Morgan Klaus and Amironesei, Razvan},
  booktitle = {Proceedings of the 2021 ACM Conference on Fairness, Accountability, and Transparency},
  doi = {10.1145/3442188.3445914},
  isbn = {9781450383097},
  location = {Virtual Event, Canada},
  numpages = {11},
  pages = {515–525},
  publisher = {Association for Computing Machinery},
  series = {FAccT '21},
  title = {You Can't Sit With Us: Exclusionary Pedagogy in AI Ethics Education},
  url = {https://doi.org/10.1145/3442188.3445914},
  year = {2021}
}

@inproceedings{merged1298,
  abstract = {The teaching of introductory computer science can benefit from the use of real-world context to ground the abstract programming concepts. We present the domain of pencil puzzles as a context for a variety of introductory CS topics. Pencil puzzles are puzzles typically found in newspapers and magazines, intended to be solved by the reader through the means of deduction, using only a pencil. A well-known example of a pencil puzzle is Sudoku, which has been widely used as a typical backtracking assignment. However, there are dozens of other well-tried and liked pencil puzzles available that naturally induce computational thinking and can be used as context for many CS topics such as arrays, loops, recursion, GUIs, inheritance and graph traversal. Our contributions in this paper are two-fold. First, we present a few pencil puzzles and map them to introductory CS concepts that the puzzles can target in an assignment, and point the reader to other puzzle repositories which provide the potential to lead to an almost limitless set of introductory CS assignments. Second, we have formally evaluated the effectiveness of such assignments used at our institution over the past three years. Students reported that they have learned the material, believe they can tackle similar problems, and have improved their coding skills. The assignments also led to a significantly higher proportion of unsolicited statements of enjoyment, as well as metacognition, when compared to a traditional assignment for the same topic. Lastly, for all but one assignment, the student's gender or prior programming experience was independent of their grade, their perceptions of and reflection on the assignment.},
  address = {New York, NY, USA},
  author = {Butler, Zack and Bezakova, Ivona and Fluet, Kimberly},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  doi = {10.1145/3017680.3017765},
  isbn = {9781450346986},
  keywords = {computational thinking; introductory cs concepts; learning in context; pencil puzzles},
  location = {Seattle, Washington, USA},
  numpages = {6},
  pages = {93–98},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '17},
  title = {Pencil Puzzles for Introductory Computer Science: an Experience- and Gender-Neutral Context},
  url = {https://doi.org/10.1145/3017680.3017765},
  year = {2017}
}

@inproceedings{merged1299,
  abstract = {We suggest transformative agency is brought to the forefront of Participatory Design (PD) in Child-Computer Interaction (CCI) research to scaffold children's active engagement in matters related to digital technology and its effects on society. Based on Cultural-Historical Activity Theory we define children's transformative agency as their ability to actively change their own matters, their shared matters, or even societal matters for the better and more just society. We report on a framework for analyzing PD research with children and demonstrate how PD can support transformative agency of children through vignettes from two PD projects with children. Based on the vignettes, we provide a set of additional PD aims to consider when integrating the scaffolding of transformative agency explicitly in PD with children. A focus on children's transformative agency will contribute significantly to the maturing field of Computational Empowerment in CCI as an extension of the current PD work with children.},
  address = {New York, NY, USA},
  author = {Iivari, Netta and Iversen, Ole Sejer and Smith, Rachel Charlotte and Schaper, Marie-Monique and Vent\"{a}-Olkkonen, Leena and Hartikainen, Heidi and Sharma, Sumita and Kinnula, Marianne and Lehto, Essi and Holappa, Jenni and Molin-Juustila, Tonja},
  booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3628516.3655806},
  isbn = {9798400704420},
  keywords = {Children; Computational empowerment; Cultural-Historical Activity Theory; Design protagonist; Participatory design; Transformative agency},
  location = {Delft, Netherlands},
  numpages = {16},
  pages = {322–337},
  publisher = {Association for Computing Machinery},
  series = {IDC '24},
  title = {Transformative agency – the next step towards children's computational empowerment},
  url = {https://doi.org/10.1145/3628516.3655806},
  year = {2024}
}

@inproceedings{merged1300,
  abstract = {During the UnboxingCT project summer professional development, the Integrated CT Assessment was piloted with 72 elementary teachers. The assessment is based on computational thinking integration literature and asks teachers to identify different computational thinking concepts in content area scenarios. The assessment allowed us to identify which computational thinking concepts teachers were most familiar with prior to the professional development and assess changes in their understanding following the professional development. Our next step will be validation of the assessment with a larger group of teachers.},
  address = {New York, NY, USA},
  author = {Joshi, Deepti and Joswick, Candace and Albert, Jennifer and Jocius, Robin and Blanton, Melanie and Petrulis, Robert and Dawson, Trent},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705131},
  isbn = {9798400705328},
  keywords = {assessment; computational thinking; integrated assessment; teacher assessment; teacher professional development},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1501–1502},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Assessing Elementary Teachers' Knowledge of Integrated Computational Thinking},
  url = {https://doi.org/10.1145/3641555.3705131},
  year = {2025}
}

@inproceedings{merged1301,
  abstract = {Introductory computer science courses (CS1) often place significant importance on teaching the syntax of a specific programming language, potentially overshadowing the development of crucial computational thinking skills. This paper presents a novel pedagogy designed to enhance computational thinking by simultaneously introducing students to multiple programming languages and embedding game development throughout the curriculum. Our approach aims to reduce language dependency, promote abstract reasoning, and increase student engagement through practical, real-world examples. We conducted a quasi-experimental study over multiple semesters, comparing a trial group (using the new pedagogy) with a control group (using a traditional, single-language approach). This paper analyzes the impact of our new pedagogy on student attitudes, perceptions, and exam performance. The findings indicate that the multilingual, game-based approach not only improves students' interest and motivation but also enhances their computational thinking abilities, particularly in areas such as code comprehension, problem-solving, and applying concepts across different programming languages. As such, this study offers valuable insights and practical recommendations for educators seeking to foster deeper learning and engagement in introductory programming courses.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum and Tapia, Jonathan},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729066},
  isbn = {9798400715679},
  keywords = {computational thinking; cs1; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {424–430},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in CS1 through Multilingual Game Development},
  url = {https://doi.org/10.1145/3724363.3729066},
  year = {2025}
}

@inproceedings{merged1302,
  abstract = {In this theoretical paper, we compare computational thinking and self-regulated learning. Many studies use self-regulated learning to foster the acquisition of computational thinking competencies. Self-regulated learning skills are themselves beneficial for any learning process; here, we argue that the relationship between self-regulated learning and computational thinking is closer than the simple observation that self-regulated learning strategies support the acquisition of computational thinking competencies. We sustain that self-regulated learning and computational thinking competencies share many features (and have some differences), which would support synergistic effects so that not only can self-regulated learning be used to attain computational thinking competencies, but computational thinking activities can also be used to foster features of self-regulated learning competencies.},
  address = {New York, NY, USA},
  author = {Pasterk, Stefan and Benke, Gertraud},
  booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3649217.3653565},
  isbn = {9798400706004},
  keywords = {computational thinking; secondary school; self-regulated learning},
  location = {Milan, Italy},
  numpages = {6},
  pages = {640–645},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2024},
  title = {Computational Thinking for Self-Regulated Learning},
  url = {https://doi.org/10.1145/3649217.3653565},
  year = {2024}
}

@inproceedings{merged1303,
  abstract = {Introductory programming courses (CS0) are crucial for laying the foundation in computer science education, yet traditional approaches often emphasize language-specific syntax over abstract computational thinking. This paper introduces a novel pedagogy that teaches multiple programming languages (from high-level to low-level) simultaneously, using game development as a central context to foster computational thinking and reduce language dependency. Over five semesters, we implemented this pedagogy in multiple CS0 sections, comparing its effectiveness to a traditional, single-language approach. This paper presents a comparative analysis between a trial group, engaged in our innovative approach, and a control group, exposed to conventional teaching methods. Our results, drawn from survey responses and exam data, suggest that our pedagogy significantly enhances students' interest, engagement, and proficiency in problem-solving, particularly for female students.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and El Ariss, Omar and Hu, Kaoning and Kwon, Kibum},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729087},
  isbn = {9798400715679},
  keywords = {computational thinking; game programming; multiple programming languages; programming courses},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {660–666},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Multilingual Game Programming to Enhance Computational Thinking in CS0},
  url = {https://doi.org/10.1145/3724363.3729087},
  year = {2025}
}

@inproceedings{merged1304,
  abstract = {In today's society, computational thinking has become one of the important methods for people to understand and solve problems. Against the backdrop of rapid development and widespread application of artificial intelligence technology, computational thinking has become an essential literacy for everyone in the era of intelligence. Therefore, how to cultivate students' computational thinking has become an important issue. This article takes computational thinking and computer science courses as the carrier to carry out ability cultivation and quality education, thereby enhancing innovative thinking ability. It analyzes the basic teaching content of artificial intelligence and the relationship between computational thinking ability, and then provides methods for cultivating computational thinking ability under the background of artificial intelligence teaching, and summarizes them.},
  address = {New York, NY, USA},
  author = {Li, Ruizhu},
  booktitle = {Proceedings of the 2025 International Conference on Artificial Intelligence and Educational Systems},
  doi = {10.1145/3744367.3744424},
  isbn = {9798400715068},
  keywords = {Artificial intelligence; Computational thinking; Cultivation of thinking; Innovative thinking},
  numpages = {6},
  pages = {359–364},
  publisher = {Association for Computing Machinery},
  series = {ICAIES '25},
  title = {Cultivation of Computational Thinking in the Context of AI General Education},
  url = {https://doi.org/10.1145/3744367.3744424},
  year = {2025}
}

@inproceedings{merged1305,
  abstract = {My area of research broadly focuses on the role that computational thinking and creative technologies play in early childhood education. I am specifically interested in the ways that these are used in mixed-ability classrooms in Puerto Rico. My research aims to result in the development of a series of best practices to support computational thinking and creative technologies in early childhood classrooms. These practices will ideally promote unplugged, culturally responsive activities co-designed with early childhood educators, which can be integrated into mixed-ability classrooms. In this paper, I discuss the study that I am currently undertaking, and plans for further studies.},
  address = {New York, NY, USA},
  author = {L\'{o}pez-Delgado, Mar\'{\i}a},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734747},
  isbn = {9798400706264},
  keywords = {accessible computing education; computational thinking; creative technology; early childhood education; inclusive computing education; maker education; makerspaces; preschool},
  location = {Newark, NJ, USA},
  numpages = {1},
  pages = {382},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Computational Thinking and Creative Technologies in Early Childhood Education in Puerto Rico},
  url = {https://doi.org/10.1145/3704637.3734747},
  year = {2025}
}

@article{merged1306,
  abstract = {Computational thinking (CT) is a critical set of 21st century skills that young learners must develop to be successful in contemporary work and life. As more K-12 schools begin to integrate CT into the curriculum, elementary preservice teachers (EPSTs) must be prepared to teach CT to their future students. Therefore, elementary teacher preparation programs should explore ways to incorporate CT into their coursework, ensuring that EPSTs graduate with the necessary knowledge and skills to teach CT. This study investigates the impacts of a three-week CT module implemented in a technology integration course in an elementary teacher preparation program on EPSTs’ CT value beliefs, self-efficacy, and teaching efficacy. The purpose of the module was to introduce EPSTs to basic concepts and big ideas in CT, support their application of CT in block-based coding environments, and promote connection building between CT and authentic real-world scenarios that balance different types of CT activities. Guided by the Interconnected Model of Professional Growth (IMPG), this study examined EPSTs’ learning as a dynamic process of change across the personal and external domains. The module was located in the external domain as a stimulus for learning, while the Teacher Beliefs about Coding and Computational Thinking (TBaCCT) instrument was used to assess changes in value beliefs, self-efficacy, and teaching efficacy within the personal domain. A convergent parallel mixed-methods design was used to analyze pre- and post-surveys administered to 50 EPSTs and semi-structured interviews with four of the EPSTs. The results showed that the beliefs of the CT value of EPSTs evolved and their self-efficacy and teaching efficacy of CT significantly improved after participating in the module, suggesting that the interaction between external learning experiences and internal belief systems - facilitated by reflection and action - contributed to early professional growth. Notably, EPSTs also developed a more accurate understanding of CT, recognized the benefits of both plugged and unplugged CT activities, and expressed a desire for continued CT learning and professional development. Although EPSTs expressed concerns with the scarcity of physical computing toys in schools, they demonstrated a commitment to incorporating CT activities into their teaching and exploring alternative funding avenues to acquire such resources. Practical implications include potential approaches for elementary teacher preparation programs to embed CT into existing curricula.},
  address = {New York, NY, USA},
  author = {Ramirez-Salgado, Andrea and Wusylko, Christine and Weisberg, Lauren R. and Delgado, Johnny and Israel, Maya},
  doi = {10.1145/3744751},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; Elementary education; Preservice teachers; Self-efficacy; Teaching beliefs},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Preparing elementary preservice teachers to integrate computational thinking in the curriculum},
  url = {https://doi.org/10.1145/3744751},
  year = {2025}
}

@inproceedings{merged1307,
  abstract = {A key challenge that is recognized globally in computing education is how to provide access to computer science (CS) and computational thinking (CT) education for all students. Despite the importance of CS/CT education, access to high-quality CS/CT education is often not equally distributed due to a number of factors. A promising approach to reaching all students, is to integrate CS/CT on a schoolwide basis across multiple subject areas and grade levels [1, 2, 3]. Achieving schoolwide integration requires an aligned effort and educators often are not provided with guidance about how to make this systemic change. To address this, researchers developed the CT Integration Framework (The Framework), a self-assessment and planning tool that helps educators identify the core elements that drive CT integration, determine their school's readiness, and set and monitor progress toward their goals. In this poster, we will present research on three case models highlighting The Framework and how it was used in guiding the implementation efforts for schools located in rural and urban districts in the United States of America. This poster will describe: 1. The methods and participant sample; 2. The Framework and how it was implemented; 3. the similarities and differences in the experiences of schools in different case models; and 4. the implications of our findings and recommendations for how schools can use The Framework for supporting integration efforts in the future.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Moeller, Babette and Fancsali, Cheri},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730779},
  isbn = {9798400715693},
  keywords = {case study; computational thinking; schoolwide integration},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {781},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Bringing Computational Thinking Schoolwide: A Framework for Supporting Cross-Curricular Integration},
  url = {https://doi.org/10.1145/3724389.3730779},
  year = {2025}
}

@inproceedings{merged1308,
  abstract = {There is a growing body of literature on the relationship between spatial skills and computing success and evidence that developing spatial skills can improve computing outcomes, but almost all of this research has been conducted in higher education. To explore the link between spatial and computing skills in young people, we present the results of a spatial skills intervention deployed in maths lessons for 7--8-year-olds. Compared to a control group, pupils who received spatial instruction improved significantly more in tests of computational thinking despite not receiving deliberate computing instruction. We also explore some demographic factors relating to spatial skills and CT scores, finding previously observed demographic distinctions replicated in this population.},
  address = {New York, NY, USA},
  author = {Parkinson, Jack and Cutts, Quintin},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729075},
  isbn = {9798400715679},
  keywords = {computational thinking; intervention; k-12; primary school; spatial cognition; spatial reasoning; spatial skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {646–652},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Improving Primary School Pupils' Spatial Skills Leads to Computational Thinking Gains},
  url = {https://doi.org/10.1145/3724363.3729075},
  year = {2025}
}

@inproceedings{merged1309,
  abstract = {CSforALL is an umbrella term for a movement that seeks to bring engaging, culturally-relevant, and meaningful computer science to all students. It includes many avenues for learning – after-school outreach activities, once-a-year ''Hour of Code'' activities as well as formalized instruction in classes, led by an inspiring and well-prepared teacher. There is a perennial need to support pre-service and in-service teachers with curricula and pedagogical content knowledge (PCK) so they can be successful in the classroom, but where to start?Jeannette Wing has long evangelized computational thinking (CT) as a skill ''for everyone, everywhere. Computational thinking will be a reality when it is so integral to human endeavors it disappears as an explicit philosophy''. [2] We have found that CT offers a remarkable foundation of engagement, intuition, and grounding upon which to build higher-level computer science fluency. This panel brings together four seasoned experts who have collectively provided computer science and CT professional development to a vast multitude of teachers and students to share their best practices.},
  address = {New York, NY, USA},
  author = {Garcia, Dan and Garcha, Sonia and Mukund, Madhavan and Shah, Vipul},
  booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
  doi = {10.1145/3617650.3624926},
  isbn = {9798400703744},
  keywords = {CSforALL; K-12 professional development; computational thinking},
  location = {Hyderabad, India},
  numpages = {2},
  pages = {183–184},
  publisher = {Association for Computing Machinery},
  series = {CompEd 2023},
  title = {Best Practices for Developing Computational Thinking},
  url = {https://doi.org/10.1145/3617650.3624926},
  year = {2023}
}

@inproceedings{merged1310,
  abstract = {In Computer Science Education, coding activities are extremely important to teach younger students the basics of programming and computational thinking. To provide an immersive experience, in this paper, we propose VRCoding, a Virtual Reality (VR)-based block coding system. VRCoding can teach computational thinking in an immersive Virtual Reality environment, exploiting passive haptics to improve interaction and give tactile feedback to the users. Passive haptics is obtained using simple physics placeholders, i.e., textured parallelepipeds, that are tracked in real-time, and aligned with the coding blocks in VR.   The system is tested on a group of secondary school users, performing simple coding exercises with a standard monitor-based block coding environment and with the proposed VRCoding block language. Results show positive feedback concerning the sense of presence and the user experience.},
  address = {New York, NY, USA},
  author = {Gerini, Lorenzo and Delzanno, Giorgio and Guerrini, Giovanna and Solari, Fabio and Chessa, Manuela},
  booktitle = {Proceedings of the 2nd International Workshop on Gamification in Software Development, Verification, and Validation},
  doi = {10.1145/3617553.3617886},
  isbn = {9798400703737},
  keywords = {coding; computational thinking; extended reality; gamification; passive haptics; virtual reality},
  location = {San Francisco, CA, USA},
  numpages = {9},
  pages = {13–21},
  publisher = {Association for Computing Machinery},
  series = {Gamify 2023},
  title = {Gamified Virtual Reality for Computational Thinking},
  url = {https://doi.org/10.1145/3617553.3617886},
  year = {2023}
}

@inproceedings{merged1311,
  abstract = {Computational thinking (CT) skills are essential for navigating daily life, but how best to teach these skills is still being explored. Educational programming games can provide engaging environments to develop CT, yet uncovering student struggles during gameplay remains challenging. This study analyzed 15 undergraduates with varying programming experience playing the CT game, Fox and Field, utilizing gameplay videos, heart rate data, and surveys. Results revealed common struggle points in understanding the character's perspective, degree angles, and debugging, with notable differences between novice and experienced players. Findings suggest support targeting abstraction, pattern recognition, and debugging skills to improve future game design and scaffolding.},
  address = {New York, NY, USA},
  author = {Veng, Sotheara and Zhang, Yifan and Bergwall, Ekaterina and Rutherford, Teomara},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705127},
  isbn = {9798400705328},
  keywords = {computational thinking; educational programming game},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1649–1650},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Analyzing Computational Thinking Gameplay: Identifying Struggles and the Role of Experience},
  url = {https://doi.org/10.1145/3641555.3705127},
  year = {2025}
}

@inproceedings{merged1312,
  abstract = {This study examines barriers to inclusion for multilingual students in computer science, highlighting the role of Universal Design for Learning (UDL) strategies in an elementary computational thinking (CT) curriculum. Data from five classrooms including observations, field notes, pre-and-post-CT tests, and student artifacts were analyzed. Findings show that teachers employed various UDL strategies to teach CT, with their frequency positively correlated with higher CT scores. Additionally, this research extends existing UDL frameworks by integrating empirically observed strategies tailored for multilingual students. Ultimately, this study offers a universe of pedagogical strategies, rooted in UDL, aimed at enhancing multilingual student participation in computer science.},
  address = {New York, NY, USA},
  author = {Jacob, Sharin and Montoya, Jonathan and Prado, Yenda and Coenraad, Merijke and Burke, William and Warschauer, Mark},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734766},
  isbn = {9798400706264},
  keywords = {access; computational thinking; computer science; english learner; multilingual; universal design for learning},
  location = {Newark, NJ, USA},
  numpages = {8},
  pages = {309–316},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Designing for All: Universal Design for Learning Meets Computational Thinking for Multilingual Students},
  url = {https://doi.org/10.1145/3704637.3734766},
  year = {2025}
}

@inproceedings{merged1313,
  abstract = {In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty.},
  address = {New York, NY, USA},
  articleno = {53},
  author = {Bellino, Alessio},
  booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
  doi = {10.1145/3605390.3610815},
  isbn = {9798400708060},
  keywords = {computational thinking; learning activities; learning platform},
  location = {Torino, Italy},
  numpages = {3},
  publisher = {Association for Computing Machinery},
  series = {CHItaly '23},
  title = {Demo: Teaching computational thinking with Protobject},
  url = {https://doi.org/10.1145/3605390.3610815},
  year = {2023}
}

@inproceedings{merged1314,
  abstract = {Computer Programming (CP) is difficult to teach and learn. Many students who enroll in CP courses have difficulty learning to program, as they have deficits in problem-solving skills and are unable to understand abstract programming concepts. Some studies also state that teaching methods are often not the most appropriate as they are not personalized to each student’s needs and do not complement their learning styles. We believe that Computational Thinking (CT) can help alleviate the difficulties in learning to program, especially if it is developed from an early age. However, it is also crucial that teachers use effective methods to help their students develop CT skills. There are several Learning Resources (LR) (digital or paper format) to develop CT skills, however, we argue that Neuroeducation can contribute to improving the effectiveness of these LR in the teaching and learning process. The evidence about the brain’s learning process can be transformed into principles applicable in Education (Neuroeducation). To understand how we could train CT at various levels of education we built an ontology, OntoCnE, that describes the CT and CP domains. OntoCnE is composed of 3 layers that define: how to develop CT; which concepts should be taught at each level of education; and appropriate training materials. This paper aims to present a CT development approach based on this ontology together with Neuroeducation guidelines. The result of our research is the fourth layer for OntoCnE, which defines the Neuroeducation guidelines to characterize the materials. To illustrate our proposal, we will use LR PathIt as a case study. This approach can contribute to innovative and more efficient training of CT.},
  address = {New York, NY, USA},
  author = {Ara\'{u}jo, Cristiana and Henriques, Pedro Rangel and Cerqueira, Jo\~{a}o Jos\'{e}},
  booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
  doi = {10.1145/3702163.3702452},
  isbn = {9798400717819},
  keywords = {Computational Thinking; Computer Programming; Learning Resources; Neuroeducation; OntoCnE; Ontology},
  numpages = {7},
  pages = {435–441},
  publisher = {Association for Computing Machinery},
  series = {ICETC '24},
  title = {OntoCnE \&amp; Neuroeducation Guidelines: An approach to developing Computational Thinking},
  url = {https://doi.org/10.1145/3702163.3702452},
  year = {2025}
}

@inproceedings{merged1315,
  abstract = {Computational thinking (CT) skills allow us to achieve goals in a computation-driven world. Activities such as programming both benefit from and help improve CT skills, like abstraction and decomposition. Generative AI (GenAI) could be useful in developing CT skills. However, it could also change how we learn to program and which skills are more important. We aim to understand how GenAI can support the learning of CT skills in the context of computing education.},
  address = {New York, NY, USA},
  author = {Benedetti, Enrico},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3731294},
  isbn = {9798400715693},
  keywords = {bebras tasks; computational thinking; computing education; generative ai; problem-solving},
  location = {Nijmegen, Netherlands},
  numpages = {2},
  pages = {806–807},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Supporting Teaching and Learning Computational Thinking Skills with Generative AI in Computing Education},
  url = {https://doi.org/10.1145/3724389.3731294},
  year = {2025}
}

@inproceedings{merged1316,
  abstract = {In this poster, we highlight computational thinking resources for schools from the PACT team at Maynooth University, Ireland. The resources are derived from tasks from the Bebras international computational thinking initiative. The different modalities work together throughout the school year to provide initial exposure to computational thinking, and include an obstacle course, seasonal tasks, and a workbook.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594203},
  isbn = {9798400701399},
  keywords = {Bebras tasks; K-12; computational thinking; unplugged},
  location = {Turku, Finland},
  numpages = {1},
  pages = {663},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Computational Thinking Resources Inspired by Bebras},
  url = {https://doi.org/10.1145/3587103.3594203},
  year = {2023}
}

@inproceedings{merged1317,
  abstract = {Computational Thinking (CT) is a key skill set for students in higher education to thrive and adapt to an increasingly technology-driven future and workplace. While research on CT education has gained remarkable momentum in K-12 over the past decade, it has remained under-explored in higher education, leaving higher education teachers with an insufficient overview, knowledge, and support regarding CT education. The proliferation and adoption of artificial intelligence (AI) by educational institutions have demonstrated promising potential to support instructional activities across many disciplines, including CT education. However, a comprehensive overview outlining the various aspects of integrating AI in CT education in higher education is lacking.To mitigate this gap, we conducted this systematic literature review study. The focus of our study is to identify initiatives applying AI in CT education within higher education and to explore various educational aspects of these initiatives, including the benefits and challenges of AI in CT education, instructional strategies employed, CT components covered, and AI techniques and models utilized.This study provides practical and scientific contributions to the CT education community, including an inventory of AI-based initiatives for CT education useful to educators, an overview of various aspects of integrating AI into CT education-such as its benefits and challenges (e.g., AI's potential to reshape CT education versus its potential to diminish students' creativity)-and insights into new and expanded perspectives on CT in light of AI (e.g., the 'decoding' approach alongside the 'coding' approach to CT).},
  address = {New York, NY, USA},
  author = {Rahimi, Ebrahim and Maathuis, Clara},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730775},
  isbn = {9798400715693},
  keywords = {ai; artificial intelligence; computational thinking; ct; higher education; systematic literature review},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {777},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {AI in Computational Thinking Education in Higher Education: A Systematic Literature Review},
  url = {https://doi.org/10.1145/3724389.3730775},
  year = {2025}
}

@inproceedings{merged1318,
  abstract = {This study aims to investigate current trends and key elements of computational thinking in problem-solving within mathematics education. A systematic literature review was conducted using the 2013-2013 Scopus database, focusing on the keyword "computational thinking in mathematics education" for document collection. Data analysis was visualized using R-studio software. The thematic analysis revealed two major fields that extensively research computational thinking: education and engineering. Additionally, six research themes emerged from the analysis, including Mathematics, Computer Science, programming, STEM, robotics, and engineering. Key aspects for identifying computational thinking in solving mathematical problems encompass problem identification, decomposition, pattern recognition, abstraction, algorithms, and debugging.},
  address = {New York, NY, USA},
  author = {Susanti, Reni Dwi and Lukito, Agung and Ekawati, Rooselyna},
  booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3678726.3678748},
  isbn = {9798400717611},
  keywords = {aspect; computational thinking; mathematics problem-solving; trend},
  location = {Tokyo, Japan},
  numpages = {7},
  pages = {269–275},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '24},
  title = {Computational Thinking on Mathematical Problem-Solving: Bibliometric Theme and Aspect},
  url = {https://doi.org/10.1145/3678726.3678748},
  year = {2024}
}

@inproceedings{merged1319,
  abstract = {Older adults are underrepresented in computing education; broadening participation in computing has remained predominantly at K-12 and college settings. Yet, the population of older adults is increasing across many regions. Strategies for broadening participation in computing education for adult learners have been under-explored. This poster reports our effort towards broadening participation in computing for adult learners by exploring how computational thinking problem-oriented unplugged activities might help to gently introduce older adults into computing education. Being an exploratory study, data was collected using a mixed method approach. This report presents preliminary findings that suggest the potential benefits of computing education for older adults, including social collaboration and demonstration of computational thinking practices that could help them to remain active while aging. Moreover, future research direction in this regard is also discussed.},
  address = {New York, NY, USA},
  author = {Agbo, Friday Joseph and Everetts, Connor},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691084},
  isbn = {9798400706042},
  keywords = {adults education; broadening participation; computational thinking; computing education; lifelong learning},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {295–296},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Towards Computing Education for Lifelong Learners: Exploring Computational Thinking Unplugged Approaches},
  url = {https://doi.org/10.1145/3649409.3691084},
  year = {2024}
}

@inproceedings{merged1320,
  abstract = {Mathematics and computer science education have an intertwined history as proof undergirds both disciplines. This initial instrumental case study follows 16 different computational science students through a series of 8 linear algebra modules. Thematic analysis was used to highlight that when students learn mathematics through computation, opportunities for conjecture can be fostered alongside computational thinking.},
  address = {New York, NY, USA},
  author = {Castle, Sarah D.},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635561},
  isbn = {9798400704246},
  keywords = {computational mathematics; computational thinking; conjecture; proof},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1594–1595},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Embracing Mathematical Conjecture Through Coding and Computational Thinking},
  url = {https://doi.org/10.1145/3626253.3635561},
  year = {2024}
}

@article{merged1321,
  abstract = {In recent years, the intersection of music and coding has emerged as a cross-disciplinary approach to engage learners in both musical and computational expression. This article examines the motivations and framing of recent music and coding research through an analysis of 65 articles published between 2004 and 2024. We survey the key findings of this body of work, exploring the extent to which they generalize across diverse populations and educational contexts. We situate these findings within the broader aims of the field of computer science education, critiquing the use of music as a motivational tool in computing education rather than as a topic worthy of exploration in its own right. Methodological limitations are identified, with recommendations for future research to address these gaps. Drawing on theories of onto-epistemic heterogeneity, we call for a more inclusive approach to computing education that integrates sociocultural, historical, and critical perspectives to more effectively support learners from diverse linguistic, cultural, and economic backgrounds.},
  address = {New York, NY, USA},
  author = {Roberts, Cameron L. and Horn, Michael S.},
  doi = {10.1145/3749995},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {STEAM education; computer science education; creativity; music composition},
  month = {July},
  note = {Just Accepted},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Epistemic Heterogeneity: A Critical Review of Music+Coding},
  url = {https://doi.org/10.1145/3749995},
  year = {2025}
}

@article{merged1322,
  abstract = {This experience report describes the author's use of the classic man-cabbage-goat-wolf (MCGW) riddle to teach the main elements of computational thinking in CS1. Instead of teaching each computational thinking element individually, in the process of solving the MCGW problem the students are able to understand the process of abstracting a problem to a representation that can be understood by computer, finding a suitable algorithm to solve the abstracted problem, and decomposing the problem into different logical and more manageable parts. The survey responses from two recent classes clearly validate the effectiveness of this problem-driven approach even for a large class of very diverse backgrounds.},
  address = {Evansville, IN, USA},
  author = {Chang, Rocky K. C.},
  issn = {1937-4771},
  issue_date = {September 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {September},
  number = {4},
  numpages = {10},
  pages = {140–149},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Using Problem-Driven Learning to Teach Computational Thinking in CS1},
  volume = {40},
  year = {2024}
}

@inproceedings{merged1323,
  abstract = {This paper presents an operational skills framework specifically designed for high school computer science teachers. This highly detailed framework enables the differentiation of students' abilities in two key areas: computational thinking skills and Python programming concepts. It is structured along two dimensions: first, six core skills - evaluation, modeling, anticipation, decomposition, generalization, and abstraction - and second, programming concepts related to data and control structures, as utilized in a programming language like Python. We describe the abilities at the intersection of each of these skills and provide for each ability a task model and a set of associated elementary tasks. We demonstrate various applications of this framework for teachers, including articulating learning objectives, selecting and categorizing tasks for students, and evaluating their skills. Finally, we discuss ongoing development efforts and the potential for international adaptation of the framework.},
  address = {New York, NY, USA},
  author = {Hoarau, S\'{e}bastien and Declercq, Christophe and Chane-Lune, Sophie},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729025},
  isbn = {9798400715679},
  keywords = {computational thinking; python; skills},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {417–423},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {A Proposal for a Programming Skills Framework Integrating Computational Thinking and Python Programming Concepts},
  url = {https://doi.org/10.1145/3724363.3729025},
  year = {2025}
}

@inproceedings{merged1324,
  abstract = {Teacher education programs face the challenge of integrating multiple standards into their licensure courses with limited instructional time. To address this, we need innovative approaches to effectively integrate topics like computational thinking (CT) and Artificial Intelligence (AI) literacy, which are increasingly included in teacher standards. We developed a core educational technology course for teachers from diverse fields-deaf education, math, music, early childhood, and more-to introduce these concepts. Using ''scaffolded critique rubrics,'' teachers evaluated tools and resources from platforms like Code.org or PBS Kids, assessing their suitability for their students. The rubrics helped teachers critique computing tools for accessibility issues, differentiate AI biases from automation ethics, and engage deeply with CT concepts. By connecting these topics to their student needs, teachers reflected on how to adapt resources for their classrooms. This report outlines the course development and its impact on teacher engagement},
  address = {New York, NY, USA},
  author = {Moudgalya, Sukanya Kannan and Allen, Taylor},
  booktitle = {Proceedings of the 2025 Conference on Research on Equitable and Sustained Participation in Engineering, Computing, and Technology},
  doi = {10.1145/3704637.3734778},
  isbn = {9798400706264},
  keywords = {AI literacy; accessibility; computational thinking; ethics; scaffolded critique; teacher education},
  location = {Newark, NJ, USA},
  numpages = {7},
  pages = {27–33},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2025},
  title = {Scaffolded Critique Rubrics: An Approach to Computational Thinking and AI Literacy in Teacher Education},
  url = {https://doi.org/10.1145/3704637.3734778},
  year = {2025}
}

@inproceedings{merged1325,
  abstract = {This study aims to propose a model for the automatic assessment of computational thinking based on the interactive Bebras tasks. The proposed model is based on the categorization of the interactive tasks and clustering of the behavioural data of the students' solution processes. In total 974864 solutions with behavioural data of 29 distinct interactive tasks used in Bebras Challenge were obtained. The interactive tasks were analysed and grouped according to several parameters. Based on this data, a model was proposed for how the solutions behavioural data could be processed and the task solutions could be automatically assessed based on the extracted task parameters and using machine learning techniques. The proposed assessment model analyzes solution patterns and is intended to address the limitations of the true/false assessments.},
  address = {New York, NY, USA},
  author = {Masiulionytundefined-Dagienundefined, Vaida and Jevsikova, Tatjana},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730795},
  isbn = {9798400715693},
  keywords = {behavioural data; computational thinking; ct assessment; interactive bebras tasks; machine learning; system modelling},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {791},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Behavioural Data-Driven Approach for Computational Thinking Automatic Assessment Using Interactive Bebras Challenge Tasks},
  url = {https://doi.org/10.1145/3724389.3730795},
  year = {2025}
}

@article{merged1326,
  abstract = {This paper presents a systematic literature review of professional development programs in computational thinking (CT). CT has emerged as an essential set of skills that everyone should develop to participate in a global society. However, there were no pre-service or in-service teacher programs to integrate CT into the K–12 classrooms until very recently. Thus, it is important to identify how educators and researchers address the challenges to prepare the next generation of students and what gaps persist in the current literature. We review existing work in this field from two perspectives: First, we analyze the learning outcomes, assessment methods, pedagogical approaches, and pedagogical tools used in the professional development programs in CT. Second, we examine how these programs assess the teachers’ knowledge and skills as outcomes. We used the technological pedagogical and content knowledge (TPACK) framework to characterize existing literature and identify possible gaps in the preparation of pre-service and in-service teachers in CT. Our results suggest that (1) existing evidence is limited to developed countries; (2) many studies are only focusing on teachers understanding the concepts but do not explore how the participants evaluate or create learning activities; (3) no studies look into classroom observations as part of the program, which limits our understanding to how these programs work; and (4) most programs use block-based programming languages as the tool to develop student CT. While block-based programming languages are used for introductory training programs, students are often expected to transfer their learning to more professional programming languages.},
  address = {New York, NY, USA},
  articleno = {27},
  author = {Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
  doi = {10.1145/3648477},
  issue_date = {June 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Computational thinking; literature review; professional development},
  month = {May},
  number = {2},
  numpages = {24},
  publisher = {Association for Computing Machinery},
  title = {Professional Development in Computational Thinking: A Systematic Literature Review},
  url = {https://doi.org/10.1145/3648477},
  volume = {24},
  year = {2024}
}

@inproceedings{merged1327,
  abstract = {Computational thinking (CT) is regarded as a fundamental twenty-first century skill and has been implemented in many early childhood education curriculum. Yet, the needs of neurodivergent children have remained largely overlooked in the extensive research and technologies built to foster CT among children. To address this, we investigated how to support neurodiverse (i.e., groups involving neurodivergent and neurotypical) preschoolers aged 3-5 in learning CT concepts. Grounded in interviews with six teachers, we deployed an age-appropriate, programmable robot called KIBO in two preschool classrooms involving 12 neurodivergent and 17 neurotypical children for eight weeks. Using interaction analysis, we illustrate how neurodivergent children found enjoyment in assembling KIBO and learned to code with it while engaging in cooperative and competitive play with neurotypical peers and the adults. Through this, we discuss accessible adaptations needed to enhance CT among neurodivergent preschoolers and ways to reimagine technology-mediated social play for them.},
  address = {New York, NY, USA},
  articleno = {557},
  author = {Das, Maitraye and Tran, Megan and Ong, Amanda Chih-han and Kientz, Julie A. and Feldner, Heather},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713851},
  isbn = {9798400713941},
  keywords = {Computational thinking; inclusive classroom; neurodiverse; preschool},
  numpages = {22},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {Cultivating Computational Thinking and Social Play among Neurodiverse Preschoolers in Inclusive Classrooms},
  url = {https://doi.org/10.1145/3706598.3713851},
  year = {2025}
}

@article{merged1328,
  abstract = {This study presents the development of a student-centric framework for utilizing virtual reality (VR) technologies in education, specifically focusing on enhancing computational thinking skills. While numerous frameworks exist in this domain, they often lack consideration of student preferences, which are integral for fostering learner autonomy. Our proposed framework, with components developed from the constructivist learning theory, emphasises creating knowledge through interaction with the environment, focusing on autonomy, mastery and purpose as drivers of intrinsic outcomes. Through a survey administered to hundred and fifty-seven participants, we sought to identify student-preferred strategies for learning computational thinking skills via VR interventions. Results highlighted key challenges students face when working on computational tasks are related to algorithmic and abstraction thinking. To ease the aforementioned challenges, our findings suggest a preference among students for situated-based learning approaches within VR environments. Additionally, participants recognized the importance of motivational outcomes in improving autonomy and mastery within VR-based learning tasks. Students also preferred tasks that enhanced self-efficacy, contributing to a greater sense of purpose in their learning endeavours. Overall, this investigation sets a foundation for more student-centric, constructivist and intrinsically-based VR frameworks in education.},
  address = {New York, NY, USA},
  articleno = {8},
  author = {Wee, Chyanna and Wang, Lillian Yee Kiaw and Ong, Huey Fang},
  doi = {10.1145/3717838},
  issue_date = {March 2025},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Virtual Reality},
  month = {April},
  number = {1},
  numpages = {36},
  publisher = {Association for Computing Machinery},
  title = {TeachVR: An Immersive Virtual Reality Framework for Computational Thinking Based on Student Preferences},
  url = {https://doi.org/10.1145/3717838},
  volume = {25},
  year = {2025}
}

@inproceedings{merged1329,
  abstract = {This doctoral research explores the link between computational thinking (CT) and mental models in talented children, addressing a gap in empirical studies on effects of computer science interventions. The research employs a mixed methods approach, utilizing randomized controlled field studies and interviews with primary school students attending computational thinking courses. Thus, two new computational thinking interventions have been developed and will be evaluated by a pilot, efficacy, and effectiveness study including either a wait-list or treated control group. The test instrument measuring mental models will first be employed in semi-structured interviews with talented children attending these computational thinking courses and then subsequently implemented in randomized controlled field trials to compare the effects of the courses on computational thinking abilities and the development of stable and viable mental models.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Kunz, Katrin},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699578},
  isbn = {9798400710384},
  keywords = {computational thinking; mental model; mixed methods; talent development},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {The Association between Computational Thinking and Mental Models in Talented Children (Doctoral Consortium)},
  url = {https://doi.org/10.1145/3699538.3699578},
  year = {2024}
}

@inproceedings{merged1330,
  abstract = {Novice programmers often struggle to develop computational thinking (CT) skills in introductory programming courses. This study investigates the use of Large Language Models (LLMs) to provide scalable, strategy-driven feedback to teach CT. Through think-aloud interviews with 17 students solving code comprehension and writing tasks, we found that LLMs effectively guided decomposition and program development tool usage. Challenges included students seeking direct answers or pasting feedback without considering suggested strategies. We discuss how instructors should integrate LLMs into assessments to support students' learning of CT.},
  address = {New York, NY, USA},
  author = {Hassan, Mohammed and Chen, Yuxuan and Denny, Paul and Zilles, Craig},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701906},
  isbn = {9798400705311},
  keywords = {code comprehension; debuggers; execution; large language models},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {471–477},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {On Teaching Novices Computational Thinking by Utilizing Large Language Models Within Assessments},
  url = {https://doi.org/10.1145/3641554.3701906},
  year = {2025}
}

@inproceedings{merged1331,
  abstract = {The Technovation Girls program (TG) is an after-school program, where teams of female school students follow a software ideation process to address one of the UN's Sustainable Development goals. Concretely, they prototype a mobile application which they later pitch to judges. The TG curriculum gives students the tools they need to carry out this challenge, with activities focusing on entrepreneurship, product ideation and pitching, as well as coding. Previous evaluations of this program have focused on student and mentor perceptions and attitudes, collected through surveys, observation, focus groups and interviews. In this paper, we evaluate the effect that the coding part of the TG curriculum has on students' computational thinking skills, specifically in Chile, where the TG curriculum was expanded to a year to account for differences in the school curriculum. Also, in this experience, the TG program was carried out during class hours, and at both single- and mixed-gender vocational high schools. We applied an existing computational thinking test to the 2020 cohort (approx. 1000 students), before and after participating in the program, analyzing the results by school, gender and age. We found a slight improvement in test scores, with a more positive effect in male students.},
  address = {New York, NY, USA},
  author = {Simmonds, Jocelyn and Diaz, Constanza and Estay, Carlos},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588818},
  isbn = {9798400701382},
  keywords = {computational thinking; gender; mobile apps; vocational schools},
  location = {Turku, Finland},
  numpages = {7},
  pages = {68–74},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Introducing Computational Thinking at Vocational High Schools},
  url = {https://doi.org/10.1145/3587102.3588818},
  year = {2023}
}

@inproceedings{merged1332,
  abstract = {To engage diverse populations of students who may not self-select into computing courses, a curriculum for a middle school music technology + computer science course that addresses learning standards for both subjects was developed and deployed. Students who engage with the curriculum learn modern music production techniques and computational thinking concepts. This is through a mix of traditional approaches to music technology education (digital audio workstations) and computational approaches via a culturally relevant learning platform that introduces students to coding through music production and remixing. This poster reflects on the last two years of curriculum design and deployment, teacher training, and student and educator engagement and feedback to provide insight into the teaching (and learning) of computational thinking in the music technology classroom.},
  address = {New York, NY, USA},
  author = {McCall, Lauren and Allen, Brittney and Freeman, Jason and Garrett, Stephen and Grossman, Sabrina and Paz, Jed and Edwards, Doug and McKlin, Tom and Lee, Taneisha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635527},
  isbn = {9798400704246},
  keywords = {broadening participation; computing; interest formation; middle school; music; persistence},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1746–1747},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Developing Computational Thinking in Middle School Music Technology Classrooms},
  url = {https://doi.org/10.1145/3626253.3635527},
  year = {2024}
}

@article{merged1333,
  abstract = {Computational thinking (CT) stands as a universal problem-solving approach applicable across diverse disciplines, transcending the domain of computer science. It embodies the mental process of structuring a problem to enable a computational solution feasible for both humans and machines. This methodology involves dissecting problems into smaller parts that are easier to understand and solve. This study delineates a meticulously designed series of CT activities within an introductory computer science course and explores their profound impact on student engagement and problem-solving proficiency. Our findings underscore the pivotal role of hands-on CT practice in augmenting students' ability to decompose problems, recognize patterns, and abstract complexities, and employ algorithms effectively. Notably, this infusion of CT not only cultivates theoretical understanding but also bridges the gap between conceptual knowledge and real-world application through the use of computational tools like Python programming. As CT continues to emerge as a cornerstone skill in diverse domains, this research presents compelling evidence advocating for its integration into introductory courses, laying a robust foundation for students to navigate the evolving technological landscape with enhanced problem-solving capabilities.},
  address = {Evansville, IN, USA},
  author = {Benkarroum, Younes and Azhar, Mohammad Q.},
  issn = {1937-4771},
  issue_date = {April 2024},
  journal = {J. Comput. Sci. Coll.},
  month = {April},
  number = {8},
  numpages = {15},
  pages = {143–157},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Infusing Computational Thinking into a Computer Science Gateway Course},
  volume = {39},
  year = {2024}
}

@inproceedings{merged1334,
  abstract = {Since Jeanette Wing’s influential 2006 article, research into developing Computational Thinking (CT) skills has surged. Despite ongoing debates about CT definitions and components, reliable and valid assessment tools are crucial for measuring CT skill impact and evaluating related interventions. This systematic literature review seeks to identify CT assessment tools suitable for undergraduate computing students, by investigating the central question "What tools are available for the assessment of CT skills?". A comprehensive search of academic databases for CT assessment publications since 2006 yielded 202 unique articles. After applying exclusion criteria, 72 relevant articles were analyzed. The selected publications were categorized by tool type, and focus, examining tool reliability and validity. This paper presents initial findings from this review.},
  address = {New York, NY, USA},
  articleno = {19},
  author = {Sheridan, Frances and Stynes, Paul and Pathak, Pramod and Quille, Keith},
  booktitle = {Proceedings of the 2024 Conference on United Kingdom \&amp; Ireland Computing Education Research},
  doi = {10.1145/3689535.3689545},
  isbn = {9798400711770},
  keywords = {Assessment; Computational Thinking; Computing; Higher Education},
  location = {Manchester, United Kingdom},
  numpages = {1},
  publisher = {Association for Computing Machinery},
  series = {UKICER '24},
  title = {Computational Thinking Assessment Tools: A Systematic Review of the Literature (Initial Findings).},
  url = {https://doi.org/10.1145/3689535.3689545},
  year = {2024}
}

@article{merged1335,
  abstract = {In learning to program and understanding how a programming language controls a computer, learners develop both insights and misconceptions whilst their mental models are gradually refined. It is important that the learner is able to distinguish the different elements and roles of a computer (compiler, interpreter, memory, etc.), which novice programmers may find difficult to comprehend. Forming accurate mental models is one of the potential sources of difficulty inextricably linked to mastering computing concepts and processes, and for learning computer programming.It is common to use some form of representation (e.g., an abstract machine or a Computational Agent (CA)) to support technical or pedagogic explanations. The Notional Machine (NM) is a pedagogical device that entails one or more computational concepts, originally described as an idealised computer operating with the constructs of a particular programming language. It can be used to support specific or general learning goals and will typically have some concrete representation that can be referred to. Computational Thinking (CT), which is defined as a way of thinking that is used for [computational] problem solving, is often presented as using a CA to carry out information processing presented by a solution.In CT, where the typical goal is to produce an algorithm or a computer program, the CA seemingly serves a purpose very similar to an NM. Although it changes through the different stages of development (of the learner and of the curriculum), the roles of CAs and NMs can be seen as versatile tools that connect a learner’s mental model with the conceptual model of a program. In this article, we look at this relationship between CAs and NMs, and indicate how they would look at different stages of learning. We traverse the range of definitions and usages of these concepts, and articulate models that clarify how these are viewed in the literature. This includes exploring the nature of machines and agents, and how historical views of these relate to modern pedagogy for computation. We argue that the CA can be seen as an abstract, simplified variant of an NM that provides a useful perspective to the learner to support them to form robust mental models of NMs more efficiently and effectively. We propose that teaching programming should make use of the idea of a CA at different stages of learning, as a link that connects a learner’s mental model to a full NM.},
  address = {New York, NY, USA},
  articleno = {44},
  author = {Munasinghe, Bhagya and Bell, Tim and Robins, Anthony},
  doi = {10.1145/3627829},
  issue_date = {December 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {CS Unplugged; Computational thinking; K-12 education; computational agent; notional machine},
  month = {December},
  number = {4},
  numpages = {27},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking and Notional Machines: The Missing Link},
  url = {https://doi.org/10.1145/3627829},
  volume = {23},
  year = {2023}
}

@inproceedings{merged1336,
  abstract = {The adoption of Computational Thinking (CT) in the educational worldwide curricula is progressively gaining importance from various perspectives. One particular approach, known as unplugged, does not require electronic devices and offers notable benefits as it is replicable and adaptable. Moreover, it serves to dismantle the misconception that computer science is exclusively confined to the digital realm. While both plugged and unplugged methodologies are recognized, further exploration of the unplugged approach is required, especially in Upper Secondary Education, where there is less evidence of its effectiveness. This paper presents a summary of a quasi-experimental study conducted with 11th grade students (approximately 16 years old) in a Spanish public high school. 57 students participated: 28 in the control group and 29 in the experimental group. The conducted research, based on a quantitative and experimental design, aimed to investigate the effectiveness of unplugged activities to improve CT abilities in Upper Secondary Education. The results indicated improved skills in the experimental group, suggesting the potential efficacy of unplugged methods in fostering CT abilities.},
  address = {New York, NY, USA},
  articleno = {11},
  author = {Benavides-Escola, Christian Andr\'{e}s and Mart\'{\i}n-Barroso, Estefan\'{\i}a and Zapata-C\'{a}ceres, Mar\'{\i}a and Rom\'{a}n-Gonz\'{a}lez, Marcos},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678110},
  isbn = {9798400710056},
  keywords = {Computational Thinking; Computational Thinking Evaluation; Computer Science Education; Unplugged Activities; Upper Secondary Education},
  location = {Munich, Germany},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Improvement of Computational Thinking skills through unplugged activities in Upper Secondary Education},
  url = {https://doi.org/10.1145/3677619.3678110},
  year = {2024}
}

@inproceedings{merged1337,
  abstract = {Within a two-year urban teacher residency program at [University], which focuses on training high school teachers to incorporate computational thinking (CT) into STEM education with an emphasis on equity, this study delves into how these preservice teaching residents (TRs) understood and applied CT in high school STEM settings. Based on our initial thematic content analysis of ten 30-minute artifact-based interviews, teachers' understanding and application of CT could be categorized in two ways: 1) One group of teachers showcased clear, explicit knowledge of CT and actively incorporated it into their instruction; 2) Another group, despite their evident understanding of CT, subtly and implicitly integrated CT into their teaching methods. Our findings suggest that while TRs may differ in whether they explicitly or implicitly integrated CT into their lesson plans, their comments suggest that they have foundational understandings and hold values that suggest they can build upon them. The TRs held definitional understandings of CT and had intentions to design and teach with CT integration, explicitly, or more commonly, implicitly. All of the TRs recognized opportunities in their lesson plans for teaching CT to students, which suggests the potential for more explicit integration in the future. These insights guide our subsequent efforts in teacher training, ensuring educators are equipped to weave CT into STEM lessons. Our findings contribute to a growing body of work that seeks to build strong preservice teaching practices, as they learn to translate CT knowledge into effective teaching practices while working towards higher levels of CT integration.},
  address = {New York, NY, USA},
  author = {Wei, Wei and Ha, Jesse and Gomez, Kimberley and Ghosh, Anuradha},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635586},
  isbn = {9798400704246},
  keywords = {computational thinking; equity; preservice teachers; stem; teacher education},
  location = {Portland, OR, USA},
  numpages = {3},
  pages = {1848–1850},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Computational Thinking in STEM Teaching: Preservice Teachers' Conceptualizations and Practices},
  url = {https://doi.org/10.1145/3626253.3635586},
  year = {2024}
}

@inproceedings{merged1338,
  abstract = {Our research-practice partnership with two school districts in Eastern Kentucky has created a rurally sustaining computational thinking (CT) pathway. In this paper we share our project's operational understanding of the concept of rural sustainability in the context of CT pathways. We posit that an effective CT pathway for rural communities must be firmly rooted in their cultural wealth, funds of knowledge, and socioeconomic priorities. Moreover, it should empower students to draw upon their own innovation heritage, leveraging CT as a tool to identify and address community challenges. Emphasizing the necessity of incorporating rural contexts into discussions on equitable access to computing education, our conceptualization provides insights into how policy and research can contribute to this important goal.},
  address = {New York, NY, USA},
  author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656073},
  isbn = {9798400706264},
  keywords = {computational thinking; computer science; culturally sustaining computing; rural education},
  location = {Atlanta, GA, USA},
  numpages = {6},
  pages = {133–138},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Appalachian Ingenuity and the Need for Rurally Sustaining Computational Thinking Pathways},
  url = {https://doi.org/10.1145/3653666.3656073},
  year = {2024}
}

@inproceedings{merged1339,
  abstract = {Despite widespread recognition of the importance of computer science (CS) education and an increased focus on computational thinking (CT) instruction in the U.S., there remains a significant shortage of qualified K-12 CS teachers. Preparing preservice teachers to teach CS is essential for ensuring a sustainable future for CS education. This experience report presents a CT/CS module initiative designed to prepare secondary preservice science and math teachers to teach CT/CS through an instructional methods course that integrates instructional practice within an elementary after-school program. This initiative employs the preservice teacher preparation framework that includes the observe-practice-reflect cycle. Within this framework, the preservice teachers began with incorporating unplugged lessons and then transitioned to robotics to teach CT/CS concepts. In this experience report, we detail the design and implementation of this CT/CS module initiative and share findings that revealed the preservice teachers' increased confidence, adaptations in lesson planning, and the challenges faced in teaching CT/CS. These takeaways aim to inspire and inform other teacher educators and practitioners working to prepare the next generation of CS teachers.},
  address = {New York, NY, USA},
  author = {Guo, Meize and Yun, Minji and Israel, Maya},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3641554.3701899},
  isbn = {9798400705311},
  keywords = {computer science education; integration; k-12; science and math; teacher education},
  location = {Pittsburgh, PA, USA},
  numpages = {7},
  pages = {416–422},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Introducing Computational Thinking and Computer Science Instruction to Preservice Science and Math Teachers},
  url = {https://doi.org/10.1145/3641554.3701899},
  year = {2025}
}

@inproceedings{merged1340,
  abstract = {Cross-stitching, a traditional craft practiced across cultures, holds potential as an educational tool for developing computational thinking (CT) skills in children. While CT is increasingly recognized as essential in modern education, the role of unplugged activities like cross-stitching remains underexplored. This study examines cross-stitching through Kolb’s experiential learning theory and key CT categories, including abstraction, decomposition, algorithmic thinking, evaluation and generalization. Using a qualitative approach, data were collected through interviews with cross-stitch instructors, a preschool teacher, and parents of children engaged in cross-stitching. A priori content analysis identified key aspects: (1) numerical thinking and visual representation ; (2) task breakdown and progressive learning ; (3) sequencing and debugging ; (4) problem solving and learning by doing ; (5) persistence and pattern recognition. The study offers an exemplar for applying an analytical lens to understand the interplay between unplugged activities and computational thinking.},
  address = {New York, NY, USA},
  author = {undefinedlbay, Elif and Boga, Miray and Baykal, G\"{o}k\c{c}e Elif},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  doi = {10.1145/3713043.3731507},
  isbn = {9798400714733},
  keywords = {Kolb’s Experiential Learning Theory; computational thinking; cross-stitch; cultural heritage; unplugged learning},
  numpages = {4},
  pages = {923–926},
  publisher = {Association for Computing Machinery},
  series = {IDC '25},
  title = {Exploring the Role of Cross-stitch Craft in Development of Children’s Computational Thinking: An Unplugged Approach},
  url = {https://doi.org/10.1145/3713043.3731507},
  year = {2025}
}

@inproceedings{merged1341,
  abstract = {Computational Thinking skills along with reading, writing, and calculating skills are basic skills for children’s future. Computational Thinking has much in common with problem-solving and creative thinking in general. With regard to Karl Popper "all life is problem-solving" [26], this contribution focuses on the common features of problem-solving and unplugged Computational Thinking, by using a special set of Computational Thinking tasks (INGA-Box). Choosing a mix of deductive and inductive approach, a classification scheme for observing the development of Computational Thinking in kindergarten was developed and evaluated with first datasets.},
  address = {New York, NY, USA},
  articleno = {15},
  author = {Meyer-Baron, Larissa and Stieger, Ramona and Waldvogel, Bettina and Schumann, Nicole and Ruedisueli, Cornelia and Mayr, Franziska},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556867},
  isbn = {9781450398534},
  keywords = {INGA-Box; computational thinking; escape box; kindergarten children; problem-solving; video analysis},
  location = {Morschach, Switzerland},
  numpages = {4},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Observing Computational Thinking Skills of Kindergarten Children},
  url = {https://doi.org/10.1145/3556787.3556867},
  year = {2022}
}

@inproceedings{merged1342,
  abstract = {We describe our experience introducing computational thinking skills at teacher colleges through project-based learning (PBL). We have designed projects that use technology to tackle driving questions derived from the national school curriculum, and at the same time are aligned with learning objectives from pre-service teacher training programs. We have carried out a preliminary validation of these projects with teacher educators, who are now incorporating these experiences into their courses with pre-service teachers.},
  address = {New York, NY, USA},
  articleno = {38},
  author = {Simmonds, Jocelyn and Hitschfeld-Kahler, Nancy and Scheihing, Eliana and Henriquez, Valeria and Munoz, Valentin and Casanova, Cecilia and Torrent, Catalina and Contreras, Paulo and Mercado, Karen and Estrada, Daniel and Marquez, Lucia},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678133},
  isbn = {9798400710056},
  keywords = {computational thinking; project-based learning; teacher training},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Designing Project-based learning experiences to integrate Computational Thinking skills at Teacher Colleges},
  url = {https://doi.org/10.1145/3677619.3678133},
  year = {2024}
}

@inproceedings{merged1343,
  abstract = {Computational thinking (CT) integration in elementary mathematics engages young learners in the decomposition of complex problems and the construction of iterative approaches to mathematical thinking. To effectively integrate MATH+CT, we need to build teachers' capacity in developing knowledge of CT concepts and creating Math+CT activities. This can positively influence students' mathematical outcomes and their readiness for computer science (CS) in middle and high school. Although various professional development programs aim to build teachers' CT knowledge, limited research exists on how teachers apply this knowledge to classroom-based Math+CT activities. Simultaneously, the rapid improvement of large Language Models (LLMs) creates a catalyst for building an innovative resource space to support elementary teachers' integration of MATH+CT in their existing school or district curriculum. In this poster, we present a tool that leverages LLMs to support teachers in creating Scratch programs designed to explore and deepen students' understanding of mathematical concepts.},
  address = {New York, NY, USA},
  author = {Ylagan, Emma S. and Parekh, Heena P. and Das, Malisha and Dahshan, Mai},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3724389.3730802},
  isbn = {9798400715693},
  keywords = {computational thinking; curriculum development; early childhood education; large language models; mathematics education; pk-12 cs education; professional development},
  location = {Nijmegen, Netherlands},
  numpages = {1},
  pages = {794},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Fostering Computational Thinking in Elementary Mathematics Instruction and Learning with the Support of Large Language Models},
  url = {https://doi.org/10.1145/3724389.3730802},
  year = {2025}
}

@inproceedings{merged1344,
  abstract = {Many K-12 computer science (CS) education programs have started focusing on fostering Computational Thinking (CT) skills as early as kindergarten. While secondary-level CS education has been extensively studied, there is limited research on CT practices in early childhood education (ECE), particularly from the perspective of kindergarten teachers. Understanding how CT is taught by kindergarten teachers and how they rate the CT practices of students in preschool is essential for developing effective new curricula and professional development programs. Therefore, this study evaluates an eight-week CT intervention conducted by kindergarten teachers in naturalistic settings, addressing two critical research gaps: 1) the emphasis on CT practices rather than concepts, and 2) the perspectives of kindergarten teachers on CT activities. 109 preschool students (62 female, 43 male, 4 missing information) with the age of five or six years old from six kindergartens in Baden-W\"{u}rttemberg, Germany participated in the intervention. The overall evaluation using the TechCheck-K and the observation scale for CT unplugged activities (OSCTU) show significant improvements of students CT skills. I conclude by discussing the implications of these findings for the integration of CT in ECE. These insights contribute to bridging research and practice, offering a foundation for sustainable CT education initiatives for young learners.},
  address = {New York, NY, USA},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729057},
  isbn = {9798400715679},
  keywords = {computational thinking; early childhood education; kindergarten},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {653–659},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Evaluating Computational Thinking Practices in Early Childhood Education: Insights from an Intervention Bridging Research and Practice},
  url = {https://doi.org/10.1145/3724363.3729057},
  year = {2025}
}

@inproceedings{merged1345,
  abstract = {Maker-based learning and Computational Thinking (CT) have increased in popularity in formal educational settings over the past decade. Particularly, the combination of CT and making seem to hold promise for providing opportunities for students to learn and use computing concepts outside of computing courses. This paper presents findings from a two year study of the integration of computational making into 5th and 6th grade science classrooms. Students participated in computational making interventions in which they programmed Arduino microcontrollers to create scientific models of concepts that aimed to help them engage with the science content while learning CT and making skills. In this paper, we explore the differences between the desired computing learning progressions, students' performance on assessments, and perceptions of computer science to answer: To what extent are middle school students able to learn computing through computing integrated science curriculum? We observed that the programming concepts taught were largely dependent on the needs of the science and making project. Our findings suggest that while students had opportunities to learn and use programming concepts, their performance on assessments was between 15\% and 78\% correct for conceptual and applied questions and their programming self-efficacy and their perceptions of computer science were lower than desired. We discuss the implications of these findings and the factors that impact the integration of CT in core disciplines and the challenges this presents as we aim to use integration approaches to effectively teach computing outside of computing courses and to broaden participation in computing.},
  address = {New York, NY, USA},
  author = {Magda, David and Gardner-McCune, Christina and Jimenez, Yerika and Chu, Sharon and Kulkarni, Abhishek},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630948},
  isbn = {9798400704239},
  keywords = {computational thinking; k12 education; making},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {778–784},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {The Integration of Computational Thinking and Making in the Classroom},
  url = {https://doi.org/10.1145/3626252.3630948},
  year = {2024}
}

@inproceedings{merged1346,
  abstract = {This paper presents a study about the mapping of the EUDability of End-User Development (EUD) tools with the Computational Thinking (CT) skills of users. This mapping provides an approach to evaluate the suitability of a EUD environment in supporting people performing their daily work while managing and exploiting EUD tools. EUDability is a construct encompassing different dimensions that need to be assessed through a careful scrutiny by human-computer interaction experts, while CT skills should mirror those dimensions from the point of view of assessing the level of ability of users in managing problems with a computational thinking attitude. Moving from the healthcare domain, we present two cases: a tool for geriatric professionals supporting them in the preparation of cognitive exercises for elderly patients; and a tool for pharmacists, which empowers them to create robot programs related to the preparation of personalized medications. These cases have been exploited to show how to unify the EUDability assessment with the CT skills assessment. In particular, the application of the EUDability evaluation method for each tool, as well as the administration of the Computational Thinking Scale to domain experts are shown. The results of the two assessments are reported and discussed, together with the limitations of the present study. The results show the goodness of fit of the proposed EUD tools in the healthcare domain.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {Barricelli, Barbara Rita and Fogli, Daniela and Gargioni, Luigi and Locoro, Angela and Valtolina, Stefano},
  booktitle = {Proceedings of the 2024 International Conference on Advanced Visual Interfaces},
  doi = {10.1145/3656650.3656671},
  isbn = {9798400717642},
  keywords = {Computational Thinking; End-User Development; Evaluation; Healthcare},
  location = {Arenzano, Genoa, Italy},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {AVI '24},
  title = {Towards the Unification of Computational Thinking and EUDability: Two Cases from Healthcare},
  url = {https://doi.org/10.1145/3656650.3656671},
  year = {2024}
}

@inproceedings{merged1347,
  abstract = {Physical play has often been leveraged to provide children with active and engaging learning experiences. However, coding activities are predominantly sedentary in front of the screen, and the application of physical play in Computer Science education is less explored, e.g., how can we engage in computational thinking (CT) through physical play? In this design-based exploration, we conducted three design activities where young children, college students, and researchers were invited to create physical play projects using the BBC micro:bit and reflect on their experiences. By examining participants’ projects and creating processes, we provide empirical evidence that remixing physical play activities with coding can engage learners in various CT concepts and practices, reveal how CT concepts and practices can be represented in physical play, and highlight implications for designing physical play-mediated computational learning experiences. Ultimately, we encourage more learning experiences to incorporate physical play into computing education for children.},
  address = {New York, NY, USA},
  author = {Yu, Junnan and Hayden, Ronni and Roque, Ricarose},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3589365},
  isbn = {9798400701313},
  keywords = {computational thinking; design; learning; physical play},
  location = {Chicago, IL, USA},
  numpages = {13},
  pages = {124–136},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Exploring Computational Thinking with Physical Play through Design},
  url = {https://doi.org/10.1145/3585088.3589365},
  year = {2023}
}

@inproceedings{merged1348,
  abstract = {The aim of the doctoral thesis is to model an automated computational thinking (CT) assessment system based on solving processes of the interactive tasks. Currently, a literature review and analysis has been carried out, which has shown that among current CT assessment tools most popular ones still remain different types of tests. A study, comparing the two computational thinking assessment tests has been conducted and it has been observed that using only the tests causes data loss as tests do not collect information on the solution processes. An experiment was carried out to collect and analyze action information while solving the task and using this data to extract the possible different solution methods of an interactive task.},
  address = {New York, NY, USA},
  author = {Masiulionyte-Dagiene, Vaida},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594218},
  isbn = {9798400701399},
  keywords = {automatic assessment; computational thinking; computational thinking assessment; learning analytics},
  location = {Turku, Finland},
  numpages = {2},
  pages = {603–604},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Modeling of the System for Computational Thinking Automatic Assessment},
  url = {https://doi.org/10.1145/3587103.3594218},
  year = {2023}
}

@inproceedings{merged1349,
  abstract = {The computer science education research community has thought deeply about how students learn computational thinking (CT) as it relates to other domains of computer science (CS; e.g. programming) and core content areas (STEM, humanities), but less work has examined the role of CT in pathways to computer science for K-5 teachers. This panel examines the experiences of practitioners - educators, administrators, and curriculum designers--who have both experienced and supported others in incorporating CT in elementary school settings as a pathway to or component of computer science education. All panelists have worked with teachers not previously trained to teach CS and have encountered the many opportunities and difficulties of bringing CS to in-service teachers. They will reflect on the multiple ways educators grapple with CT: as an entry point to computer science, as a way to enrich core disciplines, and as a way to support equitable practice - for example, several of the panelists have experiences leveraging CT and other domains of CS to support the expression and development of emergent bilingual students. The panel will explore ways in which CT and its associated language and strategies for problem solving may provide a particularly helpful onramp to CS generally, including integration with other disciplines and with language about academic skills more generally.},
  address = {New York, NY, USA},
  author = {Levitt, Diane and Garfus-Knowles, Dylana and Khuu, Wyman and Siddappa, Sara},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3631658},
  isbn = {9798400704246},
  keywords = {K-12 computational thinking; K-12 cs education; K-12 curriculum; K-12 teacher professional development},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1537–1538},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Using Computational Thinking to Demystify Computer Science for Elementary Teachers},
  url = {https://doi.org/10.1145/3626253.3631658},
  year = {2024}
}

@inproceedings{merged1350,
  abstract = {CADRE (Catalyst for Actively Designing and Researching Equity) is a Researcher-Practitioner Partnership (RPP) that empowers in-service K-12 educators to learn and leverage Computational Thinking (CT) to design for equity in their classrooms, schools, and districts. We cast equity gaps as bugs in education and focus on helping educators debug the system with CT-based tools, methods, and strategies such as user-centered design, system abstraction, and iteration. In this paper, we first describe how educators were taught CT and provide an example of how they applied these skills in practice. We then highlight the results of the qualitative case study of 34 educators where we found that CT helped CADRE participants gain a better understanding of the equity gaps their students faced and improve their instructional practices within their locus of control. Implications for future research are also discussed.},
  address = {New York, NY, USA},
  author = {Yamaguchi, Ryoko and Eaton, Cyntrica},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630825},
  isbn = {9798400704239},
  keywords = {computational thinking; csforall; gender and diversity; high school teacher development; k-12 instruction; learning environment; professional practice},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {1463–1469},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Designing for Equity in Education Via Computational Thinking: A Case Study},
  url = {https://doi.org/10.1145/3626252.3630825},
  year = {2024}
}

@inproceedings{merged1351,
  abstract = {The recent emphasis on computational thinking (CT) integration across disciplines in elementary education nationwide is important to ensure that students are well-equipped to meet the demands of the data-driven workforce. However, this requirement poses major challenges to early elementary teachers who are faced with little direction in terms of how best to implement and assess their young student's application of these new practices.This project engaged researchers, professional development (PD) providers, and K-2 teachers to develop and design a hybrid PD experience to support teachers in a process of learning about and identifying the use of CT skills and strategies in their students' work. The hybrid PD approach utilized a combination of instructional coaching, both face-to-face and through an online Community of Practice. Researchers used a mixed-methods design to measure teachers' change over time in their understanding of how to identify emergent computational thinking in their students' work process. Data collection methods included teacher focus groups and interviews, classroom observations, and teacher pre- and post-surveys.Preliminary findings showed an increase in teachers' understanding of CT and confidence in engaging their students in CT-integrated lessons. Teachers reported that the combination of in-person PD and online Community of Practice helped them prepare to bring CT into their classroom and cited placing more of a distinct focus on teaching students the process of CT rather than just using CT vocabulary. Teachers also referenced success in evaluating their students' application of CT skills and concepts by using informal and formative assessment strategies that focus on evidence of student understanding rather than assessing CT vocabulary.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Kaiser, Alice and Ferguson, Camille and Negron, Anthony and Ferrer, Ray and Labonte, Don},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635540},
  isbn = {9798400704246},
  keywords = {computational thinking; early elementary; integration},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1814–1815},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Supporting Teacher Understanding of Computational Thinking Integration into Early Elementary Curricula},
  url = {https://doi.org/10.1145/3626253.3635540},
  year = {2024}
}

@inproceedings{merged1352,
  abstract = {In this study we examine the use of CT skills when solving Bebras tasks. Bebras tasks are logical puzzles created to introduce, practice and sometimes assess Computational Thinking (CT) skills. We use the think-aloud method to investigate the problem-solving process of participants with advanced CT skills. The contribution of this study is three-fold. First, the study examines how the use of CT skills manifests itself in the problem-solving process. By examining the thought process of participants, our study provides a detailed operationalization of CT skill definitions that could be used in subsequent studies to investigate the use of the skills. Secondly, the study provides a validation of the classification of a selection of Bebras tasks. Our results show that the skills assigned to these Bebras are indeed the skills most often used by the problem solvers while solving the tasks. Finally, even though the skills are used, the results also show that this does not always translate into answering these puzzles correctly. Based on the results we therefore conclude that, without looking at the problem-solving process, the tasks may not be suitable for the assessment of CT skills.},
  address = {New York, NY, USA},
  articleno = {18},
  author = {de Jong, Imke and Sichterman, Bo and Jeuring, Johan},
  booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3699538.3699543},
  isbn = {9798400710384},
  keywords = {Bebras tasks; Computational Thinking; think-aloud},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '24},
  title = {Use of Computational Thinking Skills when solving Bebras Tasks: a Think-aloud Study},
  url = {https://doi.org/10.1145/3699538.3699543},
  year = {2024}
}

@article{merged1353,
  abstract = {Professionals practice a form of computational thinking that is significantly more advanced than popular descriptions suggest.},
  address = {New York, NY, USA},
  author = {Denning, Peter J. and Tedre, Matti},
  doi = {10.1145/3491268},
  issn = {0001-0782},
  issue_date = {December 2021},
  journal = {Commun. ACM},
  month = {November},
  number = {12},
  numpages = {4},
  pages = {30–33},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking for professionals},
  url = {https://doi.org/10.1145/3491268},
  volume = {64},
  year = {2021}
}

@inproceedings{merged1354,
  abstract = {This article presents research conducted within the School of Computational Thinking and Artificial Intelligence (EPCIA in its original form in Spanish) project, an initiative developed by the Spanish Ministry of Education and Vocational Training during the 2020-21 academic year. The study investigated whether it is possible to contribute to the development of students’ computational thinking skills and artificial intelligence (AI) literacy through programming activities using the Scratch language and the Machine Learning for Kids platform. The study involved 133 teachers and more than 2,000 students, from 4th to 8th grade, with representation from 17 of the 19 Spanish regions. Students took a quantitative test on computational thinking and another on AI before and after the intervention, and teachers and students also took a questionnaire at the end of it. The results showed that: i) quantitative tests can be used to reliably measure, in terms of internal consistency, the level of development of computational thinking and AI literacy in the Spanish school population of these ages; ii) it is possible to develop students’ computational thinking skills and raise their level of AI literacy through programming activities; iii) the intervention contributed to demystifying the main prejudices regarding AI; iv) a gender gap was found in relation to previous knowledge and experiences with these topics. Overall, the study concluded that introducing the foundations of AI in primary and secondary education in Spain is appropriate, feasible, and relevant.},
  address = {New York, NY, USA},
  articleno = {7},
  author = {Moreno-Le\'{o}n, Jesus and Vasco-Gonz\'{a}lez, Margarita and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678111},
  isbn = {9798400710056},
  keywords = {K-12; artificial intelligence literacy; computational thinking},
  location = {Munich, Germany},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Investigating the Impact of Programming Activities on Computational Thinking and AI Literacy in Spanish Schools},
  url = {https://doi.org/10.1145/3677619.3678111},
  year = {2024}
}

@inproceedings{merged1355,
  abstract = {We have developed a quantitative tool for assessing senior high school students' computational thinking skills and administered it in the Taipei metropolitan area of Taiwan. Our CT test is language/tool/knowledge-independent and focuses on four key CT concepts: decomposition, data representation, algorithms, and pattern generalization. Our paper outlines the development process of the CT test, including its constructs, reliability, and validity, and discusses its educational implications for computing courses. This CT test provides a valuable resource for computing teachers who wish to assess their students' CT abilities and tailor their teaching methods accordingly.},
  address = {New York, NY, USA},
  author = {Hu, Chiu-Fan and Wu, Cheng-Chih},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594151},
  isbn = {9798400701399},
  keywords = {assessment; computational thinking; measurement},
  location = {Turku, Finland},
  numpages = {2},
  pages = {587–588},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {A Computational Thinking Test for Senior High School Students},
  url = {https://doi.org/10.1145/3587103.3594151},
  year = {2023}
}

@inproceedings{merged1356,
  abstract = {As states move to adopt computer science (CS) and computational thinking (CT) standards to prepare students for an increasingly technological world, school districts are integrating curriculum with CT skills and practices, building the capacity of their teachers and administrators through professional development, and increasing the knowledge infrastructure to support CT opportunities for students. One challenge that districts face when scaling new initiatives occurs when the work becomes siloed to one ''champion'' teacher or a singular motivated department. This poster presents Broward County Public Schools' use of an interactive infographic to build awareness of their CT initiative, including considerations for utilizing an infographic tool and the design decisions made to engage various stakeholders. The poster provides examples of methods to build knowledge of an emerging initiative and adds to the growing body of work in supporting districts as they scale their CS/CT initiatives.},
  address = {New York, NY, USA},
  author = {Rangel, Alessandra and Coenraad, Merijke and Ruiz, Pati and Dunbar, Kyle and Milenkovic, Lisa and Arriola, Sheryl and Marousky, Annmargareth},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635560},
  isbn = {9798400704246},
  keywords = {computational thinking; computer science; design; k-12 education},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1788–1789},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Building Awareness of Computational Thinking Pathways across a Large School District},
  url = {https://doi.org/10.1145/3626253.3635560},
  year = {2024}
}

@inbook{merged1357,
  abstract = {This paper describes the development and implementation of a yearlong integrated English Language Arts (ELA) and computational thinking (CT) curriculum that has been adapted to meet the needs of multilingual students. The integration of computational thinking into K-12 literacy instruction has only been examined in a handful of studies, and little is known about how such integration supports the development of CT for multilingual students. We conducted a qualitative case study on curricular implementation in a general education classroom with large numbers of students designated as English learners. Results from detailed field notes revealed that the strategic application of instructional practices was implemented in the service of building on students' existing literacy skills to teach CT concepts and dispositions. The CT and literacy framework put forth in this study can be used as an analytic framework to highlight how instructional strategies mobilize the existing literacy and CT resources of linguistically diverse students. Based on our findings, we discuss recommendations for future integrated ELA-CT curricula.},
  address = {New York, NY, USA},
  author = {Jacob, Sharin Rawhiya and Parker, Miranda C. and Warschauer, Mark},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {9},
  pages = {55–63},
  publisher = {Association for Computing Machinery},
  title = {Integration of computational thinking into English language arts},
  url = {https://doi.org/10.1145/3507951.3519288},
  year = {2022}
}

@inproceedings{merged1358,
  abstract = {Spatial skills frequently correlate with many measures of computing success, and indeed with wider STEM achievement. Spatial skills training has also been shown to improve computing outcomes at multiple institutions of higher education with first-year university students. However, there is a good chance that even though we can improve the spatial skills of undergraduate students to help them succeed at computing, many students will have already opted-out of computing learning pathways in school due to poor spatial skills. Using a spatialised maths curriculum, we intend to improve the spatial skills of primary school children aged 8–9 and investigate the effect on their computational thinking. With this poster, we would like to share our work so that others can consider deploying similar programmes, and to hear feedback from the CS education community on what other aspects and factors we should consider.},
  address = {New York, NY, USA},
  articleno = {33},
  author = {Parkinson, Jack},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609780},
  isbn = {9798400708510},
  keywords = {computational thinking; spatial skills},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Improving Computational Thinking with Spatial Skills Development in Primary School},
  url = {https://doi.org/10.1145/3605468.3609780},
  year = {2023}
}

@inproceedings{merged1359,
  abstract = {Programming integration into K-12 curricula has become increasingly important in the rapidly evolving educational landscape. Recognizing the need to develop computational thinking among young learners, this study investigated the impact of the flipped classroom approach on computational thinking in K-12 programming courses in Macao, focusing on primary school students' experiences with block-based programmable hardware. Employing a mixed methods research design, it combined quantitative and qualitative analyses to examine how flipped classroom activities—centered around student engagement with material through e-books, videos, and interactive classroom tasks—affected students' understanding and application of computational concepts, practices, and perspectives. Quantitative data were collected using the Programming Computational Thinking Scale (PCTS), and qualitative insights were gathered through semi-structured interviews. The results indicated significant improvements in students' computational concepts and practices, attributed to the advantages of self-study and a stratified approach to task complexity. However, advancements in computational perspectives were less pronounced, highlighting the need for more opportunities for students to refine their presentation skills. The study concluded that the flipped classroom approach, especially with tools like mBlock and Codey-Rocky, effectively nurtured computational thinking in primary school programming courses. It underscored the importance of innovative teaching methods in enhancing students' ability to apply programming concepts in problem-solving and suggested areas for further improvement in educational practices.},
  address = {New York, NY, USA},
  author = {Choi, Wan Chong and Chang, Chi In},
  booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3678726.3678729},
  isbn = {9798400717611},
  keywords = {Codey-Rocky; Computational Thinking; Flipped Classroom; K-12 Block-based Programming Course; Primary School Programming Education},
  location = {Tokyo, Japan},
  numpages = {8},
  pages = {106–113},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '24},
  title = {The Students' Perspective on Computational Thinking through Flipped Classroom in K-12 Programming Course},
  url = {https://doi.org/10.1145/3678726.3678729},
  year = {2024}
}

@inproceedings{merged1360,
  abstract = {Computational thinking (CT) is increasingly recognized as a foundational skill for all learners, yet in many cases, such as in non-computer science (non-CS) classrooms, teachers struggle in meaningful integration of CT. Literature suggests that targeted professional development helps teachers embed CT in their classrooms and efforts such as co-design support transformative integration of teachers’ pedagogical skills. However, these efforts are often isolated. This research proposes an integrated design thinking-based approach that centers student needs and leverages teachers’ pedagogical expertise. Using a design-based research and mixed methods, I investigate how teachers identify student challenges, co-develop CT pedagogies and scaffolds, and evaluate the effectiveness through classroom implementation.},
  address = {New York, NY, USA},
  author = {Sabanwar, Vivek},
  booktitle = {Proceedings of the 2025 ACM Conference on International Computing Education Research V.2},
  doi = {10.1145/3702653.3744310},
  isbn = {9798400713415},
  keywords = {Codesign; Design Thinking; K-12; Teacher Professional Development},
  numpages = {2},
  pages = {38–39},
  publisher = {Association for Computing Machinery},
  series = {ICER '25},
  title = {Co-Designing With Teachers: A Student-Centered Approach to Integrating Computational Thinking in Non-CS K–12 Classrooms},
  url = {https://doi.org/10.1145/3702653.3744310},
  year = {2025}
}

@article{merged1361,
  abstract = {To provide practice and assessment of computational thinking, we need specific problems students can solve. There are many such problems, but they are hard to find. Learning environments and assessments often use only specific types of problems and thus do not cover computational thinking in its whole scope. We provide an extensive catalog of well-structured computational thinking problem sets together with a systematic encoding of their features. Based on this encoding, we propose a four-level taxonomy that provides an organization of a wide variety of problems. The catalog, taxonomy, and problem features are useful for content authors, designers of learning environments, and researchers studying computational thinking.},
  address = {New York, NY, USA},
  articleno = {22},
  author = {Pel\'{a}nek, Radek and Effenberger, Tom\'{a}\v{s}},
  doi = {10.1145/3578269},
  issue_date = {June 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Skills; taxonomy; well-structured problems},
  month = {March},
  number = {2},
  numpages = {29},
  publisher = {Association for Computing Machinery},
  title = {The Landscape of Computational Thinking Problems for Practice and Assessment},
  url = {https://doi.org/10.1145/3578269},
  volume = {23},
  year = {2023}
}

@inproceedings{merged1362,
  abstract = {In an age of rapid technological development, primary schools now teach programming to young students, focusing on developing their computational thinking, problem-solving, and ability to use computers to create solutions. However, fostering computational thinking skills in younger students was a challenging task. The serious game CodeCombat has become a potential resource for instructing young students in primary schools on basic programming principles using Python.This study delved into the role of the serious game CodeCombat in advancing computational thinking competencies among primary school students undertaking Python in Macao. Using a quasi-experimental pretest-posttest approach, we examined 49 grade-one students over a two-week Python programming course facilitated by CodeCombat. The Computational Thinking Scale (CTS), encompassing Creativity, Cooperativity, Algorithmic Thinking, Problem Solving, and Critical Thinking, was employed to measure shifts in computational thinking before and after the teaching experiment.Data analysis through paired-sample t-test highlighted notable progress in computational thinking skills, with marked improvements specifically in Creativity, Critical Thinking, Algorithmic Thinking, and Problem Solving. However, Cooperativity did not exhibit the same upward trend, implying that CodeCombat's impact was more pronounced on solitary cognitive capabilities than collaborative skills. Moreover, the correlation between different dimensions indicated that these computational thinking skills were mutually reinforcing, suggesting that enhancing one might contribute to the development of others. The findings endorsed that game-based learning is effective in programming education and recommended integrating CodeCombat to improve computational thinking in learning Python programming in primary school.},
  address = {New York, NY, USA},
  author = {Choi, Wan Chong and Choi, Iek Chong},
  booktitle = {Proceedings of the 2024 5th International Conference on Education Development and Studies},
  doi = {10.1145/3669947.3669951},
  isbn = {9798400718083},
  keywords = {CodeCombat; Computational thinking; Gamification of learning; K-12 Programming education; Python programming; Serious game},
  location = {Cambridge, United Kingdom},
  numpages = {7},
  pages = {26–32},
  publisher = {Association for Computing Machinery},
  series = {ICEDS '24},
  title = {The Influence of CodeCombat on Computational Thinking in Python Programming Learning at Primary School},
  url = {https://doi.org/10.1145/3669947.3669951},
  year = {2024}
}

@inproceedings{merged1363,
  abstract = {Computational thinking (CT) provides opportunities for students to build the skills they need for everyday life, future academic success, and careers. Increasingly, districts are integrating CT into K-12 disciplinary subjects and a growing number of teachers need the knowledge to lead CT learning opportunities. CT is still nascent in teacher education, however, and not all teachers are receiving professional learning on the job. Teachers need effective methods of support to ensure they are providing students with high quality CT learning opportunities. We present methods of support for integrating CT into schools. The poster highlights four methods to support teacher professional learning: allowing ample time for collaboration, a school-based advocate championing CT integration, posting and promoting curated resources, and a foundational person anchoring the work as the initiative expands. In doing so, this poster provides interrelated examples of teacher support and highlights methods of continuous support for teachers integrating CT across content areas.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Rangel, Alessandra and Burke, Quinn and Mills, Kelly and Ruiz, Pati and Dunbar, Kyle},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635498},
  isbn = {9798400704246},
  keywords = {computational thinking; k-12; professional learning; teacher support},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1608–1609},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Champion, Collaborator, Curator, Anchor: Supporting K-12 Teachers to Integrate Computational Thinking},
  url = {https://doi.org/10.1145/3626253.3635498},
  year = {2024}
}

@inproceedings{merged1364,
  abstract = {In recent years, there has been a growing awareness of the need for computer science education opportunities and particularly for engaging students in computational thinking ideas and practices to help them understand how computing influences our world. At its core, computational thinking (CT) is seen as understanding how computational practices (such as, abstraction) and tools (such as modeling software) can be used to explore phenomena, solve problems, and influence our lives and society. The push for CT integration has called for preparing future educators to learn CT practices and tools through stand-alone courses and within the context of disciplinary pedagogy/methods courses. However, there are few instruments that measure pre-service teachers' attitudes towards computational thinking and its role in formal schooling. In this study, we developed and validated an instrument to measure pre-service teachers' attitudes towards CT, its role in students' lives, and their own self-efficacy to incorporate CT into their teaching. We report results from a principal components factor analysis on survey responses from 260 pre-service teachers to identify patterns and reduce the number of dimensions of comparison in the analysis. We discuss how pre-service teacher conceptions have implications for preparing future teachers to integrate computational thinking into their instruction.},
  address = {New York, NY, USA},
  author = {Yadav, Aman and Caeli, Elisa Nadire and Ocak, Ceren and Macann, Victoria},
  booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
  doi = {10.1145/3502718.3524783},
  isbn = {9781450392013},
  keywords = {computational thinking; pre-service teachers; teacher education},
  location = {Dublin, Ireland},
  numpages = {7},
  pages = {547–553},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '22},
  title = {Teacher Education and Computational Thinking: Measuring Pre-service Teacher Conceptions and Attitudes},
  url = {https://doi.org/10.1145/3502718.3524783},
  year = {2022}
}

@inproceedings{merged1365,
  abstract = {Based on work in an ongoing research-practice partnership, we share teacher-designed project-based learning (PBL) units that sought to integrate Appalachian heritage and CT. We offer reflections on the lessons learned in the design and implementation of PBL units in addition to making recommendations for future PBL units that integrate CT and cultural heritage. This work has implications for improving computing education in rural contexts and in PBL settings.},
  address = {New York, NY, USA},
  author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
  booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3641555.3705203},
  isbn = {9798400705328},
  keywords = {computational thinking; culturally sustaining; k-12; project-based learning; rural},
  location = {Pittsburgh, PA, USA},
  numpages = {2},
  pages = {1443–1444},
  publisher = {Association for Computing Machinery},
  series = {SIGCSETS 2025},
  title = {Integrating Computational Thinking, Project-Based Learning, and Cultural Heritage for Rural Middle School Students},
  url = {https://doi.org/10.1145/3641555.3705203},
  year = {2025}
}

@inproceedings{merged1366,
  abstract = {Computational thinking (CT) is essential for the 21st century learner. Yet, assessing CT remains challenging. This is particularly challenging in constructionist learning, where individual idiosyncrasies may clash with one-size-fits-all assessments. Tools like Dr. Scratch offer CT metrics that show promise for effective and scalable CT assessments, particularly in constructionist game-based learning (GBL). Prior work has advanced the design of automated CT metrics but hardly included teachers in the process. We extend Dr. Scratch to improve automated CT assessments for GBL and put teachers in the loop to assess its novel features. Specifically, we interviewed seven middle school teachers employing GBL in STEM curricula and asked them to provide feedback on the newly designed CT metrics. Teachers view the new CT metrics positively, underscoring their potential for adaptive CT assessments despite hindrances. We advance automated CT assessments via teacher evaluation toward design-sensitive CT metrics and CT for all.},
  address = {New York, NY, USA},
  articleno = {124},
  author = {Troiano, Giovanni M and Cassidy, Michael and Morales, Daniel Escobar and Pons, Guillermo and Abdollahi, Amir and Robles, Gregorio and Puttick, Gillian and Harteveld, Casper},
  booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3706598.3713368},
  isbn = {9798400713941},
  keywords = {Computational thinking; STEM; assessment; automated metrics; computer science education},
  numpages = {23},
  publisher = {Association for Computing Machinery},
  series = {CHI '25},
  title = {CT4ALL: Towards Putting Teachers in the Loop to Advance Automated Computational Thinking Metric Assessments in Game-Based Learning},
  url = {https://doi.org/10.1145/3706598.3713368},
  year = {2025}
}

@inproceedings{merged1367,
  abstract = {Computational thinking has become one of the key literacies necessary for talents in the digital and intelligent era of the 21st century. In the current educational environment, the content of the curriculum that is detached from reality and the fragmented knowledge have brought great difficulties to the cultivation of students' computational thinking ability. Contextual teaching can connect knowledge with reality. Through the e-learning platform combined with real-life scenarios to build a specific real situation, which can drive students to carry out rich thinking activities. Therefore, this study designed a blended contextual teaching model for the development of computational thinking based on contextual learning theory and constructivist learning theory. It was applied to the teaching of high school information technology courses, and the effectiveness of the model was verified by investigating and analyzing whether there were changes in students' academic performance and computational thinking ability under the blended contextual teaching model through the questionnaire survey method and the experimental research method. The results of the study show that the application of the model can effectively improve students' academic performance and computational thinking ability, which provides an effective reference and reference for future educational teaching practice.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Shao, Yanru and Liu, Yuqi and Dong, Jiamin and Li, Qiuhong and Chen, Yipan},
  booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3670013.3670027},
  isbn = {9798400717062},
  keywords = {Blended learning; Computational thinking; Information technology; Situated teaching model},
  location = {Fukuoka-shi, Japan},
  numpages = {8},
  pages = {99–106},
  publisher = {Association for Computing Machinery},
  series = {IC4E '24},
  title = {The Construction and Application of A Blended Contextual Teaching Model for Computational Thinking Development},
  url = {https://doi.org/10.1145/3670013.3670027},
  year = {2024}
}

@inbook{merged1368,
  abstract = {The transformation of urban environments and the rising presence of technology in daily life has shed some light over the importance of integrating computational thinking (CT) into early childhood education. This research explores the use of a tangible technology toolkit (TTT) to introduce CT in children aged 4 to 9. The project has been developed following a child-centered approach, thus putting at the heart of it principles of active learning and playfulness. A pilot study was conducted, comparing traditional methods and the use of the TTT to approach the theme of intelligent cities, which revealed improvements of CT skills within groups but no significant differences when comparing both methods. The TTT addresses concerns of accessibility, cost and the need for teacher training that were highlighted in previous studies. Future work will include an increase in the number of participants, a refinement of methodologies and improvement of the TTT.},
  address = {New York, NY, USA},
  author = {Abreu, Sara Patr\'{\i}cia},
  booktitle = {Proceedings of the 24th Interaction Design and Children},
  isbn = {9798400714733},
  numpages = {5},
  pages = {1010–1014},
  publisher = {Association for Computing Machinery},
  title = {Empowering children for the cities of the future: integrating computational thinking in early childhood education through tangible technology toolkits},
  url = {https://doi.org/10.1145/3713043.3731523},
  year = {2025}
}

@inproceedings{merged1369,
  address = {New York, NY, USA},
  articleno = {33},
  author = {Paludo, Giulia and Montresor, Alberto},
  booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3677619.3678129},
  isbn = {9798400710056},
  keywords = {Computational Thinking Education},
  location = {Munich, Germany},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '24},
  title = {Collaborative Approaches for Effective and Sustainable Integration of Computational Thinking Educational Strategies},
  url = {https://doi.org/10.1145/3677619.3678129},
  year = {2024}
}

@article{merged1370,
  address = {New York, NY, USA},
  author = {Pires, Ana Cristina and Rocha, Filipa and Guerreiro, Tiago and Nicolau, Hugo},
  doi = {10.1145/3665992},
  issn = {1072-5520},
  issue_date = {July - August 2024},
  journal = {Interactions},
  month = {June},
  number = {4},
  numpages = {6},
  pages = {32–37},
  publisher = {Association for Computing Machinery},
  title = {Inclusive Computational Thinking in Public Schools: A Case Study from Lisbon},
  url = {https://doi.org/10.1145/3665992},
  volume = {31},
  year = {2024}
}

@inproceedings{merged1371,
  abstract = {We propose a motor control-based characterization of how computational thinking (CT) can emerge from embodied performance. The account is based on children's activity during a tangible coding task, and a mechanism proposed by cognitive and motor neuroscience studies. For the task, the child used navigational symbols (forward, backward, rotate right, rotate left) to program the movements of a tangible robot on a 2-D grid. We propose that the development of CT through this task can be understood in terms of “tool incorporation into the body schema.” To illustrate the proposed mechanism, we use video data from one of three teaching sessions, where a group of four kindergartners learned to code using Cubetto (a tactile screen-free grid-based robotic toy). We argue that learning the task (i.e. being able to control Cubetto to perform goal-oriented movements) is challenging because the CT task requires learners to bridge three distinct discontinuities (spatial, temporal, and representational), to achieve control over the robot. We hypothesize that learners and facilitators are likely to engage in moves (both epistemic and pedagogical) that help bridge these gaps, and thus support the incorporation of the robot and its controller into the body schema. We characterize two such moves and explicate how they might support the incorporation process. The study is part of a larger program of design-based research aimed at helping young children develop CT.},
  address = {New York, NY, USA},
  author = {Sinha, Ravi and Swanson, Hillary and Clarke-Midura, Jody and Shumway, Jessica F. and Lee, Victor R. and Chandrasekharan, Sanjay},
  booktitle = {Proceedings of the 2023 Symposium on Learning, Design and Technology},
  doi = {10.1145/3594781.3594794},
  isbn = {9798400707360},
  keywords = {Computational thinking; Early childhood education; Embodied learning; Tool incorporation},
  location = {Evanston, IL, USA},
  numpages = {10},
  pages = {1–10},
  publisher = {Association for Computing Machinery},
  series = {LDT '23},
  title = {From Embodied Doing to Computational Thinking in Kindergarten: A Punctuated Motor Control Model},
  url = {https://doi.org/10.1145/3594781.3594794},
  year = {2023}
}

@inproceedings{merged1372,
  abstract = {This study investigates the Computational Thinking skill differences among novice programmers in relation to gender. Block-based visual programming languages such as Scratch particularly benefit K-12 programmers because they learn how to code intuitively. Our study analyzed 124 (62 males, 62 females) Scratch projects on the Scratch website, categorized projects on the basis of each user's gender and project type, and compared their Computational Thinking scores. The results of this study suggest that project types preferred by males require more programming construct reflected in the Computational Thinking score than that of females. Because gender differences appear by project type, project type presumably influences the gender gap in scores.},
  address = {New York, NY, USA},
  author = {Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576290},
  isbn = {9781450394338},
  keywords = {computational thinking; gender; k-12 education; scratch},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1344},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Gender Characteristics and Computational Thinking in Scratch},
  url = {https://doi.org/10.1145/3545947.3576290},
  year = {2023}
}

@inproceedings{merged1373,
  abstract = {This paper investigates whether aspects of structured dance and choreography may improve cognitive skills related to computational thinking. It also explores the relationship between performance on computational thinking tasks and motivation. Twenty participants,aged between 7 and 9 years old, undertook the Beginners Computational Thinking Test (BCTt) as a pre-test, took part in three dance related workshops then completed the BCTt as post-test and responded to an adapted version of the Intrinsic Motivation Inventory (IMI). Student performance on the BCTt improved significantly from pre-test to post-test for both boys and girls and seems generalised across the computational categories measured by BCTt. The study did not show a correlation between performance and motivation in girls but suggests that there may be some correlation between improvement in score and reported enjoyment in boys.},
  address = {New York, NY, USA},
  articleno = {40},
  author = {Fairlie, Fiona},
  booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3631802.3631811},
  isbn = {9798400716539},
  keywords = {computational thinking; computer education; dance},
  location = {Koli, Finland},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '23},
  title = {Encouraging the Development of Computational Thinking Skills through Structured Dance Activities (Discussion Paper)},
  url = {https://doi.org/10.1145/3631802.3631811},
  year = {2024}
}

@inproceedings{merged1374,
  abstract = {Using a design thinking approach, we surveyed and interviewed grade 6-9 teachers on their experience with Scratch and Parsons Programming Puzzles (PPP). The results lead us to extend Scratch with gameful PPP functionality focused on individual computational thinking (CT) concepts. In this paper, we vary elements of PPPs presented to 624 adult learners to identify those yielding manageable cognitive load (CL), and maximum CT motivation and learning efficiency, for a general populace. Findings indicate PPPs with feedback and without distractors limit CL, those with feedback produce highest CT motivation, and those with an isolated block palette and without distractors produce highest CT learning efficiency. We analyze study data across nine conditions to offer insight to those developing PPP systems with the aim to advance equitable CT education for all.},
  address = {New York, NY, USA},
  author = {Bender, Jeff and Zhao, Bingpu and Dziena, Alex and Kaiser, Gail},
  booktitle = {Proceedings of the 24th Australasian Computing Education Conference},
  doi = {10.1145/3511861.3511869},
  isbn = {9781450396431},
  keywords = {Cognitive Load; Computational Thinking; Learning Efficiency; Motivation; Parsons Programming Puzzles; Scratch},
  location = {Virtual Event, Australia},
  numpages = {10},
  pages = {66–75},
  publisher = {Association for Computing Machinery},
  series = {ACE '22},
  title = {Learning Computational Thinking Efficiently: How Parsons Programming Puzzles within Scratch Might Help},
  url = {https://doi.org/10.1145/3511861.3511869},
  year = {2022}
}

@inproceedings{merged1375,
  abstract = {Cultivating students' computational thinking skills is one of the important teaching goals of college computer courses, and constructing a scientific and effective structural framework for computational thinking is the basis for implementing computational thinking training. To this end, based on Sternberg's intelligence education theory, combined with software development and programming knowledge, a structural framework of computational thinking was constructed. Subsequently, a project-based teaching activity based on this framework to cultivate students' computational thinking skills was carried out in the college computer programming course "Software Development Technology". By measuring students' computational thinking skills before and after the activity, it was verified that the project-based teaching model based on the proposed framework had a significant effect on improving students' computational thinking skills. By constructing a structural framework of computational thinking that integrates the characteristics of disciplines, and taking programming teaching as a carrier to implement the cultivation of computational thinking skills, it can provide a new way for computer educators to cultivate students' computational thinking skills.},
  address = {New York, NY, USA},
  author = {Zhang, Wei and Song, Lingling and Huang, Xujun and Wang, Yi},
  booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
  doi = {10.1145/3629296.3629361},
  isbn = {9798400709111},
  keywords = {computational thinking; intelligence theories; project-based teaching; software development technology},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {404–408},
  publisher = {Association for Computing Machinery},
  series = {ICETC '23},
  title = {Construction and Practice of Computational Thinking Structural Framework with Sternberg's Intellectual Education Theory},
  url = {https://doi.org/10.1145/3629296.3629361},
  year = {2024}
}

@inproceedings{merged1376,
  abstract = {Providing high-quality computing education to all students in primary school is essential for reducing computing disparities, by preparing students for success in secondary education. To impact the quality of computing education experiences for large numbers of diverse primary schools and students, a teacher professional development model must be designed for scalability from the outset. As many countries work to expand national access to computing education at the primary level and reach hundreds or thousands of teachers in the process, there is a need to understand effective systems-based strategies for scaling teacher professional learning across diverse schools and communities. This experience report will share lessons learned from the implementation of an initiative to prepare thousands of primary school (K-5) teachers to integrate computational thinking into their instruction.Initial findings showed that the intervention was able to reach schools in diverse communities. Nearly all teachers completing the program indicated that they planned to use the training materials, they had the knowledge and skills to integrate computational thinking into their classes, and the training would benefit their students. Teachers reported that the most useful aspects of the program included hands-on training and materials for integrating lessons into their instruction. They shared suggestions for improving the program, such as offering more training time, refining asynchronous training, and providing more resources for implementation in specific teacher contexts. Findings highlighted the importance of designing and testing scalable computing interventions with a broad range of educators and schools.},
  address = {New York, NY, USA},
  author = {Jacobson, Miriam R. and Wang, Zhuoying and Fletcher, Carol L. and Carrell, Amy L.},
  booktitle = {Proceedings of the 30th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3724363.3729038},
  isbn = {9798400715679},
  keywords = {computational thinking education; computing education; primary education teachers},
  location = {Nijmegen, Netherlands},
  numpages = {7},
  pages = {541–547},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2025},
  title = {Building Teacher Capacity to Integrate Computational Thinking into Primary School Instruction: Strategies for Designing High-Quality and Scalable Interventions},
  url = {https://doi.org/10.1145/3724363.3729038},
  year = {2025}
}

@inproceedings{merged1377,
  abstract = {Pair programming is a collaborative activity that enhances students’ computational thinking (CT) skills. Analyzing students’ interactions during pair programming provides valuable insights into effective learning. However, interpreting classroom dialogues is a challenging and complex task. Due to the simultaneous interaction between interlocutors and other ambient noise in collaborative learning contexts, previous work heavily relied on manual transcription and coding, which is labor-intensive and time-consuming. Recent advancements in speech and language processing offer promising opportunities to automate and scale up dialogue analysis. Besides, previous work mainly focused on task-related interactions, with little attention to social interactions. To address these gaps, we conducted a four-week CT course with 26 fifth-grade primary school students. We recorded their discussions, transcribed them with speech processing models, and developed a coding scheme and applied LLMs for annotation. Our AI-driven pipeline effectively analyzed classroom recordings with high accuracy and efficiency. After identifying the dialogue patterns, we investigated the relationships between these patterns and CT performance. Four clusters of dialogue patterns have been identified: Inquiry, Constructive Collaboration, Disengagement, and Disputation. We observed that Inquiry and Constructive Collaboration patterns were positively related to students’ CT skills, while Disengagement and Disputation patterns were associated with lower CT performance. This study contributes to the understanding of how dialogue patterns relate to CT performance and provides implications for both research and educational practice in CT learning.},
  address = {New York, NY, USA},
  author = {Yin, Stella Xin and Liu, Zhengyuan and Goh, Dion Hoe-Lian and Quek, Choon Lang and Chen, Nancy F.},
  booktitle = {Proceedings of the 15th International Learning Analytics and Knowledge Conference},
  doi = {10.1145/3706468.3706474},
  isbn = {9798400707018},
  keywords = {Collaborative learning; Computational thinking; Dialogue analysis; Large language models; Pair programming; Speech and language processing},
  numpages = {11},
  pages = {47–57},
  publisher = {Association for Computing Machinery},
  series = {LAK '25},
  title = {Scaling Up Collaborative Dialogue Analysis: An AI-driven Approach to Understanding Dialogue Patterns in Computational Thinking Education},
  url = {https://doi.org/10.1145/3706468.3706474},
  year = {2025}
}

@inproceedings{merged1378,
  abstract = {Computational thinking has been identified as an important skill for children to learn in the 21st century, and many innovative kits and tools have been developed to integrate it into children’s learning. Yet, most solutions require the use of devices like computers or other expensive hardware, thus being inaccessible to low-income schools and communities. We present Cartoonimator, a low-cost, paper-based computational kit for children to create animations and engage with computational thinking. Cartoonimator requires only paper and a smartphone to use, offering an affordable learning experience. Children can draw the scenes and characters for their animation on the paper, which is printed with computer vision markers. We developed the mobile web app to provide an interface to capture keyframes and compile them into animations. In this paper, we describe the implementation and workflow of Cartoonimator, its deployment with children at a local STEAM event, and a planned evaluation for the kit.},
  address = {New York, NY, USA},
  author = {Ranjan, Krithik and Gyory, Peter and Rivera, Michael L and Do, Ellen Yi-Luen},
  booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3585088.3593886},
  isbn = {9798400701313},
  keywords = {animation; computational thinking; paper computing; tangible programming},
  location = {Chicago, IL, USA},
  numpages = {5},
  pages = {517–521},
  publisher = {Association for Computing Machinery},
  series = {IDC '23},
  title = {Cartoonimator: A Low-cost, Paper-based Animation Kit for Computational Thinking},
  url = {https://doi.org/10.1145/3585088.3593886},
  year = {2023}
}

@book{merged1379,
  address = {New York, NY, USA},
  editor = {Ottenbreit-Leftwich, Anne and Yadav, Aman},
  isbn = {9781450396158},
  publisher = {Association for Computing Machinery},
  title = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  year = {2022}
}

@inproceedings{merged1380,
  abstract = {Computational thinking (CT) and problem-solving skills are increasingly integrated into K-8 school curricula worldwide. Consequently, there is a growing need to develop reliable assessments for measuring students' proficiency in these skills. Recent works have proposed tests for assessing these skills across various CT concepts and practices, in particular, based on multi-choice items enabling psychometric validation and usage in large-scale studies. Despite their practical relevance, these tests are limited in how they measure students' computational creativity, a crucial ability when applying CT and problem solving in real-world settings. In our work, we have developed ACE, a novel test focusing on the three higher cognitive levels in Bloom's Taxonomy, i.e., Analyze, Evaluate, and Create. ACE comprises a diverse set of 7x3 multi-choice items spanning these three levels, grounded in elementary block-based visual programming. We evaluate the psychometric properties of ACE through a study conducted with 371 students in grades 3-7 from 10 schools. Based on several psychometric analysis frameworks, our results confirm the reliability and validity of ACE. Our study also shows a positive correlation between students' performance on ACE and performance on Hour of Code: Maze Challenge by Code.org.},
  address = {New York, NY, USA},
  author = {Ghosh, Ahana and Malva, Liina and Singla, Adish},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
  doi = {10.1145/3626252.3630778},
  isbn = {9798400704239},
  keywords = {assessment tools; bloom's taxonomy; computational thinking},
  location = {Portland, OR, USA},
  numpages = {7},
  pages = {387–393},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Analyzing-Evaluating-Creating: Assessing Computational Thinking and Problem Solving in Visual Programming Domains},
  url = {https://doi.org/10.1145/3626252.3630778},
  year = {2024}
}

@inbook{merged1381,
  abstract = {Due to the increasingly computational nature of professions, computational thinking (CT) is of growing importance to authentic science learning and the education of future scientists. To meet this need, CT integration is expanding within classrooms. We provided professional development (PD) for pre-service and in-service teachers focused on integrating CT into elementary science. At the PD culmination, 36 teachers wrote and enacted 22 unique CT-integrated science lessons, individually or with teaching partners. Waterman et al. (2020) suggested three levels of integrating CT within lesson plans: exist, labeling already present CT; enhance, adding CT components; and extend, adding activities supporting science learning with CT. Using this framework, we examined these lesson plans, their alignment to CT practices, and the level of CT integration. Our results indicated 83.3\% of teachers successfully integrated CT within their lessons, focusing on Using Data, Computational Simulations, and Programming practices. Further, we found the level of integration differed by CT practice. Data practices generally led to exist level integration, Computational Simulation practices to enhance level integration, and Programming practices tended to extend science lessons or exhibit the science topic with Programming. Our data demonstrated teachers can write CT-integrated lesson plans, but all levels of integration are not equal opportunities for authentic scientific learning. As the field seeks to offer equitable and quality CT experiences for all students integrated within disciplinary subjects, we must understand the level of CT integration and consider how different levels of integration could affect opportunities for students.},
  address = {New York, NY, USA},
  author = {Coenraad, Merijke and Cabrera, Lautaro and Killen, Heather and Plane, Jan and Ketelhut, Diane Jass},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {11–18},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking integration in elementary teachers' science lesson plans},
  url = {https://doi.org/10.1145/3507951.3519283},
  year = {2022}
}

@inproceedings{merged1382,
  abstract = {In the educational setting, consolidating computational thinking (CT) and digital literacy (DL) as two important skills for 21st- century professionals have become more important than ever. Nonetheless, scientific literature on both topics has rarely focused on developing frames of reference that offer incorporation of the interweaving of these skills. The objective of this document is to analyze and discuss the relationship between CT and DL in a framework where technology is used for education, with the end goal of designing a conceptual proposal that shows its common elements. The result is an initial proposal of interweaving that addresses skills such as abstraction (critical/cognitive-informational-communication), algorithm design (critical/cognitive-informational), and communication as common components, among others. We concluded that this proposal must be discussed, broadened, and considered as an initial reference framework for further analyses and delving into the topic.},
  address = {New York, NY, USA},
  author = {George-Reyes, Carlos Enrique and Rocha Estrada, Francisco Javier and Glasserman-Morales, Leonardo David},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486412},
  isbn = {9781450390668},
  keywords = {Computational thinking; computer literacy; educational innovation; higher education; interweaving},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {13–17},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Interweaving Digital Literacy with Computational Thinking},
  url = {https://doi.org/10.1145/3486011.3486412},
  year = {2021}
}

@inbook{merged1383,
  address = {New York, NY, USA},
  author = {Ottenbreit-Leftwich, Anne and Yadav, Aman},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  pages = {iii–vi},
  publisher = {Association for Computing Machinery},
  title = {Introduction: Computational thinking in preK-5: empirical evidence for integration and future directions},
  url = {https://doi.org/10.1145/3507951.3519281},
  year = {2022}
}

@inproceedings{merged1384,
  abstract = {This paper describes a research-practice partnership (RPP) in western South Dakota involving twenty 4th and 5th grade teachers and a support team of university researchers and K-12 learning specialists. For three years, the RPP has been exploring ways to strengthen computational thinking within elementary math and science instruction, attending to policy considerations and the local education landscape. The RPP is motivated in part by the hypothesis that a larger, more diverse group of students will choose to enroll in computer science courses in high school if they gain familiarity and confidence related to computational concepts at earlier grades. Feedback from participating teachers along with student attitude and problem-solving data suggest this is a promising approach.},
  address = {New York, NY, USA},
  author = {Sayler, Ben and Anderson, Ann and Caffee, Hannah and Carroll, Becky and Hammel, Koreen and Her Many Horses, Ian and Kertzman, Deann and Lange, Pamela and Myers, Rebecca and Reiner, Nicol and Uhre-Balk, Nicole and Webber, Kimberly},
  booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
  doi = {10.1145/3653666.3656103},
  isbn = {9798400706264},
  keywords = {broadening participation; computational thinking; elementary computer science; equity; research-practice partnership},
  location = {Atlanta, GA, USA},
  numpages = {5},
  pages = {30–34},
  publisher = {Association for Computing Machinery},
  series = {RESPECT 2024},
  title = {Strengthening Computational Thinking within Upper Elementary Classrooms: A Strategy for Broadening Participation in Computer Science},
  url = {https://doi.org/10.1145/3653666.3656103},
  year = {2024}
}

@inproceedings{merged1385,
  abstract = {Virtual reality (VR) technology has been widely used in many industries. Therefore, the cultivation of virtual reality technology talents is imminent. However, there are relatively few universities that carry out virtual reality courses. At the same time, the virtual reality course is a good carrier to cultivate computational thinking. It can improve students ' problem-solving ability, creativity and teamwork ability, which are also necessary to cultivate computational thinking. Computational thinking, as a necessary basic skill for talents in the 21 st century, needs to be improved in the training approach of college teaching. However, there are relatively few teaching approachs to cultivate computational thinking through virtual reality (VR) courses. Based on this, this study constructs a design-based STEM+VR teaching approach, which combines the interdisciplinary knowledge of STEM education with VR subject knowledge, aiming to cultivate college students ' computational thinking through virtual reality courses. In this study, a single group of pre-test and post-test experiments were conducted to investigate the complex ability of computational thinking of a college student in Wuhan, including five sub-dimensions:creativity,algorithmic hinking, collaborative ability, critical thinking and dimensional problem solving.The research shows that after the design-based STEM + VR teaching, the abilities in the sub-dimension of computational thinking are significantly improved. The design-based STEM + VR teaching case provided in this study is expected to provide some reference for the use of virtual reality courses to cultivate computational thinking in college education.},
  address = {New York, NY, USA},
  author = {Li, Xing and Zhao, MingYue and Ai, Di and Zhou, XiaoChun and Xiang, Hui},
  booktitle = {Proceedings of the 2024 9th International Conference on Distance Education and Learning},
  doi = {10.1145/3675812.3675867},
  isbn = {9798400716805},
  keywords = {STEM+VR; Virtual Reality ( VR ); computational thinking; teaching approach},
  location = {Guangzhou, China},
  numpages = {6},
  pages = {217–222},
  publisher = {Association for Computing Machinery},
  series = {ICDEL '24},
  title = {An empirical study on the design-based STEM + VR teaching approach to cultivate college students' computational thinking},
  url = {https://doi.org/10.1145/3675812.3675867},
  year = {2024}
}

@inproceedings{merged1386,
  abstract = {Students who receive special services in mathematics or neurodiverse learners (NDLs) deserve to learn mathematics at a rigorous and equitable level as their peers. Yet, many of these students are not reaching proficiency. Computational thinking (CT) may function as a bridge between students' mathematical learning and their everyday lives. We argue that computational thinking is a pathway for NDLs to follow that will bridge the connections between math instruction and the real-life problems with which NDLs are eager to engage. We identified the critical elements needed to support rural special educators' integration of CT into math instruction by identifying intersections between CT, Math, and the assets of NDLs, as well as barriers to implementation. By leveraging connections from an existing RPP (Research-Practice Partnership), which focuses on CS education and Business intersection in rural Maine schools, we created an opportunity for participatory research for special educators and paraprofessionals often overlooked in these processes. We employed a multi-method, design-based research (DBR) approach. Through observational, survey, and interview data, we found that 1) educators are not currently receiving support for integrating CT in special education classrooms, 2) activities piloted by our educators were well received by students, 3) current standards and Individualized Educational Plan (IEP) requirements for NDLs are a significant barrier to implementation. The need for expanded, regular PD for special educators is evident, as is the potential for CT as a bridge for mathematical understanding for NDLs.},
  address = {New York, NY, USA},
  author = {Kastelein, Kate and Dawson, Kelsie and Tate, Rhonda},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635476},
  isbn = {9798400704246},
  keywords = {asset-based; computational thinking; ct; math practices; neurodiversity},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1698–1699},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Bridging the Gap: Computational Thinking as a Pathway to Equitable Math Education for Neurodiverse Learners},
  url = {https://doi.org/10.1145/3626253.3635476},
  year = {2024}
}

@inproceedings{merged1387,
  abstract = {In recent years, computational thinking (CT) has focused on how children and citizens develop basic computing skills which empower them to participate in a digitised society and broaden participation and engagement with CT. We present the exploration of a craftsmanship-driven approach to engage people in CT. To explore this approach a team of knitters, a computer scientist and a computing education expert iteratively designed the KnitxCode workshop. KnitxCode utilises knitting in combination with CT concepts as the foundation for the activities. The workshop was evaluated by 12 participants with no programming experience and with knitting experience ranging from 2-25 years (M = 6). From the evaluation we found that the craftsmanship-driven approach seemed to provide the participants with confidence to learning CT, as shared concepts and practices between knitting and computing supported transitioning from knitting craftsmanship to computing and in this way served to demystify computing.},
  address = {New York, NY, USA},
  articleno = {48},
  author = {S\o{}rensen, Marie-Louise Stisen Kjerstein and Fog, Bjarke Vognstrup and Musaeus, Line Have and Petersen, Marianne Graves},
  booktitle = {Adjunct Proceedings of the 2022 Nordic Human-Computer Interaction Conference},
  doi = {10.1145/3547522.3547680},
  isbn = {9781450394482},
  keywords = {computational thinking; craftsmanship; knitting; novice programming},
  location = {Aarhus, Denmark},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {NordiCHI '22 Adjunct},
  title = {KnitxCode: Exploring a Craftsmanship-driven Approach to Computational Thinking},
  url = {https://doi.org/10.1145/3547522.3547680},
  year = {2022}
}

@inproceedings{merged1388,
  abstract = {In this poster, we will present approaches and associated design principles for integrating computational thinking (CT) into middle school Social Studies, Arts, and Language Arts instruction to enhance disciplinary learning. We used four steps to identify these approaches and design principles: (1) co-design with teachers and experts in computer science and CT education to ideate CT-integrated lessons; (2) identifying initial design principles based on the ideated lessons; (3) consultation with subject matter experts; and (4) conducting a Delphi study with pedagogical experts (e.g., teachers, curriculum writers, teacher educators) to examine the clarity, feasibility and potential impact of the design principles. The process led to three broad approaches to integrate CT into Social Studies instruction that included 14 design principles, three for Arts with 16 design principles, and four for Language Arts with 12 design principles.},
  address = {New York, NY, USA},
  author = {Caskurlu, Secil and Hu, Anne Drew and Yadav, Aman and Santo, Rafi},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499071},
  isbn = {9781450390712},
  keywords = {arts; computational thinking; design principles; k-12; language arts; social studies},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1120},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Computational Thinking Integration Design Principles in Humanities},
  url = {https://doi.org/10.1145/3478432.3499071},
  year = {2022}
}

@inproceedings{merged1389,
  abstract = {Nature connection fosters children's healthy development, and long-term sustainable behaviours. Most research into children-nature connection has focused on positive experiences. However, theories of constructive hope suggest that as well as imbuing a love of nature we should also help children understand environmental challenges. Computational thinking is a skillset that might help young children frame and address complex problems. This skillset is currently exclusively developed indoors using technological devices and indoor activities. Our research explored an opportunity to develop young children's computational thinking skills through nature play. An observation and contextual inquiry study was conducted with young children in an Early Childhood Education Centre. We found that computational thinking is evident in children's outdoor nature play and that HCI research could undertake design to further enhance their computational thinking skills outdoors. This can add value to their learning by harnessing their interest, understanding and connection, and by introducing children to environmental problem-solving.},
  address = {New York, NY, USA},
  author = {Om, Chimi and Brereton, Margot and Vella, Kellie and Ploderer, Bernd and Dema, Tshering and Dobson, Madeleine Rose and Murcia, Karen},
  booktitle = {Proceedings of the 35th Australian Computer-Human Interaction Conference},
  doi = {10.1145/3638380.3638447},
  isbn = {9798400717079},
  location = {Wellington, New Zealand},
  numpages = {14},
  pages = {536–549},
  publisher = {Association for Computing Machinery},
  series = {OzCHI '23},
  title = {Rethinking the Development of Computational Thinking Skills in Young Children through Nature Play},
  url = {https://doi.org/10.1145/3638380.3638447},
  year = {2024}
}

@inproceedings{merged1390,
  abstract = {Self-efficacy is an important construct in education, as it can influence (among other aspects) perseverance, engagement and success on educational tasks. As such, a student’s Computational Thinking (CT) self-efficacy can have an important influence on, and may be a predictor for, the development and use of CT skills. This poster abstract provides the details of an in-progress study in which we develop a scale to measure CT self-efficacy in different contexts.},
  address = {New York, NY, USA},
  articleno = {28},
  author = {De Jong, Imke and Jeuring, Johan},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565954},
  isbn = {9781450396165},
  keywords = {computational thinking; scale development; self-efficacy},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Developing a Self-efficacy Scale for Computational Thinking (CT-SES)},
  url = {https://doi.org/10.1145/3564721.3565954},
  year = {2022}
}

@inproceedings{merged1391,
  abstract = {With the development of the digital age, online teaching and learning is becoming more widespread in schools around the world. In the online teaching environment, the teaching mode of the course is an important element that receives attention in education and teaching. The online teaching mode based on the cultivation of computational thinking can improve students' learning interest and cultivate their innovative thinking ability. However, the author found through educational internship that there are problems such as single teaching activities, lack of teacher-student interaction, poor cooperative learning, and short independent learning time in high school information technology classrooms, which lead to low computational thinking ability and are not conducive to the development of students' innovative ability. The development of students' computational thinking ability is a requirement put forward by the high school information technology curriculum to secondary school students, and the improvement of computational thinking can help students adapt to the future society and meet the demand of future innovative talents. Therefore, this study takes high school students as the research object, under the guidance of constructivism and cognitivism theories, adopts survey research, experimental research and other research methods to construct and verify the online teaching mode based on the cultivation of computational thinking in high school information technology courses. The results of the study show that the online teaching mode based on the development of computational thinking can effectively improve students' algorithmic, evaluation, decomposition, abstraction and generalization thinking abilities, and thus enhance the online learning effect.},
  address = {New York, NY, USA},
  author = {Yang, Hairu and Liang, Zhou and Ma, Mingyue and Zhang, Xiaoyu and Fu, Yan and Zhang, Yongmei},
  booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
  doi = {10.1145/3670013.3670033},
  isbn = {9798400717062},
  keywords = {Information technology courses; computational thinking; online teaching; teaching mode},
  location = {Fukuoka-shi, Japan},
  numpages = {8},
  pages = {228–235},
  publisher = {Association for Computing Machinery},
  series = {IC4E '24},
  title = {Study on Mode of Cultivating Computational Thinking in Online Teaching of Information Technology:A Quasi-Experimental Study},
  url = {https://doi.org/10.1145/3670013.3670033},
  year = {2024}
}

@inproceedings{merged1392,
  abstract = {Recognizing effective approaches to communicate computational thinking (CT) ideas to K-12 learners is necessary. Co-design approach has been identified as an effective pedagogy for communicating CT ideas. However, there is a dearth of studies on co-design pedagogical scenarios. Hence, this study aimed at developing a CT learning co-design scenario, translate into artifact, and implement with Nigerian secondary school students.},
  address = {New York, NY, USA},
  author = {Sunday, Amos Oyelere},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594139},
  isbn = {9798400701399},
  keywords = {K-12; co-design; computational thinking; pedagogy; scenarios},
  location = {Turku, Finland},
  numpages = {2},
  pages = {609–610},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Design and Implementation of Co-design Pedagogical Scenarios for Learning Computational Thinking},
  url = {https://doi.org/10.1145/3587103.3594139},
  year = {2023}
}

@inproceedings{merged1393,
  abstract = {In the context of educational equity and social participation in the modern technological world, future skills, including problem-solving, are increasingly important for children. Consequently, various projects have developed learning opportunities in Making and Computational Thinking to foster these skills in early childhood education (ECE). However, several literature reviews highlight a research gap concerning students' process-related competencies and the actual implementation of these learning opportunities by educators in kindergarten. In this context, an intervention that will be taught by kindergarten teachers was designed. This article reports on the design of an intervention incorporating Making and Computational Thinking for students aged 5 and 6, developed during a workshop with 12 experts in ECE, Making, and Computing Education.},
  address = {New York, NY, USA},
  author = {Bahr, Tobias},
  booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
  doi = {10.1145/3649409.3691081},
  isbn = {9798400706042},
  keywords = {K-12; computational thinking; computer science education; early childhood education; kindergarten; making},
  location = {Virtual Event, NC, USA},
  numpages = {2},
  pages = {297–298},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE Virtual 2024},
  title = {Integrating Making and Computational Thinking in Early Childhood Education: Preliminary Outcomes from a Teacher Trainer Workshop on Designing an Intervention},
  url = {https://doi.org/10.1145/3649409.3691081},
  year = {2024}
}

@inproceedings{merged1394,
  abstract = {Computational Thinking (CT) is a highly contentious subject with many diverging meanings and definitions. This study presents a preliminary literature review of 71 peer-reviewed articles on CT. The papers indicate the existence of five main aspects that have historically been used in association with its definition: Algorithm, Abstraction, Modelling, Simulation, and Implementation. Based on this preliminary literature study, semi-structured interviews with eight CT scholars are conducted, in order to evaluate these aspects and to identify qualitatively different perspectives on CT, which integrate the mentioned aspects in different ways. From the interviews, three different perspectives emerged, focusing on: Reasoning, Simplification, and Automation. Furthermore, the goal of having computationally educated citizens is extrapolated from the interviews, indicating an additional perspective (+1) titled Empowerment, which appears as embedded within all the previous three perspectives. This paper proposes to put these three (+1) perspectives in dialogue, in an effort to support researchers and practitioners working with CT across different fields.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Nicolajsen, Sebastian Mateos and Pischetola, Magda and Grabarczyk, Pawel and Brabrand, Claus},
  booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3488042.3490024},
  isbn = {9781450384889},
  location = {Joensuu, Finland},
  numpages = {11},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '21},
  title = {Three +1 Perspectives on Computational Thinking},
  url = {https://doi.org/10.1145/3488042.3490024},
  year = {2021}
}

@inproceedings{merged1395,
  abstract = {Printing 3D objects is exciting and engaging for young learners. However, how can this emerging technology benefit the development of skills, such as Computational Thinking (CT) and Design Thinking (DT), through a meaningful process of imagining, designing and tinkering with objects that could be used in real-world problems? Our knowledge is still limited, due to the complexity of designing 3D printable models from scratch with the existing digital tools. This paper discusses a web-based tool that enables learners to create and dynamically manipulate the behavior and properties of 3D printable models with high-level programming. This design aims to foster computational thinking, creativity, and design thinking skills as it focuses on the design process of the model, its behavior and its usage after printing. It also presents the results of a pilot study in which secondary school students engaged in a Design Thinking project for designing and printing sustainable everyday objects using this design. The study revealed new kinds of educational potential of 3D printing including the understanding of complex mathematical and CT ideas that were too complicated before, and the connection of CT practices with real-world problems through the implementation of a Design Thinking project with digital media.},
  address = {New York, NY, USA},
  author = {Grizioti, Marianthi and Kynigos, Chronis and Nikolaou, Maria-Stella},
  booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3628516.3655810},
  isbn = {9798400704420},
  keywords = {3D printing; Computational Thinking; Design Thinking; Emerging Technologies; Logo-based programming},
  location = {Delft, Netherlands},
  numpages = {9},
  pages = {133–141},
  publisher = {Association for Computing Machinery},
  series = {IDC '24},
  title = {Enhancing Computational Thinking with 3D printing: Imagining, designing, and printing 3D objects to solve real-world problems.},
  url = {https://doi.org/10.1145/3628516.3655810},
  year = {2024}
}

@inproceedings{merged1396,
  abstract = {Computational thinking is a key competence for children to learn in today’s digitized world. In order to effectively teach computational thinking, elementary science teachers need to have appropriate professional knowledge, consisting of content as well as pedagogical content knowledge and pedagogical knowledge [15]. This research project will adapt the Computational Thinking Test (CTt) to assess German pre-service teachers’ content knowledge in the area of computational thinking, and develop corresponding items based on case vignettes to assess pedagogical content knowledge.},
  address = {New York, NY, USA},
  articleno = {32},
  author = {Arndt, Nicolas and Br\"{u}ckmann, Maja},
  booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
  doi = {10.1145/3605468.3609779},
  isbn = {9798400708510},
  keywords = {case vignettes; computational thinking; content knowledge (CK); elementary science education; pedagogical content knowledge (PCK); pre-service teachers},
  location = {Cambridge, United Kingdom},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '23},
  title = {Assessing Pre-Service Elementary Science Education Teachers’ Professional Knowledge in the Field of Computational Thinking},
  url = {https://doi.org/10.1145/3605468.3609779},
  year = {2023}
}

@inproceedings{merged1397,
  abstract = {As computational thinking (CT) becomes increasingly acknowledged as an important skill in education, self-directed learning (SDL) emerges as a key strategy for developing this capability. The advent of generative AI (GenAI) conversational agents has disrupted the landscape of SDL. However, many questions still arise about several user experience aspects of these agents. This paper focuses on two of these questions: personalization and long-term support. As such, the first part of this study explores the effectiveness of personalizing GenAI through prompt-tuning using a CT-based prompt for solving programming challenges. The second part focuses on identifying the strengths and weaknesses of a GenAI model in a semester-long programming project. Our findings indicate that while prompt-tuning could hinder ease of use and perceived learning assistance, it might lead to higher learning outcomes. Results from a thematic analysis also indicate that GenAI is useful for programming and debugging, but it presents challenges such as over-reliance and diminishing utility over time.},
  address = {New York, NY, USA},
  articleno = {13},
  author = {Ouaazki, Abdessalam and Bergram, Kristoffer and Farah, Juan Carlos and Gillet, Denis and Holzer, Adrian},
  booktitle = {Proceedings of the 6th ACM Conference on Conversational User Interfaces},
  doi = {10.1145/3640794.3665542},
  isbn = {9798400705113},
  keywords = {ChatGPT; Chatbots; Education; Generative AI; Programming; Student Perceptions},
  location = {Luxembourg, Luxembourg},
  numpages = {12},
  publisher = {Association for Computing Machinery},
  series = {CUI '24},
  title = {Generative AI-Enabled Conversational Interaction to Support Self-Directed Learning Experiences in Transversal Computational Thinking},
  url = {https://doi.org/10.1145/3640794.3665542},
  year = {2024}
}

@inproceedings{merged1398,
  abstract = {This study analyzed the relationship between computational thinking (CT) and coding attitudes of upper elementary students after exposure to a year-long CT curriculum. Using ordinary least squares regression and controlling for student demographics (i.e., gender and English Learner (EL) status), we found that CT skills were a significant factor in modeling coding attitudes, regardless of demographic controls. Interviews of the students unveiled an interaction between coding interest and social values in a debugging process.},
  address = {New York, NY, USA},
  author = {Ojeda-Ramirez, Santiago and Parker, Miranda C. and Garcia, Leiny and Tate, Tamara and Villa, Jillian Rae and Warschauer, Mark},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576256},
  isbn = {9781450394338},
  keywords = {computational thinking; early coding attitudes; elementary school},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1308},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Computational Thinking and Attitudes Towards Computing: An Emerging Relationship in Elementary Students},
  url = {https://doi.org/10.1145/3545947.3576256},
  year = {2023}
}

@inproceedings{merged1399,
  abstract = {Computational thinking can be deemed as thinking in algorithmic way, with which one can transpose given problems into computer algorithms. Since computational thinking requires abstract reasoning, it should not depend on particular programming languages. Unfortunately, introductory programming courses (CS1) often give students false impression that their goals are to teach a particular programming language. This study shares the design of new pedagogy for CS1 that removes dependency on a particular language and promotes computational thinking by teaching multiple programming languages simultaneously. Specifically, chosen programming languages range from low-level to high-level to expose students to different levels of abstraction from the details of computer architecture. Initial student survey responses from both trial and control groups show that there are significant improvements for the trial groups.},
  address = {New York, NY, USA},
  author = {Lee, Dongeun and Hu, Kaoning and El Ariss, Omar and Kwon, Kibum},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576322},
  isbn = {9781450394338},
  keywords = {computational thinking; cs1; multiple programming languages; programming courses},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1377},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Multiple Programming Languages for Improving Computational Thinking in CS1},
  url = {https://doi.org/10.1145/3545947.3576322},
  year = {2023}
}

@inproceedings{merged1400,
  abstract = {Computational thinking (CT) is a foundational skill of computer science that all elementary students should have equitable access to for learning and engaging in throughout their day. For the integration of CT into science instruction to be successful, teachers need to be able to communicate clearly what CT is and how it is defined through precise language. The intention of this poster is to explore the meaning of CT at the elementary level through a critical review of literature, analysis of standards, value-mapping across multiple stakeholders, analysis of written responses from elementary teachers on a CT survey, and deep discussions of a Design-Based Implementation Research Team (DBIR). The data collected and analyzed from these sources was combined to develop a definition of CT that would support implementation of CT for elementary teachers.},
  address = {New York, NY, USA},
  author = {Pietros, Jennifer and Sweetman, Sara and Shim, Minsuk},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499120},
  isbn = {9781450390712},
  keywords = {computational thinking; definition; elementary science},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1112},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {How is Computational Thinking Defined in Elementary Science?},
  url = {https://doi.org/10.1145/3478432.3499120},
  year = {2022}
}

@article{merged1401,
  abstract = {Computational thinking (CT) is playing an increasingly relevant role within disciplinary teaching in elementary school, particularly in science. However, many teachers are unfamiliar with CT, either because their education occurred before the popularization of CT or because CT instruction was not included in their pre-service coursework. For these teachers, CT professional development (PD) becomes a primary mechanism to close their CT knowledge gap. While CT PD has demonstrated success at increasing teacher's CT understanding, researchers have reported varied outcomes in supporting teachers to write CT-integrated lesson plans. To explore how we might support teachers to integrate CT into elementary science, we employed design-based research (DBR) in a dual-track design of in-class CT instruction for pre-service undergraduates within an elementary science methods class paired with a collaborative, multi-month PD opportunity for pre- and in-service teachers. In this article, we reflect on our 5-year period of DBR and present our design insights and implications for CT instruction and curriculum design from each iteration. Our findings on best practices will inform both teacher educators and PD providers within CT education. Our work will also be of interest to researchers considering DBR for technology-based educational projects.},
  address = {New York, NY, USA},
  articleno = {41},
  author = {Killen, Heather and Coenraad, Merijke and Byrne, Virginia and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jandelyn D.},
  doi = {10.1145/3618115},
  issue_date = {December 2023},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {Teacher education; computational thinking; culturally responsive teaching; design-based research; professional development},
  month = {November},
  number = {4},
  numpages = {36},
  publisher = {Association for Computing Machinery},
  title = {Teacher Education to Integrate Computational Thinking into Elementary Science: A Design-Based Research Study},
  url = {https://doi.org/10.1145/3618115},
  volume = {23},
  year = {2023}
}

@inproceedings{merged1402,
  abstract = {Adaptive support can help learners in Open-Ended Learning Environments (OELEs), where the free-form nature of the interaction can be confusing to students. In this paper, we design and evaluate an Intelligent Pedagogical Agent (IPA) for an OELE designed to foster Computational Thinking (CT). Specifically, we design help interventions for an in-the-wild scenario where students interact with the OELE in an unmonitored, self-directed manner. We build a student model by extracting meaningful student behaviors on real-world interaction data obtained during interaction in online classrooms and including expert insights. We show that these student models perform better than a baseline and have the potential for adaptive support in self-directed interaction with the OELE. We design an IPA with the help of teachers, leveraging the student behaviors extracted from data. Lastly, we get insights into the value of these help interventions by empirically evaluating the IPA in a formal user study.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Murali, Rohit and Lall\'{e}, S\'{e}bastien and Conati, Cristina},
  booktitle = {Proceedings of the 24th ACM International Conference on Intelligent Virtual Agents},
  doi = {10.1145/3652988.3673948},
  isbn = {9798400706257},
  keywords = {Adaptive hints; Computational thinking; In-the-wild user study; Intelligent pedagogical agent},
  location = {GLASGOW, United Kingdom},
  numpages = {9},
  publisher = {Association for Computing Machinery},
  series = {IVA '24},
  title = {An Intelligent Pedagogical Agent for In-The-Wild Interaction in an Open-Ended Learning Environment for Computational Thinking},
  url = {https://doi.org/10.1145/3652988.3673948},
  year = {2024}
}

@inproceedings{merged1403,
  abstract = {The concept of computational thinking originated in the computer science community and has therefore focused on concepts and terminology drawn from that discipline. However, to make computational thinking an integrated, accessible concept within other parts of the K-12 curriculum, the concepts and terminology must be adapted to fit the new curricular context. We focus on elementary social studies, specifically a third grade geography lesson on absolute location using a teaching strategy of a scaffolded geocache. We present a selection of computational thinking elements, adapt them to social studies, and then organize them into a four-part heuristic: Data, Patterns, Rules, and Questions. Through this selection, adaptation, and sequencing, computational thinking can become a relevant and accessible integrated concept within the elementary social studies curriculum.},
  address = {New York, NY, USA},
  articleno = {2},
  author = {Hammond, Thomas C. and Oltman, Julia and Manfra, Meghan M.},
  booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
  doi = {10.1145/3356393.3365369},
  isbn = {9781450369527},
  keywords = {Computational thinking; Elementary education; Geography; Scaffolded geocache; Social studies},
  location = {Chicago, IL, USA},
  numpages = {5},
  publisher = {Association for Computing Machinery},
  series = {GeoEd'19},
  title = {Geo-Computational Thinking in the Third Grade: Making Computational Thinking Truly "For Everyone, Everywhere"},
  url = {https://doi.org/10.1145/3356393.3365369},
  year = {2019}
}

@inproceedings{merged1404,
  abstract = {The Make-To-Learn Lab at the University of Virginia developed TuneScope, a tool to facilitate computational thinking (CT) through music, to help democratize computer science education. Built upon the existing framework of Snap! (University of California, Berkeley), TuneScope leverages sound analysis, design, and music composition to engage novices with CT fundamentals. Existing research shows the benefits of using familiar contexts to teach CT, and TuneScope builds upon this with musical contexts. We have designed a course centered around the use of TuneScope to teach fundamentals of CT through music. In this paper, we investigate how students use TuneScope to develop sequential melodies, build chords, and sample recorded sounds while simultaneously learning fundamental programming principles such as algorithm design and abstraction. Using sentiment analysis, we demonstrate that students have had a largely positive experience in learning and grasping CT fundamentals throughout a diverse curriculum. As of today, the total enrollment of the course consists of over 45\% female students with a 100\% retention rate. TuneScope has also been accepted as an official Snap! library to be used by thousands of Snap! users worldwide.},
  address = {New York, NY, USA},
  author = {Padhye, Harsh and Gibson, Rachel and Bull, Glen and Nguyen, N. Rich},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3573279},
  isbn = {9781450394338},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1231},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Does Musical Context Improve Computational Thinking Skills?},
  url = {https://doi.org/10.1145/3545947.3573279},
  year = {2023}
}

@inproceedings{merged1405,
  abstract = {Schools throughout the United States are engaging in efforts to integrate computational thinking (CT) across various elementary curricula. However, there is very little guidance for effective approaches to integrating CT consistently and cohesively school wide. CT Readiness for All is a two-year research project that is investigating a CT framework and self-assessment tool developed to articulate indicators associated with successful school-wide integration across elementary curricula. Data sources include focus group interviews and surveys with teachers. Although the project is still in progress, early analysis have resulted in three key findings: (a) students were able to make cross-curricular connections using CT as a problem-solving process; (b) finding time within the school day to focus on CT is challenging; and (c) administrators need to take an active role in setting the vision and definition of CT to support school-wide CT efforts.},
  address = {New York, NY, USA},
  author = {Sherwood, Heather and Moeller, Babette and Fancsali, Cheri},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635533},
  isbn = {9798400704246},
  keywords = {computational thinking; elementary education; framework},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1816–1817},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {CT Readiness for All: Studying a Framework for Supporting Schoolwide Computational Thinking Integration Across Elementary Curricula},
  url = {https://doi.org/10.1145/3626253.3635533},
  year = {2024}
}

@article{merged1406,
  abstract = {Background and Objective. Teacher assessment research suggests that teachers have good conceptual understanding of CT. However, to model CT-based problem-solving in their classrooms, teachers need to develop the ability to recognize when and how to apply CT skills. Does existing professional development (PD) equip teachers to know when and how to apply CT skills? What factors should PD providers consider while developing trainings for CT application skills?Method. This retrospective observational study used a binomial regression model to determine what factors predict teachers’ probability of performing well on a CT application skills test.Participants. Participants of this study were 129 in-service K-12 teachers from a community of practice in India.Findings. Results show that teachers who have received at least one CT training, who have a higher teaching experience, and are currently teaching CT will have a higher probability of applying CT skills correctly to problems irrespective of the subject they teach and their educational backgrounds. However, receiving a higher number of CT PD trainings was a negative predictor of teachers’ performance.Implications. Implications for school administrators, professional development providers, and researchers are discussed. Teachers need ample opportunity to teach CT in their teaching schedules. Continuous professional development does not necessarily result in improved CT application skills unless careful consideration is given to the pedagogies used and to the resolution of misconceptions that teachers may have developed in prior training. Mixing plugged and unplugged pedagogical approaches may be beneficial to encourage transfer of CT application skills across different types of problems. Last, there is a need to develop valid and reliable instruments that measure CT application skills of teachers.},
  address = {New York, NY, USA},
  articleno = {3},
  author = {Tagare, Deepti},
  doi = {10.1145/3633205},
  issue_date = {March 2024},
  journal = {ACM Trans. Comput. Educ.},
  keywords = {21st century abilities; Computational thinking skills; pedagogical content knowledge; teacher professional development},
  month = {January},
  number = {1},
  numpages = {26},
  publisher = {Association for Computing Machinery},
  title = {Factors That Predict K-12 Teachers' Ability to Apply Computational Thinking Skills},
  url = {https://doi.org/10.1145/3633205},
  volume = {24},
  year = {2024}
}

@inproceedings{merged1407,
  abstract = {The research aims to analyze the impact of games on the development of computational thinking in students, specifically the digital card game called Moon (a card game where the computer of the Eagle lunar module is controlled during the first moon landing). The methodology applied is experimental where a series of learning sessions applying the virtual game Moon is applied to a sample of 25 students selected through a simple random sampling of a population of 100 students, we proceed to evaluate the students through a pre-test and post-test. The results show that the application of the virtual game Moon significantly influences the increase of Computational Thinking in students, which was demonstrated by applying the evaluation and observing how they overcame the different challenges proposed through the different difficulties of the virtual game Moon, this developed in the competence of "Design and build technological solutions to solve problems in their environment".},
  address = {New York, NY, USA},
  author = {Maraza Quispe, Benjamin and Alejandro Oviedo, Olga Melina and Choquehuanca Quispe, Walter and Quispe Flores, Lita Marianela and Caytuiro Silva, Nicolas Esleyder and Choquehuayta Palomino, Sim\'{o}n Angel},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572552},
  isbn = {9781450397766},
  keywords = {Video; behavior; computational; game; thinking},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {12–18},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {Towards the development of computational thinking in students through games},
  url = {https://doi.org/10.1145/3572549.3572552},
  year = {2023}
}

@inproceedings{merged1408,
  abstract = {The lack of clarity about the definition of Computational Thinking (CT) undermines its assessment and the formulation of effective learning strategies for its development. We propose an assessment tool in Spanish, designed by carefully selecting Bebras tasks, to measure four specific CT skills in first-year university students with no prior programming experience. The test was validated with a sample of 980 students from a Latin American university. We found a high, positive correlation between test results and Math test results from the National University Selection System, and a medium, positive correlation between test results and grades from the midterm exam in a Programming course. An acceptable level of internal consistency was found (Cronbach's alpha=0.70). We examined the validity of the test using Classical Test Theory. One question showed poor discrimination potential. Its elimination from the test increased the internal consistency, so we propose to replace it.},
  address = {New York, NY, USA},
  author = {Meza, Federico and V\'{a}squez, Andrea and San Mart\'{\i}n, Daniel},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635523},
  isbn = {9798400704246},
  keywords = {assessment; bebras; computational thinking; validation},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1750–1751},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Validation of a Bebras-Based Test to Assess Computational Thinking Abilities in First-Year College Students},
  url = {https://doi.org/10.1145/3626253.3635523},
  year = {2024}
}

@inproceedings{merged1409,
  abstract = {Computational thinking (CT) is a unique skill set that can provide advantages not only in the field of computer science (CS) but also in other disciplines. There is potential benefit in incorporating CT practices in other subjects so students from interdisciplinary backgrounds can also gain CT skills and apply them in their respective disciplines. This study takes a look at how students from interdisciplinary backgrounds interact using gestures and use CT to understand matrix math concepts in a group setting. A mixed-methods analysis is used to gain insight into how students’ practice CT. Data collected from pre- and post- assessments measures students’ mastery level in matrix math concepts. Video data collected during the group activity shows students’ learning process. The results of this study provide a better perspective on how other disciplines are able to utilize CT and how CT learning can be implicitly taught in subjects other than CS.},
  address = {New York, NY, USA},
  articleno = {567},
  author = {Zaman, Ulia},
  booktitle = {Extended Abstracts of the 2023 CHI Conference on Human Factors in Computing Systems},
  doi = {10.1145/3544549.3583944},
  isbn = {9781450394222},
  keywords = {computational thinking; gestures; interaction; mathematics},
  location = {Hamburg, Germany},
  numpages = {6},
  publisher = {Association for Computing Machinery},
  series = {CHI EA '23},
  title = {Exploring Computational Thinking Practices and Gestures in the Context of Matrix Math},
  url = {https://doi.org/10.1145/3544549.3583944},
  year = {2023}
}

@article{merged1410,
  abstract = {Computational thinking (CT) is a necessary skill that must be learned in today's tech-focused world, especially within K-12 education, where early learning of problem-solving skills and algorithmic thinking is beneficial in everyday life. Various ways have been used to cultivate this skill in these early education phases [6]. Our approach was to use an unplugged gamified coding activity that involved creating a learning environment that required hands-on participation and critical computational thinking. This study examines the impact of a gamified coding activity on computational thinking (CT) skills of K-12 students in a public stem event setting where each student has around 30 minutes of solving time. This study also observes the influence of the short-term intervention on algorithmic thinking and problem solving abilities by incorporating a before-and-after survey, in which students were asked to write down the steps to brush their teeth before and after the activity. This data was used to evaluate improvements in student procedural thinking and logical structure. The findings suggest that gamification enhances engagement and helps students develop clearer and more structured algorithms. These results contribute to research on effective teaching strategies for CT in K-12 education and to improving the learning environment.},
  address = {Evansville, IN, USA},
  author = {Cho, Seong Yeon and Lee, Jae Geun and Kim, Paul},
  issn = {1937-4771},
  issue_date = {April 2025},
  journal = {J. Comput. Sci. Coll.},
  month = {July},
  number = {10},
  numpages = {11},
  pages = {171–181},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Gamification in Public Event Night: Evaluating the Impact of Unplugged Activity on K-12 Students' Computational Thinking in a Short Time Frame},
  volume = {40},
  year = {2025}
}

@inproceedings{merged1411,
  abstract = {One of the most efficient ways for elementary school students to gain exposure to computational thinking is when it is integrated into other disciplinary areas; however, elementary school teachers often lack the necessary resources to do this effectively. By leveraging the motivation force of narrative to engage students and the scaffolding affordances of block-based programming to support students, computationally-rich narrative-centered learning offers promise to address this need. In this work, we review design principles from prior work for engaging elementary students in computational thinking as well as results from initial pilot studies to investigate how computationally-rich narrative-centered learning in the context of science problem solving can support the integration of computational thinking into other disciplinary areas.},
  address = {New York, NY, USA},
  author = {Boulden, Danielle and Smith, Andy and Cully, Kimkinyona and Houchins, Jennifer and Elsayed, Rasha and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy and Mott, Bradford},
  booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3456565.3460068},
  isbn = {9781450383974},
  keywords = {computational thinking; k-12 education},
  location = {Virtual Event, Germany},
  numpages = {1},
  pages = {655},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE '21},
  title = {Promoting Computational Thinking in Elementary School: A Narrative-Centered Learning Approach},
  url = {https://doi.org/10.1145/3456565.3460068},
  year = {2021}
}

@inproceedings{merged1412,
  abstract = {Curriculum guidelines for Computer Science undergraduate courses from different institutions recognize computational thinking as a fundamental skill that all students must exercise in Computer Science courses. Unfortunately, the guidelines do not make it clear when and how these skills should be exercised. The literature recognizes the importance and relevance of computational thinking. However, there is still little evidence around which aspects should be considered to design activities to support the development of computational thinking. To address this problem, my research aims to investigate how to design and conduct activities to promote computational thinking in Computer Science courses. The expected result is to produce an approach to assist the design and conduct of computational thinking learning activities in Computer Science courses.},
  address = {New York, NY, USA},
  author = {Moreira Oliveira, Carolina},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499217},
  isbn = {9781450390712},
  keywords = {computational thinking; computer science education; pedagogical issue},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1172},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {The Development of Computational Thinking in Computing Higher Education},
  url = {https://doi.org/10.1145/3478432.3499217},
  year = {2022}
}

@inproceedings{merged1413,
  abstract = {Computational thinking (CT) is considered an essential problem-solving skill in the 21st century, and is receiving attention on different educational levels. To promote and assess students’ CT skills, so-called ’Bebras tasks’ (i.e. small tasks for problem solving in informatics) are created by experts in the field of CT. There has not been empirical research to determine to what extent and how CT skills are used while solving these tasks, however. This qualitative study bridges this gap by using the think-aloud method to examine the use of CT skills when solving Bebras. The results of this study can serve as a validation for the use of CT skills in solving Bebras tasks. This poster abstract introduces the background and setup of the study.},
  address = {New York, NY, USA},
  articleno = {31},
  author = {De Jong, Imke and Sichterman, Bo and Jeuring, Johan},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565957},
  isbn = {9781450396165},
  keywords = {Bebras; computational thinking; think-aloud},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Examining the Use of Computational Thinking Skills When Solving Bebras Tasks},
  url = {https://doi.org/10.1145/3564721.3565957},
  year = {2022}
}

@inproceedings{merged1414,
  abstract = {This meta-analysis examined research on the effects of different teaching approaches on students’ computational thinking (CT) from 2010 to 2022. A total of 35 articles met inclusion criteria and were included in the final analysis with a total of 49 independent effect sizes. The meta-analysis results showed that the current K-12 teaching has a moderate positive impact on the development of students' computational thinking (g=0.548). Pair programming, unplugged activities, and project-based learning have the most significant effects, which are more helpful in cultivating students’ computational thinking. Moreover, we analyzed the impact of moderator variables on the relationship between K-12 teaching and computational thinking. Findings revealed that the effects of CT education were more substantial (a) for middle school students than for primary school students, (b) in interdisciplinary courses than in computer science courses, (c) with collaborative learning activities than with individual learning activities. Based on this, we suggest that paired programming, unplugged activities, and project-based learning, which are based on collaborative learning, should be used more for CT education. In addition, schools should develop interdisciplinary courses to promote computational thinking migration in different disciplines.},
  address = {New York, NY, USA},
  author = {Chen, Yunshan and Wang, Yining and Li, Yanyan},
  booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
  doi = {10.1145/3572549.3572611},
  isbn = {9781450397766},
  keywords = {computational thinking; meta-analysis; teaching approach},
  location = {Barcelona, Spain},
  numpages = {7},
  pages = {386–392},
  publisher = {Association for Computing Machinery},
  series = {ICETC '22},
  title = {The Effectiveness of Teaching Approaches in Computational Thinking Education: A Meta-Analysis},
  url = {https://doi.org/10.1145/3572549.3572611},
  year = {2023}
}

@inproceedings{merged1415,
  abstract = {In our modern society, technology has profoundly reshaped various aspects of our lives, influencing the way we work, communicate, and interact. This raises a fundamental question: Is the current K-12 education system adequately preparing students for success in this technology-driven era, where innovation and problem-solving skills are essential? A recent study investigated this inquiry. The goal was to integrate Computational Thinking (CT) into the domains of Creative Writing and Creative Media and measure its impacts. This poster describes the design and refinement of summer camp experiences in which predominantly Hispanic female students participated in hands-on CT-based learning to create their own creative stories and films. Educational outcomes were evident through increased student engagement, enhanced collaboration, and improved problem-solving skills, underscoring the intervention's advantages. Furthermore, the researchers gained transforming insights, recognizing the versatility of CT across domains. Camp participants experienced a shift in perspective, with a greater interest in vocations and domains connected to computing. We share lessons learned from these summer camps in the hopes that they will inform other researchers and practitioners who are interested in designing and deploying similar experiences. In summary, the study outlines a trajectory where students and educators skillfully navigate the complexities of contemporary paradigms},
  address = {New York, NY, USA},
  author = {Torres Castillo, Ruth and Valdez, Tomas and Pontelli, Enrico and Gonzalez, Horacio and Nevarez, Erick and Cota, Raena},
  booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3626253.3635619},
  isbn = {9798400704246},
  keywords = {computational thinking; computer science education; creative writing; creativity; cs+x; performance arts},
  location = {Portland, OR, USA},
  numpages = {2},
  pages = {1840–1841},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2024},
  title = {Using Computational Thinking to Learn Creative Writing and Performance Arts: Summer Experiences of Story Creation Projects},
  url = {https://doi.org/10.1145/3626253.3635619},
  year = {2024}
}

@article{merged1416,
  abstract = {This paper describes a collaborative project that was conducted to promote K-8 Computer Science Education among in-service and pre-service teachers. More than 40 pre-service and in-service teachers participated in a learning experience designed to address the K-12 Computer Science Framework [2] and Maryland's K-12 Computer Science Standards. The collaboration was designed to facilitate participants' learning about and application of foundational principles of computer science and computational thinking into K-8 STEM curriculum and teaching. Participants explored hard/software platforms and used open-source sites such as Scratch, Code.org and Code Academy. Participants envisioned how activities apply to K-8 classrooms and worked in pairs or groups to design a problem-based project for students. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge.},
  address = {Evansville, IN, USA},
  author = {Li, Jiang and Shockey, Paulette and Cuddapah, Jennifer and Graybeal, Christy and Torres-Crespo, Marisel and Williams, Anthony},
  issn = {1937-4771},
  issue_date = {October 2021},
  journal = {J. Comput. Sci. Coll.},
  month = {October},
  number = {3},
  numpages = {7},
  pages = {74–80},
  publisher = {Consortium for Computing Sciences in Colleges},
  title = {Introducing computational thinking to pre-service teachers},
  volume = {37},
  year = {2021}
}

@inproceedings{merged1417,
  abstract = {The impact of the COVID-19 crisis on education has opened new doors and accelerated change, and a learning opportunity has emerged towards the digital transformation of teaching models. Computing acquires a new relevance and fits into the plan to strengthen digital skills as a driver of digital knowledge, particularly relevant for children and young people. In parallel, both the close contact with computers allows the development of skills such as logical reasoning, critical thinking, creativity, communication and teamwork, and the very coexistence of citizens with digital technologies requires the prior acquisition of this knowledge, in order to be prepared to meet the new demands of modern society. Thus, the purpose of this paper is to introduce an ongoing research project that aims at developing young children's expression through embodied computing in order to enhance their digital knowledge, by adapting the digital manipulative (DM) Mobeybou for storytelling and narrative creation as a tool for promoting computational thinking (CT) and inherent competences through a bodily expression experience. The educational toolkit and base literature review are discussed, and the early prototypes of the programming language proposed are presented, as well as the ongoing and future work. With this initial work it was possible to conclude that computer programming has many benefits in fostering CT in children, alongside other cognitive skills, as well as the importance of stimulating children's expression and communication that are transversal to all areas of life. Therefore, computer programming will be used and incorporated in Mobeybou in order to achieve the research aims proposed in this paper and promote children's expression through CT development.},
  address = {New York, NY, USA},
  author = {Saraiva, In\^{e}s and Martins, Nuno and Sylla, Cristina Maria},
  booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
  doi = {10.1145/3568739.3568766},
  isbn = {9781450398091},
  keywords = {Cognitive skills; Computational thinking; Computer programming; Embodied interfaces; Interactive environments; Interface design for education},
  location = {Hangzhou, China},
  numpages = {7},
  pages = {153–159},
  publisher = {Association for Computing Machinery},
  series = {ICDTE '22},
  title = {Mobeybou for Computational Thinking: Fostering Expression Through Embodied Computing Interactions},
  url = {https://doi.org/10.1145/3568739.3568766},
  year = {2023}
}

@inproceedings{merged1418,
  abstract = {Due to the proliferation of technology in daily life and the growing number of ways in which humans and machines interact, the process of designing interactive elements has become critical. Nevertheless, design students are seldom able to design and implement interactive elements because of their limited programming skills. Although there have been some approaches to teach computational thinking using physical computing and focusing on solving real-world problems (e.g., electronic devices such as Arduino, using sensors and actuators), they often entail monetary expenses and require knowledgeable instructors, and are not catered to students without prior programming or electronics knowledge. Hence, we propose the use of Protobject, a low-cost tool that focuses on real-world applications that could be used to teach programming to design students. This study aims to evaluate students’ perceptions regarding the usability of Protobject as a tool for learning computational thinking, as well as the clarity of the learning activities designed to teach computational thinking concepts by using Protobject.},
  address = {New York, NY, USA},
  articleno = {23},
  author = {Bellino, Alessio and Herskovic, Valeria},
  booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
  doi = {10.1145/3605390.3605401},
  isbn = {9798400708060},
  keywords = {learning platform; usability; user study},
  location = {Torino, Italy},
  numpages = {8},
  publisher = {Association for Computing Machinery},
  series = {CHItaly '23},
  title = {Protobject as a tool for teaching computational thinking to designers: student perceptions on usability},
  url = {https://doi.org/10.1145/3605390.3605401},
  year = {2023}
}

@inproceedings{merged1419,
  abstract = {This paper describes an unplugged computational thinking (CT) resource for primary and secondary schools developed from Bebras tasks. In Ireland, CT is not part of the primary school curriculum or mandatory in secondary schools. However, the National Council for Curriculum and Assessment is in the process of revising the primary school curriculum to include aspects of CT. Our aim for creating this CT Obstacle Course is to introduce teachers (and pupils) without formal computer science training to the subject of CT. This is done in a manner that informs and motivates, and gives them the confidence to deliver CT materials in the classroom. We also want to find out from teachers how useful and important this type of resource is for developing problem-solving skills, and if our unplugged activity can support learning at various skill levels. Our CT Obstacle Course includes 14 Bebras tasks for primary schools and an additional 6 Bebras tasks for secondary schools. The activity is suitable for indoors and outdoors and is completed in groups, promoting teamwork and communication. We have delivered it to 146 primary school classes during 38 school visits between May 2021 and June 2022. It has been undertaken by 3,445 pupils and 195 teachers and other school staff. This paper describes our CT resource in detail, and reports teacher feedback from primary schools.},
  address = {New York, NY, USA},
  author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
  doi = {10.1145/3587102.3588775},
  isbn = {9798400701382},
  keywords = {Bebras tasks; K-12; computational thinking; unplugged},
  location = {Turku, Finland},
  numpages = {7},
  pages = {478–484},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {A Computational Thinking Obstacle Course Based on Bebras Tasks for K-12 Schools},
  url = {https://doi.org/10.1145/3587102.3588775},
  year = {2023}
}

@inproceedings{merged1420,
  abstract = {Computational Thinking is seen as a crucial skill in an increasingly digital society. Researchers and educators in higher education therefore aim to improve the Computational Thinking (CT) skills of students using appropriate interventions. However, there is currently no overview of interventions used to teach CT and how effective they are. With this scoping literature review, we provide such an overview by identifying articles that discuss interventions used to teach CT in higher education. We identify the teaching approaches used in these interventions, and discuss their effectiveness and how this is assessed. Furthermore, we look at the use of adaptive interventions. Our search of three academic databases (Scopus, ACM and ERIC) resulted in 1839 articles. After screening, 49 articles remained. A detailed examination of the interventions discussed in these articles showed that CT is still often taught through programming assignments. The interventions are evaluated in a myriad of ways, making it difficult to compare the effectiveness of interventions. We therefore suggest making use of more standardized instruments to evaluate the effectiveness. Finally, although scaffolding is applied, interventions are not often adapted to the actual proficiency level of a student.},
  address = {New York, NY, USA},
  articleno = {35},
  author = {de Jong, Imke and Jeuring, Johan},
  booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3428029.3428055},
  isbn = {9781450389211},
  keywords = {Computational thinking; effectiveness; higher education; interventions},
  location = {Koli, Finland},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '20},
  title = {Computational Thinking Interventions in Higher Education: A Scoping Literature Review of Interventions Used to Teach Computational Thinking},
  url = {https://doi.org/10.1145/3428029.3428055},
  year = {2020}
}

@inproceedings{merged1421,
  abstract = {INFACT aims to provide differentiable teaching and learning activities in Computational Thinking (CT) that are inclusive for neurodiverse learners in grades 3-8. Neurodiversity refers to learners with autism, ADHD, dyslexia, and other related cognitive differences. Underlying many neurodiverse conditions is differences with executive function (EF). In previous research on game-based learning, neurodiverse students became class leaders in CT activities [1]. Special education teachers noted that CT practices align with strategies they use to support problem-solving practices. Leveraging these affordances of CT, INFACT activities are designed with embedded EF scaffolds to support neurodiverse learners.},
  address = {New York, NY, USA},
  author = {Asbell-Clarke, Jodi and Robillard, Tara and Edwards, Teon and Bardar, Erin and Weintrop, David and Grover, Shuchi and Israel, Maya},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499044},
  isbn = {9781450390712},
  keywords = {computational thinking; executive function; neurodiversity},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1076},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Including Neurodiversity in Foundational and Applied Computational Thinking (INFACT)},
  url = {https://doi.org/10.1145/3478432.3499044},
  year = {2022}
}

@inproceedings{merged1422,
  abstract = {Computational Thinking (CT) has become increasingly essential in the current era of rapid digital advancement. Despite the availability of various tools to assess CT, there is a notable scarcity of tools designed for evaluating CT practices in lower elementary students. To address this gap, this study develops a digital game titled "Magical Adventure" based on the Evidence-Centered Game Design (ECGD) framework, which aimed at assessing the CT practices of young children. The game comprises five scenarios, targeting five CT practices respectively, including pattern recognition, abstraction, problem decomposition, algorithmic thinking, and debugging. Scoring criteria were designed to evaluate students' CT abilities based on the anticipated gameplay process data. This study describes the design and development process of the game. Future steps will include validation of its effectiveness through expert reviews and cognitive interviews, followed by empirical research to optimize and refine the game, enhancing its accuracy in reflecting students' CT practices.},
  address = {New York, NY, USA},
  author = {Luo, Qi and Zhang, Shuhan},
  booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
  doi = {10.1145/3702163.3702417},
  isbn = {9798400717819},
  keywords = {Computational thinking practices; Evidence-Centered Game Design; Game-based assessment; Primary education},
  numpages = {7},
  pages = {219–225},
  publisher = {Association for Computing Machinery},
  series = {ICETC '24},
  title = {Developing a Digital Game to Assess Lower Primary Students' Computational Thinking Practices based on Evidence-Centered Game Design},
  url = {https://doi.org/10.1145/3702163.3702417},
  year = {2025}
}

@inproceedings{merged1423,
  abstract = {Teaching computational thinking for children has reached ample dimensions along the last decade, and has culminated in the creation of various products, programs and projects that aim to democratize the access to this body of knowledge. However, cognitive, motor and affective factors have appeared as particular challenges when we are teaching computational thinking to children in the literacy phase, where the stories are a particularly relevant part of the learning process and children's development. Thus this study has aimed to articulate the inclusion of storytelling in experiences of teaching computational thinking to young children, analyzing this possibility considering the proposition of an artifact based on transmedia storytelling for teaching computational thinking and seeks to understand what are the implications of child-computer interaction in this artifact.},
  address = {New York, NY, USA},
  author = {Sim\~{o}es Gomes, Tanci and Pontual Falc\~{a}o, Taciana and Tedesco, Patricia},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3538821},
  isbn = {9781450391979},
  keywords = {Child-computer interaction; Computational thinking; Educational artifacts; Transmedia storytelling},
  location = {Braga, Portugal},
  numpages = {3},
  pages = {690–692},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {An educational transmedia storytelling proposal to teach computational thinking for children},
  url = {https://doi.org/10.1145/3501712.3538821},
  year = {2022}
}

@inproceedings{merged1424,
  abstract = {In the rapidly evolving field of computer science education, the integration of computational thinking (CT) with artificial intelligence (AI) has become a focus of attention as it may have the potential to technologically facilitate and equip students with required future skills. This research emphasizes the value of the harmonies in between CT and AI within the Science, Technology, Engineering, and Mathematics (STEM) structure. Key findings consist of: (a) CT comprises aspects such as abstraction, algorithms, trouble disintegration, pattern recognition, debugging, and AI, which should operate cohesively to deal with complex obstacles properly; (b) Many initiatives have incorporated CT into STEM education and learning via techniques like gamification, high-order thinking questions (HOTS), and peer evaluation. Consequently, it is essential to integrate computational thinking with artificial intelligence in order to improve students' cognitive development and skill acquisition.},
  address = {New York, NY, USA},
  author = {Tian, Shenmeihao},
  booktitle = {Proceedings of the 2024 International Symposium on Artificial Intelligence for Education},
  doi = {10.1145/3700297.3700394},
  isbn = {9798400707100},
  keywords = {Abstraction; Algorithms; Artificial Intelligence (AI); Computational Thinking (CT); Debugging; Pattern recognition; Problem decomposition; STEM education},
  numpages = {4},
  pages = {564–567},
  publisher = {Association for Computing Machinery},
  series = {ISAIE '24},
  title = {The Integration of Computational Thinking and Artificial Intelligence Serves to Enhance The Cognitive Processes and Skill Acquisition of Students},
  url = {https://doi.org/10.1145/3700297.3700394},
  year = {2024}
}

@inproceedings{merged1425,
  abstract = {This article provides a summary of a research plan as part of the "educational robotics" line of research of the doctoral plan for training in the Knowledge Society. The main objective of the research plan is to propose a curricular approach of Computational Thinking (CT) competences through active methodologies in Primary Education classrooms. It is a study with a mixed methodology to obtain more detailed results; the quantitative phase consists of the development of a MOOC for teacher training in CT, evaluated through questionnaires, and the qualitative phase, a didactic proposal in which these competencies are developed, evaluated through interviews, or focus groups. Thus, we start from a state of the art where it is reflected, on the one hand, that teacher training in CT competences causes positive feedback in Primary Education classrooms and, on the other hand, the need to carry out this training and include CT, programming, and robotics in educational curricula.},
  address = {New York, NY, USA},
  author = {Collado-S\'{a}nchez, Mar\'{\i}a and Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e} and Pinto-Llorente, Ana Mar\'{\i}a},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486544},
  isbn = {9781450390668},
  keywords = {Computational thinking; primary education; programming; robotics; teacher training; teachers},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {758–762},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Computational thinking competences training for primary education teachers},
  url = {https://doi.org/10.1145/3486011.3486544},
  year = {2021}
}

@article{merged1426,
  abstract = {Incorporating data thinking into computer science education.},
  address = {New York, NY, USA},
  author = {Mike, Koby and Ragonis, Noa and Rosenberg-Kima, Rinat B. and Hazzan, Orit},
  doi = {10.1145/3545109},
  issn = {0001-0782},
  issue_date = {August 2022},
  journal = {Commun. ACM},
  month = {July},
  number = {8},
  numpages = {3},
  pages = {33–35},
  publisher = {Association for Computing Machinery},
  title = {Computational thinking in the era of data science},
  url = {https://doi.org/10.1145/3545109},
  volume = {65},
  year = {2022}
}

@inproceedings{merged1427,
  abstract = {There is growing attention for integrating Computational Thinking (CT) into various subjects across the K-12 curriculum with a concomitant increase of interest in investigating teachers’ pedagogical content knowledge (PCK) regarding CT. This study is part of a bigger project focusing on defining the learning trajectories for CT integration into the K-12 curriculum. In particular, the present study focused on eliciting the pedagogical content knowledge and attitude of teachers with respect to the integration of CT in various disciplines. To this end, we implemented six different case studies by integrating CT into six different subjects: science, traffic, language, biology, geography, and physics. Two primary and four secondary school teachers were involved in the study. After the lesson series was completed in schools, we conducted interviews with teachers to understand their PCK on CT integration, attitudes toward CT integrated lessons, and the barriers teachers faced during CT integrated lessons. Our results indicate that compared to standard instructional activities, students can go deeper and understand the subject content better in CT integrated lessons, also students can use the power of digital technologies to solve subject-related problems. On the other hand, teachers pointed out that students and teachers need to be more capable of technical knowledge and skills to accomplish tasks.},
  address = {New York, NY, USA},
  articleno = {20},
  author = {Yeni, Sabiha and Grgurina, Natasa and Hermans, Felienne and Tolboom, Jos and Barendsen, Erik},
  booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3481312.3481320},
  isbn = {9781450385718},
  keywords = {Computational thinking; K-12; curriculum; integration; pedagogical content knowledge; teacher},
  location = {Virtual Event, Germany},
  numpages = {10},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '21},
  title = {Exploring Teachers’ PCK for Computational Thinking in Context},
  url = {https://doi.org/10.1145/3481312.3481320},
  year = {2021}
}

@inproceedings{merged1428,
  abstract = {Computational thinking (CT) has become a recent policy agenda in order for students to develop interest and foundational understanding in computing and preparation for an increasingly technological workforce. In order to integrate CT into K-12 education, teachers need professional support. The field has faced common challenges developing professional learning experiences and resources that facilitate the integration of computational thinking in authentic, equitable and sustainable ways. We have worked with a cohort of over eighty teachers from around the United States to co-design and pilot pedagogical resources for computational thinking. In this poster, we summarize our co-design process with teachers and share the resources we developed for computational thinking integration.},
  address = {New York, NY, USA},
  author = {Mills, Kelly and Angevine, Colin and Weisgrau, Josh},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372629},
  isbn = {9781450367936},
  keywords = {computational thinking; k-12 education; professional development},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1343},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Resources for Computational Thinking: Co-designing with Teachers},
  url = {https://doi.org/10.1145/3328778.3372629},
  year = {2020}
}

@inproceedings{merged1429,
  abstract = {This paper focuses on a participatory activity that is part of an ongoing partnership formed six years ago between teachers and academics to study creative technology approaches to youth participation. By focusing on a food-based activity in an after-school maker space, we reflect on the pedagogical and methodological innovations, and the ethical and aesthetic qualities of food-based activities for participatory design. The session brought together students and teachers to form a generative dialogue around computation and automation while preparing and sharing food. The results suggest opportunities to rethink current curricular, pedagogical, and education policy strategies. Recommendations for organizers to prepare generative activities where food is used as a design material close the paper.},
  address = {New York, NY, USA},
  author = {Sosa, Ricardo and Gibbons, Andrew and O'Riordan, Emma and Iorangi, Keu and Crowe, Andy and Gibson, Leanne and Harris, Sam and Badenhorst, Daniel},
  booktitle = {Proceedings of the Participatory Design Conference 2022 - Volume 1},
  doi = {10.1145/3536169.3537785},
  isbn = {9781450393881},
  location = {Newcastle upon Tyne, United Kingdom},
  numpages = {11},
  pages = {109–119},
  publisher = {Association for Computing Machinery},
  series = {PDC '22},
  title = {Food for Advanced Computational Thinking: Critical and Creative Approaches to Technology at Te Kura Taurua Manurewa},
  url = {https://doi.org/10.1145/3536169.3537785},
  year = {2022}
}

@inproceedings{merged1430,
  abstract = {This report summarizes the information related to a PhD project that aims to develop an Open-Source Emotion-Based Adaptive Learning Support System through Computational Thinking activities. This paper outlines the proposed objectives and provides an update on the progress made in research to date.},
  address = {New York, NY, USA},
  author = {Herrero-\'{A}lvarez, Rafael},
  booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
  doi = {10.1145/3587103.3594141},
  isbn = {9798400701399},
  keywords = {adaptative learning; computational thinking; emotions; machine learning},
  location = {Turku, Finland},
  numpages = {2},
  pages = {601–602},
  publisher = {Association for Computing Machinery},
  series = {ITiCSE 2023},
  title = {Development of an Open-Source Emotion-Based Adaptive Learning Support System using Computational Thinking Activities},
  url = {https://doi.org/10.1145/3587103.3594141},
  year = {2023}
}

@inproceedings{merged1431,
  abstract = {Computational thinking-related issues have had a specific track on TEEM Conference since 2016. This is the sixth edition of this track within the 2021 TEEM Conference edition. This year the papers are centered on programming and robotics, but the artificial intelligence topics increase their presence in the track.},
  address = {New York, NY, USA},
  author = {Jos\'{e} Garc\'{\i}a-Pe\~{n}alvo, Francisco and Conde, Miguel \'{A}ngel and Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e}},
  booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
  doi = {10.1145/3486011.3486411},
  isbn = {9781450390668},
  keywords = {Computational thinking; STEAM; STEM; coding in schools; computational thinking skills and curriculum; computer science in K-12; programming; robots},
  location = {Barcelona, Spain},
  numpages = {4},
  pages = {9–12},
  publisher = {Association for Computing Machinery},
  series = {TEEM'21},
  title = {Current trends in robotics in education and computational thinking},
  url = {https://doi.org/10.1145/3486011.3486411},
  year = {2021}
}

@inproceedings{merged1432,
  abstract = {Culturally Responsive Teaching (CRT) is a pedagogical strategy that aims to engage culturally and linguistically diverse students in the classroom, to validate and to empower them (Scott, Sheridan, \&amp; Clark, 2014; Gay, 2010). Five commonly described aspects of culturally responsive instruction include: (1) helping students to value the perspectives of others, (2) affirming a sense of belonging, (3) validating students' cultural identities, (4) educating students about the diversity of the world around them,&nbsp; (5) supporting students to develop an awareness the impactful social structures.&nbsp; Research has shown repeatedly that CRT increases the academic success of ethnically diverse communities&nbsp; (Gay, 2018; Ladson-Billings, 1995). This talk will provide examples of how CRT has been incorporated into a Scratch-based, upper-elementary computational thinking curriculum that was developed specifically for English language learners. Learning activities include cultural content, diverse role models in the computer science field, and student reflection.},
  address = {New York, NY, USA},
  author = {Saito-Stehberger, Dana},
  booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3478432.3499247},
  isbn = {9781450390712},
  keywords = {computational thinking; culturally responsive teaching; k-12 education},
  location = {Providence, RI, USA},
  numpages = {1},
  pages = {1055},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2022},
  title = {Examples of Culturally Responsive Teaching in Computational Thinking Curriculum},
  url = {https://doi.org/10.1145/3478432.3499247},
  year = {2022}
}

@inbook{merged1433,
  abstract = {This mixed methods study examined barriers faced by three elementary schools in their approaches to integrating computational thinking (CT) into classroom instruction. Because CT is a relatively new instructional area, limited research guides CT integration, especially in bringing CT to academically, linguistically, and culturally diverse instruction. This study, therefore, examined challenges faced by teachers in bringing CT into their instructional practice. Data included interviews with 11 teachers and surveys of 46 teachers in a large, urban school district. The three schools in the district were part of a CS for All initiative in their school district. Data revealed common challenges: a) Limited CT teaching expertise; b) Limited time for CT integration; c) Lack of CT-specific assessment knowledge and tools; d) Limited pedagogical understanding for meeting students' diverse instructional needs; and e) Low teacher-buy-in for teaching CT. Our data also showed differences across schools in access to classroom implementation infrastructure such as technology and curricular resources, competing administrative priorities, and types of professional development opportunities. This study points to practical implications for supporting integration of CT in elementary contexts. Most notably, it is critical to proactively address these barriers in preservice and in-service teacher preparation as well as in school-wide infrastructure in order to have a sustained CT integration effort.},
  address = {New York, NY, USA},
  author = {Israel, Maya and Liu, Ruohan and Yan, Wei and Sherwood, Heather and Martin, Wendy and Fancsali, Cheri and Rivera-Cash, Edgar and Adair, Alexandra},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {8},
  pages = {64–71},
  publisher = {Association for Computing Machinery},
  title = {Understanding barriers to school-wide computational thinking integration at the elementary grades: lessons from three schools},
  url = {https://doi.org/10.1145/3507951.3519289},
  year = {2022}
}

@inproceedings{merged1434,
  abstract = {The cultivation of computing thinking in primary school has attracted the attention of all countries in the world. Based on the fifth grade information technology curriculum of primary school, this paper constructs a practice link based on problem solving, namely, five main links: observe, write, paste or draw, attempt or create,share. It also verifies whether the practice link is conducive to promoting the development of students' computing thinking. The results show that, the practice link based on problem solving can not only promote the improvement of algorithm expression ability and programming ability of primary school students, but also exercise their ability to solve problems, establish and develop computing thinking. This practice link can provide feasible strategies for information technology courses in primary schools, and provide reference for the research and practice of computing thinking cultivation of primary school students in China.},
  address = {New York, NY, USA},
  author = {Liu, Xiaoying and Cong, Longjie and Xu, Jihong},
  booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
  doi = {10.1145/3582580.3582632},
  isbn = {9781450398015},
  keywords = {Computational thinking; Practice link; Problem solving; Pupil},
  location = {Lincoln, United Kingdom},
  numpages = {7},
  pages = {298–304},
  publisher = {Association for Computing Machinery},
  series = {ICETM '22},
  title = {The Influence of Problem Solving Based Practice on Pupils' Computational Thinking},
  url = {https://doi.org/10.1145/3582580.3582632},
  year = {2023}
}

@inproceedings{merged1435,
  abstract = {In response to the persistent diversity gap that exists in the computing field, we implemented a five-day professional development (PD) workshop for elementary teachers on integrating computational thinking (CT) and culturally responsive teaching (CRT) practices into their existing science instruction. An explicit focus of this PD was to engage teachers in analyzing CT- and CRT-integrated science classroom scenarios (i.e., vignettes). Our analyses of video and written data of teachers' vignette responses indicate that while their understanding of CT increased as a result of the PD, the teachers need additional support around CRT. We suggest that future studies explore how teachers define and enact CRT, especially within their unique contexts.},
  address = {New York, NY, USA},
  author = {Xin, Yue and Kramarczuk, Kristina Anna and Mak, Janice and Terrell Shockley, Ebony and Ketelhut, Diane Jass},
  booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
  doi = {10.1145/3545947.3576255},
  isbn = {9781450394338},
  keywords = {computational thinking; culturally responsive teaching; elementary school; science education},
  location = {Toronto ON, Canada},
  numpages = {1},
  pages = {1309},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE 2023},
  title = {Computational Thinking-Integrated Elementary Science with Culturally Responsive Teaching: A Vignette Study},
  url = {https://doi.org/10.1145/3545947.3576255},
  year = {2023}
}

@inproceedings{merged1436,
  abstract = {Computational Thinking (CT) is a fundamental and important skill set in our world and should therefore be taught and practiced in school. In this poster abstract, we present our ongoing initiative on establishing CT as a fundamental and interdisciplinary contribution of Computer Science as a necessary component of general education and describe our aim to enhance the knowledge about it in Switzerland’s teacher communities. We give an outline of our planned activities and present first results from a field test in a Swiss high school with an original example of CT-tailored teaching material for the subject of logic.},
  address = {New York, NY, USA},
  articleno = {24},
  author = {Arnold, Ruedi and Amstalden, Barbara and Bader, J\"{o}rg},
  booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
  doi = {10.1145/3556787.3556874},
  isbn = {9781450398534},
  keywords = {computational thinking; primary and secondary education; teacher education},
  location = {Morschach, Switzerland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {WiPSCE '22},
  title = {Enhancing the Role of Computational Thinking in Primary and Secondary Education in Switzerland},
  url = {https://doi.org/10.1145/3556787.3556874},
  year = {2022}
}

@inproceedings{merged1437,
  abstract = {The purpose of this study is to design and developed a blended board game system with robotic arm for training students' computational thinking, and examine its effect in an elementary school's information technology course. A board game virtual interface was developed based on Unity-3D, and the corresponding device with a robotic arm was set up based on ESP32-CAM development board. The learning system enables a dual interaction mechanism by learning through Human-Machine Competition virtually or physically. By participating in the game, students faced challenges such as board game step reasoning, model abstract, decision-making, and strategic planning, thereby enhancing their computational thinking and problem-solving skills. Results indicated that the blended board game improve students’ overall computational thinking skills, especially reasoning, decision-making and strategic planning. This research provides an innovative approach to develop virtual-physical integrated game-based learning system for promoting students' computational thinking through human-machine competition.},
  address = {New York, NY, USA},
  author = {Yong, Lin and Zhan, Zehui and Zou, Xuanxuan and Chen, Li and Lin, Zhihang and Zhan, Weiyu},
  booktitle = {Proceedings of the 7th International Conference on Education and Multimedia Technology},
  doi = {10.1145/3625704.3625766},
  isbn = {9798400709142},
  keywords = {Computational thinking; abstraction; blended board game system; human-machine competition; robotic arm},
  location = {Tokyo, Japan},
  numpages = {8},
  pages = {74–81},
  publisher = {Association for Computing Machinery},
  series = {ICEMT '23},
  title = {Applying a Blended Board Game System with Robotic Arm for Training Computational Thinking: Learning through Human-Machine Competition},
  url = {https://doi.org/10.1145/3625704.3625766},
  year = {2023}
}

@inbook{merged1438,
  abstract = {In this chapter, we describe a pedagogical approach aimed at preparing pre-service teachers to integrate (CT) into K-8 contexts. Specifically, we present a standalone educational technology course with explicit attention on connecting CT to disciplinary content and pedagogy while introducing a range of digital tools. Data were collected from 34 pre-service teachers over the period of one semester. Specifically, a total of 68 lesson plans developed by pre-service teachers through two distinct lesson planning tasks using concept mapping and programming tools were collected and analyzed using both quantitative and qualitative techniques. The analysis utilized a coding scheme that focused on identifying specific CT practices illustrated in each lesson. It also examined differences in the CT practices exhibited in each lesson planning task. Findings indicated that the CT practice of data was most prevalent in pre-service teachers' lesson plans. Outside of data, however, there was greater variation in the CT practices represented in programming lesson plans compared to the concept mapping lesson plans. Implications for teacher educators are discussed based on the findings.},
  address = {New York, NY, USA},
  author = {Sheridan, Scott and Alkhateeb, Bataul and Mouza, Chrystalla and Yang, Hui},
  booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
  isbn = {9781450396158},
  numpages = {10},
  pages = {1–10},
  publisher = {Association for Computing Machinery},
  title = {Investigating pre-service teachers' computational thinking through lesson design using digital technologies},
  url = {https://doi.org/10.1145/3507951.3519282},
  year = {2022}
}

@inproceedings{merged1439,
  abstract = {Through an exploratory study of a 6-year-old child and his parents, we explored the complexities of children's affective learning experience with tangible programming games, specifically focusing on the impact of scaffolding dialogues and social-emotional support. The social dialogues from this exploratory study demonstrate the interactive reasoning process in computational thinking (CT) education and reveal that dialogic learning has the potential to promote learning emotions and CT skills development in CT education. This study thus points to the future Child-Computer Interaction (CCI) research agenda that considers social dialogues in CT education with tangible play. A new understanding of social dialogues in CT toys and CT education can provide educators and CCI researchers with socio-technical insights into the future educational practices and design of CT games and technology for young children.},
  address = {New York, NY, USA},
  author = {Liu, Yu-Yu and Iversen, Ole Sejer},
  booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
  doi = {10.1145/3501712.3535288},
  isbn = {9781450391979},
  keywords = {affective learning; computational thinking education; dialogic learning; tangible play},
  location = {Braga, Portugal},
  numpages = {8},
  pages = {596–603},
  publisher = {Association for Computing Machinery},
  series = {IDC '22},
  title = {Computational Thinking through Tangible Play: Understanding Social Dialogues in Children's Learning},
  url = {https://doi.org/10.1145/3501712.3535288},
  year = {2022}
}

@inproceedings{merged1440,
  abstract = {This poster outlines the design and results of a course entitled "Computational Thinking in Music." The course teaches computational thinking principles as a general education objective to undergraduate students, using data-driven investigation to inform musical composition. Students compose a song to imitate an artist of their choice by analyzing data extracted from a corpus of crowd-sourced pop song transcriptions. Students learn principles of abstraction, decomposition, and algorithmic thinking; no coding experience is required. Quantitative and qualitative results indicate that students are learning and applying computational thinking principles. Since the course is designed and taught by a musician and is run in the music department, students also learn a significant amount of music theory and composition, including harmonic structures and harmonization principles, melodic organization, consonance and dissonance, aural analysis of formal structures and meter, and influence of rhythm and timbre to create desired sounds.},
  address = {New York, NY, USA},
  author = {Shafer, Jennifer and Skripchuk, James},
  booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3328778.3372597},
  isbn = {9781450367936},
  keywords = {computational thinking; curriculum design; data; music; steam},
  location = {Portland, OR, USA},
  numpages = {1},
  pages = {1312},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '20},
  title = {Computational Thinking in Music: A Data-Driven General Education STEAM Course},
  url = {https://doi.org/10.1145/3328778.3372597},
  year = {2020}
}

@inproceedings{merged1441,
  abstract = {Computational Thinking Bins are stand alone, individual boxes, each containing an activity for groups of students that teaches a computing concept.We have a devised a system that has allowed us to create an initial set, test the set, continually improve and add to our set. We currently use these bins in outreach events for middle and high school students. As we have shared this resource with K-12 teachers, many have expressed an interest in acquiring their own set. In this paper we will share our experience throughout the process, introduce the bins, and explain how you can create your own set.},
  address = {New York, NY, USA},
  author = {Morrison, Briana B. and Dorn, Brian and Friend, Michelle},
  booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  doi = {10.1145/3287324.3287497},
  isbn = {9781450358903},
  keywords = {computational thinking; outreach; unplugged},
  location = {Minneapolis, MN, USA},
  numpages = {7},
  pages = {1018–1024},
  publisher = {Association for Computing Machinery},
  series = {SIGCSE '19},
  title = {Computational Thinking Bins: Outreach and More},
  url = {https://doi.org/10.1145/3287324.3287497},
  year = {2019}
}

@inproceedings{merged1442,
  abstract = {For more than a decade, there has been debate about how to describe the concept of computational thinking (CT), focusing on the skills of decomposition, abstraction, pattern recognition, and algorithmic thinking. As CT can also be seen as a problem-solving process, not only the skills and strategies are an important part of CT, but also the attitudes of the problem solvers. These have already been described as persistence, dealing with complexity, ambiguity, and confidence. An important competence for future computer science teachers is to confidently guide students’ problem-solving process. This work presents preliminary results on the relationship between pre-service computer science teachers’ CT attitudes and their performance on Python tasks. Therefore, N=19 pre-service computer science teachers solved three tasks in Python and rated their attitudes towards solving the tasks. However, the preliminary results only allow to draw tentative and interpretative conclusions.},
  address = {New York, NY, USA},
  articleno = {37},
  author = {Standl, Bernhard},
  booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
  doi = {10.1145/3564721.3565963},
  isbn = {9781450396165},
  keywords = {coding; computational thinking; students’ attitudes},
  location = {Koli, Finland},
  numpages = {2},
  publisher = {Association for Computing Machinery},
  series = {Koli Calling '22},
  title = {Pre-Service Computer Science Teachers’ Computational Thinking Attitudes and Performance on Python Tasks},
  url = {https://doi.org/10.1145/3564721.3565963},
  year = {2022}
}

@inproceedings{merged1443,
  abstract = {The authors of the article focus on Computation thinking. The aim of the article is any motivate the student primary and secondary (high) schools using robotic toys: Ozobot EVO. The theoretical part of the thesis consists of a description of the motivation and a description of Computational thinking. The practical part shows the topics on how to work with Ozobots and how to involve them in teaching. The level of thinking of young people is very low, for this reason, we have set ourselves the goal of developing thinking using algorithms.},
  address = {New York, NY, USA},
  author = {\v{Z}\'{a}\v{c}ek, Martin and Smolka, Pavel},
  booktitle = {Proceedings of the 2019 3rd International Conference on Education and E-Learning},
  doi = {10.1145/3371647.3371654},
  isbn = {9781450372251},
  keywords = {Computational thinking; Ozobot; motivation; robotic; student},
  location = {Barcelona, Spain},
  numpages = {5},
  pages = {36–40},
  publisher = {Association for Computing Machinery},
  series = {ICEEL '19},
  title = {Development of Computational Thinking: Student Motivation Using Ozobot},
  url = {https://doi.org/10.1145/3371647.3371654},
  year = {2020}
}

@inproceedings{merged1444,
  abstract = {Abstractions and algorithms are at the heart of computational thinking. In this talk I will discuss the evolution of the theory and practice of programming language and compiler design through the lens of computational thinking. Many of the key concepts in this area were introduced at the ACM Symposium on the Theory of Computing.},
  address = {New York, NY, USA},
  author = {Aho, Alfred V.},
  booktitle = {Proceedings of the 53rd Annual ACM SIGACT Symposium on Theory of Computing},
  doi = {10.1145/3406325.3465350},
  isbn = {9781450380539},
  location = {Virtual, Italy},
  numpages = {1},
  pages = {1},
  publisher = {Association for Computing Machinery},
  series = {STOC 2021},
  title = {Computational thinking in programming language and compiler design (keynote)},
  url = {https://doi.org/10.1145/3406325.3465350},
  year = {2021}
}

@inproceedings{merged1445,
  abstract = {The fundamental rights of hospitalized minors include receiving educational and emotional attention during the illness situation. Currently the teaching of computational thinking and programming constitute a new literacy that must be carried to all classrooms, including hospital classrooms. This paper presents an exploratory case study on an educational intervention that is inclusive and adaptable to the characteristics of hospital classrooms for the teaching of computational thinking in a transversal way and programming without screens and robots, including working with emotions. In this study, 22 minors participated in five sessions developed in a hospital classroom. The results indicate that the intervention has improved the emotional state of the children, as well as their knowledge regarding computational thinking.},
  address = {New York, NY, USA},
  author = {Gonz\'{a}lez-Gonz\'{a}lez, Carina S. and C\'{a}ceres-Garc\'{\i}a, Lorena and Violant-Holz, Ver\'{o}nica},
  booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3362789.3362908},
  isbn = {9781450371919},
  keywords = {Computational Thinking; Diversity; Equity; Hospital Classrooms},
  location = {Le\'{o}n, Spain},
  numpages = {5},
  pages = {31–35},
  publisher = {Association for Computing Machinery},
  series = {TEEM'19},
  title = {Bringing Computational Thinking to Hospital Classrooms},
  url = {https://doi.org/10.1145/3362789.3362908},
  year = {2019}
}

@inproceedings{merged1446,
  abstract = {After the computational thinking sessions in the previous 2016-2019 editions of TEEM Conference, the fifth edition of this track has been organized in the current 2020 edition. Computational thinking is still a very significant topic, especially, but not only, in pre-university education. In this edition, the robotic has a special role in the track, with a strength relationship with the STEM and STEAM education of children at the pre-university levels, seeding the future of our society.},
  address = {New York, NY, USA},
  author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco Jos\'{e} and Conde, Miguel \'{A}ngel and Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e}},
  booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
  doi = {10.1145/3434780.3436703},
  isbn = {9781450388504},
  keywords = {Computational thinking; STEAM; STEM; coding in schools; computational thinking skills and curriculum; computer science in K-12; programming; robots},
  location = {Salamanca, Spain},
  numpages = {4},
  pages = {10–13},
  publisher = {Association for Computing Machinery},
  series = {TEEM'20},
  title = {Advances in Computational thinking and robotics in education},
  url = {https://doi.org/10.1145/3434780.3436703},
  year = {2021}
}

@inproceedings{merged1447,
  address = {New York, NY, USA},
  author = {Zakwandi, Rizki and Istiyono, Edi},
  booktitle = {Proceedings of the 2022 13th International Conference on E-Education, E-Business, E-Management, and E-Learning},
  doi = {10.1145/3514262.3514267},
  isbn = {9781450387187},
  keywords = {Computational Thinking; Problem-Solving Laboratory; Smartphone Experiments; Worksheet},
  location = {Tokyo, Japan},
  numpages = {6},
  pages = {104–109},
  publisher = {Association for Computing Machinery},
  series = {IC4E '22},
  title = {Evaluating Student Computational Thinking Skills in Physics Experimental Class},
  url = {https://doi.org/10.1145/3514262.3514267},
  year = {2022}
}
